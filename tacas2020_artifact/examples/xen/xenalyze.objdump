
xenalyze:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	sub    rsp,0x8
    5004:	mov    rax,QWORD PTR [rip+0x25fd5]        # 2afe0 <__gmon_start__>
    500b:	test   rax,rax
    500e:	je     5012 <_init+0x12>
    5010:	call   rax
    5012:	add    rsp,0x8
    5016:	ret    

Disassembly of section .plt:

0000000000005020 <.plt>:
    5020:	push   QWORD PTR [rip+0x25e52]        # 2ae78 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	jmp    QWORD PTR [rip+0x25e54]        # 2ae80 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	nop    DWORD PTR [rax+0x0]

0000000000005030 <__snprintf_chk@plt>:
    5030:	jmp    QWORD PTR [rip+0x25e52]        # 2ae88 <__snprintf_chk@GLIBC_2.3.4>
    5036:	push   0x0
    503b:	jmp    5020 <.plt>

0000000000005040 <free@plt>:
    5040:	jmp    QWORD PTR [rip+0x25e4a]        # 2ae90 <free@GLIBC_2.2.5>
    5046:	push   0x1
    504b:	jmp    5020 <.plt>

0000000000005050 <putchar@plt>:
    5050:	jmp    QWORD PTR [rip+0x25e42]        # 2ae98 <putchar@GLIBC_2.2.5>
    5056:	push   0x2
    505b:	jmp    5020 <.plt>

0000000000005060 <__errno_location@plt>:
    5060:	jmp    QWORD PTR [rip+0x25e3a]        # 2aea0 <__errno_location@GLIBC_2.2.5>
    5066:	push   0x3
    506b:	jmp    5020 <.plt>

0000000000005070 <strncpy@plt>:
    5070:	jmp    QWORD PTR [rip+0x25e32]        # 2aea8 <strncpy@GLIBC_2.2.5>
    5076:	push   0x4
    507b:	jmp    5020 <.plt>

0000000000005080 <__isoc99_fscanf@plt>:
    5080:	jmp    QWORD PTR [rip+0x25e2a]        # 2aeb0 <__isoc99_fscanf@GLIBC_2.7>
    5086:	push   0x5
    508b:	jmp    5020 <.plt>

0000000000005090 <puts@plt>:
    5090:	jmp    QWORD PTR [rip+0x25e22]        # 2aeb8 <puts@GLIBC_2.2.5>
    5096:	push   0x6
    509b:	jmp    5020 <.plt>

00000000000050a0 <qsort@plt>:
    50a0:	jmp    QWORD PTR [rip+0x25e1a]        # 2aec0 <qsort@GLIBC_2.2.5>
    50a6:	push   0x7
    50ab:	jmp    5020 <.plt>

00000000000050b0 <argp_state_help@plt>:
    50b0:	jmp    QWORD PTR [rip+0x25e12]        # 2aec8 <argp_state_help@GLIBC_2.2.5>
    50b6:	push   0x8
    50bb:	jmp    5020 <.plt>

00000000000050c0 <fclose@plt>:
    50c0:	jmp    QWORD PTR [rip+0x25e0a]        # 2aed0 <fclose@GLIBC_2.2.5>
    50c6:	push   0x9
    50cb:	jmp    5020 <.plt>

00000000000050d0 <__stack_chk_fail@plt>:
    50d0:	jmp    QWORD PTR [rip+0x25e02]        # 2aed8 <__stack_chk_fail@GLIBC_2.4>
    50d6:	push   0xa
    50db:	jmp    5020 <.plt>

00000000000050e0 <mmap@plt>:
    50e0:	jmp    QWORD PTR [rip+0x25dfa]        # 2aee0 <mmap@GLIBC_2.2.5>
    50e6:	push   0xb
    50eb:	jmp    5020 <.plt>

00000000000050f0 <dup2@plt>:
    50f0:	jmp    QWORD PTR [rip+0x25df2]        # 2aee8 <dup2@GLIBC_2.2.5>
    50f6:	push   0xc
    50fb:	jmp    5020 <.plt>

0000000000005100 <snprintf@plt>:
    5100:	jmp    QWORD PTR [rip+0x25dea]        # 2aef0 <snprintf@GLIBC_2.2.5>
    5106:	push   0xd
    510b:	jmp    5020 <.plt>

0000000000005110 <__assert_fail@plt>:
    5110:	jmp    QWORD PTR [rip+0x25de2]        # 2aef8 <__assert_fail@GLIBC_2.2.5>
    5116:	push   0xe
    511b:	jmp    5020 <.plt>

0000000000005120 <strtof@plt>:
    5120:	jmp    QWORD PTR [rip+0x25dda]        # 2af00 <strtof@GLIBC_2.2.5>
    5126:	push   0xf
    512b:	jmp    5020 <.plt>

0000000000005130 <memset@plt>:
    5130:	jmp    QWORD PTR [rip+0x25dd2]        # 2af08 <memset@GLIBC_2.2.5>
    5136:	push   0x10
    513b:	jmp    5020 <.plt>

0000000000005140 <pipe@plt>:
    5140:	jmp    QWORD PTR [rip+0x25dca]        # 2af10 <pipe@GLIBC_2.2.5>
    5146:	push   0x11
    514b:	jmp    5020 <.plt>

0000000000005150 <argp_parse@plt>:
    5150:	jmp    QWORD PTR [rip+0x25dc2]        # 2af18 <argp_parse@GLIBC_2.2.5>
    5156:	push   0x12
    515b:	jmp    5020 <.plt>

0000000000005160 <strtoull@plt>:
    5160:	jmp    QWORD PTR [rip+0x25dba]        # 2af20 <strtoull@GLIBC_2.2.5>
    5166:	push   0x13
    516b:	jmp    5020 <.plt>

0000000000005170 <calloc@plt>:
    5170:	jmp    QWORD PTR [rip+0x25db2]        # 2af28 <calloc@GLIBC_2.2.5>
    5176:	push   0x14
    517b:	jmp    5020 <.plt>

0000000000005180 <feof@plt>:
    5180:	jmp    QWORD PTR [rip+0x25daa]        # 2af30 <feof@GLIBC_2.2.5>
    5186:	push   0x15
    518b:	jmp    5020 <.plt>

0000000000005190 <strtol@plt>:
    5190:	jmp    QWORD PTR [rip+0x25da2]        # 2af38 <strtol@GLIBC_2.2.5>
    5196:	push   0x16
    519b:	jmp    5020 <.plt>

00000000000051a0 <malloc@plt>:
    51a0:	jmp    QWORD PTR [rip+0x25d9a]        # 2af40 <malloc@GLIBC_2.2.5>
    51a6:	push   0x17
    51ab:	jmp    5020 <.plt>

00000000000051b0 <fflush@plt>:
    51b0:	jmp    QWORD PTR [rip+0x25d92]        # 2af48 <fflush@GLIBC_2.2.5>
    51b6:	push   0x18
    51bb:	jmp    5020 <.plt>

00000000000051c0 <__fxstat@plt>:
    51c0:	jmp    QWORD PTR [rip+0x25d8a]        # 2af50 <__fxstat@GLIBC_2.2.5>
    51c6:	push   0x19
    51cb:	jmp    5020 <.plt>

00000000000051d0 <realloc@plt>:
    51d0:	jmp    QWORD PTR [rip+0x25d82]        # 2af58 <realloc@GLIBC_2.2.5>
    51d6:	push   0x1a
    51db:	jmp    5020 <.plt>

00000000000051e0 <fdopen@plt>:
    51e0:	jmp    QWORD PTR [rip+0x25d7a]        # 2af60 <fdopen@GLIBC_2.2.5>
    51e6:	push   0x1b
    51eb:	jmp    5020 <.plt>

00000000000051f0 <munmap@plt>:
    51f0:	jmp    QWORD PTR [rip+0x25d72]        # 2af68 <munmap@GLIBC_2.2.5>
    51f6:	push   0x1c
    51fb:	jmp    5020 <.plt>

0000000000005200 <__printf_chk@plt>:
    5200:	jmp    QWORD PTR [rip+0x25d6a]        # 2af70 <__printf_chk@GLIBC_2.3.4>
    5206:	push   0x1d
    520b:	jmp    5020 <.plt>

0000000000005210 <memmove@plt>:
    5210:	jmp    QWORD PTR [rip+0x25d62]        # 2af78 <memmove@GLIBC_2.2.5>
    5216:	push   0x1e
    521b:	jmp    5020 <.plt>

0000000000005220 <open@plt>:
    5220:	jmp    QWORD PTR [rip+0x25d5a]        # 2af80 <open@GLIBC_2.2.5>
    5226:	push   0x1f
    522b:	jmp    5020 <.plt>

0000000000005230 <fopen@plt>:
    5230:	jmp    QWORD PTR [rip+0x25d52]        # 2af88 <fopen@GLIBC_2.2.5>
    5236:	push   0x20
    523b:	jmp    5020 <.plt>

0000000000005240 <perror@plt>:
    5240:	jmp    QWORD PTR [rip+0x25d4a]        # 2af90 <perror@GLIBC_2.2.5>
    5246:	push   0x21
    524b:	jmp    5020 <.plt>

0000000000005250 <exit@plt>:
    5250:	jmp    QWORD PTR [rip+0x25d42]        # 2af98 <exit@GLIBC_2.2.5>
    5256:	push   0x22
    525b:	jmp    5020 <.plt>

0000000000005260 <fwrite@plt>:
    5260:	jmp    QWORD PTR [rip+0x25d3a]        # 2afa0 <fwrite@GLIBC_2.2.5>
    5266:	push   0x23
    526b:	jmp    5020 <.plt>

0000000000005270 <__fprintf_chk@plt>:
    5270:	jmp    QWORD PTR [rip+0x25d32]        # 2afa8 <__fprintf_chk@GLIBC_2.3.4>
    5276:	push   0x24
    527b:	jmp    5020 <.plt>

0000000000005280 <execlp@plt>:
    5280:	jmp    QWORD PTR [rip+0x25d2a]        # 2afb0 <execlp@GLIBC_2.2.5>
    5286:	push   0x25
    528b:	jmp    5020 <.plt>

0000000000005290 <strerror@plt>:
    5290:	jmp    QWORD PTR [rip+0x25d22]        # 2afb8 <strerror@GLIBC_2.2.5>
    5296:	push   0x26
    529b:	jmp    5020 <.plt>

00000000000052a0 <wait@plt>:
    52a0:	jmp    QWORD PTR [rip+0x25d1a]        # 2afc0 <wait@GLIBC_2.2.5>
    52a6:	push   0x27
    52ab:	jmp    5020 <.plt>

00000000000052b0 <fork@plt>:
    52b0:	jmp    QWORD PTR [rip+0x25d12]        # 2afc8 <fork@GLIBC_2.2.5>
    52b6:	push   0x28
    52bb:	jmp    5020 <.plt>

Disassembly of section .plt.got:

00000000000052c0 <__cxa_finalize@plt>:
    52c0:	jmp    QWORD PTR [rip+0x25d2a]        # 2aff0 <__cxa_finalize@GLIBC_2.2.5>
    52c6:	xchg   ax,ax

Disassembly of section .text:

00000000000052d0 <main>:
    52d0:	sub    rsp,0xa8
    52d7:	mov    rdx,rsi
    52da:	xor    r9d,r9d
    52dd:	mov    esi,edi
    52df:	mov    rax,QWORD PTR fs:0x28
    52e8:	mov    QWORD PTR [rsp+0x98],rax
    52f0:	xor    eax,eax
    52f2:	mov    rax,QWORD PTR [rip+0x29147]        # 2e440 <stderr@@GLIBC_2.2.5>
    52f9:	xor    r8d,r8d
    52fc:	xor    ecx,ecx
    52fe:	lea    rdi,[rip+0x2503b]        # 2a340 <parser_def>
    5305:	mov    QWORD PTR [rip+0x61f4c],rax        # 67258 <warn>
    530c:	call   5150 <argp_parse@plt>
    5311:	mov    rdi,QWORD PTR [rip+0x25e28]        # 2b140 <G+0x20>
    5318:	test   rdi,rdi
    531b:	je     5409 <main+0x139>
    5321:	xor    esi,esi
    5323:	xor    eax,eax
    5325:	call   5220 <open@plt>
    532a:	mov    DWORD PTR [rip+0x25df0],eax        # 2b120 <G>
    5330:	test   eax,eax
    5332:	js     53f0 <main+0x120>
    5338:	mov    rdx,rsp
    533b:	mov    esi,eax
    533d:	mov    edi,0x1
    5342:	call   51c0 <__fxstat@plt>
    5347:	mov    rax,QWORD PTR [rsp+0x30]
    534c:	mov    QWORD PTR [rip+0x25dfd],rax        # 2b150 <G+0x30>
    5353:	mov    edi,DWORD PTR [rip+0x25dc7]        # 2b120 <G>
    5359:	call   1db00 <mread_init>
    535e:	mov    QWORD PTR [rip+0x25dc3],rax        # 2b128 <G+0x8>
    5365:	test   rax,rax
    5368:	je     544a <main+0x17a>
    536e:	mov    rdi,QWORD PTR [rip+0x25dc3]        # 2b138 <G+0x18>
    5375:	test   rdi,rdi
    5378:	je     537f <main+0xaf>
    537a:	call   7cf0 <parse_symbol_file>
    537f:	test   BYTE PTR [rip+0x25d1b],0x40        # 2b0a1 <opt+0x1>
    5386:	jne    53e0 <main+0x110>
    5388:	call   1c9e0 <init_pcpus>
    538d:	test   BYTE PTR [rip+0x25d0f],0x8        # 2b0a3 <opt+0x3>
    5394:	jne    5440 <main+0x170>
    539a:	call   1c2c0 <process_records>
    539f:	test   BYTE PTR [rip+0x25cfb],0x20        # 2b0a1 <opt+0x1>
    53a6:	jne    5436 <main+0x166>
    53ac:	movzx  eax,BYTE PTR [rip+0x25cf0]        # 2b0a3 <opt+0x3>
    53b3:	test   al,0x20
    53b5:	jne    5428 <main+0x158>
    53b7:	test   al,0x40
    53b9:	jne    541a <main+0x14a>
    53bb:	test   al,0x8
    53bd:	jne    5413 <main+0x143>
    53bf:	xor    eax,eax
    53c1:	mov    rcx,QWORD PTR [rsp+0x98]
    53c9:	xor    rcx,QWORD PTR fs:0x28
    53d2:	jne    545b <main+0x18b>
    53d8:	add    rsp,0xa8
    53df:	ret    
    53e0:	mov    rax,QWORD PTR [rip+0x29039]        # 2e420 <stdout@@GLIBC_2.2.5>
    53e7:	mov    QWORD PTR [rip+0x61e6a],rax        # 67258 <warn>
    53ee:	jmp    5388 <main+0xb8>
    53f0:	lea    rdi,[rip+0x18d31]        # 1e128 <_IO_stdin_used+0x128>
    53f7:	call   5240 <perror@plt>
    53fc:	cmp    DWORD PTR [rip+0x25cdd],0x7        # 2b0e0 <opt+0x40>
    5403:	ja     5353 <main+0x83>
    5409:	mov    edi,0x1
    540e:	call   5250 <exit@plt>
    5413:	call   16e70 <progress_finish>
    5418:	jmp    53bf <main+0xef>
    541a:	call   1c500 <report_pcpu>
    541f:	movzx  eax,BYTE PTR [rip+0x25c7d]        # 2b0a3 <opt+0x3>
    5426:	jmp    53bb <main+0xeb>
    5428:	call   1cc90 <summary>
    542d:	movzx  eax,BYTE PTR [rip+0x25c6f]        # 2b0a3 <opt+0x3>
    5434:	jmp    53b7 <main+0xe7>
    5436:	call   9c80 <interval_tail>
    543b:	jmp    53ac <main+0xdc>
    5440:	call   16cc0 <progress_init>
    5445:	jmp    539a <main+0xca>
    544a:	lea    rdi,[rip+0x19c31]        # 1f082 <_IO_stdin_used+0x1082>
    5451:	call   5240 <perror@plt>
    5456:	jmp    536e <main+0x9e>
    545b:	call   50d0 <__stack_chk_fail@plt>

0000000000005460 <_start>:
    5460:	xor    ebp,ebp
    5462:	mov    r9,rdx
    5465:	pop    rsi
    5466:	mov    rdx,rsp
    5469:	and    rsp,0xfffffffffffffff0
    546d:	push   rax
    546e:	push   rsp
    546f:	lea    r8,[rip+0x189aa]        # 1de20 <__libc_csu_fini>
    5476:	lea    rcx,[rip+0x18943]        # 1ddc0 <__libc_csu_init>
    547d:	lea    rdi,[rip+0xfffffffffffffe4c]        # 52d0 <main>
    5484:	call   QWORD PTR [rip+0x25b4e]        # 2afd8 <__libc_start_main@GLIBC_2.2.5>
    548a:	hlt    
    548b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005490 <deregister_tm_clones>:
    5490:	lea    rdi,[rip+0x28f89]        # 2e420 <stdout@@GLIBC_2.2.5>
    5497:	lea    rax,[rip+0x28f82]        # 2e420 <stdout@@GLIBC_2.2.5>
    549e:	cmp    rax,rdi
    54a1:	je     54b8 <deregister_tm_clones+0x28>
    54a3:	mov    rax,QWORD PTR [rip+0x25b26]        # 2afd0 <_ITM_deregisterTMCloneTable>
    54aa:	test   rax,rax
    54ad:	je     54b8 <deregister_tm_clones+0x28>
    54af:	jmp    rax
    54b1:	nop    DWORD PTR [rax+0x0]
    54b8:	ret    
    54b9:	nop    DWORD PTR [rax+0x0]

00000000000054c0 <register_tm_clones>:
    54c0:	lea    rdi,[rip+0x28f59]        # 2e420 <stdout@@GLIBC_2.2.5>
    54c7:	lea    rsi,[rip+0x28f52]        # 2e420 <stdout@@GLIBC_2.2.5>
    54ce:	sub    rsi,rdi
    54d1:	sar    rsi,0x3
    54d5:	mov    rax,rsi
    54d8:	shr    rax,0x3f
    54dc:	add    rsi,rax
    54df:	sar    rsi,1
    54e2:	je     54f8 <register_tm_clones+0x38>
    54e4:	mov    rax,QWORD PTR [rip+0x25afd]        # 2afe8 <_ITM_registerTMCloneTable>
    54eb:	test   rax,rax
    54ee:	je     54f8 <register_tm_clones+0x38>
    54f0:	jmp    rax
    54f2:	nop    WORD PTR [rax+rax*1+0x0]
    54f8:	ret    
    54f9:	nop    DWORD PTR [rax+0x0]

0000000000005500 <__do_global_dtors_aux>:
    5500:	cmp    BYTE PTR [rip+0x28f41],0x0        # 2e448 <completed.7930>
    5507:	jne    5538 <__do_global_dtors_aux+0x38>
    5509:	push   rbp
    550a:	cmp    QWORD PTR [rip+0x25ade],0x0        # 2aff0 <__cxa_finalize@GLIBC_2.2.5>
    5512:	mov    rbp,rsp
    5515:	je     5523 <__do_global_dtors_aux+0x23>
    5517:	mov    rdi,QWORD PTR [rip+0x25aea]        # 2b008 <__dso_handle>
    551e:	call   52c0 <__cxa_finalize@plt>
    5523:	call   5490 <deregister_tm_clones>
    5528:	mov    BYTE PTR [rip+0x28f19],0x1        # 2e448 <completed.7930>
    552f:	pop    rbp
    5530:	ret    
    5531:	nop    DWORD PTR [rax+0x0]
    5538:	ret    
    5539:	nop    DWORD PTR [rax+0x0]

0000000000005540 <frame_dummy>:
    5540:	jmp    54c0 <register_tm_clones>
    5545:	nop    WORD PTR cs:[rax+rax*1+0x0]
    554f:	nop

0000000000005550 <cr3_time_compare>:
    5550:	mov    rdx,QWORD PTR [rsi]
    5553:	mov    rcx,QWORD PTR [rdi]
    5556:	mov    eax,0x1
    555b:	mov    rsi,QWORD PTR [rdx+0x60]
    555f:	cmp    QWORD PTR [rcx+0x60],rsi
    5563:	jl     5581 <cr3_time_compare+0x31>
    5565:	mov    eax,0xffffffff
    556a:	jne    5581 <cr3_time_compare+0x31>
    556c:	mov    eax,0x1
    5571:	mov    edx,DWORD PTR [rdx+0x58]
    5574:	cmp    DWORD PTR [rcx+0x58],edx
    5577:	jl     5581 <cr3_time_compare+0x31>
    5579:	setne  al
    557c:	movzx  eax,al
    557f:	neg    eax
    5581:	ret    
    5582:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    558d:	nop    DWORD PTR [rax]

0000000000005590 <eip_compare>:
    5590:	mov    rdx,QWORD PTR [rsi]
    5593:	mov    rcx,QWORD PTR [rdi]
    5596:	mov    eax,0x1
    559b:	mov    rsi,QWORD PTR [rdx+0x20]
    559f:	cmp    QWORD PTR [rcx+0x20],rsi
    55a3:	jb     55c1 <eip_compare+0x31>
    55a5:	mov    eax,0xffffffff
    55aa:	jne    55c1 <eip_compare+0x31>
    55ac:	mov    eax,0x1
    55b1:	mov    edx,DWORD PTR [rdx+0x14]
    55b4:	cmp    DWORD PTR [rcx+0x14],edx
    55b7:	jl     55c1 <eip_compare+0x31>
    55b9:	setne  al
    55bc:	movzx  eax,al
    55bf:	neg    eax
    55c1:	ret    
    55c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    55cd:	nop    DWORD PTR [rax]

00000000000055d0 <cr3_compare_start>:
    55d0:	mov    rdx,QWORD PTR [rsi]
    55d3:	mov    rcx,QWORD PTR [rdi]
    55d6:	mov    eax,0x1
    55db:	mov    rdx,QWORD PTR [rdx+0x20]
    55df:	cmp    QWORD PTR [rcx+0x20],rdx
    55e3:	ja     55ed <cr3_compare_start+0x1d>
    55e5:	setne  al
    55e8:	movzx  eax,al
    55eb:	neg    eax
    55ed:	ret    
    55ee:	xchg   ax,ax

00000000000055f0 <hvm_msr_write_summary>:
    55f0:	ret    
    55f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    55fc:	nop    DWORD PTR [rax+0x0]

0000000000005600 <hvm_intr_summary>:
    5600:	push   r12
    5602:	lea    r12,[rip+0x26437]        # 2ba40 <hvm_extint_vector_name>
    5609:	push   rbp
    560a:	mov    rbp,rdi
    560d:	push   rbx
    560e:	xor    ebx,ebx
    5610:	jmp    563a <hvm_intr_summary+0x3a>
    5612:	nop    WORD PTR [rax+rax*1+0x0]
    5618:	mov    ecx,ebx
    561a:	lea    rsi,[rip+0x189e3]        # 1e004 <_IO_stdin_used+0x4>
    5621:	mov    edi,0x1
    5626:	xor    eax,eax
    5628:	call   5200 <__printf_chk@plt>
    562d:	add    rbx,0x1
    5631:	cmp    rbx,0x100
    5638:	je     5675 <hvm_intr_summary+0x75>
    563a:	mov    r8d,DWORD PTR [rbp+rbx*4+0x10068]
    5642:	test   r8d,r8d
    5645:	je     562d <hvm_intr_summary+0x2d>
    5647:	mov    rdx,QWORD PTR [r12+rbx*8]
    564b:	test   rdx,rdx
    564e:	jne    5618 <hvm_intr_summary+0x18>
    5650:	mov    edx,ebx
    5652:	mov    ecx,r8d
    5655:	lea    rsi,[rip+0x189b9]        # 1e015 <_IO_stdin_used+0x15>
    565c:	xor    eax,eax
    565e:	mov    edi,0x1
    5663:	add    rbx,0x1
    5667:	call   5200 <__printf_chk@plt>
    566c:	cmp    rbx,0x100
    5673:	jne    563a <hvm_intr_summary+0x3a>
    5675:	mov    edx,DWORD PTR [rbp+0x10468]
    567b:	test   edx,edx
    567d:	jne    5684 <hvm_intr_summary+0x84>
    567f:	pop    rbx
    5680:	pop    rbp
    5681:	pop    r12
    5683:	ret    
    5684:	pop    rbx
    5685:	lea    rsi,[rip+0x189a0]        # 1e02c <_IO_stdin_used+0x2c>
    568c:	pop    rbp
    568d:	mov    edi,0x1
    5692:	xor    eax,eax
    5694:	pop    r12
    5696:	jmp    5200 <__printf_chk@plt>
    569b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056a0 <cmd_to_str.part.4>:
    56a0:	sub    rsp,0x8
    56a4:	mov    r9d,edi
    56a7:	lea    r8,[rip+0x18995]        # 1e043 <_IO_stdin_used+0x43>
    56ae:	xor    eax,eax
    56b0:	mov    ecx,0x20
    56b5:	mov    edx,0x1
    56ba:	mov    esi,0x20
    56bf:	lea    rdi,[rip+0x61bba]        # 67280 <buf.7409>
    56c6:	call   5030 <__snprintf_chk@plt>
    56cb:	lea    rax,[rip+0x61bae]        # 67280 <buf.7409>
    56d2:	add    rsp,0x8
    56d6:	ret    
    56d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000056e0 <update_cycles.part.5>:
    56e0:	push   r12
    56e2:	mov    edx,DWORD PTR [rip+0x259f0]        # 2b0d8 <opt+0x38>
    56e8:	push   rbp
    56e9:	mov    rbp,rsi
    56ec:	push   rbx
    56ed:	movsxd rcx,DWORD PTR [rdi+0x4]
    56f1:	mov    rbx,rdi
    56f4:	mov    eax,ecx
    56f6:	test   edx,edx
    56f8:	je     5795 <update_cycles.part.5+0xb5>
    56fe:	mov    eax,DWORD PTR [rdi+0x8]
    5701:	cmp    eax,ecx
    5703:	jg     57b0 <update_cycles.part.5+0xd0>
    5709:	mov    r12d,DWORD PTR [rip+0x259cc]        # 2b0dc <opt+0x3c>
    5710:	test   ecx,ecx
    5712:	je     5722 <update_cycles.part.5+0x42>
    5714:	test   r12d,r12d
    5717:	je     5722 <update_cycles.part.5+0x42>
    5719:	cmp    eax,r12d
    571c:	jge    57e0 <update_cycles.part.5+0x100>
    5722:	add    eax,eax
    5724:	cmove  eax,edx
    5727:	test   r12d,r12d
    572a:	je     57c0 <update_cycles.part.5+0xe0>
    5730:	cmp    eax,r12d
    5733:	jle    57c0 <update_cycles.part.5+0xe0>
    5739:	movsxd rsi,r12d
    573c:	mov    rdi,QWORD PTR [rbx+0x18]
    5740:	shl    rsi,0x3
    5744:	call   51d0 <realloc@plt>
    5749:	test   rax,rax
    574c:	je     57d0 <update_cycles.part.5+0xf0>
    5752:	mov    QWORD PTR [rbx+0x18],rax
    5756:	mov    DWORD PTR [rbx+0x8],r12d
    575a:	movsxd rcx,DWORD PTR [rbx+0x4]
    575e:	cmp    ecx,r12d
    5761:	jl     57b0 <update_cycles.part.5+0xd0>
    5763:	mov    eax,ecx
    5765:	cdq    
    5766:	idiv   r12d
    5769:	lea    esi,[rax+0x1]
    576c:	movsxd rdi,edx
    576f:	mov    edx,0x55555556
    5774:	mov    eax,esi
    5776:	imul   edx
    5778:	mov    eax,esi
    577a:	sar    eax,0x1f
    577d:	sub    eax,edx
    577f:	add    eax,edi
    5781:	cdq    
    5782:	idiv   esi
    5784:	mov    eax,ecx
    5786:	test   edx,edx
    5788:	jne    5795 <update_cycles.part.5+0xb5>
    578a:	mov    rax,QWORD PTR [rbx+0x18]
    578e:	mov    QWORD PTR [rax+rdi*8],rbp
    5792:	mov    eax,DWORD PTR [rbx+0x4]
    5795:	add    eax,0x1
    5798:	add    QWORD PTR [rbx+0x10],rbp
    579c:	add    QWORD PTR [rbx+0x28],rbp
    57a0:	mov    DWORD PTR [rbx+0x4],eax
    57a3:	add    DWORD PTR [rbx+0x20],0x1
    57a7:	pop    rbx
    57a8:	pop    rbp
    57a9:	pop    r12
    57ab:	ret    
    57ac:	nop    DWORD PTR [rax+0x0]
    57b0:	mov    rax,QWORD PTR [rbx+0x18]
    57b4:	mov    QWORD PTR [rax+rcx*8],rbp
    57b8:	mov    eax,DWORD PTR [rbx+0x4]
    57bb:	jmp    5795 <update_cycles.part.5+0xb5>
    57bd:	nop    DWORD PTR [rax]
    57c0:	mov    r12d,eax
    57c3:	jmp    5739 <update_cycles.part.5+0x59>
    57c8:	nop    DWORD PTR [rax+rax*1+0x0]
    57d0:	mov    r12d,DWORD PTR [rbx+0x8]
    57d4:	jmp    575a <update_cycles.part.5+0x7a>
    57d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    57e0:	mov    r12d,eax
    57e3:	jmp    5763 <update_cycles.part.5+0x83>
    57e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057f0 <percentile.part.6>:
    57f0:	imul   edx,esi
    57f3:	push   r14
    57f5:	push   r13
    57f7:	push   r12
    57f9:	mov    ecx,edx
    57fb:	mov    edx,0x51eb851f
    5800:	push   rbp
    5801:	lea    ebp,[rsi-0x1]
    5804:	mov    eax,ecx
    5806:	sar    ecx,0x1f
    5809:	push   rbx
    580a:	imul   edx
    580c:	sar    edx,0x5
    580f:	sub    edx,ecx
    5811:	movsxd rax,edx
    5814:	lea    r14,[rdi+rax*8]
    5818:	test   ebp,ebp
    581a:	jle    5889 <percentile.part.6+0x99>
    581c:	mov    rbx,rdi
    581f:	mov    r13,rax
    5822:	xor    r12d,r12d
    5825:	nop    DWORD PTR [rax]
    5828:	movsxd rdx,r12d
    582b:	movsxd rax,ebp
    582e:	mov    r10,QWORD PTR [r14]
    5831:	mov    esi,r12d
    5834:	lea    r11,[rbx+rdx*8]
    5838:	mov    rcx,QWORD PTR [rbx+rax*8]
    583c:	mov    edx,ebp
    583e:	jmp    5847 <percentile.part.6+0x57>
    5840:	add    esi,0x1
    5843:	add    r11,0x8
    5847:	mov    r9,QWORD PTR [r11]
    584a:	mov    edi,esi
    584c:	cmp    r10,r9
    584f:	jg     5840 <percentile.part.6+0x50>
    5851:	cmp    r10,rcx
    5854:	jge    58b8 <percentile.part.6+0xc8>
    5856:	lea    rax,[rbx+rax*8-0x8]
    585b:	nop    DWORD PTR [rax+rax*1+0x0]
    5860:	mov    r8,rax
    5863:	sub    rax,0x8
    5867:	mov    rcx,QWORD PTR [rax+0x8]
    586b:	sub    edx,0x1
    586e:	cmp    r10,rcx
    5871:	jl     5860 <percentile.part.6+0x70>
    5873:	cmp    esi,edx
    5875:	jle    5898 <percentile.part.6+0xa8>
    5877:	cmp    r13d,edx
    587a:	cmovg  r12d,edi
    587e:	cmp    r13d,edi
    5881:	cmovl  ebp,edx
    5884:	cmp    ebp,r12d
    5887:	jg     5828 <percentile.part.6+0x38>
    5889:	pop    rbx
    588a:	mov    rax,QWORD PTR [r14]
    588d:	pop    rbp
    588e:	pop    r12
    5890:	pop    r13
    5892:	pop    r14
    5894:	ret    
    5895:	nop    DWORD PTR [rax]
    5898:	add    esi,0x1
    589b:	sub    edx,0x1
    589e:	mov    QWORD PTR [r11],rcx
    58a1:	mov    edi,esi
    58a3:	mov    QWORD PTR [r8],r9
    58a6:	cmp    edx,esi
    58a8:	jl     5877 <percentile.part.6+0x87>
    58aa:	movsxd rax,edx
    58ad:	mov    rcx,QWORD PTR [rbx+rax*8]
    58b1:	jmp    5843 <percentile.part.6+0x53>
    58b3:	nop    DWORD PTR [rax+rax*1+0x0]
    58b8:	lea    r8,[rbx+rax*8]
    58bc:	jmp    5873 <percentile.part.6+0x83>
    58be:	xchg   ax,ax

00000000000058c0 <hvm_pf_xen_summary>:
    58c0:	push   r15
    58c2:	push   r14
    58c4:	push   r13
    58c6:	push   r12
    58c8:	push   rbp
    58c9:	push   rbx
    58ca:	mov    rbx,rdi
    58cd:	lea    r12,[rbx+0x108d8]
    58d4:	sub    rsp,0x38
    58d8:	mov    QWORD PTR [rsp+0x10],rdi
    58dd:	lea    rdi,[rip+0x1876c]        # 1e050 <_IO_stdin_used+0x50>
    58e4:	call   5090 <puts@plt>
    58e9:	mov    QWORD PTR [rsp+0x8],0x0
    58f2:	jmp    591a <hvm_pf_xen_summary+0x5a>
    58f4:	nop    DWORD PTR [rax+0x0]
    58f8:	cmp    r14d,0x6
    58fc:	je     6070 <hvm_pf_xen_summary+0x7b0>
    5902:	cmp    ebx,0xd
    5905:	je     6810 <hvm_pf_xen_summary+0xf50>
    590b:	nop    DWORD PTR [rax+rax*1+0x0]
    5910:	add    QWORD PTR [rsp+0x8],0x1
    5916:	add    r12,0x38
    591a:	mov    rax,QWORD PTR [rsp+0x8]
    591f:	lea    rcx,[rip+0x25c3a]        # 2b560 <pf_xen_name>
    5926:	mov    rdx,QWORD PTR [rcx+rax*8]
    592a:	mov    ebx,eax
    592c:	mov    r14d,eax
    592f:	mov    eax,DWORD PTR [r12]
    5933:	test   rdx,rdx
    5936:	je     5bc0 <hvm_pf_xen_summary+0x300>
    593c:	test   eax,eax
    593e:	je     5a61 <hvm_pf_xen_summary+0x1a1>
    5944:	mov    r15d,DWORD PTR [rip+0x2578d]        # 2b0d8 <opt+0x38>
    594b:	test   r15d,r15d
    594e:	je     6660 <hvm_pf_xen_summary+0xda0>
    5954:	mov    r15d,DWORD PTR [r12+0x4]
    5959:	cmp    DWORD PTR [r12+0x8],r15d
    595e:	cmovle r15d,DWORD PTR [r12+0x8]
    5964:	test   r15d,r15d
    5967:	je     6760 <hvm_pf_xen_summary+0xea0>
    596d:	mov    rdi,QWORD PTR [r12+0x18]
    5972:	mov    esi,r15d
    5975:	mov    edx,0x32
    597a:	call   57f0 <percentile.part.6>
    597f:	mov    rdi,QWORD PTR [r12+0x18]
    5984:	mov    esi,r15d
    5987:	mov    edx,0x5
    598c:	mov    r13,rax
    598f:	call   57f0 <percentile.part.6>
    5994:	mov    rdi,QWORD PTR [r12+0x18]
    5999:	mov    esi,r15d
    599c:	mov    edx,0x5f
    59a1:	mov    rbp,rax
    59a4:	call   57f0 <percentile.part.6>
    59a9:	mov    r15,rax
    59ac:	mov    rcx,QWORD PTR [rsp+0x8]
    59b1:	lea    rax,[rip+0x25ba8]        # 2b560 <pf_xen_name>
    59b8:	mov    edi,0x1
    59bd:	lea    rsi,[rip+0x1869a]        # 1e05e <_IO_stdin_used+0x5e>
    59c4:	mov    rdx,QWORD PTR [rax+rcx*8]
    59c8:	xor    eax,eax
    59ca:	call   5200 <__printf_chk@plt>
    59cf:	mov    eax,DWORD PTR [r12+0x4]
    59d4:	mov    rsi,QWORD PTR [r12+0x10]
    59d9:	test   eax,eax
    59db:	je     5c58 <hvm_pf_xen_summary+0x398>
    59e1:	movsxd rcx,eax
    59e4:	xor    edx,edx
    59e6:	mov    rax,rsi
    59e9:	div    rcx
    59ec:	mov    rcx,rax
    59ef:	lea    rax,[rsi+rsi*4]
    59f3:	pxor   xmm1,xmm1
    59f7:	pxor   xmm0,xmm0
    59fb:	cvtsi2sd xmm0,QWORD PTR [rip+0x297cc]        # 2f1d0 <P+0x30>
    5a04:	lea    rdx,[rax+rax*4]
    5a08:	shl    rdx,0x2
    5a0c:	cvtsi2sd xmm1,rdx
    5a11:	divsd  xmm1,xmm0
    5a15:	test   rsi,rsi
    5a18:	js     6640 <hvm_pf_xen_summary+0xd80>
    5a1e:	pxor   xmm0,xmm0
    5a22:	cvtsi2sd xmm0,rsi
    5a27:	pxor   xmm2,xmm2
    5a2b:	sub    rsp,0x8
    5a2f:	mov    r8,rbp
    5a32:	mov    r9,r13
    5a35:	cvtsi2sd xmm2,QWORD PTR [rip+0x25672]        # 2b0b0 <opt+0x10>
    5a3e:	push   r15
    5a40:	mov    edx,DWORD PTR [r12]
    5a44:	lea    rsi,[rip+0x1adcd]        # 20818 <_IO_stdin_used+0x2818>
    5a4b:	mov    edi,0x1
    5a50:	mov    eax,0x2
    5a55:	divsd  xmm0,xmm2
    5a59:	call   5200 <__printf_chk@plt>
    5a5e:	pop    r11
    5a60:	pop    rbp
    5a61:	cmp    r14d,0x8
    5a65:	je     5c60 <hvm_pf_xen_summary+0x3a0>
    5a6b:	cmp    r14d,0xc
    5a6f:	jne    58f8 <hvm_pf_xen_summary+0x38>
    5a75:	mov    rax,QWORD PTR [rsp+0x10]
    5a7a:	mov    QWORD PTR [rsp+0x18],r12
    5a7f:	lea    r15,[rip+0x25bba]        # 2b640 <pf_xen_non_emul_name>
    5a86:	lea    rbx,[r15+0x20]
    5a8a:	lea    r14,[rax+0x11010]
    5a91:	mov    r10d,DWORD PTR [r14]
    5a94:	test   r10d,r10d
    5a97:	je     5ba3 <hvm_pf_xen_summary+0x2e3>
    5a9d:	mov    r9d,DWORD PTR [rip+0x25634]        # 2b0d8 <opt+0x38>
    5aa4:	test   r9d,r9d
    5aa7:	je     6560 <hvm_pf_xen_summary+0xca0>
    5aad:	mov    ecx,DWORD PTR [r14+0x4]
    5ab1:	cmp    DWORD PTR [r14+0x8],ecx
    5ab5:	cmovle ecx,DWORD PTR [r14+0x8]
    5aba:	mov    r12d,ecx
    5abd:	test   ecx,ecx
    5abf:	je     6720 <hvm_pf_xen_summary+0xe60>
    5ac5:	mov    rdi,QWORD PTR [r14+0x18]
    5ac9:	mov    esi,ecx
    5acb:	mov    edx,0x32
    5ad0:	call   57f0 <percentile.part.6>
    5ad5:	mov    rdi,QWORD PTR [r14+0x18]
    5ad9:	mov    esi,r12d
    5adc:	mov    edx,0x5
    5ae1:	mov    r13,rax
    5ae4:	call   57f0 <percentile.part.6>
    5ae9:	mov    rdi,QWORD PTR [r14+0x18]
    5aed:	mov    esi,r12d
    5af0:	mov    edx,0x5f
    5af5:	mov    rbp,rax
    5af8:	call   57f0 <percentile.part.6>
    5afd:	mov    r12,rax
    5b00:	mov    rdx,QWORD PTR [r15]
    5b03:	lea    rsi,[rip+0x1856d]        # 1e077 <_IO_stdin_used+0x77>
    5b0a:	mov    edi,0x1
    5b0f:	xor    eax,eax
    5b11:	call   5200 <__printf_chk@plt>
    5b16:	mov    eax,DWORD PTR [r14+0x4]
    5b1a:	mov    rsi,QWORD PTR [r14+0x10]
    5b1e:	xor    ecx,ecx
    5b20:	test   eax,eax
    5b22:	je     5b32 <hvm_pf_xen_summary+0x272>
    5b24:	movsxd rcx,eax
    5b27:	xor    edx,edx
    5b29:	mov    rax,rsi
    5b2c:	div    rcx
    5b2f:	mov    rcx,rax
    5b32:	lea    rdx,[rsi+rsi*4]
    5b36:	pxor   xmm1,xmm1
    5b3a:	pxor   xmm0,xmm0
    5b3e:	cvtsi2sd xmm0,QWORD PTR [rip+0x29689]        # 2f1d0 <P+0x30>
    5b47:	lea    rdx,[rdx+rdx*4]
    5b4b:	shl    rdx,0x2
    5b4f:	cvtsi2sd xmm1,rdx
    5b54:	divsd  xmm1,xmm0
    5b58:	test   rsi,rsi
    5b5b:	js     6620 <hvm_pf_xen_summary+0xd60>
    5b61:	pxor   xmm0,xmm0
    5b65:	cvtsi2sd xmm0,rsi
    5b6a:	pxor   xmm2,xmm2
    5b6e:	sub    rsp,0x8
    5b72:	mov    r8,rbp
    5b75:	mov    edi,0x1
    5b7a:	cvtsi2sd xmm2,QWORD PTR [rip+0x2552d]        # 2b0b0 <opt+0x10>
    5b83:	push   r12
    5b85:	mov    edx,DWORD PTR [r14]
    5b88:	mov    r9,r13
    5b8b:	lea    rsi,[rip+0x1ac86]        # 20818 <_IO_stdin_used+0x2818>
    5b92:	mov    eax,0x2
    5b97:	divsd  xmm0,xmm2
    5b9b:	call   5200 <__printf_chk@plt>
    5ba0:	pop    rdi
    5ba1:	pop    r8
    5ba3:	add    r15,0x8
    5ba7:	add    r14,0x38
    5bab:	cmp    rbx,r15
    5bae:	jne    5a91 <hvm_pf_xen_summary+0x1d1>
    5bb4:	mov    r12,QWORD PTR [rsp+0x18]
    5bb9:	jmp    5910 <hvm_pf_xen_summary+0x50>
    5bbe:	xchg   ax,ax
    5bc0:	test   eax,eax
    5bc2:	je     5a61 <hvm_pf_xen_summary+0x1a1>
    5bc8:	mov    r13d,DWORD PTR [rip+0x25509]        # 2b0d8 <opt+0x38>
    5bcf:	test   r13d,r13d
    5bd2:	je     6730 <hvm_pf_xen_summary+0xe70>
    5bd8:	mov    r15d,DWORD PTR [r12+0x4]
    5bdd:	cmp    DWORD PTR [r12+0x8],r15d
    5be2:	cmovle r15d,DWORD PTR [r12+0x8]
    5be8:	test   r15d,r15d
    5beb:	je     6953 <hvm_pf_xen_summary+0x1093>
    5bf1:	mov    rdi,QWORD PTR [r12+0x18]
    5bf6:	mov    esi,r15d
    5bf9:	mov    edx,0x32
    5bfe:	call   57f0 <percentile.part.6>
    5c03:	mov    rdi,QWORD PTR [r12+0x18]
    5c08:	mov    esi,r15d
    5c0b:	mov    edx,0x5
    5c10:	mov    r13,rax
    5c13:	call   57f0 <percentile.part.6>
    5c18:	mov    rdi,QWORD PTR [r12+0x18]
    5c1d:	mov    esi,r15d
    5c20:	mov    edx,0x5f
    5c25:	mov    rbp,rax
    5c28:	call   57f0 <percentile.part.6>
    5c2d:	mov    r15,rax
    5c30:	lea    rsi,[rip+0x18433]        # 1e06a <_IO_stdin_used+0x6a>
    5c37:	mov    edx,r14d
    5c3a:	mov    edi,0x1
    5c3f:	xor    eax,eax
    5c41:	call   5200 <__printf_chk@plt>
    5c46:	mov    eax,DWORD PTR [r12+0x4]
    5c4b:	mov    rsi,QWORD PTR [r12+0x10]
    5c50:	test   eax,eax
    5c52:	jne    59e1 <hvm_pf_xen_summary+0x121>
    5c58:	xor    ecx,ecx
    5c5a:	jmp    59ef <hvm_pf_xen_summary+0x12f>
    5c5f:	nop
    5c60:	mov    rax,QWORD PTR [rsp+0x10]
    5c65:	xor    ebp,ebp
    5c67:	mov    QWORD PTR [rsp+0x20],r12
    5c6c:	lea    rbx,[rax+0x10be8]
    5c73:	jmp    5d95 <hvm_pf_xen_summary+0x4d5>
    5c78:	nop    DWORD PTR [rax+rax*1+0x0]
    5c80:	mov    r15d,DWORD PTR [rbx+0x4]
    5c84:	cmp    DWORD PTR [rbx+0x8],r15d
    5c88:	cmovle r15d,DWORD PTR [rbx+0x8]
    5c8d:	test   r15d,r15d
    5c90:	je     5fb0 <hvm_pf_xen_summary+0x6f0>
    5c96:	mov    rdi,QWORD PTR [rbx+0x18]
    5c9a:	mov    esi,r15d
    5c9d:	mov    edx,0x32
    5ca2:	call   57f0 <percentile.part.6>
    5ca7:	mov    rdi,QWORD PTR [rbx+0x18]
    5cab:	mov    esi,r15d
    5cae:	mov    edx,0x5
    5cb3:	mov    r14,rax
    5cb6:	call   57f0 <percentile.part.6>
    5cbb:	mov    rdi,QWORD PTR [rbx+0x18]
    5cbf:	mov    esi,r15d
    5cc2:	mov    edx,0x5f
    5cc7:	mov    r13,rax
    5cca:	call   57f0 <percentile.part.6>
    5ccf:	mov    r15,rax
    5cd2:	lea    rax,[rip+0x25987]        # 2b660 <pf_xen_emul_name>
    5cd9:	lea    rsi,[rip+0x18397]        # 1e077 <_IO_stdin_used+0x77>
    5ce0:	mov    edi,0x1
    5ce5:	mov    rdx,QWORD PTR [rax+rbp*8]
    5ce9:	xor    eax,eax
    5ceb:	call   5200 <__printf_chk@plt>
    5cf0:	mov    eax,DWORD PTR [rbx+0x4]
    5cf3:	mov    rsi,QWORD PTR [rbx+0x10]
    5cf7:	xor    ecx,ecx
    5cf9:	test   eax,eax
    5cfb:	je     5d0b <hvm_pf_xen_summary+0x44b>
    5cfd:	movsxd rcx,eax
    5d00:	xor    edx,edx
    5d02:	mov    rax,rsi
    5d05:	div    rcx
    5d08:	mov    rcx,rax
    5d0b:	lea    rdx,[rsi+rsi*4]
    5d0f:	pxor   xmm1,xmm1
    5d13:	pxor   xmm0,xmm0
    5d17:	cvtsi2sd xmm0,QWORD PTR [rip+0x294b0]        # 2f1d0 <P+0x30>
    5d20:	lea    rdx,[rdx+rdx*4]
    5d24:	shl    rdx,0x2
    5d28:	cvtsi2sd xmm1,rdx
    5d2d:	divsd  xmm1,xmm0
    5d31:	test   rsi,rsi
    5d34:	js     5f90 <hvm_pf_xen_summary+0x6d0>
    5d3a:	pxor   xmm0,xmm0
    5d3e:	cvtsi2sd xmm0,rsi
    5d43:	pxor   xmm2,xmm2
    5d47:	sub    rsp,0x8
    5d4b:	mov    r9,r14
    5d4e:	mov    r8,r13
    5d51:	cvtsi2sd xmm2,QWORD PTR [rip+0x25356]        # 2b0b0 <opt+0x10>
    5d5a:	push   r15
    5d5c:	mov    edx,DWORD PTR [rbx]
    5d5e:	lea    rsi,[rip+0x1aab3]        # 20818 <_IO_stdin_used+0x2818>
    5d65:	mov    edi,0x1
    5d6a:	mov    eax,0x2
    5d6f:	divsd  xmm0,xmm2
    5d73:	call   5200 <__printf_chk@plt>
    5d78:	pop    rax
    5d79:	pop    rdx
    5d7a:	cmp    rbp,0x5
    5d7e:	je     5e50 <hvm_pf_xen_summary+0x590>
    5d84:	cmp    ebp,0xd
    5d87:	je     6060 <hvm_pf_xen_summary+0x7a0>
    5d8d:	add    rbp,0x1
    5d91:	add    rbx,0x38
    5d95:	mov    esi,DWORD PTR [rbx]
    5d97:	test   esi,esi
    5d99:	je     5d7a <hvm_pf_xen_summary+0x4ba>
    5d9b:	mov    ecx,DWORD PTR [rip+0x25337]        # 2b0d8 <opt+0x38>
    5da1:	test   ecx,ecx
    5da3:	jne    5c80 <hvm_pf_xen_summary+0x3c0>
    5da9:	lea    rax,[rip+0x258b0]        # 2b660 <pf_xen_emul_name>
    5db0:	lea    rsi,[rip+0x182c0]        # 1e077 <_IO_stdin_used+0x77>
    5db7:	mov    edi,0x1
    5dbc:	mov    rdx,QWORD PTR [rax+rbp*8]
    5dc0:	xor    eax,eax
    5dc2:	call   5200 <__printf_chk@plt>
    5dc7:	mov    eax,DWORD PTR [rbx+0x4]
    5dca:	mov    rsi,QWORD PTR [rbx+0x10]
    5dce:	xor    ecx,ecx
    5dd0:	test   eax,eax
    5dd2:	je     5de2 <hvm_pf_xen_summary+0x522>
    5dd4:	movsxd rcx,eax
    5dd7:	xor    edx,edx
    5dd9:	mov    rax,rsi
    5ddc:	div    rcx
    5ddf:	mov    rcx,rax
    5de2:	lea    rdx,[rsi+rsi*4]
    5de6:	pxor   xmm1,xmm1
    5dea:	pxor   xmm0,xmm0
    5dee:	cvtsi2sd xmm0,QWORD PTR [rip+0x293d9]        # 2f1d0 <P+0x30>
    5df7:	lea    rdx,[rdx+rdx*4]
    5dfb:	shl    rdx,0x2
    5dff:	cvtsi2sd xmm1,rdx
    5e04:	divsd  xmm1,xmm0
    5e08:	test   rsi,rsi
    5e0b:	js     6500 <hvm_pf_xen_summary+0xc40>
    5e11:	pxor   xmm0,xmm0
    5e15:	cvtsi2sd xmm0,rsi
    5e1a:	pxor   xmm2,xmm2
    5e1e:	mov    edx,DWORD PTR [rbx]
    5e20:	mov    edi,0x1
    5e25:	mov    eax,0x2
    5e2a:	cvtsi2sd xmm2,QWORD PTR [rip+0x2527d]        # 2b0b0 <opt+0x10>
    5e33:	lea    rsi,[rip+0x1aa16]        # 20850 <_IO_stdin_used+0x2850>
    5e3a:	divsd  xmm0,xmm2
    5e3e:	call   5200 <__printf_chk@plt>
    5e43:	cmp    rbp,0x5
    5e47:	jne    5d84 <hvm_pf_xen_summary+0x4c4>
    5e4d:	nop    DWORD PTR [rax]
    5e50:	mov    rax,QWORD PTR [rsp+0x10]
    5e55:	xor    r12d,r12d
    5e58:	mov    QWORD PTR [rsp+0x18],rbx
    5e5d:	mov    ebx,r12d
    5e60:	lea    r13,[rax+0x10ef8]
    5e67:	mov    eax,DWORD PTR [r13+0x0]
    5e6b:	test   eax,eax
    5e6d:	je     5f76 <hvm_pf_xen_summary+0x6b6>
    5e73:	mov    eax,DWORD PTR [rip+0x2525f]        # 2b0d8 <opt+0x38>
    5e79:	test   eax,eax
    5e7b:	je     5fc0 <hvm_pf_xen_summary+0x700>
    5e81:	mov    r12d,DWORD PTR [r13+0x4]
    5e85:	cmp    DWORD PTR [r13+0x8],r12d
    5e89:	cmovle r12d,DWORD PTR [r13+0x8]
    5e8e:	test   r12d,r12d
    5e91:	je     6550 <hvm_pf_xen_summary+0xc90>
    5e97:	mov    rdi,QWORD PTR [r13+0x18]
    5e9b:	mov    esi,r12d
    5e9e:	mov    edx,0x32
    5ea3:	call   57f0 <percentile.part.6>
    5ea8:	mov    rdi,QWORD PTR [r13+0x18]
    5eac:	mov    esi,r12d
    5eaf:	mov    edx,0x5
    5eb4:	mov    r15,rax
    5eb7:	call   57f0 <percentile.part.6>
    5ebc:	mov    rdi,QWORD PTR [r13+0x18]
    5ec0:	mov    esi,r12d
    5ec3:	mov    edx,0x5f
    5ec8:	mov    r14,rax
    5ecb:	call   57f0 <percentile.part.6>
    5ed0:	mov    r12,rax
    5ed3:	lea    rsi,[rip+0x181ab]        # 1e085 <_IO_stdin_used+0x85>
    5eda:	mov    edx,ebx
    5edc:	mov    edi,0x1
    5ee1:	xor    eax,eax
    5ee3:	call   5200 <__printf_chk@plt>
    5ee8:	mov    eax,DWORD PTR [r13+0x4]
    5eec:	mov    rsi,QWORD PTR [r13+0x10]
    5ef0:	xor    ecx,ecx
    5ef2:	test   eax,eax
    5ef4:	je     5f04 <hvm_pf_xen_summary+0x644>
    5ef6:	movsxd rcx,eax
    5ef9:	xor    edx,edx
    5efb:	mov    rax,rsi
    5efe:	div    rcx
    5f01:	mov    rcx,rax
    5f04:	lea    rdx,[rsi+rsi*4]
    5f08:	pxor   xmm1,xmm1
    5f0c:	pxor   xmm0,xmm0
    5f10:	cvtsi2sd xmm0,QWORD PTR [rip+0x292b7]        # 2f1d0 <P+0x30>
    5f19:	lea    rdx,[rdx+rdx*4]
    5f1d:	shl    rdx,0x2
    5f21:	cvtsi2sd xmm1,rdx
    5f26:	divsd  xmm1,xmm0
    5f2a:	test   rsi,rsi
    5f2d:	js     6520 <hvm_pf_xen_summary+0xc60>
    5f33:	pxor   xmm0,xmm0
    5f37:	cvtsi2sd xmm0,rsi
    5f3c:	pxor   xmm2,xmm2
    5f40:	sub    rsp,0x8
    5f44:	mov    r9,r15
    5f47:	mov    r8,r14
    5f4a:	cvtsi2sd xmm2,QWORD PTR [rip+0x2515d]        # 2b0b0 <opt+0x10>
    5f53:	push   r12
    5f55:	mov    edx,DWORD PTR [r13+0x0]
    5f59:	lea    rsi,[rip+0x1a8b8]        # 20818 <_IO_stdin_used+0x2818>
    5f60:	mov    edi,0x1
    5f65:	mov    eax,0x2
    5f6a:	divsd  xmm0,xmm2
    5f6e:	call   5200 <__printf_chk@plt>
    5f73:	pop    r15
    5f75:	pop    rax
    5f76:	add    ebx,0x1
    5f79:	add    r13,0x38
    5f7d:	cmp    ebx,0x5
    5f80:	jne    5e67 <hvm_pf_xen_summary+0x5a7>
    5f86:	mov    rbx,QWORD PTR [rsp+0x18]
    5f8b:	jmp    5d8d <hvm_pf_xen_summary+0x4cd>
    5f90:	mov    rax,rsi
    5f93:	and    esi,0x1
    5f96:	pxor   xmm0,xmm0
    5f9a:	shr    rax,1
    5f9d:	or     rax,rsi
    5fa0:	cvtsi2sd xmm0,rax
    5fa5:	addsd  xmm0,xmm0
    5fa9:	jmp    5d43 <hvm_pf_xen_summary+0x483>
    5fae:	xchg   ax,ax
    5fb0:	xor    r15d,r15d
    5fb3:	xor    r13d,r13d
    5fb6:	xor    r14d,r14d
    5fb9:	jmp    5cd2 <hvm_pf_xen_summary+0x412>
    5fbe:	xchg   ax,ax
    5fc0:	lea    rsi,[rip+0x180be]        # 1e085 <_IO_stdin_used+0x85>
    5fc7:	mov    edx,ebx
    5fc9:	mov    edi,0x1
    5fce:	xor    eax,eax
    5fd0:	call   5200 <__printf_chk@plt>
    5fd5:	mov    eax,DWORD PTR [r13+0x4]
    5fd9:	mov    rsi,QWORD PTR [r13+0x10]
    5fdd:	xor    ecx,ecx
    5fdf:	test   eax,eax
    5fe1:	je     5ff1 <hvm_pf_xen_summary+0x731>
    5fe3:	movsxd rcx,eax
    5fe6:	xor    edx,edx
    5fe8:	mov    rax,rsi
    5feb:	div    rcx
    5fee:	mov    rcx,rax
    5ff1:	lea    rdx,[rsi+rsi*4]
    5ff5:	pxor   xmm1,xmm1
    5ff9:	pxor   xmm0,xmm0
    5ffd:	cvtsi2sd xmm0,QWORD PTR [rip+0x291ca]        # 2f1d0 <P+0x30>
    6006:	lea    rdx,[rdx+rdx*4]
    600a:	shl    rdx,0x2
    600e:	cvtsi2sd xmm1,rdx
    6013:	divsd  xmm1,xmm0
    6017:	test   rsi,rsi
    601a:	js     6700 <hvm_pf_xen_summary+0xe40>
    6020:	pxor   xmm0,xmm0
    6024:	cvtsi2sd xmm0,rsi
    6029:	pxor   xmm2,xmm2
    602d:	mov    edx,DWORD PTR [r13+0x0]
    6031:	mov    edi,0x1
    6036:	lea    rsi,[rip+0x1a813]        # 20850 <_IO_stdin_used+0x2850>
    603d:	cvtsi2sd xmm2,QWORD PTR [rip+0x2506a]        # 2b0b0 <opt+0x10>
    6046:	mov    eax,0x2
    604b:	divsd  xmm0,xmm2
    604f:	call   5200 <__printf_chk@plt>
    6054:	jmp    5f76 <hvm_pf_xen_summary+0x6b6>
    6059:	nop    DWORD PTR [rax+0x0]
    6060:	mov    r12,QWORD PTR [rsp+0x20]
    6065:	jmp    5910 <hvm_pf_xen_summary+0x50>
    606a:	nop    WORD PTR [rax+rax*1+0x0]
    6070:	mov    rax,QWORD PTR [rsp+0x10]
    6075:	xor    r15d,r15d
    6078:	mov    QWORD PTR [rsp+0x18],r12
    607d:	mov    r12,r15
    6080:	lea    rbx,[rax+0x110f0]
    6087:	mov    r15,rax
    608a:	jmp    61b0 <hvm_pf_xen_summary+0x8f0>
    608f:	nop
    6090:	mov    r14d,DWORD PTR [rbx+0x4]
    6094:	cmp    DWORD PTR [rbx+0x8],r14d
    6098:	cmovle r14d,DWORD PTR [rbx+0x8]
    609d:	test   r14d,r14d
    60a0:	je     64f0 <hvm_pf_xen_summary+0xc30>
    60a6:	mov    rdi,QWORD PTR [rbx+0x18]
    60aa:	mov    esi,r14d
    60ad:	mov    edx,0x32
    60b2:	call   57f0 <percentile.part.6>
    60b7:	mov    rdi,QWORD PTR [rbx+0x18]
    60bb:	mov    esi,r14d
    60be:	mov    edx,0x5
    60c3:	mov    r13,rax
    60c6:	call   57f0 <percentile.part.6>
    60cb:	mov    rdi,QWORD PTR [rbx+0x18]
    60cf:	mov    esi,r14d
    60d2:	mov    edx,0x5f
    60d7:	mov    rbp,rax
    60da:	call   57f0 <percentile.part.6>
    60df:	mov    r14,rax
    60e2:	lea    rax,[rip+0x254f7]        # 2b5e0 <pf_xen_fixup_name>
    60e9:	lea    rsi,[rip+0x17f87]        # 1e077 <_IO_stdin_used+0x77>
    60f0:	mov    edi,0x1
    60f5:	mov    rdx,QWORD PTR [rax+r12*8]
    60f9:	xor    eax,eax
    60fb:	call   5200 <__printf_chk@plt>
    6100:	mov    eax,DWORD PTR [rbx+0x4]
    6103:	mov    rsi,QWORD PTR [rbx+0x10]
    6107:	xor    ecx,ecx
    6109:	test   eax,eax
    610b:	je     611b <hvm_pf_xen_summary+0x85b>
    610d:	movsxd rcx,eax
    6110:	xor    edx,edx
    6112:	mov    rax,rsi
    6115:	div    rcx
    6118:	mov    rcx,rax
    611b:	lea    rdx,[rsi+rsi*4]
    611f:	pxor   xmm1,xmm1
    6123:	pxor   xmm0,xmm0
    6127:	cvtsi2sd xmm0,QWORD PTR [rip+0x290a0]        # 2f1d0 <P+0x30>
    6130:	lea    rdx,[rdx+rdx*4]
    6134:	shl    rdx,0x2
    6138:	cvtsi2sd xmm1,rdx
    613d:	divsd  xmm1,xmm0
    6141:	test   rsi,rsi
    6144:	js     64d0 <hvm_pf_xen_summary+0xc10>
    614a:	pxor   xmm0,xmm0
    614e:	cvtsi2sd xmm0,rsi
    6153:	pxor   xmm2,xmm2
    6157:	sub    rsp,0x8
    615b:	mov    r8,rbp
    615e:	mov    r9,r13
    6161:	cvtsi2sd xmm2,QWORD PTR [rip+0x24f46]        # 2b0b0 <opt+0x10>
    616a:	push   r14
    616c:	mov    edx,DWORD PTR [rbx]
    616e:	lea    rsi,[rip+0x1a6a3]        # 20818 <_IO_stdin_used+0x2818>
    6175:	mov    edi,0x1
    617a:	mov    eax,0x2
    617f:	divsd  xmm0,xmm2
    6183:	call   5200 <__printf_chk@plt>
    6188:	pop    r11
    618a:	pop    rbp
    618b:	lea    r13,[r15+0x112e8]
    6192:	xor    ebp,ebp
    6194:	cmp    r12,0x2
    6198:	je     6278 <hvm_pf_xen_summary+0x9b8>
    619e:	cmp    r12d,0x8
    61a2:	je     5bb4 <hvm_pf_xen_summary+0x2f4>
    61a8:	add    r12,0x1
    61ac:	add    rbx,0x38
    61b0:	mov    r14d,DWORD PTR [rbx]
    61b3:	test   r14d,r14d
    61b6:	je     618b <hvm_pf_xen_summary+0x8cb>
    61b8:	mov    r13d,DWORD PTR [rip+0x24f19]        # 2b0d8 <opt+0x38>
    61bf:	test   r13d,r13d
    61c2:	jne    6090 <hvm_pf_xen_summary+0x7d0>
    61c8:	lea    rax,[rip+0x25411]        # 2b5e0 <pf_xen_fixup_name>
    61cf:	lea    rsi,[rip+0x17ea1]        # 1e077 <_IO_stdin_used+0x77>
    61d6:	mov    edi,0x1
    61db:	mov    rdx,QWORD PTR [rax+r12*8]
    61df:	xor    eax,eax
    61e1:	call   5200 <__printf_chk@plt>
    61e6:	mov    eax,DWORD PTR [rbx+0x4]
    61e9:	mov    rsi,QWORD PTR [rbx+0x10]
    61ed:	xor    ecx,ecx
    61ef:	test   eax,eax
    61f1:	je     6201 <hvm_pf_xen_summary+0x941>
    61f3:	movsxd rcx,eax
    61f6:	xor    edx,edx
    61f8:	mov    rax,rsi
    61fb:	div    rcx
    61fe:	mov    rcx,rax
    6201:	lea    rdx,[rsi+rsi*4]
    6205:	pxor   xmm1,xmm1
    6209:	pxor   xmm0,xmm0
    620d:	cvtsi2sd xmm0,QWORD PTR [rip+0x28fba]        # 2f1d0 <P+0x30>
    6216:	lea    rdx,[rdx+rdx*4]
    621a:	shl    rdx,0x2
    621e:	cvtsi2sd xmm1,rdx
    6223:	divsd  xmm1,xmm0
    6227:	test   rsi,rsi
    622a:	js     6600 <hvm_pf_xen_summary+0xd40>
    6230:	pxor   xmm0,xmm0
    6234:	cvtsi2sd xmm0,rsi
    6239:	pxor   xmm2,xmm2
    623d:	mov    edx,DWORD PTR [rbx]
    623f:	lea    rsi,[rip+0x1a60a]        # 20850 <_IO_stdin_used+0x2850>
    6246:	xor    ebp,ebp
    6248:	cvtsi2sd xmm2,QWORD PTR [rip+0x24e5f]        # 2b0b0 <opt+0x10>
    6251:	mov    edi,0x1
    6256:	mov    eax,0x2
    625b:	lea    r13,[r15+0x112e8]
    6262:	divsd  xmm0,xmm2
    6266:	call   5200 <__printf_chk@plt>
    626b:	cmp    r12,0x2
    626f:	jne    619e <hvm_pf_xen_summary+0x8de>
    6275:	nop    DWORD PTR [rax]
    6278:	mov    r10d,DWORD PTR [r13+0x0]
    627c:	test   r10d,r10d
    627f:	je     6393 <hvm_pf_xen_summary+0xad3>
    6285:	mov    r9d,DWORD PTR [rip+0x24e4c]        # 2b0d8 <opt+0x38>
    628c:	test   r9d,r9d
    628f:	je     6770 <hvm_pf_xen_summary+0xeb0>
    6295:	mov    ecx,DWORD PTR [r13+0x4]
    6299:	cmp    DWORD PTR [r13+0x8],ecx
    629d:	cmovle ecx,DWORD PTR [r13+0x8]
    62a2:	mov    r14d,ecx
    62a5:	test   ecx,ecx
    62a7:	je     6880 <hvm_pf_xen_summary+0xfc0>
    62ad:	mov    rdi,QWORD PTR [r13+0x18]
    62b1:	mov    esi,ecx
    62b3:	mov    edx,0x32
    62b8:	call   57f0 <percentile.part.6>
    62bd:	mov    rdi,QWORD PTR [r13+0x18]
    62c1:	mov    esi,r14d
    62c4:	mov    edx,0x5
    62c9:	mov    QWORD PTR [rsp+0x28],rax
    62ce:	call   57f0 <percentile.part.6>
    62d3:	mov    rdi,QWORD PTR [r13+0x18]
    62d7:	mov    esi,r14d
    62da:	mov    edx,0x5f
    62df:	mov    QWORD PTR [rsp+0x20],rax
    62e4:	call   57f0 <percentile.part.6>
    62e9:	mov    r14,rax
    62ec:	lea    rsi,[rip+0x17da1]        # 1e094 <_IO_stdin_used+0x94>
    62f3:	mov    edx,ebp
    62f5:	mov    edi,0x1
    62fa:	xor    eax,eax
    62fc:	call   5200 <__printf_chk@plt>
    6301:	mov    eax,DWORD PTR [r13+0x4]
    6305:	mov    rsi,QWORD PTR [r13+0x10]
    6309:	xor    ecx,ecx
    630b:	test   eax,eax
    630d:	je     631d <hvm_pf_xen_summary+0xa5d>
    630f:	movsxd rcx,eax
    6312:	xor    edx,edx
    6314:	mov    rax,rsi
    6317:	div    rcx
    631a:	mov    rcx,rax
    631d:	lea    rax,[rsi+rsi*4]
    6321:	pxor   xmm1,xmm1
    6325:	pxor   xmm0,xmm0
    6329:	cvtsi2sd xmm0,QWORD PTR [rip+0x28e9e]        # 2f1d0 <P+0x30>
    6332:	lea    rdx,[rax+rax*4]
    6336:	shl    rdx,0x2
    633a:	cvtsi2sd xmm1,rdx
    633f:	divsd  xmm1,xmm0
    6343:	test   rsi,rsi
    6346:	js     6860 <hvm_pf_xen_summary+0xfa0>
    634c:	pxor   xmm0,xmm0
    6350:	cvtsi2sd xmm0,rsi
    6355:	pxor   xmm2,xmm2
    6359:	sub    rsp,0x8
    635d:	mov    edi,0x1
    6362:	mov    eax,0x2
    6367:	cvtsi2sd xmm2,QWORD PTR [rip+0x24d40]        # 2b0b0 <opt+0x10>
    6370:	push   r14
    6372:	mov    r9,QWORD PTR [rsp+0x38]
    6377:	lea    rsi,[rip+0x1a49a]        # 20818 <_IO_stdin_used+0x2818>
    637e:	mov    r8,QWORD PTR [rsp+0x30]
    6383:	mov    edx,DWORD PTR [r13+0x0]
    6387:	divsd  xmm0,xmm2
    638b:	call   5200 <__printf_chk@plt>
    6390:	pop    rdi
    6391:	pop    r8
    6393:	add    r13,0x38
    6397:	cmp    ebp,0x1
    639a:	jne    6540 <hvm_pf_xen_summary+0xc80>
    63a0:	mov    esi,DWORD PTR [r15+0x11358]
    63a7:	test   esi,esi
    63a9:	je     61a8 <hvm_pf_xen_summary+0x8e8>
    63af:	mov    ecx,DWORD PTR [rip+0x24d23]        # 2b0d8 <opt+0x38>
    63b5:	test   ecx,ecx
    63b7:	je     689a <hvm_pf_xen_summary+0xfda>
    63bd:	mov    r14d,DWORD PTR [r15+0x1135c]
    63c4:	cmp    DWORD PTR [r15+0x11360],r14d
    63cb:	cmovle r14d,DWORD PTR [r15+0x11360]
    63d3:	test   r14d,r14d
    63d6:	je     699c <hvm_pf_xen_summary+0x10dc>
    63dc:	mov    rdi,QWORD PTR [r15+0x11370]
    63e3:	mov    esi,r14d
    63e6:	mov    edx,0x32
    63eb:	call   57f0 <percentile.part.6>
    63f0:	mov    rdi,QWORD PTR [r15+0x11370]
    63f7:	mov    esi,r14d
    63fa:	mov    edx,0x5
    63ff:	mov    r13,rax
    6402:	call   57f0 <percentile.part.6>
    6407:	mov    rdi,QWORD PTR [r15+0x11370]
    640e:	mov    esi,r14d
    6411:	mov    edx,0x5f
    6416:	mov    rbp,rax
    6419:	call   57f0 <percentile.part.6>
    641e:	mov    r14,rax
    6421:	lea    rsi,[rip+0x17c7b]        # 1e0a3 <_IO_stdin_used+0xa3>
    6428:	mov    edi,0x1
    642d:	xor    eax,eax
    642f:	call   5200 <__printf_chk@plt>
    6434:	mov    eax,DWORD PTR [r15+0x1135c]
    643b:	mov    rsi,QWORD PTR [r15+0x11368]
    6442:	xor    ecx,ecx
    6444:	test   eax,eax
    6446:	je     6456 <hvm_pf_xen_summary+0xb96>
    6448:	movsxd rcx,eax
    644b:	xor    edx,edx
    644d:	mov    rax,rsi
    6450:	div    rcx
    6453:	mov    rcx,rax
    6456:	lea    rax,[rsi+rsi*4]
    645a:	pxor   xmm1,xmm1
    645e:	pxor   xmm0,xmm0
    6462:	cvtsi2sd xmm0,QWORD PTR [rip+0x28d65]        # 2f1d0 <P+0x30>
    646b:	lea    rdx,[rax+rax*4]
    646f:	shl    rdx,0x2
    6473:	cvtsi2sd xmm1,rdx
    6478:	divsd  xmm1,xmm0
    647c:	test   rsi,rsi
    647f:	js     6960 <hvm_pf_xen_summary+0x10a0>
    6485:	pxor   xmm0,xmm0
    6489:	cvtsi2sd xmm0,rsi
    648e:	pxor   xmm2,xmm2
    6492:	sub    rsp,0x8
    6496:	mov    r9,r13
    6499:	mov    r8,rbp
    649c:	cvtsi2sd xmm2,QWORD PTR [rip+0x24c0b]        # 2b0b0 <opt+0x10>
    64a5:	mov    edi,0x1
    64aa:	mov    eax,0x2
    64af:	mov    edx,DWORD PTR [r15+0x11358]
    64b6:	push   r14
    64b8:	lea    rsi,[rip+0x1a359]        # 20818 <_IO_stdin_used+0x2818>
    64bf:	divsd  xmm0,xmm2
    64c3:	call   5200 <__printf_chk@plt>
    64c8:	pop    rax
    64c9:	pop    rdx
    64ca:	jmp    61a8 <hvm_pf_xen_summary+0x8e8>
    64cf:	nop
    64d0:	mov    rax,rsi
    64d3:	and    esi,0x1
    64d6:	pxor   xmm0,xmm0
    64da:	shr    rax,1
    64dd:	or     rax,rsi
    64e0:	cvtsi2sd xmm0,rax
    64e5:	addsd  xmm0,xmm0
    64e9:	jmp    6153 <hvm_pf_xen_summary+0x893>
    64ee:	xchg   ax,ax
    64f0:	xor    r14d,r14d
    64f3:	xor    ebp,ebp
    64f5:	xor    r13d,r13d
    64f8:	jmp    60e2 <hvm_pf_xen_summary+0x822>
    64fd:	nop    DWORD PTR [rax]
    6500:	mov    rax,rsi
    6503:	and    esi,0x1
    6506:	pxor   xmm0,xmm0
    650a:	shr    rax,1
    650d:	or     rax,rsi
    6510:	cvtsi2sd xmm0,rax
    6515:	addsd  xmm0,xmm0
    6519:	jmp    5e1a <hvm_pf_xen_summary+0x55a>
    651e:	xchg   ax,ax
    6520:	mov    rax,rsi
    6523:	and    esi,0x1
    6526:	pxor   xmm0,xmm0
    652a:	shr    rax,1
    652d:	or     rax,rsi
    6530:	cvtsi2sd xmm0,rax
    6535:	addsd  xmm0,xmm0
    6539:	jmp    5f3c <hvm_pf_xen_summary+0x67c>
    653e:	xchg   ax,ax
    6540:	mov    ebp,0x1
    6545:	jmp    6278 <hvm_pf_xen_summary+0x9b8>
    654a:	nop    WORD PTR [rax+rax*1+0x0]
    6550:	xor    r12d,r12d
    6553:	xor    r14d,r14d
    6556:	xor    r15d,r15d
    6559:	jmp    5ed3 <hvm_pf_xen_summary+0x613>
    655e:	xchg   ax,ax
    6560:	mov    rdx,QWORD PTR [r15]
    6563:	lea    rsi,[rip+0x17b0d]        # 1e077 <_IO_stdin_used+0x77>
    656a:	mov    edi,0x1
    656f:	xor    eax,eax
    6571:	call   5200 <__printf_chk@plt>
    6576:	mov    eax,DWORD PTR [r14+0x4]
    657a:	mov    rsi,QWORD PTR [r14+0x10]
    657e:	xor    ecx,ecx
    6580:	test   eax,eax
    6582:	je     6592 <hvm_pf_xen_summary+0xcd2>
    6584:	movsxd rcx,eax
    6587:	xor    edx,edx
    6589:	mov    rax,rsi
    658c:	div    rcx
    658f:	mov    rcx,rax
    6592:	lea    rdx,[rsi+rsi*4]
    6596:	pxor   xmm1,xmm1
    659a:	pxor   xmm0,xmm0
    659e:	cvtsi2sd xmm0,QWORD PTR [rip+0x28c29]        # 2f1d0 <P+0x30>
    65a7:	lea    rdx,[rdx+rdx*4]
    65ab:	shl    rdx,0x2
    65af:	cvtsi2sd xmm1,rdx
    65b4:	divsd  xmm1,xmm0
    65b8:	test   rsi,rsi
    65bb:	js     6840 <hvm_pf_xen_summary+0xf80>
    65c1:	pxor   xmm0,xmm0
    65c5:	cvtsi2sd xmm0,rsi
    65ca:	pxor   xmm2,xmm2
    65ce:	mov    edx,DWORD PTR [r14]
    65d1:	mov    edi,0x1
    65d6:	lea    rsi,[rip+0x1a273]        # 20850 <_IO_stdin_used+0x2850>
    65dd:	cvtsi2sd xmm2,QWORD PTR [rip+0x24aca]        # 2b0b0 <opt+0x10>
    65e6:	mov    eax,0x2
    65eb:	divsd  xmm0,xmm2
    65ef:	call   5200 <__printf_chk@plt>
    65f4:	jmp    5ba3 <hvm_pf_xen_summary+0x2e3>
    65f9:	nop    DWORD PTR [rax+0x0]
    6600:	mov    rax,rsi
    6603:	and    esi,0x1
    6606:	pxor   xmm0,xmm0
    660a:	shr    rax,1
    660d:	or     rax,rsi
    6610:	cvtsi2sd xmm0,rax
    6615:	addsd  xmm0,xmm0
    6619:	jmp    6239 <hvm_pf_xen_summary+0x979>
    661e:	xchg   ax,ax
    6620:	mov    rax,rsi
    6623:	and    esi,0x1
    6626:	pxor   xmm0,xmm0
    662a:	shr    rax,1
    662d:	or     rax,rsi
    6630:	cvtsi2sd xmm0,rax
    6635:	addsd  xmm0,xmm0
    6639:	jmp    5b6a <hvm_pf_xen_summary+0x2aa>
    663e:	xchg   ax,ax
    6640:	mov    rax,rsi
    6643:	and    esi,0x1
    6646:	pxor   xmm0,xmm0
    664a:	shr    rax,1
    664d:	or     rax,rsi
    6650:	cvtsi2sd xmm0,rax
    6655:	addsd  xmm0,xmm0
    6659:	jmp    5a27 <hvm_pf_xen_summary+0x167>
    665e:	xchg   ax,ax
    6660:	lea    rsi,[rip+0x179f7]        # 1e05e <_IO_stdin_used+0x5e>
    6667:	mov    edi,0x1
    666c:	xor    eax,eax
    666e:	call   5200 <__printf_chk@plt>
    6673:	mov    eax,DWORD PTR [r12+0x4]
    6678:	mov    rsi,QWORD PTR [r12+0x10]
    667d:	test   eax,eax
    667f:	je     6759 <hvm_pf_xen_summary+0xe99>
    6685:	movsxd rcx,eax
    6688:	xor    edx,edx
    668a:	mov    rax,rsi
    668d:	div    rcx
    6690:	mov    rcx,rax
    6693:	lea    rdx,[rsi+rsi*4]
    6697:	pxor   xmm1,xmm1
    669b:	pxor   xmm0,xmm0
    669f:	cvtsi2sd xmm0,QWORD PTR [rip+0x28b28]        # 2f1d0 <P+0x30>
    66a8:	lea    rdx,[rdx+rdx*4]
    66ac:	shl    rdx,0x2
    66b0:	cvtsi2sd xmm1,rdx
    66b5:	divsd  xmm1,xmm0
    66b9:	test   rsi,rsi
    66bc:	js     6820 <hvm_pf_xen_summary+0xf60>
    66c2:	pxor   xmm0,xmm0
    66c6:	cvtsi2sd xmm0,rsi
    66cb:	pxor   xmm2,xmm2
    66cf:	mov    edx,DWORD PTR [r12]
    66d3:	mov    edi,0x1
    66d8:	lea    rsi,[rip+0x1a171]        # 20850 <_IO_stdin_used+0x2850>
    66df:	cvtsi2sd xmm2,QWORD PTR [rip+0x249c8]        # 2b0b0 <opt+0x10>
    66e8:	mov    eax,0x2
    66ed:	divsd  xmm0,xmm2
    66f1:	call   5200 <__printf_chk@plt>
    66f6:	jmp    5a61 <hvm_pf_xen_summary+0x1a1>
    66fb:	nop    DWORD PTR [rax+rax*1+0x0]
    6700:	mov    rax,rsi
    6703:	and    esi,0x1
    6706:	pxor   xmm0,xmm0
    670a:	shr    rax,1
    670d:	or     rax,rsi
    6710:	cvtsi2sd xmm0,rax
    6715:	addsd  xmm0,xmm0
    6719:	jmp    6029 <hvm_pf_xen_summary+0x769>
    671e:	xchg   ax,ax
    6720:	xor    r12d,r12d
    6723:	xor    ebp,ebp
    6725:	xor    r13d,r13d
    6728:	jmp    5b00 <hvm_pf_xen_summary+0x240>
    672d:	nop    DWORD PTR [rax]
    6730:	mov    edx,DWORD PTR [rsp+0x8]
    6734:	lea    rsi,[rip+0x1792f]        # 1e06a <_IO_stdin_used+0x6a>
    673b:	mov    edi,0x1
    6740:	xor    eax,eax
    6742:	call   5200 <__printf_chk@plt>
    6747:	mov    eax,DWORD PTR [r12+0x4]
    674c:	mov    rsi,QWORD PTR [r12+0x10]
    6751:	test   eax,eax
    6753:	jne    6685 <hvm_pf_xen_summary+0xdc5>
    6759:	xor    ecx,ecx
    675b:	jmp    6693 <hvm_pf_xen_summary+0xdd3>
    6760:	xor    r15d,r15d
    6763:	xor    ebp,ebp
    6765:	xor    r13d,r13d
    6768:	jmp    59ac <hvm_pf_xen_summary+0xec>
    676d:	nop    DWORD PTR [rax]
    6770:	lea    rsi,[rip+0x1791d]        # 1e094 <_IO_stdin_used+0x94>
    6777:	mov    edx,ebp
    6779:	mov    edi,0x1
    677e:	xor    eax,eax
    6780:	call   5200 <__printf_chk@plt>
    6785:	mov    eax,DWORD PTR [r13+0x4]
    6789:	mov    rsi,QWORD PTR [r13+0x10]
    678d:	xor    ecx,ecx
    678f:	test   eax,eax
    6791:	je     67a1 <hvm_pf_xen_summary+0xee1>
    6793:	movsxd rcx,eax
    6796:	xor    edx,edx
    6798:	mov    rax,rsi
    679b:	div    rcx
    679e:	mov    rcx,rax
    67a1:	lea    rdx,[rsi+rsi*4]
    67a5:	pxor   xmm1,xmm1
    67a9:	pxor   xmm0,xmm0
    67ad:	cvtsi2sd xmm0,QWORD PTR [rip+0x28a1a]        # 2f1d0 <P+0x30>
    67b6:	lea    rdx,[rdx+rdx*4]
    67ba:	shl    rdx,0x2
    67be:	cvtsi2sd xmm1,rdx
    67c3:	divsd  xmm1,xmm0
    67c7:	test   rsi,rsi
    67ca:	js     697e <hvm_pf_xen_summary+0x10be>
    67d0:	pxor   xmm0,xmm0
    67d4:	cvtsi2sd xmm0,rsi
    67d9:	pxor   xmm2,xmm2
    67dd:	mov    edx,DWORD PTR [r13+0x0]
    67e1:	mov    edi,0x1
    67e6:	lea    rsi,[rip+0x1a063]        # 20850 <_IO_stdin_used+0x2850>
    67ed:	cvtsi2sd xmm2,QWORD PTR [rip+0x248ba]        # 2b0b0 <opt+0x10>
    67f6:	mov    eax,0x2
    67fb:	divsd  xmm0,xmm2
    67ff:	call   5200 <__printf_chk@plt>
    6804:	jmp    6393 <hvm_pf_xen_summary+0xad3>
    6809:	nop    DWORD PTR [rax+0x0]
    6810:	add    rsp,0x38
    6814:	pop    rbx
    6815:	pop    rbp
    6816:	pop    r12
    6818:	pop    r13
    681a:	pop    r14
    681c:	pop    r15
    681e:	ret    
    681f:	nop
    6820:	mov    rax,rsi
    6823:	and    esi,0x1
    6826:	pxor   xmm0,xmm0
    682a:	shr    rax,1
    682d:	or     rax,rsi
    6830:	cvtsi2sd xmm0,rax
    6835:	addsd  xmm0,xmm0
    6839:	jmp    66cb <hvm_pf_xen_summary+0xe0b>
    683e:	xchg   ax,ax
    6840:	mov    rax,rsi
    6843:	and    esi,0x1
    6846:	pxor   xmm0,xmm0
    684a:	shr    rax,1
    684d:	or     rax,rsi
    6850:	cvtsi2sd xmm0,rax
    6855:	addsd  xmm0,xmm0
    6859:	jmp    65ca <hvm_pf_xen_summary+0xd0a>
    685e:	xchg   ax,ax
    6860:	mov    rax,rsi
    6863:	and    esi,0x1
    6866:	pxor   xmm0,xmm0
    686a:	shr    rax,1
    686d:	or     rax,rsi
    6870:	cvtsi2sd xmm0,rax
    6875:	addsd  xmm0,xmm0
    6879:	jmp    6355 <hvm_pf_xen_summary+0xa95>
    687e:	xchg   ax,ax
    6880:	mov    QWORD PTR [rsp+0x20],0x0
    6889:	xor    r14d,r14d
    688c:	mov    QWORD PTR [rsp+0x28],0x0
    6895:	jmp    62ec <hvm_pf_xen_summary+0xa2c>
    689a:	lea    rsi,[rip+0x17802]        # 1e0a3 <_IO_stdin_used+0xa3>
    68a1:	mov    edi,0x1
    68a6:	xor    eax,eax
    68a8:	call   5200 <__printf_chk@plt>
    68ad:	mov    eax,DWORD PTR [r15+0x1135c]
    68b4:	mov    rsi,QWORD PTR [r15+0x11368]
    68bb:	xor    ecx,ecx
    68bd:	test   eax,eax
    68bf:	jne    6928 <hvm_pf_xen_summary+0x1068>
    68c1:	lea    rdx,[rsi+rsi*4]
    68c5:	pxor   xmm1,xmm1
    68c9:	pxor   xmm0,xmm0
    68cd:	cvtsi2sd xmm0,QWORD PTR [rip+0x288fa]        # 2f1d0 <P+0x30>
    68d6:	lea    rdx,[rdx+rdx*4]
    68da:	shl    rdx,0x2
    68de:	cvtsi2sd xmm1,rdx
    68e3:	divsd  xmm1,xmm0
    68e7:	test   rsi,rsi
    68ea:	js     6938 <hvm_pf_xen_summary+0x1078>
    68ec:	pxor   xmm0,xmm0
    68f0:	cvtsi2sd xmm0,rsi
    68f5:	pxor   xmm2,xmm2
    68f9:	mov    edi,0x1
    68fe:	mov    eax,0x2
    6903:	mov    edx,DWORD PTR [r15+0x11358]
    690a:	cvtsi2sd xmm2,QWORD PTR [rip+0x2479d]        # 2b0b0 <opt+0x10>
    6913:	lea    rsi,[rip+0x19f36]        # 20850 <_IO_stdin_used+0x2850>
    691a:	divsd  xmm0,xmm2
    691e:	call   5200 <__printf_chk@plt>
    6923:	jmp    61a8 <hvm_pf_xen_summary+0x8e8>
    6928:	movsxd rcx,eax
    692b:	xor    edx,edx
    692d:	mov    rax,rsi
    6930:	div    rcx
    6933:	mov    rcx,rax
    6936:	jmp    68c1 <hvm_pf_xen_summary+0x1001>
    6938:	mov    rax,rsi
    693b:	and    esi,0x1
    693e:	pxor   xmm0,xmm0
    6942:	shr    rax,1
    6945:	or     rax,rsi
    6948:	cvtsi2sd xmm0,rax
    694d:	addsd  xmm0,xmm0
    6951:	jmp    68f5 <hvm_pf_xen_summary+0x1035>
    6953:	xor    r15d,r15d
    6956:	xor    ebp,ebp
    6958:	xor    r13d,r13d
    695b:	jmp    5c30 <hvm_pf_xen_summary+0x370>
    6960:	mov    rax,rsi
    6963:	and    esi,0x1
    6966:	pxor   xmm0,xmm0
    696a:	shr    rax,1
    696d:	or     rax,rsi
    6970:	cvtsi2sd xmm0,rax
    6975:	addsd  xmm0,xmm0
    6979:	jmp    648e <hvm_pf_xen_summary+0xbce>
    697e:	mov    rax,rsi
    6981:	and    esi,0x1
    6984:	pxor   xmm0,xmm0
    6988:	shr    rax,1
    698b:	or     rax,rsi
    698e:	cvtsi2sd xmm0,rax
    6993:	addsd  xmm0,xmm0
    6997:	jmp    67d9 <hvm_pf_xen_summary+0xf19>
    699c:	xor    r14d,r14d
    699f:	xor    ebp,ebp
    69a1:	xor    r13d,r13d
    69a4:	jmp    6421 <hvm_pf_xen_summary+0xb61>
    69a9:	nop    DWORD PTR [rax+0x0]

00000000000069b0 <hvm_mmio_summary>:
    69b0:	push   r15
    69b2:	lea    rax,[rsi*8+0x0]
    69ba:	push   r14
    69bc:	sub    rax,rsi
    69bf:	push   r13
    69c1:	push   r12
    69c3:	push   rbp
    69c4:	push   rbx
    69c5:	lea    rbx,[rdi+rax*8]
    69c9:	sub    rsp,0x8
    69cd:	mov    r8d,DWORD PTR [rbx+0x12a50]
    69d4:	test   r8d,r8d
    69d7:	je     6b20 <hvm_mmio_summary+0x170>
    69dd:	mov    ecx,DWORD PTR [rip+0x246f5]        # 2b0d8 <opt+0x38>
    69e3:	mov    rbp,rsi
    69e6:	mov    r12,rdi
    69e9:	test   ecx,ecx
    69eb:	je     6b48 <hvm_mmio_summary+0x198>
    69f1:	mov    r15d,DWORD PTR [rbx+0x12a54]
    69f8:	cmp    DWORD PTR [rbx+0x12a58],r15d
    69ff:	cmovle r15d,DWORD PTR [rbx+0x12a58]
    6a07:	test   r15d,r15d
    6a0a:	je     6c30 <hvm_mmio_summary+0x280>
    6a10:	mov    rdi,QWORD PTR [rbx+0x12a68]
    6a17:	mov    edx,0x32
    6a1c:	mov    esi,r15d
    6a1f:	call   57f0 <percentile.part.6>
    6a24:	mov    rdi,QWORD PTR [rbx+0x12a68]
    6a2b:	mov    edx,0x5
    6a30:	mov    esi,r15d
    6a33:	mov    r14,rax
    6a36:	call   57f0 <percentile.part.6>
    6a3b:	mov    rdi,QWORD PTR [rbx+0x12a68]
    6a42:	mov    edx,0x5f
    6a47:	mov    esi,r15d
    6a4a:	mov    r13,rax
    6a4d:	call   57f0 <percentile.part.6>
    6a52:	mov    rbx,rax
    6a55:	lea    rsi,[rip+0x17657]        # 1e0b3 <_IO_stdin_used+0xb3>
    6a5c:	mov    edi,0x1
    6a61:	xor    eax,eax
    6a63:	call   5200 <__printf_chk@plt>
    6a68:	lea    rax,[rbp*8+0x0]
    6a70:	xor    ecx,ecx
    6a72:	sub    rax,rbp
    6a75:	lea    rdx,[r12+rax*8]
    6a79:	mov    eax,DWORD PTR [rdx+0x12a54]
    6a7f:	mov    rsi,QWORD PTR [rdx+0x12a60]
    6a86:	test   eax,eax
    6a88:	jne    6b30 <hvm_mmio_summary+0x180>
    6a8e:	lea    rax,[rbp*8+0x0]
    6a96:	pxor   xmm1,xmm1
    6a9a:	pxor   xmm0,xmm0
    6a9e:	cvtsi2sd xmm0,QWORD PTR [rip+0x28729]        # 2f1d0 <P+0x30>
    6aa7:	sub    rax,rbp
    6aaa:	mov    rax,QWORD PTR [r12+rax*8+0x12a60]
    6ab2:	lea    rax,[rax+rax*4]
    6ab6:	lea    rdx,[rax+rax*4]
    6aba:	shl    rdx,0x2
    6abe:	cvtsi2sd xmm1,rdx
    6ac3:	divsd  xmm1,xmm0
    6ac7:	test   rsi,rsi
    6aca:	js     6c10 <hvm_mmio_summary+0x260>
    6ad0:	pxor   xmm0,xmm0
    6ad4:	cvtsi2sd xmm0,rsi
    6ad9:	pxor   xmm2,xmm2
    6add:	sub    rsp,0x8
    6ae1:	mov    r9,r14
    6ae4:	mov    r8,r13
    6ae7:	cvtsi2sd xmm2,QWORD PTR [rip+0x245c0]        # 2b0b0 <opt+0x10>
    6af0:	lea    rdx,[rbp*8+0x0]
    6af8:	push   rbx
    6af9:	mov    edi,0x1
    6afe:	sub    rdx,rbp
    6b01:	lea    rsi,[rip+0x19d10]        # 20818 <_IO_stdin_used+0x2818>
    6b08:	mov    eax,0x2
    6b0d:	mov    edx,DWORD PTR [r12+rdx*8+0x12a50]
    6b15:	divsd  xmm0,xmm2
    6b19:	call   5200 <__printf_chk@plt>
    6b1e:	pop    rax
    6b1f:	pop    rdx
    6b20:	add    rsp,0x8
    6b24:	pop    rbx
    6b25:	pop    rbp
    6b26:	pop    r12
    6b28:	pop    r13
    6b2a:	pop    r14
    6b2c:	pop    r15
    6b2e:	ret    
    6b2f:	nop
    6b30:	movsxd rcx,eax
    6b33:	xor    edx,edx
    6b35:	mov    rax,rsi
    6b38:	div    rcx
    6b3b:	mov    rcx,rax
    6b3e:	jmp    6a8e <hvm_mmio_summary+0xde>
    6b43:	nop    DWORD PTR [rax+rax*1+0x0]
    6b48:	lea    rsi,[rip+0x17564]        # 1e0b3 <_IO_stdin_used+0xb3>
    6b4f:	mov    edi,0x1
    6b54:	xor    eax,eax
    6b56:	call   5200 <__printf_chk@plt>
    6b5b:	mov    eax,DWORD PTR [rbx+0x12a54]
    6b61:	mov    rsi,QWORD PTR [rbx+0x12a60]
    6b68:	xor    ecx,ecx
    6b6a:	test   eax,eax
    6b6c:	je     6b7c <hvm_mmio_summary+0x1cc>
    6b6e:	movsxd rcx,eax
    6b71:	xor    edx,edx
    6b73:	mov    rax,rsi
    6b76:	div    rcx
    6b79:	mov    rcx,rax
    6b7c:	lea    rdx,[rbp*8+0x0]
    6b84:	pxor   xmm1,xmm1
    6b88:	pxor   xmm0,xmm0
    6b8c:	cvtsi2sd xmm0,QWORD PTR [rip+0x2863b]        # 2f1d0 <P+0x30>
    6b95:	sub    rdx,rbp
    6b98:	mov    rdx,QWORD PTR [r12+rdx*8+0x12a60]
    6ba0:	lea    rdx,[rdx+rdx*4]
    6ba4:	lea    rdx,[rdx+rdx*4]
    6ba8:	shl    rdx,0x2
    6bac:	cvtsi2sd xmm1,rdx
    6bb1:	divsd  xmm1,xmm0
    6bb5:	test   rsi,rsi
    6bb8:	js     6c40 <hvm_mmio_summary+0x290>
    6bbe:	pxor   xmm0,xmm0
    6bc2:	cvtsi2sd xmm0,rsi
    6bc7:	pxor   xmm2,xmm2
    6bcb:	mov    edi,0x1
    6bd0:	mov    eax,0x2
    6bd5:	cvtsi2sd xmm2,QWORD PTR [rip+0x244d2]        # 2b0b0 <opt+0x10>
    6bde:	lea    rdx,[rbp*8+0x0]
    6be6:	sub    rdx,rbp
    6be9:	lea    rsi,[rip+0x19c60]        # 20850 <_IO_stdin_used+0x2850>
    6bf0:	mov    edx,DWORD PTR [r12+rdx*8+0x12a50]
    6bf8:	add    rsp,0x8
    6bfc:	pop    rbx
    6bfd:	pop    rbp
    6bfe:	pop    r12
    6c00:	pop    r13
    6c02:	pop    r14
    6c04:	pop    r15
    6c06:	divsd  xmm0,xmm2
    6c0a:	jmp    5200 <__printf_chk@plt>
    6c0f:	nop
    6c10:	mov    rax,rsi
    6c13:	and    esi,0x1
    6c16:	pxor   xmm0,xmm0
    6c1a:	shr    rax,1
    6c1d:	or     rax,rsi
    6c20:	cvtsi2sd xmm0,rax
    6c25:	addsd  xmm0,xmm0
    6c29:	jmp    6ad9 <hvm_mmio_summary+0x129>
    6c2e:	xchg   ax,ax
    6c30:	xor    ebx,ebx
    6c32:	xor    r13d,r13d
    6c35:	xor    r14d,r14d
    6c38:	jmp    6a55 <hvm_mmio_summary+0xa5>
    6c3d:	nop    DWORD PTR [rax]
    6c40:	mov    rax,rsi
    6c43:	and    esi,0x1
    6c46:	pxor   xmm0,xmm0
    6c4a:	shr    rax,1
    6c4d:	or     rax,rsi
    6c50:	cvtsi2sd xmm0,rax
    6c55:	addsd  xmm0,xmm0
    6c59:	jmp    6bc7 <hvm_mmio_summary+0x217>
    6c5e:	xchg   ax,ax

0000000000006c60 <hvm_vmcall_summary>:
    6c60:	push   r15
    6c62:	lea    r15,[rip+0x24a77]        # 2b6e0 <hypercall_name>
    6c69:	push   r14
    6c6b:	push   r13
    6c6d:	push   r12
    6c6f:	push   rbp
    6c70:	lea    rbp,[r15+0x130]
    6c77:	push   rbx
    6c78:	lea    rbx,[rdi+0x11978]
    6c7f:	sub    rsp,0x18
    6c83:	mov    QWORD PTR [rsp+0x8],rdi
    6c88:	jmp    6d92 <hvm_vmcall_summary+0x132>
    6c8d:	nop    DWORD PTR [rax]
    6c90:	mov    ecx,DWORD PTR [rbx+0x4]
    6c93:	cmp    DWORD PTR [rbx+0x8],ecx
    6c96:	cmovle ecx,DWORD PTR [rbx+0x8]
    6c9a:	mov    r13d,ecx
    6c9d:	test   ecx,ecx
    6c9f:	je     6fc0 <hvm_vmcall_summary+0x360>
    6ca5:	mov    rdi,QWORD PTR [rbx+0x18]
    6ca9:	mov    esi,ecx
    6cab:	mov    edx,0x32
    6cb0:	call   57f0 <percentile.part.6>
    6cb5:	mov    rdi,QWORD PTR [rbx+0x18]
    6cb9:	mov    esi,r13d
    6cbc:	mov    edx,0x5
    6cc1:	mov    r14,rax
    6cc4:	call   57f0 <percentile.part.6>
    6cc9:	mov    rdi,QWORD PTR [rbx+0x18]
    6ccd:	mov    esi,r13d
    6cd0:	mov    edx,0x5f
    6cd5:	mov    r12,rax
    6cd8:	call   57f0 <percentile.part.6>
    6cdd:	mov    r13,rax
    6ce0:	mov    rdx,QWORD PTR [r15]
    6ce3:	lea    rsi,[rip+0x173d2]        # 1e0bc <_IO_stdin_used+0xbc>
    6cea:	mov    edi,0x1
    6cef:	xor    eax,eax
    6cf1:	call   5200 <__printf_chk@plt>
    6cf6:	mov    eax,DWORD PTR [rbx+0x4]
    6cf9:	mov    rsi,QWORD PTR [rbx+0x10]
    6cfd:	xor    ecx,ecx
    6cff:	test   eax,eax
    6d01:	je     6d11 <hvm_vmcall_summary+0xb1>
    6d03:	movsxd rcx,eax
    6d06:	xor    edx,edx
    6d08:	mov    rax,rsi
    6d0b:	div    rcx
    6d0e:	mov    rcx,rax
    6d11:	lea    rax,[rsi+rsi*4]
    6d15:	pxor   xmm1,xmm1
    6d19:	pxor   xmm0,xmm0
    6d1d:	cvtsi2sd xmm0,QWORD PTR [rip+0x284aa]        # 2f1d0 <P+0x30>
    6d26:	lea    rdx,[rax+rax*4]
    6d2a:	shl    rdx,0x2
    6d2e:	cvtsi2sd xmm1,rdx
    6d33:	divsd  xmm1,xmm0
    6d37:	test   rsi,rsi
    6d3a:	js     6f98 <hvm_vmcall_summary+0x338>
    6d40:	pxor   xmm0,xmm0
    6d44:	cvtsi2sd xmm0,rsi
    6d49:	pxor   xmm2,xmm2
    6d4d:	sub    rsp,0x8
    6d51:	mov    r8,r12
    6d54:	mov    edi,0x1
    6d59:	cvtsi2sd xmm2,QWORD PTR [rip+0x2434e]        # 2b0b0 <opt+0x10>
    6d62:	push   r13
    6d64:	mov    edx,DWORD PTR [rbx]
    6d66:	mov    r9,r14
    6d69:	lea    rsi,[rip+0x19aa8]        # 20818 <_IO_stdin_used+0x2818>
    6d70:	mov    eax,0x2
    6d75:	divsd  xmm0,xmm2
    6d79:	call   5200 <__printf_chk@plt>
    6d7e:	pop    rdi
    6d7f:	pop    r8
    6d81:	add    r15,0x8
    6d85:	add    rbx,0x38
    6d89:	cmp    rbp,r15
    6d8c:	je     6e50 <hvm_vmcall_summary+0x1f0>
    6d92:	mov    r10d,DWORD PTR [rbx]
    6d95:	test   r10d,r10d
    6d98:	je     6d81 <hvm_vmcall_summary+0x121>
    6d9a:	mov    r9d,DWORD PTR [rip+0x24337]        # 2b0d8 <opt+0x38>
    6da1:	test   r9d,r9d
    6da4:	jne    6c90 <hvm_vmcall_summary+0x30>
    6daa:	mov    rdx,QWORD PTR [r15]
    6dad:	lea    rsi,[rip+0x17308]        # 1e0bc <_IO_stdin_used+0xbc>
    6db4:	mov    edi,0x1
    6db9:	xor    eax,eax
    6dbb:	call   5200 <__printf_chk@plt>
    6dc0:	mov    eax,DWORD PTR [rbx+0x4]
    6dc3:	mov    rsi,QWORD PTR [rbx+0x10]
    6dc7:	xor    ecx,ecx
    6dc9:	test   eax,eax
    6dcb:	je     6ddb <hvm_vmcall_summary+0x17b>
    6dcd:	movsxd rcx,eax
    6dd0:	xor    edx,edx
    6dd2:	mov    rax,rsi
    6dd5:	div    rcx
    6dd8:	mov    rcx,rax
    6ddb:	lea    rdx,[rsi+rsi*4]
    6ddf:	pxor   xmm1,xmm1
    6de3:	pxor   xmm0,xmm0
    6de7:	cvtsi2sd xmm0,QWORD PTR [rip+0x283e0]        # 2f1d0 <P+0x30>
    6df0:	lea    rdx,[rdx+rdx*4]
    6df4:	shl    rdx,0x2
    6df8:	cvtsi2sd xmm1,rdx
    6dfd:	divsd  xmm1,xmm0
    6e01:	test   rsi,rsi
    6e04:	js     6fd0 <hvm_vmcall_summary+0x370>
    6e0a:	pxor   xmm0,xmm0
    6e0e:	cvtsi2sd xmm0,rsi
    6e13:	pxor   xmm2,xmm2
    6e17:	mov    edx,DWORD PTR [rbx]
    6e19:	mov    edi,0x1
    6e1e:	mov    eax,0x2
    6e23:	lea    rsi,[rip+0x19a26]        # 20850 <_IO_stdin_used+0x2850>
    6e2a:	add    r15,0x8
    6e2e:	add    rbx,0x38
    6e32:	cvtsi2sd xmm2,QWORD PTR [rip+0x24275]        # 2b0b0 <opt+0x10>
    6e3b:	divsd  xmm0,xmm2
    6e3f:	call   5200 <__printf_chk@plt>
    6e44:	cmp    rbp,r15
    6e47:	jne    6d92 <hvm_vmcall_summary+0x132>
    6e4d:	nop    DWORD PTR [rax]
    6e50:	mov    r14,QWORD PTR [rsp+0x8]
    6e55:	mov    esi,DWORD PTR [r14+0x121c8]
    6e5c:	test   esi,esi
    6e5e:	je     6f84 <hvm_vmcall_summary+0x324>
    6e64:	mov    ecx,DWORD PTR [rip+0x2426e]        # 2b0d8 <opt+0x38>
    6e6a:	test   ecx,ecx
    6e6c:	je     700d <hvm_vmcall_summary+0x3ad>
    6e72:	mov    r12d,DWORD PTR [r14+0x121cc]
    6e79:	cmp    DWORD PTR [r14+0x121d0],r12d
    6e80:	cmovle r12d,DWORD PTR [r14+0x121d0]
    6e88:	test   r12d,r12d
    6e8b:	je     70d9 <hvm_vmcall_summary+0x479>
    6e91:	mov    rdi,QWORD PTR [r14+0x121e0]
    6e98:	mov    esi,r12d
    6e9b:	mov    edx,0x32
    6ea0:	call   57f0 <percentile.part.6>
    6ea5:	mov    rdi,QWORD PTR [r14+0x121e0]
    6eac:	mov    esi,r12d
    6eaf:	mov    edx,0x5
    6eb4:	mov    rbp,rax
    6eb7:	call   57f0 <percentile.part.6>
    6ebc:	mov    rdi,QWORD PTR [r14+0x121e0]
    6ec3:	mov    esi,r12d
    6ec6:	mov    edx,0x5f
    6ecb:	mov    rbx,rax
    6ece:	call   57f0 <percentile.part.6>
    6ed3:	mov    r12,rax
    6ed6:	mov    edi,0x1
    6edb:	lea    rdx,[rip+0x184fa]        # 1f3dc <_IO_stdin_used+0x13dc>
    6ee2:	lea    rsi,[rip+0x171d3]        # 1e0bc <_IO_stdin_used+0xbc>
    6ee9:	xor    eax,eax
    6eeb:	call   5200 <__printf_chk@plt>
    6ef0:	mov    rdi,QWORD PTR [rsp+0x8]
    6ef5:	mov    eax,DWORD PTR [rdi+0x121cc]
    6efb:	test   eax,eax
    6efd:	jne    6fee <hvm_vmcall_summary+0x38e>
    6f03:	mov    rsi,QWORD PTR [rdi+0x121d8]
    6f0a:	xor    ecx,ecx
    6f0c:	lea    rdx,[rsi+rsi*4]
    6f10:	pxor   xmm1,xmm1
    6f14:	pxor   xmm0,xmm0
    6f18:	cvtsi2sd xmm0,QWORD PTR [rip+0x282af]        # 2f1d0 <P+0x30>
    6f21:	lea    rdx,[rdx+rdx*4]
    6f25:	shl    rdx,0x2
    6f29:	cvtsi2sd xmm1,rdx
    6f2e:	divsd  xmm1,xmm0
    6f32:	test   rsi,rsi
    6f35:	js     70bb <hvm_vmcall_summary+0x45b>
    6f3b:	pxor   xmm0,xmm0
    6f3f:	cvtsi2sd xmm0,rsi
    6f44:	pxor   xmm2,xmm2
    6f48:	mov    rax,QWORD PTR [rsp+0x8]
    6f4d:	sub    rsp,0x8
    6f51:	mov    r9,rbp
    6f54:	mov    r8,rbx
    6f57:	lea    rsi,[rip+0x198ba]        # 20818 <_IO_stdin_used+0x2818>
    6f5e:	mov    edi,0x1
    6f63:	cvtsi2sd xmm2,QWORD PTR [rip+0x24144]        # 2b0b0 <opt+0x10>
    6f6c:	mov    edx,DWORD PTR [rax+0x121c8]
    6f72:	push   r12
    6f74:	mov    eax,0x2
    6f79:	divsd  xmm0,xmm2
    6f7d:	call   5200 <__printf_chk@plt>
    6f82:	pop    rax
    6f83:	pop    rdx
    6f84:	add    rsp,0x18
    6f88:	pop    rbx
    6f89:	pop    rbp
    6f8a:	pop    r12
    6f8c:	pop    r13
    6f8e:	pop    r14
    6f90:	pop    r15
    6f92:	ret    
    6f93:	nop    DWORD PTR [rax+rax*1+0x0]
    6f98:	mov    rdx,rsi
    6f9b:	and    esi,0x1
    6f9e:	pxor   xmm0,xmm0
    6fa2:	shr    rdx,1
    6fa5:	or     rdx,rsi
    6fa8:	cvtsi2sd xmm0,rdx
    6fad:	addsd  xmm0,xmm0
    6fb1:	jmp    6d49 <hvm_vmcall_summary+0xe9>
    6fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6fc0:	xor    r13d,r13d
    6fc3:	xor    r12d,r12d
    6fc6:	xor    r14d,r14d
    6fc9:	jmp    6ce0 <hvm_vmcall_summary+0x80>
    6fce:	xchg   ax,ax
    6fd0:	mov    rax,rsi
    6fd3:	and    esi,0x1
    6fd6:	pxor   xmm0,xmm0
    6fda:	shr    rax,1
    6fdd:	or     rax,rsi
    6fe0:	cvtsi2sd xmm0,rax
    6fe5:	addsd  xmm0,xmm0
    6fe9:	jmp    6e13 <hvm_vmcall_summary+0x1b3>
    6fee:	mov    rdi,QWORD PTR [rsp+0x8]
    6ff3:	movsxd rcx,eax
    6ff6:	xor    edx,edx
    6ff8:	mov    rsi,QWORD PTR [rdi+0x121d8]
    6fff:	mov    rax,rsi
    7002:	div    rcx
    7005:	mov    rcx,rax
    7008:	jmp    6f0c <hvm_vmcall_summary+0x2ac>
    700d:	mov    edi,0x1
    7012:	lea    rdx,[rip+0x183c3]        # 1f3dc <_IO_stdin_used+0x13dc>
    7019:	lea    rsi,[rip+0x1709c]        # 1e0bc <_IO_stdin_used+0xbc>
    7020:	xor    eax,eax
    7022:	call   5200 <__printf_chk@plt>
    7027:	mov    rdi,QWORD PTR [rsp+0x8]
    702c:	mov    eax,DWORD PTR [rdi+0x121cc]
    7032:	test   eax,eax
    7034:	jne    70e5 <hvm_vmcall_summary+0x485>
    703a:	mov    rsi,QWORD PTR [rdi+0x121d8]
    7041:	xor    ecx,ecx
    7043:	lea    rdx,[rsi+rsi*4]
    7047:	pxor   xmm1,xmm1
    704b:	pxor   xmm0,xmm0
    704f:	cvtsi2sd xmm0,QWORD PTR [rip+0x28178]        # 2f1d0 <P+0x30>
    7058:	lea    rdx,[rdx+rdx*4]
    705c:	shl    rdx,0x2
    7060:	cvtsi2sd xmm1,rdx
    7065:	divsd  xmm1,xmm0
    7069:	test   rsi,rsi
    706c:	js     7104 <hvm_vmcall_summary+0x4a4>
    7072:	pxor   xmm0,xmm0
    7076:	cvtsi2sd xmm0,rsi
    707b:	pxor   xmm2,xmm2
    707f:	mov    rax,QWORD PTR [rsp+0x8]
    7084:	mov    edi,0x1
    7089:	lea    rsi,[rip+0x197c0]        # 20850 <_IO_stdin_used+0x2850>
    7090:	cvtsi2sd xmm2,QWORD PTR [rip+0x24017]        # 2b0b0 <opt+0x10>
    7099:	mov    edx,DWORD PTR [rax+0x121c8]
    709f:	add    rsp,0x18
    70a3:	mov    eax,0x2
    70a8:	pop    rbx
    70a9:	pop    rbp
    70aa:	pop    r12
    70ac:	pop    r13
    70ae:	pop    r14
    70b0:	pop    r15
    70b2:	divsd  xmm0,xmm2
    70b6:	jmp    5200 <__printf_chk@plt>
    70bb:	mov    rdx,rsi
    70be:	and    esi,0x1
    70c1:	pxor   xmm0,xmm0
    70c5:	shr    rdx,1
    70c8:	or     rdx,rsi
    70cb:	cvtsi2sd xmm0,rdx
    70d0:	addsd  xmm0,xmm0
    70d4:	jmp    6f44 <hvm_vmcall_summary+0x2e4>
    70d9:	xor    r12d,r12d
    70dc:	xor    ebx,ebx
    70de:	xor    ebp,ebp
    70e0:	jmp    6ed6 <hvm_vmcall_summary+0x276>
    70e5:	mov    rdi,QWORD PTR [rsp+0x8]
    70ea:	movsxd rcx,eax
    70ed:	xor    edx,edx
    70ef:	mov    rsi,QWORD PTR [rdi+0x121d8]
    70f6:	mov    rax,rsi
    70f9:	div    rcx
    70fc:	mov    rcx,rax
    70ff:	jmp    7043 <hvm_vmcall_summary+0x3e3>
    7104:	mov    rdx,rsi
    7107:	and    esi,0x1
    710a:	pxor   xmm0,xmm0
    710e:	shr    rdx,1
    7111:	or     rdx,rsi
    7114:	cvtsi2sd xmm0,rdx
    7119:	addsd  xmm0,xmm0
    711d:	jmp    707b <hvm_vmcall_summary+0x41b>
    7122:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    712d:	nop    DWORD PTR [rax]

0000000000007130 <hvm_generic_summary>:
    7130:	push   r15
    7132:	push   r14
    7134:	push   r13
    7136:	push   r12
    7138:	push   rbp
    7139:	push   rbx
    713a:	sub    rsp,0x8
    713e:	cmp    rsi,0x25
    7142:	jg     73fb <hvm_generic_summary+0x2cb>
    7148:	lea    rax,[rsi*8+0x0]
    7150:	mov    rbx,rsi
    7153:	mov    r12,rdi
    7156:	sub    rax,rsi
    7159:	lea    rbp,[rdi+rax*8]
    715d:	mov    esi,DWORD PTR [rbp+0x12200]
    7163:	test   esi,esi
    7165:	je     72af <hvm_generic_summary+0x17f>
    716b:	mov    ecx,DWORD PTR [rip+0x23f67]        # 2b0d8 <opt+0x38>
    7171:	test   ecx,ecx
    7173:	je     7300 <hvm_generic_summary+0x1d0>
    7179:	mov    r15d,DWORD PTR [rbp+0x12204]
    7180:	cmp    DWORD PTR [rbp+0x12208],r15d
    7187:	cmovle r15d,DWORD PTR [rbp+0x12208]
    718f:	test   r15d,r15d
    7192:	je     73d0 <hvm_generic_summary+0x2a0>
    7198:	mov    rdi,QWORD PTR [rbp+0x12218]
    719f:	mov    edx,0x32
    71a4:	mov    esi,r15d
    71a7:	call   57f0 <percentile.part.6>
    71ac:	mov    rdi,QWORD PTR [rbp+0x12218]
    71b3:	mov    edx,0x5
    71b8:	mov    esi,r15d
    71bb:	mov    r14,rax
    71be:	call   57f0 <percentile.part.6>
    71c3:	mov    rdi,QWORD PTR [rbp+0x12218]
    71ca:	mov    edx,0x5f
    71cf:	mov    esi,r15d
    71d2:	mov    r13,rax
    71d5:	call   57f0 <percentile.part.6>
    71da:	mov    rbp,rax
    71dd:	lea    rax,[rip+0x2467c]        # 2b860 <hvm_event_handler_name>
    71e4:	lea    rsi,[rip+0x16f04]        # 1e0ef <_IO_stdin_used+0xef>
    71eb:	mov    edi,0x1
    71f0:	mov    rdx,QWORD PTR [rax+rbx*8]
    71f4:	xor    eax,eax
    71f6:	call   5200 <__printf_chk@plt>
    71fb:	lea    rax,[rbx*8+0x0]
    7203:	xor    ecx,ecx
    7205:	sub    rax,rbx
    7208:	lea    rdx,[r12+rax*8]
    720c:	mov    eax,DWORD PTR [rdx+0x12204]
    7212:	mov    rsi,QWORD PTR [rdx+0x12210]
    7219:	test   eax,eax
    721b:	jne    72c0 <hvm_generic_summary+0x190>
    7221:	lea    rax,[rbx*8+0x0]
    7229:	pxor   xmm1,xmm1
    722d:	pxor   xmm0,xmm0
    7231:	cvtsi2sd xmm0,QWORD PTR [rip+0x27f96]        # 2f1d0 <P+0x30>
    723a:	sub    rax,rbx
    723d:	mov    rax,QWORD PTR [r12+rax*8+0x12210]
    7245:	lea    rax,[rax+rax*4]
    7249:	lea    rdx,[rax+rax*4]
    724d:	shl    rdx,0x2
    7251:	cvtsi2sd xmm1,rdx
    7256:	divsd  xmm1,xmm0
    725a:	test   rsi,rsi
    725d:	js     72d8 <hvm_generic_summary+0x1a8>
    725f:	pxor   xmm0,xmm0
    7263:	cvtsi2sd xmm0,rsi
    7268:	pxor   xmm2,xmm2
    726c:	sub    rsp,0x8
    7270:	mov    r9,r14
    7273:	mov    r8,r13
    7276:	cvtsi2sd xmm2,QWORD PTR [rip+0x23e31]        # 2b0b0 <opt+0x10>
    727f:	lea    rdx,[rbx*8+0x0]
    7287:	push   rbp
    7288:	mov    edi,0x1
    728d:	sub    rdx,rbx
    7290:	lea    rsi,[rip+0x19581]        # 20818 <_IO_stdin_used+0x2818>
    7297:	mov    eax,0x2
    729c:	mov    edx,DWORD PTR [r12+rdx*8+0x12200]
    72a4:	divsd  xmm0,xmm2
    72a8:	call   5200 <__printf_chk@plt>
    72ad:	pop    rax
    72ae:	pop    rdx
    72af:	add    rsp,0x8
    72b3:	pop    rbx
    72b4:	pop    rbp
    72b5:	pop    r12
    72b7:	pop    r13
    72b9:	pop    r14
    72bb:	pop    r15
    72bd:	ret    
    72be:	xchg   ax,ax
    72c0:	movsxd rcx,eax
    72c3:	xor    edx,edx
    72c5:	mov    rax,rsi
    72c8:	div    rcx
    72cb:	mov    rcx,rax
    72ce:	jmp    7221 <hvm_generic_summary+0xf1>
    72d3:	nop    DWORD PTR [rax+rax*1+0x0]
    72d8:	mov    rax,rsi
    72db:	and    esi,0x1
    72de:	pxor   xmm0,xmm0
    72e2:	shr    rax,1
    72e5:	or     rax,rsi
    72e8:	cvtsi2sd xmm0,rax
    72ed:	addsd  xmm0,xmm0
    72f1:	jmp    7268 <hvm_generic_summary+0x138>
    72f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7300:	lea    rax,[rip+0x24559]        # 2b860 <hvm_event_handler_name>
    7307:	lea    rsi,[rip+0x16de1]        # 1e0ef <_IO_stdin_used+0xef>
    730e:	mov    edi,0x1
    7313:	mov    rdx,QWORD PTR [rax+rbx*8]
    7317:	xor    eax,eax
    7319:	call   5200 <__printf_chk@plt>
    731e:	mov    eax,DWORD PTR [rbp+0x12204]
    7324:	mov    rsi,QWORD PTR [rbp+0x12210]
    732b:	xor    ecx,ecx
    732d:	test   eax,eax
    732f:	je     733f <hvm_generic_summary+0x20f>
    7331:	movsxd rcx,eax
    7334:	xor    edx,edx
    7336:	mov    rax,rsi
    7339:	div    rcx
    733c:	mov    rcx,rax
    733f:	lea    rdx,[rbx*8+0x0]
    7347:	pxor   xmm1,xmm1
    734b:	pxor   xmm0,xmm0
    734f:	cvtsi2sd xmm0,QWORD PTR [rip+0x27e78]        # 2f1d0 <P+0x30>
    7358:	sub    rdx,rbx
    735b:	mov    rdx,QWORD PTR [r12+rdx*8+0x12210]
    7363:	lea    rdx,[rdx+rdx*4]
    7367:	lea    rdx,[rdx+rdx*4]
    736b:	shl    rdx,0x2
    736f:	cvtsi2sd xmm1,rdx
    7374:	divsd  xmm1,xmm0
    7378:	test   rsi,rsi
    737b:	js     73e0 <hvm_generic_summary+0x2b0>
    737d:	pxor   xmm0,xmm0
    7381:	cvtsi2sd xmm0,rsi
    7386:	pxor   xmm2,xmm2
    738a:	mov    edi,0x1
    738f:	mov    eax,0x2
    7394:	cvtsi2sd xmm2,QWORD PTR [rip+0x23d13]        # 2b0b0 <opt+0x10>
    739d:	lea    rdx,[rbx*8+0x0]
    73a5:	sub    rdx,rbx
    73a8:	lea    rsi,[rip+0x194a1]        # 20850 <_IO_stdin_used+0x2850>
    73af:	mov    edx,DWORD PTR [r12+rdx*8+0x12200]
    73b7:	add    rsp,0x8
    73bb:	pop    rbx
    73bc:	pop    rbp
    73bd:	pop    r12
    73bf:	pop    r13
    73c1:	pop    r14
    73c3:	pop    r15
    73c5:	divsd  xmm0,xmm2
    73c9:	jmp    5200 <__printf_chk@plt>
    73ce:	xchg   ax,ax
    73d0:	xor    ebp,ebp
    73d2:	xor    r13d,r13d
    73d5:	xor    r14d,r14d
    73d8:	jmp    71dd <hvm_generic_summary+0xad>
    73dd:	nop    DWORD PTR [rax]
    73e0:	mov    rax,rsi
    73e3:	and    esi,0x1
    73e6:	pxor   xmm0,xmm0
    73ea:	shr    rax,1
    73ed:	or     rax,rsi
    73f0:	cvtsi2sd xmm0,rax
    73f5:	addsd  xmm0,xmm0
    73f9:	jmp    7386 <hvm_generic_summary+0x256>
    73fb:	lea    rcx,[rip+0x1d21e]        # 24620 <__PRETTY_FUNCTION__.6800>
    7402:	mov    edx,0x11f7
    7407:	lea    rsi,[rip+0x16cba]        # 1e0c8 <_IO_stdin_used+0xc8>
    740e:	lea    rdi,[rip+0x16cbe]        # 1e0d3 <_IO_stdin_used+0xd3>
    7415:	call   5110 <__assert_fail@plt>
    741a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007420 <hvm_vlapic_eoi_handler.part.12>:
    7420:	mov    rax,QWORD PTR [rdi+0x10]
    7424:	lea    rsi,[rip+0x1944d]        # 20878 <_IO_stdin_used+0x2878>
    742b:	mov    edi,0x1
    7430:	mov    rdx,QWORD PTR [rax+0x8]
    7434:	mov    ecx,DWORD PTR [rax]
    7436:	xor    eax,eax
    7438:	mov    edx,DWORD PTR [rdx+0x8]
    743b:	jmp    5200 <__printf_chk@plt>

0000000000007440 <hvm_io_address_summary.part.14>:
    7440:	push   r13
    7442:	push   r12
    7444:	push   rbp
    7445:	push   rbx
    7446:	mov    rbx,rdi
    7449:	mov    rdi,rsi
    744c:	sub    rsp,0x8
    7450:	call   5090 <puts@plt>
    7455:	test   rbx,rbx
    7458:	jne    7698 <hvm_io_address_summary.part.14+0x258>
    745e:	jmp    7870 <hvm_io_address_summary.part.14+0x430>
    7463:	nop    DWORD PTR [rax+rax*1+0x0]
    7468:	test   eax,eax
    746a:	je     7577 <hvm_io_address_summary.part.14+0x137>
    7470:	mov    r13d,DWORD PTR [rip+0x23c61]        # 2b0d8 <opt+0x38>
    7477:	test   r13d,r13d
    747a:	je     7880 <hvm_io_address_summary.part.14+0x440>
    7480:	mov    r13d,DWORD PTR [rbx+0x14]
    7484:	cmp    DWORD PTR [rbx+0x18],r13d
    7488:	cmovle r13d,DWORD PTR [rbx+0x18]
    748d:	test   r13d,r13d
    7490:	je     7b70 <hvm_io_address_summary.part.14+0x730>
    7496:	mov    rdi,QWORD PTR [rbx+0x28]
    749a:	mov    esi,r13d
    749d:	mov    edx,0x32
    74a2:	call   57f0 <percentile.part.6>
    74a7:	mov    rdi,QWORD PTR [rbx+0x28]
    74ab:	mov    esi,r13d
    74ae:	mov    edx,0x5
    74b3:	mov    r12,rax
    74b6:	call   57f0 <percentile.part.6>
    74bb:	mov    rdi,QWORD PTR [rbx+0x28]
    74bf:	mov    esi,r13d
    74c2:	mov    edx,0x5f
    74c7:	mov    rbp,rax
    74ca:	call   57f0 <percentile.part.6>
    74cf:	mov    ecx,DWORD PTR [rbx+0xc]
    74d2:	mov    r13,rax
    74d5:	mov    edx,DWORD PTR [rbx+0x8]
    74d8:	lea    rsi,[rip+0x16c17]        # 1e0f6 <_IO_stdin_used+0xf6>
    74df:	mov    edi,0x1
    74e4:	xor    eax,eax
    74e6:	call   5200 <__printf_chk@plt>
    74eb:	mov    eax,DWORD PTR [rbx+0x14]
    74ee:	mov    rsi,QWORD PTR [rbx+0x20]
    74f2:	xor    ecx,ecx
    74f4:	test   eax,eax
    74f6:	je     7506 <hvm_io_address_summary.part.14+0xc6>
    74f8:	movsxd rcx,eax
    74fb:	xor    edx,edx
    74fd:	mov    rax,rsi
    7500:	div    rcx
    7503:	mov    rcx,rax
    7506:	lea    rdx,[rsi+rsi*4]
    750a:	pxor   xmm1,xmm1
    750e:	pxor   xmm0,xmm0
    7512:	cvtsi2sd xmm0,QWORD PTR [rip+0x27cb5]        # 2f1d0 <P+0x30>
    751b:	lea    rdx,[rdx+rdx*4]
    751f:	shl    rdx,0x2
    7523:	cvtsi2sd xmm1,rdx
    7528:	divsd  xmm1,xmm0
    752c:	test   rsi,rsi
    752f:	js     7a70 <hvm_io_address_summary.part.14+0x630>
    7535:	pxor   xmm0,xmm0
    7539:	cvtsi2sd xmm0,rsi
    753e:	pxor   xmm2,xmm2
    7542:	sub    rsp,0x8
    7546:	mov    edx,DWORD PTR [rbx+0x10]
    7549:	mov    r9,r12
    754c:	push   r13
    754e:	mov    r8,rbp
    7551:	mov    edi,0x1
    7556:	mov    eax,0x2
    755b:	cvtsi2sd xmm2,QWORD PTR [rip+0x23b4c]        # 2b0b0 <opt+0x10>
    7564:	lea    rsi,[rip+0x192ad]        # 20818 <_IO_stdin_used+0x2818>
    756b:	divsd  xmm0,xmm2
    756f:	call   5200 <__printf_chk@plt>
    7574:	pop    rbp
    7575:	pop    r12
    7577:	mov    r11d,DWORD PTR [rbx+0x48]
    757b:	test   r11d,r11d
    757e:	je     768c <hvm_io_address_summary.part.14+0x24c>
    7584:	mov    r10d,DWORD PTR [rip+0x23b4d]        # 2b0d8 <opt+0x38>
    758b:	test   r10d,r10d
    758e:	je     79a0 <hvm_io_address_summary.part.14+0x560>
    7594:	mov    r13d,DWORD PTR [rbx+0x4c]
    7598:	cmp    DWORD PTR [rbx+0x50],r13d
    759c:	cmovle r13d,DWORD PTR [rbx+0x50]
    75a1:	test   r13d,r13d
    75a4:	je     7b60 <hvm_io_address_summary.part.14+0x720>
    75aa:	mov    rdi,QWORD PTR [rbx+0x60]
    75ae:	mov    esi,r13d
    75b1:	mov    edx,0x32
    75b6:	call   57f0 <percentile.part.6>
    75bb:	mov    rdi,QWORD PTR [rbx+0x60]
    75bf:	mov    esi,r13d
    75c2:	mov    edx,0x5
    75c7:	mov    r12,rax
    75ca:	call   57f0 <percentile.part.6>
    75cf:	mov    rdi,QWORD PTR [rbx+0x60]
    75d3:	mov    esi,r13d
    75d6:	mov    edx,0x5f
    75db:	mov    rbp,rax
    75de:	call   57f0 <percentile.part.6>
    75e3:	mov    r13,rax
    75e6:	mov    ecx,DWORD PTR [rbx+0xc]
    75e9:	mov    edx,DWORD PTR [rbx+0x8]
    75ec:	lea    rsi,[rip+0x16b10]        # 1e103 <_IO_stdin_used+0x103>
    75f3:	xor    eax,eax
    75f5:	mov    edi,0x1
    75fa:	call   5200 <__printf_chk@plt>
    75ff:	mov    eax,DWORD PTR [rbx+0x4c]
    7602:	mov    rsi,QWORD PTR [rbx+0x58]
    7606:	test   eax,eax
    7608:	je     7842 <hvm_io_address_summary.part.14+0x402>
    760e:	movsxd rcx,eax
    7611:	xor    edx,edx
    7613:	mov    rax,rsi
    7616:	div    rcx
    7619:	mov    rcx,rax
    761c:	lea    rdx,[rsi+rsi*4]
    7620:	pxor   xmm1,xmm1
    7624:	pxor   xmm0,xmm0
    7628:	cvtsi2sd xmm0,QWORD PTR [rip+0x27b9f]        # 2f1d0 <P+0x30>
    7631:	lea    rdx,[rdx+rdx*4]
    7635:	shl    rdx,0x2
    7639:	cvtsi2sd xmm1,rdx
    763e:	divsd  xmm1,xmm0
    7642:	test   rsi,rsi
    7645:	js     7850 <hvm_io_address_summary.part.14+0x410>
    764b:	pxor   xmm0,xmm0
    764f:	cvtsi2sd xmm0,rsi
    7654:	pxor   xmm2,xmm2
    7658:	sub    rsp,0x8
    765c:	mov    edx,DWORD PTR [rbx+0x48]
    765f:	mov    r9,r12
    7662:	push   r13
    7664:	mov    r8,rbp
    7667:	mov    edi,0x1
    766c:	mov    eax,0x2
    7671:	cvtsi2sd xmm2,QWORD PTR [rip+0x23a36]        # 2b0b0 <opt+0x10>
    767a:	lea    rsi,[rip+0x19197]        # 20818 <_IO_stdin_used+0x2818>
    7681:	divsd  xmm0,xmm2
    7685:	call   5200 <__printf_chk@plt>
    768a:	pop    rax
    768b:	pop    rdx
    768c:	mov    rbx,QWORD PTR [rbx]
    768f:	test   rbx,rbx
    7692:	je     7870 <hvm_io_address_summary.part.14+0x430>
    7698:	mov    ecx,DWORD PTR [rbx+0xc]
    769b:	mov    eax,DWORD PTR [rbx+0x10]
    769e:	test   ecx,ecx
    76a0:	jne    7468 <hvm_io_address_summary.part.14+0x28>
    76a6:	test   eax,eax
    76a8:	je     77b2 <hvm_io_address_summary.part.14+0x372>
    76ae:	mov    r9d,DWORD PTR [rip+0x23a23]        # 2b0d8 <opt+0x38>
    76b5:	test   r9d,r9d
    76b8:	je     7910 <hvm_io_address_summary.part.14+0x4d0>
    76be:	mov    r13d,DWORD PTR [rbx+0x14]
    76c2:	cmp    DWORD PTR [rbx+0x18],r13d
    76c6:	cmovle r13d,DWORD PTR [rbx+0x18]
    76cb:	test   r13d,r13d
    76ce:	je     7b50 <hvm_io_address_summary.part.14+0x710>
    76d4:	mov    rdi,QWORD PTR [rbx+0x28]
    76d8:	mov    esi,r13d
    76db:	mov    edx,0x32
    76e0:	call   57f0 <percentile.part.6>
    76e5:	mov    rdi,QWORD PTR [rbx+0x28]
    76e9:	mov    esi,r13d
    76ec:	mov    edx,0x5
    76f1:	mov    r12,rax
    76f4:	call   57f0 <percentile.part.6>
    76f9:	mov    rdi,QWORD PTR [rbx+0x28]
    76fd:	mov    esi,r13d
    7700:	mov    edx,0x5f
    7705:	mov    rbp,rax
    7708:	call   57f0 <percentile.part.6>
    770d:	mov    r13,rax
    7710:	mov    edx,DWORD PTR [rbx+0x8]
    7713:	lea    rsi,[rip+0x169e0]        # 1e0fa <_IO_stdin_used+0xfa>
    771a:	mov    edi,0x1
    771f:	xor    eax,eax
    7721:	call   5200 <__printf_chk@plt>
    7726:	mov    eax,DWORD PTR [rbx+0x14]
    7729:	mov    rsi,QWORD PTR [rbx+0x20]
    772d:	xor    ecx,ecx
    772f:	test   eax,eax
    7731:	je     7741 <hvm_io_address_summary.part.14+0x301>
    7733:	movsxd rcx,eax
    7736:	xor    edx,edx
    7738:	mov    rax,rsi
    773b:	div    rcx
    773e:	mov    rcx,rax
    7741:	lea    rdx,[rsi+rsi*4]
    7745:	pxor   xmm1,xmm1
    7749:	pxor   xmm0,xmm0
    774d:	cvtsi2sd xmm0,QWORD PTR [rip+0x27a7a]        # 2f1d0 <P+0x30>
    7756:	lea    rdx,[rdx+rdx*4]
    775a:	shl    rdx,0x2
    775e:	cvtsi2sd xmm1,rdx
    7763:	divsd  xmm1,xmm0
    7767:	test   rsi,rsi
    776a:	js     7a90 <hvm_io_address_summary.part.14+0x650>
    7770:	pxor   xmm0,xmm0
    7774:	cvtsi2sd xmm0,rsi
    7779:	pxor   xmm2,xmm2
    777d:	sub    rsp,0x8
    7781:	mov    edx,DWORD PTR [rbx+0x10]
    7784:	mov    r8,rbp
    7787:	push   r13
    7789:	mov    edi,0x1
    778e:	mov    r9,r12
    7791:	mov    eax,0x2
    7796:	cvtsi2sd xmm2,QWORD PTR [rip+0x23911]        # 2b0b0 <opt+0x10>
    779f:	lea    rsi,[rip+0x19072]        # 20818 <_IO_stdin_used+0x2818>
    77a6:	divsd  xmm0,xmm2
    77aa:	call   5200 <__printf_chk@plt>
    77af:	pop    rdi
    77b0:	pop    r8
    77b2:	mov    esi,DWORD PTR [rbx+0x48]
    77b5:	test   esi,esi
    77b7:	je     768c <hvm_io_address_summary.part.14+0x24c>
    77bd:	mov    ecx,DWORD PTR [rip+0x23915]        # 2b0d8 <opt+0x38>
    77c3:	test   ecx,ecx
    77c5:	je     7a38 <hvm_io_address_summary.part.14+0x5f8>
    77cb:	mov    r13d,DWORD PTR [rbx+0x4c]
    77cf:	cmp    DWORD PTR [rbx+0x50],r13d
    77d3:	cmovle r13d,DWORD PTR [rbx+0x50]
    77d8:	test   r13d,r13d
    77db:	je     7b40 <hvm_io_address_summary.part.14+0x700>
    77e1:	mov    rdi,QWORD PTR [rbx+0x60]
    77e5:	mov    esi,r13d
    77e8:	mov    edx,0x32
    77ed:	call   57f0 <percentile.part.6>
    77f2:	mov    rdi,QWORD PTR [rbx+0x60]
    77f6:	mov    esi,r13d
    77f9:	mov    edx,0x5
    77fe:	mov    r12,rax
    7801:	call   57f0 <percentile.part.6>
    7806:	mov    rdi,QWORD PTR [rbx+0x60]
    780a:	mov    esi,r13d
    780d:	mov    edx,0x5f
    7812:	mov    rbp,rax
    7815:	call   57f0 <percentile.part.6>
    781a:	mov    r13,rax
    781d:	mov    edx,DWORD PTR [rbx+0x8]
    7820:	lea    rsi,[rip+0x168e0]        # 1e107 <_IO_stdin_used+0x107>
    7827:	mov    edi,0x1
    782c:	xor    eax,eax
    782e:	call   5200 <__printf_chk@plt>
    7833:	mov    eax,DWORD PTR [rbx+0x4c]
    7836:	mov    rsi,QWORD PTR [rbx+0x58]
    783a:	test   eax,eax
    783c:	jne    760e <hvm_io_address_summary.part.14+0x1ce>
    7842:	xor    ecx,ecx
    7844:	jmp    761c <hvm_io_address_summary.part.14+0x1dc>
    7849:	nop    DWORD PTR [rax+0x0]
    7850:	mov    rax,rsi
    7853:	and    esi,0x1
    7856:	pxor   xmm0,xmm0
    785a:	shr    rax,1
    785d:	or     rax,rsi
    7860:	cvtsi2sd xmm0,rax
    7865:	addsd  xmm0,xmm0
    7869:	jmp    7654 <hvm_io_address_summary.part.14+0x214>
    786e:	xchg   ax,ax
    7870:	add    rsp,0x8
    7874:	pop    rbx
    7875:	pop    rbp
    7876:	pop    r12
    7878:	pop    r13
    787a:	ret    
    787b:	nop    DWORD PTR [rax+rax*1+0x0]
    7880:	mov    edx,DWORD PTR [rbx+0x8]
    7883:	lea    rsi,[rip+0x1686c]        # 1e0f6 <_IO_stdin_used+0xf6>
    788a:	mov    edi,0x1
    788f:	xor    eax,eax
    7891:	call   5200 <__printf_chk@plt>
    7896:	mov    eax,DWORD PTR [rbx+0x14]
    7899:	mov    rsi,QWORD PTR [rbx+0x20]
    789d:	xor    ecx,ecx
    789f:	test   eax,eax
    78a1:	jne    7ae8 <hvm_io_address_summary.part.14+0x6a8>
    78a7:	lea    rdx,[rsi+rsi*4]
    78ab:	pxor   xmm1,xmm1
    78af:	pxor   xmm0,xmm0
    78b3:	cvtsi2sd xmm0,QWORD PTR [rip+0x27914]        # 2f1d0 <P+0x30>
    78bc:	lea    rdx,[rdx+rdx*4]
    78c0:	shl    rdx,0x2
    78c4:	cvtsi2sd xmm1,rdx
    78c9:	divsd  xmm1,xmm0
    78cd:	test   rsi,rsi
    78d0:	js     7b20 <hvm_io_address_summary.part.14+0x6e0>
    78d6:	pxor   xmm0,xmm0
    78da:	cvtsi2sd xmm0,rsi
    78df:	pxor   xmm2,xmm2
    78e3:	mov    edx,DWORD PTR [rbx+0x10]
    78e6:	mov    edi,0x1
    78eb:	lea    rsi,[rip+0x18f5e]        # 20850 <_IO_stdin_used+0x2850>
    78f2:	cvtsi2sd xmm2,QWORD PTR [rip+0x237b5]        # 2b0b0 <opt+0x10>
    78fb:	mov    eax,0x2
    7900:	divsd  xmm0,xmm2
    7904:	call   5200 <__printf_chk@plt>
    7909:	jmp    7577 <hvm_io_address_summary.part.14+0x137>
    790e:	xchg   ax,ax
    7910:	mov    edx,DWORD PTR [rbx+0x8]
    7913:	lea    rsi,[rip+0x167e0]        # 1e0fa <_IO_stdin_used+0xfa>
    791a:	mov    edi,0x1
    791f:	xor    eax,eax
    7921:	call   5200 <__printf_chk@plt>
    7926:	mov    eax,DWORD PTR [rbx+0x14]
    7929:	mov    rsi,QWORD PTR [rbx+0x20]
    792d:	xor    ecx,ecx
    792f:	test   eax,eax
    7931:	jne    7ad0 <hvm_io_address_summary.part.14+0x690>
    7937:	lea    rdx,[rsi+rsi*4]
    793b:	pxor   xmm1,xmm1
    793f:	pxor   xmm0,xmm0
    7943:	cvtsi2sd xmm0,QWORD PTR [rip+0x27884]        # 2f1d0 <P+0x30>
    794c:	lea    rdx,[rdx+rdx*4]
    7950:	shl    rdx,0x2
    7954:	cvtsi2sd xmm1,rdx
    7959:	divsd  xmm1,xmm0
    795d:	test   rsi,rsi
    7960:	js     7b00 <hvm_io_address_summary.part.14+0x6c0>
    7966:	pxor   xmm0,xmm0
    796a:	cvtsi2sd xmm0,rsi
    796f:	pxor   xmm2,xmm2
    7973:	mov    edx,DWORD PTR [rbx+0x10]
    7976:	mov    edi,0x1
    797b:	lea    rsi,[rip+0x18ece]        # 20850 <_IO_stdin_used+0x2850>
    7982:	cvtsi2sd xmm2,QWORD PTR [rip+0x23725]        # 2b0b0 <opt+0x10>
    798b:	mov    eax,0x2
    7990:	divsd  xmm0,xmm2
    7994:	call   5200 <__printf_chk@plt>
    7999:	jmp    77b2 <hvm_io_address_summary.part.14+0x372>
    799e:	xchg   ax,ax
    79a0:	mov    ecx,DWORD PTR [rbx+0xc]
    79a3:	mov    edx,DWORD PTR [rbx+0x8]
    79a6:	lea    rsi,[rip+0x16756]        # 1e103 <_IO_stdin_used+0x103>
    79ad:	xor    eax,eax
    79af:	mov    edi,0x1
    79b4:	call   5200 <__printf_chk@plt>
    79b9:	mov    eax,DWORD PTR [rbx+0x4c]
    79bc:	mov    rsi,QWORD PTR [rbx+0x58]
    79c0:	test   eax,eax
    79c2:	jne    7a5d <hvm_io_address_summary.part.14+0x61d>
    79c8:	xor    ecx,ecx
    79ca:	lea    rdx,[rsi+rsi*4]
    79ce:	pxor   xmm1,xmm1
    79d2:	pxor   xmm0,xmm0
    79d6:	cvtsi2sd xmm0,QWORD PTR [rip+0x277f1]        # 2f1d0 <P+0x30>
    79df:	lea    rdx,[rdx+rdx*4]
    79e3:	shl    rdx,0x2
    79e7:	cvtsi2sd xmm1,rdx
    79ec:	divsd  xmm1,xmm0
    79f0:	test   rsi,rsi
    79f3:	js     7ab0 <hvm_io_address_summary.part.14+0x670>
    79f9:	pxor   xmm0,xmm0
    79fd:	cvtsi2sd xmm0,rsi
    7a02:	pxor   xmm2,xmm2
    7a06:	mov    edx,DWORD PTR [rbx+0x48]
    7a09:	mov    edi,0x1
    7a0e:	lea    rsi,[rip+0x18e3b]        # 20850 <_IO_stdin_used+0x2850>
    7a15:	cvtsi2sd xmm2,QWORD PTR [rip+0x23692]        # 2b0b0 <opt+0x10>
    7a1e:	mov    eax,0x2
    7a23:	divsd  xmm0,xmm2
    7a27:	call   5200 <__printf_chk@plt>
    7a2c:	jmp    768c <hvm_io_address_summary.part.14+0x24c>
    7a31:	nop    DWORD PTR [rax+0x0]
    7a38:	mov    edx,DWORD PTR [rbx+0x8]
    7a3b:	lea    rsi,[rip+0x166c5]        # 1e107 <_IO_stdin_used+0x107>
    7a42:	mov    edi,0x1
    7a47:	xor    eax,eax
    7a49:	call   5200 <__printf_chk@plt>
    7a4e:	mov    eax,DWORD PTR [rbx+0x4c]
    7a51:	mov    rsi,QWORD PTR [rbx+0x58]
    7a55:	test   eax,eax
    7a57:	je     79c8 <hvm_io_address_summary.part.14+0x588>
    7a5d:	movsxd rcx,eax
    7a60:	xor    edx,edx
    7a62:	mov    rax,rsi
    7a65:	div    rcx
    7a68:	mov    rcx,rax
    7a6b:	jmp    79ca <hvm_io_address_summary.part.14+0x58a>
    7a70:	mov    rax,rsi
    7a73:	and    esi,0x1
    7a76:	pxor   xmm0,xmm0
    7a7a:	shr    rax,1
    7a7d:	or     rax,rsi
    7a80:	cvtsi2sd xmm0,rax
    7a85:	addsd  xmm0,xmm0
    7a89:	jmp    753e <hvm_io_address_summary.part.14+0xfe>
    7a8e:	xchg   ax,ax
    7a90:	mov    rax,rsi
    7a93:	and    esi,0x1
    7a96:	pxor   xmm0,xmm0
    7a9a:	shr    rax,1
    7a9d:	or     rax,rsi
    7aa0:	cvtsi2sd xmm0,rax
    7aa5:	addsd  xmm0,xmm0
    7aa9:	jmp    7779 <hvm_io_address_summary.part.14+0x339>
    7aae:	xchg   ax,ax
    7ab0:	mov    rax,rsi
    7ab3:	and    esi,0x1
    7ab6:	pxor   xmm0,xmm0
    7aba:	shr    rax,1
    7abd:	or     rax,rsi
    7ac0:	cvtsi2sd xmm0,rax
    7ac5:	addsd  xmm0,xmm0
    7ac9:	jmp    7a02 <hvm_io_address_summary.part.14+0x5c2>
    7ace:	xchg   ax,ax
    7ad0:	movsxd rcx,eax
    7ad3:	xor    edx,edx
    7ad5:	mov    rax,rsi
    7ad8:	div    rcx
    7adb:	mov    rcx,rax
    7ade:	jmp    7937 <hvm_io_address_summary.part.14+0x4f7>
    7ae3:	nop    DWORD PTR [rax+rax*1+0x0]
    7ae8:	movsxd rcx,eax
    7aeb:	xor    edx,edx
    7aed:	mov    rax,rsi
    7af0:	div    rcx
    7af3:	mov    rcx,rax
    7af6:	jmp    78a7 <hvm_io_address_summary.part.14+0x467>
    7afb:	nop    DWORD PTR [rax+rax*1+0x0]
    7b00:	mov    rax,rsi
    7b03:	and    esi,0x1
    7b06:	pxor   xmm0,xmm0
    7b0a:	shr    rax,1
    7b0d:	or     rax,rsi
    7b10:	cvtsi2sd xmm0,rax
    7b15:	addsd  xmm0,xmm0
    7b19:	jmp    796f <hvm_io_address_summary.part.14+0x52f>
    7b1e:	xchg   ax,ax
    7b20:	mov    rax,rsi
    7b23:	and    esi,0x1
    7b26:	pxor   xmm0,xmm0
    7b2a:	shr    rax,1
    7b2d:	or     rax,rsi
    7b30:	cvtsi2sd xmm0,rax
    7b35:	addsd  xmm0,xmm0
    7b39:	jmp    78df <hvm_io_address_summary.part.14+0x49f>
    7b3e:	xchg   ax,ax
    7b40:	xor    r13d,r13d
    7b43:	xor    ebp,ebp
    7b45:	xor    r12d,r12d
    7b48:	jmp    781d <hvm_io_address_summary.part.14+0x3dd>
    7b4d:	nop    DWORD PTR [rax]
    7b50:	xor    r13d,r13d
    7b53:	xor    ebp,ebp
    7b55:	xor    r12d,r12d
    7b58:	jmp    7710 <hvm_io_address_summary.part.14+0x2d0>
    7b5d:	nop    DWORD PTR [rax]
    7b60:	xor    r13d,r13d
    7b63:	xor    ebp,ebp
    7b65:	xor    r12d,r12d
    7b68:	jmp    75e6 <hvm_io_address_summary.part.14+0x1a6>
    7b6d:	nop    DWORD PTR [rax]
    7b70:	xor    r13d,r13d
    7b73:	xor    ebp,ebp
    7b75:	xor    r12d,r12d
    7b78:	jmp    74d5 <hvm_io_address_summary.part.14+0x95>
    7b7d:	nop    DWORD PTR [rax]

0000000000007b80 <p2m_canonical_order.part.23>:
    7b80:	sub    rsp,0x8
    7b84:	mov    r8d,edi
    7b87:	mov    rdi,QWORD PTR [rip+0x5f6ca]        # 67258 <warn>
    7b8e:	xor    eax,eax
    7b90:	lea    rcx,[rip+0x1c7a9]        # 24340 <__func__.8022>
    7b97:	lea    rdx,[rip+0x18cfa]        # 20898 <_IO_stdin_used+0x2898>
    7b9e:	mov    esi,0x1
    7ba3:	call   5270 <__fprintf_chk@plt>
    7ba8:	mov    eax,0x4
    7bad:	add    rsp,0x8
    7bb1:	ret    
    7bb2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    7bbd:	nop    DWORD PTR [rax]

0000000000007bc0 <vcpu_set_data_type.part.43>:
    7bc0:	sub    rsp,0x8
    7bc4:	lea    rcx,[rip+0x1c745]        # 24310 <__PRETTY_FUNCTION__.8252>
    7bcb:	mov    edx,0x2220
    7bd0:	lea    rsi,[rip+0x164f1]        # 1e0c8 <_IO_stdin_used+0xc8>
    7bd7:	lea    rdi,[rip+0x16532]        # 1e110 <_IO_stdin_used+0x110>
    7bde:	call   5110 <__assert_fail@plt>
    7be3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    7bee:	xchg   ax,ax

0000000000007bf0 <hvm_msr_read_summary>:
    7bf0:	ret    
    7bf1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    7bfc:	nop    DWORD PTR [rax+0x0]

0000000000007c00 <init_hvm_data.part.25>:
    7c00:	push   rbp
    7c01:	push   rbx
    7c02:	mov    rbx,rdi
    7c05:	sub    rsp,0x8
    7c09:	mov    QWORD PTR [rdi+0x10],rsi
    7c0d:	mov    DWORD PTR [rdi],0x1
    7c13:	test   BYTE PTR [rip+0x23489],0x10        # 2b0a3 <opt+0x3>
    7c1a:	je     7c60 <init_hvm_data.part.25+0x60>
    7c1c:	lea    rax,[rip+0x2461d]        # 2c240 <hvm_svm_exit_reason_name>
    7c23:	mov    DWORD PTR [rdi+0x20],0x401
    7c2a:	mov    QWORD PTR [rdi+0x18],rax
    7c2e:	test   BYTE PTR [rip+0x2346c],0x10        # 2b0a1 <opt+0x1>
    7c35:	jne    7c7b <init_hvm_data.part.25+0x7b>
    7c37:	lea    rax,[rbx+0x12af8]
    7c3e:	lea    rdx,[rbx+0x27f00]
    7c45:	nop    DWORD PTR [rax]
    7c48:	mov    DWORD PTR [rax],0x0
    7c4e:	add    rax,0xf8
    7c54:	cmp    rax,rdx
    7c57:	jne    7c48 <init_hvm_data.part.25+0x48>
    7c59:	add    rsp,0x8
    7c5d:	pop    rbx
    7c5e:	pop    rbp
    7c5f:	ret    
    7c60:	lea    rax,[rip+0x265f9]        # 2e260 <hvm_vmx_exit_reason_name>
    7c67:	mov    DWORD PTR [rdi+0x20],0x38
    7c6e:	mov    QWORD PTR [rdi+0x18],rax
    7c72:	test   BYTE PTR [rip+0x23428],0x10        # 2b0a1 <opt+0x1>
    7c79:	je     7c37 <init_hvm_data.part.25+0x37>
    7c7b:	movabs rax,0x1000000000000
    7c85:	xor    edx,edx
    7c87:	mov    esi,0x1
    7c8c:	div    QWORD PTR [rip+0x23435]        # 2b0c8 <opt+0x28>
    7c93:	cdqe   
    7c95:	lea    rbp,[rax*4+0x0]
    7c9d:	mov    rdi,rbp
    7ca0:	call   5170 <calloc@plt>
    7ca5:	mov    QWORD PTR [rbx+0x10470],rax
    7cac:	test   rax,rax
    7caf:	jne    7c37 <init_hvm_data.part.25+0x37>
    7cb1:	mov    rdi,QWORD PTR [rip+0x26788]        # 2e440 <stderr@@GLIBC_2.2.5>
    7cb8:	xor    eax,eax
    7cba:	mov    rcx,rbp
    7cbd:	lea    rdx,[rip+0x18bfc]        # 208c0 <_IO_stdin_used+0x28c0>
    7cc4:	mov    esi,0x1
    7cc9:	call   5270 <__fprintf_chk@plt>
    7cce:	cmp    DWORD PTR [rip+0x2340b],0x7        # 2b0e0 <opt+0x40>
    7cd5:	ja     7c37 <init_hvm_data.part.25+0x37>
    7cdb:	mov    edi,0x1
    7ce0:	call   5250 <exit@plt>
    7ce5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000007cf0 <parse_symbol_file>:
    7cf0:	push   r13
    7cf2:	lea    rsi,[rip+0x1642c]        # 1e125 <_IO_stdin_used+0x125>
    7cf9:	push   r12
    7cfb:	push   rbp
    7cfc:	push   rbx
    7cfd:	mov    rbx,rdi
    7d00:	sub    rsp,0x8
    7d04:	call   5230 <fopen@plt>
    7d09:	mov    rbp,rax
    7d0c:	test   rax,rax
    7d0f:	je     7e92 <parse_symbol_file+0x1a2>
    7d15:	lea    rbx,[rip+0x23414]        # 2b130 <G+0x10>
    7d1c:	xor    r12d,r12d
    7d1f:	lea    r13,[rip+0x1665c]        # 1e382 <_IO_stdin_used+0x382>
    7d26:	jmp    7dc0 <parse_symbol_file+0xd0>
    7d2b:	nop    DWORD PTR [rax+rax*1+0x0]
    7d30:	movsxd rcx,DWORD PTR [rax]
    7d33:	mov    edi,0xdeadbeef
    7d38:	lea    rsi,[rip+0x163ee]        # 1e12d <_IO_stdin_used+0x12d>
    7d3f:	mov    rdx,rcx
    7d42:	shl    rdx,0x4
    7d46:	add    rdx,rcx
    7d49:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
    7d4e:	mov    rdx,QWORD PTR [rbx]
    7d51:	mov    rdi,rbp
    7d54:	movsxd rcx,DWORD PTR [rdx]
    7d57:	mov    rax,rcx
    7d5a:	shl    rax,0x4
    7d5e:	add    rax,rcx
    7d61:	shl    rax,0x3
    7d65:	lea    rcx,[rdx+rax*1+0x10]
    7d6a:	lea    rdx,[rdx+rax*1+0x8]
    7d6f:	xor    eax,eax
    7d71:	call   5080 <__isoc99_fscanf@plt>
    7d76:	test   eax,eax
    7d78:	je     7e50 <parse_symbol_file+0x160>
    7d7e:	mov    rsi,QWORD PTR [rbx]
    7d81:	movsxd rcx,DWORD PTR [rsi]
    7d84:	mov    rax,rcx
    7d87:	mov    rdx,rcx
    7d8a:	shl    rax,0x4
    7d8e:	add    rax,rcx
    7d91:	shl    rax,0x3
    7d95:	mov    rcx,QWORD PTR [rsi+rax*1+0x8]
    7d9a:	test   rcx,rcx
    7d9d:	je     7da4 <parse_symbol_file+0xb4>
    7d9f:	cmp    rcx,r12
    7da2:	jb     7e10 <parse_symbol_file+0x120>
    7da4:	add    edx,0x1
    7da7:	mov    r12,rcx
    7daa:	mov    DWORD PTR [rsi],edx
    7dac:	mov    rax,QWORD PTR [rbx]
    7daf:	lea    rdx,[rax+0x21f80]
    7db6:	cmp    DWORD PTR [rax],0x3ff
    7dbc:	cmove  rbx,rdx
    7dc0:	mov    rdi,rbp
    7dc3:	call   5180 <feof@plt>
    7dc8:	test   eax,eax
    7dca:	jne    7e50 <parse_symbol_file+0x160>
    7dd0:	mov    rax,QWORD PTR [rbx]
    7dd3:	test   rax,rax
    7dd6:	jne    7d30 <parse_symbol_file+0x40>
    7ddc:	mov    edi,0x21f88
    7de1:	call   51a0 <malloc@plt>
    7de6:	mov    QWORD PTR [rbx],rax
    7de9:	test   rax,rax
    7dec:	je     7e68 <parse_symbol_file+0x178>
    7dee:	mov    DWORD PTR [rax],0x0
    7df4:	mov    rax,QWORD PTR [rbx]
    7df7:	mov    QWORD PTR [rax+0x21f80],0x0
    7e02:	mov    rax,QWORD PTR [rbx]
    7e05:	jmp    7d30 <parse_symbol_file+0x40>
    7e0a:	nop    WORD PTR [rax+rax*1+0x0]
    7e10:	mov    rdi,QWORD PTR [rip+0x26629]        # 2e440 <stderr@@GLIBC_2.2.5>
    7e17:	lea    r8,[rsi+rax*1+0x10]
    7e1c:	xor    eax,eax
    7e1e:	mov    r9,r12
    7e21:	lea    rdx,[rip+0x18af8]        # 20920 <_IO_stdin_used+0x2920>
    7e28:	mov    esi,0x1
    7e2d:	call   5270 <__fprintf_chk@plt>
    7e32:	cmp    DWORD PTR [rip+0x232a7],0x6        # 2b0e0 <opt+0x40>
    7e39:	jbe    7ec8 <parse_symbol_file+0x1d8>
    7e3f:	mov    rsi,QWORD PTR [rbx]
    7e42:	mov    rcx,r12
    7e45:	mov    edx,DWORD PTR [rsi]
    7e47:	jmp    7da4 <parse_symbol_file+0xb4>
    7e4c:	nop    DWORD PTR [rax+0x0]
    7e50:	add    rsp,0x8
    7e54:	mov    rdi,rbp
    7e57:	pop    rbx
    7e58:	pop    rbp
    7e59:	pop    r12
    7e5b:	pop    r13
    7e5d:	jmp    50c0 <fclose@plt>
    7e62:	nop    WORD PTR [rax+rax*1+0x0]
    7e68:	mov    rcx,QWORD PTR [rip+0x265d1]        # 2e440 <stderr@@GLIBC_2.2.5>
    7e6f:	mov    edx,0xf
    7e74:	mov    esi,0x1
    7e79:	mov    rdi,r13
    7e7c:	call   5260 <fwrite@plt>
    7e81:	cmp    DWORD PTR [rip+0x23258],0x7        # 2b0e0 <opt+0x40>
    7e88:	jbe    7ec8 <parse_symbol_file+0x1d8>
    7e8a:	mov    rax,QWORD PTR [rbx]
    7e8d:	jmp    7dee <parse_symbol_file+0xfe>
    7e92:	mov    rdi,QWORD PTR [rip+0x265a7]        # 2e440 <stderr@@GLIBC_2.2.5>
    7e99:	mov    rcx,rbx
    7e9c:	mov    esi,0x1
    7ea1:	xor    eax,eax
    7ea3:	lea    rdx,[rip+0x18a56]        # 20900 <_IO_stdin_used+0x2900>
    7eaa:	call   5270 <__fprintf_chk@plt>
    7eaf:	lea    rdi,[rip+0x16272]        # 1e128 <_IO_stdin_used+0x128>
    7eb6:	call   5240 <perror@plt>
    7ebb:	cmp    DWORD PTR [rip+0x2321e],0x7        # 2b0e0 <opt+0x40>
    7ec2:	ja     7d15 <parse_symbol_file+0x25>
    7ec8:	mov    edi,0x1
    7ecd:	call   5250 <exit@plt>
    7ed2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    7edd:	nop    DWORD PTR [rax]

0000000000007ee0 <find_symbol>:
    7ee0:	mov    r8,QWORD PTR [rip+0x23249]        # 2b130 <G+0x10>
    7ee7:	test   r8,r8
    7eea:	je     7f90 <find_symbol+0xb0>
    7ef0:	sub    rsp,0x8
    7ef4:	mov    rcx,rdi
    7ef7:	lea    r9,[rip+0x1623a]        # 1e138 <_IO_stdin_used+0x138>
    7efe:	mov    esi,DWORD PTR [r8]
    7f01:	test   esi,esi
    7f03:	jle    7f45 <find_symbol+0x65>
    7f05:	mov    rdx,QWORD PTR [r8+0x8]
    7f09:	cmp    rdi,rdx
    7f0c:	jb     7f51 <find_symbol+0x71>
    7f0e:	sub    esi,0x1
    7f11:	lea    rax,[r8+0x10]
    7f15:	mov    rcx,rsi
    7f18:	shl    rcx,0x4
    7f1c:	add    rcx,rsi
    7f1f:	lea    rsi,[rax+rcx*8]
    7f23:	jmp    7f37 <find_symbol+0x57>
    7f25:	nop    DWORD PTR [rax]
    7f28:	add    rax,0x88
    7f2e:	mov    rdx,QWORD PTR [rax-0x8]
    7f32:	cmp    rdx,rdi
    7f35:	ja     7f51 <find_symbol+0x71>
    7f37:	mov    rcx,rdi
    7f3a:	mov    r9,rax
    7f3d:	sub    rcx,rdx
    7f40:	cmp    rax,rsi
    7f43:	jne    7f28 <find_symbol+0x48>
    7f45:	mov    r8,QWORD PTR [r8+0x21f80]
    7f4c:	test   r8,r8
    7f4f:	jne    7efe <find_symbol+0x1e>
    7f51:	sub    rsp,0x8
    7f55:	mov    edx,0x1
    7f5a:	mov    esi,0x90
    7f5f:	xor    eax,eax
    7f61:	push   rcx
    7f62:	lea    r8,[rip+0x161d4]        # 1e13d <_IO_stdin_used+0x13d>
    7f69:	mov    ecx,0x90
    7f6e:	lea    rdi,[rip+0x614ab]        # 69420 <name.4948>
    7f75:	call   5030 <__snprintf_chk@plt>
    7f7a:	lea    rax,[rip+0x6149f]        # 69420 <name.4948>
    7f81:	add    rsp,0x18
    7f85:	ret    
    7f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
    7f90:	mov    BYTE PTR [rip+0x61489],0x0        # 69420 <name.4948>
    7f97:	lea    rax,[rip+0x61482]        # 69420 <name.4948>
    7f9e:	ret    
    7f9f:	nop

0000000000007fa0 <init_hvm_data>:
    7fa0:	mov    eax,DWORD PTR [rdi]
    7fa2:	test   eax,eax
    7fa4:	jne    7fb0 <init_hvm_data+0x10>
    7fa6:	jmp    7c00 <init_hvm_data.part.25>
    7fab:	nop    DWORD PTR [rax+rax*1+0x0]
    7fb0:	ret    
    7fb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    7fbc:	nop    DWORD PTR [rax+0x0]

0000000000007fc0 <volume_clear>:
    7fc0:	mov    QWORD PTR [rdi],0x0
    7fc7:	mov    rcx,rdi
    7fca:	lea    rdi,[rdi+0x8]
    7fce:	xor    eax,eax
    7fd0:	mov    QWORD PTR [rdi+0x50],0x0
    7fd8:	and    rdi,0xfffffffffffffff8
    7fdc:	sub    rcx,rdi
    7fdf:	add    ecx,0x60
    7fe2:	shr    ecx,0x3
    7fe5:	rep stos QWORD PTR es:[rdi],rax
    7fe8:	ret    
    7fe9:	nop    DWORD PTR [rax+0x0]

0000000000007ff0 <volume_summary>:
    7ff0:	push   r15
    7ff2:	push   r14
    7ff4:	mov    r14,rdi
    7ff7:	push   r13
    7ff9:	lea    r13,[rip+0x232e0]        # 2b2e0 <toplevel_name>
    8000:	push   r12
    8002:	lea    r12,[rip+0x1613f]        # 1e148 <_IO_stdin_used+0x148>
    8009:	push   rbp
    800a:	lea    rbp,[rip+0x23817]        # 2b828 <hvm_vol_name+0x18>
    8011:	push   rbx
    8012:	xor    ebx,ebx
    8014:	sub    rsp,0x18
    8018:	jmp    802a <volume_summary+0x3a>
    801a:	nop    WORD PTR [rax+rax*1+0x0]
    8020:	cmp    r15d,0x7
    8024:	je     80a0 <volume_summary+0xb0>
    8026:	add    rbx,0x1
    802a:	mov    rcx,QWORD PTR [r14+rbx*8]
    802e:	mov    r15d,ebx
    8031:	test   rcx,rcx
    8034:	je     8020 <volume_summary+0x30>
    8036:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
    803b:	xor    eax,eax
    803d:	mov    rsi,r12
    8040:	mov    edi,0x1
    8045:	call   5200 <__printf_chk@plt>
    804a:	cmp    ebx,0x1
    804d:	je     80b0 <volume_summary+0xc0>
    804f:	cmp    ebx,0x3
    8052:	jne    8020 <volume_summary+0x30>
    8054:	lea    r9,[r14+0x48]
    8058:	mov    rcx,QWORD PTR [r9]
    805b:	lea    r15,[rip+0x237ae]        # 2b810 <hvm_vol_name>
    8062:	test   rcx,rcx
    8065:	jne    807c <volume_summary+0x8c>
    8067:	add    r15,0x8
    806b:	add    r9,0x8
    806f:	cmp    r15,rbp
    8072:	je     8026 <volume_summary+0x36>
    8074:	mov    rcx,QWORD PTR [r9]
    8077:	test   rcx,rcx
    807a:	je     8067 <volume_summary+0x77>
    807c:	mov    rdx,QWORD PTR [r15]
    807f:	mov    edi,0x1
    8084:	xor    eax,eax
    8086:	mov    QWORD PTR [rsp+0x8],r9
    808b:	lea    rsi,[rip+0x160d9]        # 1e16b <_IO_stdin_used+0x16b>
    8092:	call   5200 <__printf_chk@plt>
    8097:	mov    r9,QWORD PTR [rsp+0x8]
    809c:	jmp    8067 <volume_summary+0x77>
    809e:	xchg   ax,ax
    80a0:	add    rsp,0x18
    80a4:	pop    rbx
    80a5:	pop    rbp
    80a6:	pop    r12
    80a8:	pop    r13
    80aa:	pop    r14
    80ac:	pop    r15
    80ae:	ret    
    80af:	nop
    80b0:	mov    rdx,QWORD PTR [r14+0x40]
    80b4:	test   rdx,rdx
    80b7:	je     8026 <volume_summary+0x36>
    80bd:	lea    rsi,[rip+0x16093]        # 1e157 <_IO_stdin_used+0x157>
    80c4:	mov    edi,0x1
    80c9:	xor    eax,eax
    80cb:	call   5200 <__printf_chk@plt>
    80d0:	jmp    8026 <volume_summary+0x36>
    80d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000080e0 <cpumask_init>:
    80e0:	mov    DWORD PTR [rdi],0x0
    80e6:	ret    
    80e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000080f0 <cpumask_clear>:
    80f0:	mov    rax,0xfffffffffffffffe
    80f7:	mov    ecx,esi
    80f9:	rol    rax,cl
    80fc:	and    DWORD PTR [rdi],eax
    80fe:	ret    
    80ff:	nop

0000000000008100 <cpumask_set>:
    8100:	mov    eax,0x1
    8105:	mov    ecx,esi
    8107:	shl    rax,cl
    810a:	or     DWORD PTR [rdi],eax
    810c:	ret    
    810d:	nop    DWORD PTR [rax]

0000000000008110 <cpumask_isset>:
    8110:	mov    eax,DWORD PTR [rdi]
    8112:	mov    ecx,esi
    8114:	shr    rax,cl
    8117:	and    eax,0x1
    811a:	ret    
    811b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000008120 <cpumask_union>:
    8120:	mov    eax,DWORD PTR [rsi]
    8122:	or     DWORD PTR [rdi],eax
    8124:	ret    
    8125:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000008130 <cycles_to_time>:
    8130:	sub    rdi,QWORD PTR [rip+0x27089]        # 2f1c0 <P+0x20>
    8137:	xor    edx,edx
    8139:	movabs rcx,0x44b82fa09b5a53
    8143:	shl    rdi,0xa
    8147:	mov    rax,rdi
    814a:	div    QWORD PTR [rip+0x22f57]        # 2b0a8 <opt+0x8>
    8151:	mov    rdx,rax
    8154:	mov    rdi,rax
    8157:	mov    QWORD PTR [rsi],rax
    815a:	shr    rdx,0x9
    815e:	mov    rax,rdx
    8161:	mul    rcx
    8164:	shr    rdx,0xb
    8168:	mov    DWORD PTR [rsi+0x8],edx
    816b:	imul   edx,edx,0x3b9aca00
    8171:	sub    edi,edx
    8173:	mov    DWORD PTR [rsi+0xc],edi
    8176:	ret    
    8177:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008180 <abs_cycles_to_time>:
    8180:	mov    rax,QWORD PTR [rip+0x27039]        # 2f1c0 <P+0x20>
    8187:	cmp    rax,rdi
    818a:	jae    81d0 <abs_cycles_to_time+0x50>
    818c:	movabs rcx,0x44b82fa09b5a53
    8196:	sub    rdi,rax
    8199:	xor    edx,edx
    819b:	shl    rdi,0xa
    819f:	mov    rax,rdi
    81a2:	div    QWORD PTR [rip+0x22eff]        # 2b0a8 <opt+0x8>
    81a9:	mov    rdx,rax
    81ac:	mov    rdi,rax
    81af:	mov    QWORD PTR [rsi],rax
    81b2:	shr    rdx,0x9
    81b6:	mov    rax,rdx
    81b9:	mul    rcx
    81bc:	shr    rdx,0xb
    81c0:	mov    DWORD PTR [rsi+0x8],edx
    81c3:	imul   edx,edx,0x3b9aca00
    81c9:	sub    edi,edx
    81cb:	mov    DWORD PTR [rsi+0xc],edi
    81ce:	ret    
    81cf:	nop
    81d0:	mov    QWORD PTR [rsi],0x0
    81d7:	mov    QWORD PTR [rsi+0x8],0x0
    81df:	ret    

00000000000081e0 <abs_cycles_to_global>:
    81e0:	mov    rdx,QWORD PTR [rip+0x26fd9]        # 2f1c0 <P+0x20>
    81e7:	mov    rax,rdi
    81ea:	sub    rax,rdx
    81ed:	cmp    rdx,rdi
    81f0:	mov    edx,0x0
    81f5:	cmovae rax,rdx
    81f9:	ret    
    81fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000008200 <scatterplot_vs_time>:
    8200:	mov    rax,QWORD PTR [rip+0x26fb9]        # 2f1c0 <P+0x20>
    8207:	mov    r8,rsi
    820a:	cmp    rdi,rax
    820d:	jbe    8260 <scatterplot_vs_time+0x60>
    820f:	sub    rdi,rax
    8212:	xor    edx,edx
    8214:	mov    rcx,rdi
    8217:	shl    rcx,0xa
    821b:	mov    rax,rcx
    821e:	div    QWORD PTR [rip+0x22e83]        # 2b0a8 <opt+0x8>
    8225:	movabs rdx,0x44b82fa09b5a53
    822f:	mov    rcx,rax
    8232:	shr    rax,0x9
    8236:	mul    rdx
    8239:	mov    rax,rdx
    823c:	shr    rax,0xb
    8240:	mov    edx,eax
    8242:	imul   eax,eax,0x3b9aca00
    8248:	sub    ecx,eax
    824a:	lea    rsi,[rip+0x16267]        # 1e4b8 <_IO_stdin_used+0x4b8>
    8251:	mov    edi,0x1
    8256:	xor    eax,eax
    8258:	jmp    5200 <__printf_chk@plt>
    825d:	nop    DWORD PTR [rax]
    8260:	xor    ecx,ecx
    8262:	xor    edx,edx
    8264:	jmp    824a <scatterplot_vs_time+0x4a>
    8266:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000008270 <percentile>:
    8270:	test   esi,esi
    8272:	je     8280 <percentile+0x10>
    8274:	jmp    57f0 <percentile.part.6>
    8279:	nop    DWORD PTR [rax+0x0]
    8280:	xor    eax,eax
    8282:	ret    
    8283:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    828e:	xchg   ax,ax

0000000000008290 <weighted_percentile>:
    8290:	push   r15
    8292:	push   r14
    8294:	push   r13
    8296:	push   r12
    8298:	push   rbp
    8299:	mov    rbp,rdi
    829c:	push   rbx
    829d:	sub    rsp,0x28
    82a1:	test   edx,edx
    82a3:	jle    8480 <weighted_percentile+0x1f0>
    82a9:	mov    rdi,QWORD PTR [rsi]
    82ac:	test   rdi,rdi
    82af:	je     8495 <weighted_percentile+0x205>
    82b5:	sub    edx,0x1
    82b8:	lea    rax,[rsi+0x8]
    82bc:	xor    r8d,r8d
    82bf:	mov    r14,rdx
    82c2:	lea    rdx,[rax+rdx*8]
    82c6:	jmp    82e1 <weighted_percentile+0x51>
    82c8:	nop    DWORD PTR [rax+rax*1+0x0]
    82d0:	add    rax,0x8
    82d4:	mov    rdi,QWORD PTR [rax-0x8]
    82d8:	test   rdi,rdi
    82db:	je     8495 <weighted_percentile+0x205>
    82e1:	add    r8,rdi
    82e4:	cmp    rax,rdx
    82e7:	jne    82d0 <weighted_percentile+0x40>
    82e9:	movsxd rdx,ecx
    82ec:	movabs rcx,0x28f5c28f5c28f5c3
    82f6:	imul   rdx,r8
    82fa:	shr    rdx,0x2
    82fe:	mov    rax,rdx
    8301:	mul    rcx
    8304:	shr    rdx,0x2
    8308:	mov    QWORD PTR [rsp+0x8],rdx
    830d:	movsxd rdx,r14d
    8310:	sub    r8,QWORD PTR [rsi+rdx*8]
    8314:	mov    QWORD PTR [rsp],r8
    8318:	test   r14d,r14d
    831b:	jle    846c <weighted_percentile+0x1dc>
    8321:	mov    QWORD PTR [rsp+0x18],0x0
    832a:	xor    r15d,r15d
    832d:	mov    QWORD PTR [rsp+0x10],0x0
    8336:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8340:	lea    eax,[r14+r15*1]
    8344:	movss  xmm0,DWORD PTR [rbp+rdx*4+0x0]
    834a:	mov    r8d,r15d
    834d:	mov    edi,r14d
    8350:	sar    eax,1
    8352:	mov    rcx,QWORD PTR [rsp]
    8356:	mov    r12,QWORD PTR [rsp+0x18]
    835b:	cdqe   
    835d:	movss  xmm1,DWORD PTR [rbp+rax*4+0x0]
    8363:	mov    rax,QWORD PTR [rsp+0x10]
    8368:	lea    rbx,[rbp+rax*4+0x0]
    836d:	lea    r11,[rsi+rax*8]
    8371:	movsxd rax,r14d
    8374:	nop    DWORD PTR [rax+0x0]
    8378:	movss  xmm2,DWORD PTR [rbx]
    837c:	mov    r13d,r8d
    837f:	comiss xmm1,xmm2
    8382:	ja     8400 <weighted_percentile+0x170>
    8384:	comiss xmm0,xmm1
    8387:	jbe    8458 <weighted_percentile+0x1c8>
    838d:	lea    r9d,[rdi-0x1]
    8391:	lea    rdx,[rbp+rax*4-0x4]
    8396:	sub    r9d,edi
    8399:	nop    DWORD PTR [rax+0x0]
    83a0:	mov    r10,rdx
    83a3:	sub    rdx,0x4
    83a7:	movss  xmm0,DWORD PTR [rdx+0x4]
    83ac:	sub    rcx,QWORD PTR [rsi+rax*8]
    83b0:	lea    edi,[r9+rax*1]
    83b4:	sub    rax,0x1
    83b8:	comiss xmm0,xmm1
    83bb:	ja     83a0 <weighted_percentile+0x110>
    83bd:	cmp    r8d,edi
    83c0:	jle    8418 <weighted_percentile+0x188>
    83c2:	cmp    rcx,QWORD PTR [rsp+0x8]
    83c7:	jae    83d9 <weighted_percentile+0x149>
    83c9:	movsxd rax,r13d
    83cc:	mov    QWORD PTR [rsp+0x18],r12
    83d1:	mov    QWORD PTR [rsp+0x10],rax
    83d6:	mov    r15,rax
    83d9:	mov    rax,QWORD PTR [rsp+0x8]
    83de:	cmp    r12,rax
    83e1:	cmovbe rcx,QWORD PTR [rsp]
    83e6:	cmova  r14d,edi
    83ea:	mov    QWORD PTR [rsp],rcx
    83ee:	cmp    r14d,r15d
    83f1:	jle    8462 <weighted_percentile+0x1d2>
    83f3:	movsxd rdx,r14d
    83f6:	jmp    8340 <weighted_percentile+0xb0>
    83fb:	nop    DWORD PTR [rax+rax*1+0x0]
    8400:	add    r12,QWORD PTR [r11]
    8403:	add    r8d,0x1
    8407:	add    rbx,0x4
    840b:	add    r11,0x8
    840f:	jmp    8378 <weighted_percentile+0xe8>
    8414:	nop    DWORD PTR [rax+0x0]
    8418:	lea    rax,[rsi+rax*8]
    841c:	movss  DWORD PTR [rbx],xmm0
    8420:	add    r8d,0x1
    8424:	sub    edi,0x1
    8427:	movss  DWORD PTR [r10],xmm2
    842c:	mov    rdx,QWORD PTR [r11]
    842f:	mov    r9,QWORD PTR [rax]
    8432:	mov    r13d,r8d
    8435:	mov    QWORD PTR [r11],r9
    8438:	sub    rcx,rdx
    843b:	mov    QWORD PTR [rax],rdx
    843e:	add    r12,QWORD PTR [r11]
    8441:	cmp    r8d,edi
    8444:	jg     83c2 <weighted_percentile+0x132>
    844a:	movsxd rax,edi
    844d:	movss  xmm0,DWORD PTR [rbp+rax*4+0x0]
    8453:	jmp    8407 <weighted_percentile+0x177>
    8455:	nop    DWORD PTR [rax]
    8458:	lea    r10,[rbp+rax*4+0x0]
    845d:	jmp    83bd <weighted_percentile+0x12d>
    8462:	mov    rax,QWORD PTR [rsp+0x10]
    8467:	lea    rbp,[rbp+rax*4+0x0]
    846c:	movss  xmm0,DWORD PTR [rbp+0x0]
    8471:	add    rsp,0x28
    8475:	pop    rbx
    8476:	pop    rbp
    8477:	pop    r12
    8479:	pop    r13
    847b:	pop    r14
    847d:	pop    r15
    847f:	ret    
    8480:	mov    QWORD PTR [rsp+0x8],0x0
    8489:	xor    r8d,r8d
    848c:	lea    r14d,[rdx-0x1]
    8490:	jmp    830d <weighted_percentile+0x7d>
    8495:	lea    rcx,[rip+0x1c434]        # 248d0 <__PRETTY_FUNCTION__.5821>
    849c:	mov    edx,0x7fa
    84a1:	lea    rsi,[rip+0x15c20]        # 1e0c8 <_IO_stdin_used+0xc8>
    84a8:	lea    rdi,[rip+0x15ccd]        # 1e17c <_IO_stdin_used+0x17c>
    84af:	call   5110 <__assert_fail@plt>
    84b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    84bf:	nop

00000000000084c0 <self_weighted_percentile>:
    84c0:	push   r15
    84c2:	push   r14
    84c4:	push   r13
    84c6:	push   r12
    84c8:	push   rbp
    84c9:	push   rbx
    84ca:	mov    rbx,rdi
    84cd:	sub    rsp,0x28
    84d1:	mov    DWORD PTR [rsp+0x8],edx
    84d5:	test   esi,esi
    84d7:	jle    869c <self_weighted_percentile+0x1dc>
    84dd:	lea    eax,[rsi-0x1]
    84e0:	mov    r15,rdi
    84e3:	lea    r12,[rip+0x1c3c6]        # 248b0 <__func__.5854>
    84ea:	xor    r14d,r14d
    84ed:	mov    r13,rax
    84f0:	lea    rbp,[rdi+rax*8+0x8]
    84f5:	jmp    8515 <self_weighted_percentile+0x55>
    84f7:	nop    WORD PTR [rax+rax*1+0x0]
    8500:	test   r8,r8
    8503:	je     86b1 <self_weighted_percentile+0x1f1>
    8509:	add    r15,0x8
    850d:	add    r14,r8
    8510:	cmp    rbp,r15
    8513:	je     853f <self_weighted_percentile+0x7f>
    8515:	mov    r8,QWORD PTR [r15]
    8518:	test   r8,r8
    851b:	jns    8500 <self_weighted_percentile+0x40>
    851d:	mov    rdi,QWORD PTR [rip+0x5ed34]        # 67258 <warn>
    8524:	mov    rcx,r12
    8527:	mov    esi,0x1
    852c:	xor    eax,eax
    852e:	lea    rdx,[rip+0x18423]        # 20958 <_IO_stdin_used+0x2958>
    8535:	call   5270 <__fprintf_chk@plt>
    853a:	mov    r8,QWORD PTR [r15]
    853d:	jmp    8500 <self_weighted_percentile+0x40>
    853f:	movabs rdx,0xa3d70a3d70a3d70b
    8549:	movsxd rcx,DWORD PTR [rsp+0x8]
    854e:	imul   rcx,r14
    8552:	mov    rax,rcx
    8555:	imul   rdx
    8558:	lea    rax,[rdx+rcx*1]
    855c:	sar    rcx,0x3f
    8560:	sar    rax,0x6
    8564:	sub    rax,rcx
    8567:	mov    QWORD PTR [rsp+0x8],rax
    856c:	movsxd rax,r13d
    856f:	mov    rdx,QWORD PTR [rbx+rax*8]
    8573:	sub    r14,rdx
    8576:	test   r13d,r13d
    8579:	jle    868a <self_weighted_percentile+0x1ca>
    857f:	mov    QWORD PTR [rsp+0x18],0x0
    8588:	xor    r15d,r15d
    858b:	mov    QWORD PTR [rsp+0x10],0x0
    8594:	nop    DWORD PTR [rax+0x0]
    8598:	lea    eax,[r15+r13*1]
    859c:	mov    rbp,QWORD PTR [rsp+0x18]
    85a1:	mov    edi,r15d
    85a4:	mov    rsi,r14
    85a7:	sar    eax,1
    85a9:	mov    ecx,r13d
    85ac:	cdqe   
    85ae:	mov    r8,QWORD PTR [rbx+rax*8]
    85b2:	mov    rax,QWORD PTR [rsp+0x10]
    85b7:	lea    r10,[rbx+rax*8]
    85bb:	movsxd rax,r13d
    85be:	xchg   ax,ax
    85c0:	mov    r11,QWORD PTR [r10]
    85c3:	mov    r12d,edi
    85c6:	cmp    r11,r8
    85c9:	jl     8638 <self_weighted_percentile+0x178>
    85cb:	cmp    r8,rdx
    85ce:	jge    8678 <self_weighted_percentile+0x1b8>
    85d4:	lea    rax,[rbx+rax*8-0x8]
    85d9:	nop    DWORD PTR [rax+0x0]
    85e0:	mov    r9,rax
    85e3:	sub    rax,0x8
    85e7:	sub    rsi,rdx
    85ea:	sub    ecx,0x1
    85ed:	mov    rdx,QWORD PTR [rax+0x8]
    85f1:	cmp    rdx,r8
    85f4:	jg     85e0 <self_weighted_percentile+0x120>
    85f6:	cmp    edi,ecx
    85f8:	jle    8650 <self_weighted_percentile+0x190>
    85fa:	cmp    rsi,QWORD PTR [rsp+0x8]
    85ff:	jge    8611 <self_weighted_percentile+0x151>
    8601:	movsxd rax,r12d
    8604:	mov    QWORD PTR [rsp+0x18],rbp
    8609:	mov    QWORD PTR [rsp+0x10],rax
    860e:	mov    r15,rax
    8611:	mov    rax,QWORD PTR [rsp+0x8]
    8616:	cmp    rbp,rax
    8619:	cmovg  r13d,ecx
    861d:	cmovg  r14,rsi
    8621:	cmp    r13d,r15d
    8624:	jle    8681 <self_weighted_percentile+0x1c1>
    8626:	movsxd rax,r13d
    8629:	mov    rdx,QWORD PTR [rbx+rax*8]
    862d:	jmp    8598 <self_weighted_percentile+0xd8>
    8632:	nop    WORD PTR [rax+rax*1+0x0]
    8638:	add    rbp,r11
    863b:	add    edi,0x1
    863e:	add    r10,0x8
    8642:	jmp    85c0 <self_weighted_percentile+0x100>
    8647:	nop    WORD PTR [rax+rax*1+0x0]
    8650:	add    edi,0x1
    8653:	sub    ecx,0x1
    8656:	mov    QWORD PTR [r10],rdx
    8659:	sub    rsi,r11
    865c:	mov    QWORD PTR [r9],r11
    865f:	mov    r12d,edi
    8662:	add    rbp,QWORD PTR [r10]
    8665:	cmp    ecx,edi
    8667:	jl     85fa <self_weighted_percentile+0x13a>
    8669:	movsxd rax,ecx
    866c:	mov    rdx,QWORD PTR [rbx+rax*8]
    8670:	jmp    863e <self_weighted_percentile+0x17e>
    8672:	nop    WORD PTR [rax+rax*1+0x0]
    8678:	lea    r9,[rbx+rax*8]
    867c:	jmp    85f6 <self_weighted_percentile+0x136>
    8681:	mov    rax,QWORD PTR [rsp+0x10]
    8686:	lea    rbx,[rbx+rax*8]
    868a:	mov    rax,QWORD PTR [rbx]
    868d:	add    rsp,0x28
    8691:	pop    rbx
    8692:	pop    rbp
    8693:	pop    r12
    8695:	pop    r13
    8697:	pop    r14
    8699:	pop    r15
    869b:	ret    
    869c:	mov    QWORD PTR [rsp+0x8],0x0
    86a5:	xor    r14d,r14d
    86a8:	lea    r13d,[rsi-0x1]
    86ac:	jmp    856c <self_weighted_percentile+0xac>
    86b1:	lea    rcx,[rip+0x1c1d8]        # 24890 <__PRETTY_FUNCTION__.5855>
    86b8:	mov    edx,0x851
    86bd:	lea    rsi,[rip+0x15a04]        # 1e0c8 <_IO_stdin_used+0xc8>
    86c4:	lea    rdi,[rip+0x15ab9]        # 1e184 <_IO_stdin_used+0x184>
    86cb:	call   5110 <__assert_fail@plt>

00000000000086d0 <hvm_summary.part.19>:
    86d0:	push   r15
    86d2:	push   r14
    86d4:	push   r13
    86d6:	mov    r13,rdi
    86d9:	lea    rdi,[rip+0x15aac]        # 1e18c <_IO_stdin_used+0x18c>
    86e0:	push   r12
    86e2:	lea    r12,[r13+0x2030]
    86e9:	push   rbp
    86ea:	xor    ebp,ebp
    86ec:	push   rbx
    86ed:	sub    rsp,0x88
    86f4:	mov    rax,QWORD PTR fs:0x28
    86fd:	mov    QWORD PTR [rsp+0x78],rax
    8702:	xor    eax,eax
    8704:	call   5090 <puts@plt>
    8709:	mov    r15d,DWORD PTR [r13+0x20]
    870d:	test   r15d,r15d
    8710:	jle    8894 <hvm_summary.part.19+0x1c4>
    8716:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8720:	mov    rax,QWORD PTR [r13+0x18]
    8724:	mov    r9d,ebp
    8727:	lea    r8,[rbp*8+0x0]
    872f:	mov    ecx,DWORD PTR [r12]
    8733:	mov    rdx,QWORD PTR [rax+rbp*8]
    8737:	test   rdx,rdx
    873a:	je     8a90 <hvm_summary.part.19+0x3c0>
    8740:	test   ecx,ecx
    8742:	je     8866 <hvm_summary.part.19+0x196>
    8748:	mov    r14d,DWORD PTR [rip+0x22989]        # 2b0d8 <opt+0x38>
    874f:	test   r14d,r14d
    8752:	je     8d2d <hvm_summary.part.19+0x65d>
    8758:	mov    r15d,DWORD PTR [r12+0x4]
    875d:	cmp    DWORD PTR [r12+0x8],r15d
    8762:	cmovle r15d,DWORD PTR [r12+0x8]
    8768:	test   r15d,r15d
    876b:	je     8df6 <hvm_summary.part.19+0x726>
    8771:	mov    rdi,QWORD PTR [r12+0x18]
    8776:	mov    esi,r15d
    8779:	mov    edx,0x32
    877e:	mov    QWORD PTR [rsp],r8
    8782:	call   57f0 <percentile.part.6>
    8787:	mov    rdi,QWORD PTR [r12+0x18]
    878c:	mov    esi,r15d
    878f:	mov    edx,0x5
    8794:	mov    r14,rax
    8797:	call   57f0 <percentile.part.6>
    879c:	mov    rdi,QWORD PTR [r12+0x18]
    87a1:	mov    esi,r15d
    87a4:	mov    edx,0x5f
    87a9:	mov    rbx,rax
    87ac:	call   57f0 <percentile.part.6>
    87b1:	mov    r8,QWORD PTR [rsp]
    87b5:	mov    r15,rax
    87b8:	mov    rax,QWORD PTR [r13+0x18]
    87bc:	mov    rdx,QWORD PTR [rax+r8*1]
    87c0:	lea    rsi,[rip+0x159eb]        # 1e1b2 <_IO_stdin_used+0x1b2>
    87c7:	mov    edi,0x1
    87cc:	xor    eax,eax
    87ce:	call   5200 <__printf_chk@plt>
    87d3:	mov    eax,DWORD PTR [r12+0x4]
    87d8:	mov    rsi,QWORD PTR [r12+0x10]
    87dd:	test   eax,eax
    87df:	je     8b2d <hvm_summary.part.19+0x45d>
    87e5:	movsxd rcx,eax
    87e8:	xor    edx,edx
    87ea:	mov    rax,rsi
    87ed:	div    rcx
    87f0:	mov    rcx,rax
    87f3:	lea    rdx,[rsi+rsi*4]
    87f7:	pxor   xmm1,xmm1
    87fb:	pxor   xmm0,xmm0
    87ff:	cvtsi2sd xmm0,QWORD PTR [rip+0x269c8]        # 2f1d0 <P+0x30>
    8808:	lea    rdx,[rdx+rdx*4]
    880c:	shl    rdx,0x2
    8810:	cvtsi2sd xmm1,rdx
    8815:	divsd  xmm1,xmm0
    8819:	test   rsi,rsi
    881c:	js     8b38 <hvm_summary.part.19+0x468>
    8822:	pxor   xmm0,xmm0
    8826:	cvtsi2sd xmm0,rsi
    882b:	pxor   xmm2,xmm2
    882f:	sub    rsp,0x8
    8833:	mov    r9,r14
    8836:	mov    r8,rbx
    8839:	cvtsi2sd xmm2,QWORD PTR [rip+0x2286e]        # 2b0b0 <opt+0x10>
    8842:	push   r15
    8844:	mov    edx,DWORD PTR [r12]
    8848:	lea    rsi,[rip+0x17fc9]        # 20818 <_IO_stdin_used+0x2818>
    884f:	mov    edi,0x1
    8854:	mov    eax,0x2
    8859:	divsd  xmm0,xmm2
    885d:	call   5200 <__printf_chk@plt>
    8862:	pop    r10
    8864:	pop    r11
    8866:	mov    rbx,QWORD PTR [r13+rbp*8+0x28]
    886b:	test   rbx,rbx
    886e:	je     8882 <hvm_summary.part.19+0x1b2>
    8870:	mov    rsi,QWORD PTR [rbx+0x8]
    8874:	mov    rdi,r13
    8877:	call   QWORD PTR [rbx]
    8879:	mov    rbx,QWORD PTR [rbx+0x10]
    887d:	test   rbx,rbx
    8880:	jne    8870 <hvm_summary.part.19+0x1a0>
    8882:	add    rbp,0x1
    8886:	add    r12,0x38
    888a:	cmp    DWORD PTR [r13+0x20],ebp
    888e:	jg     8720 <hvm_summary.part.19+0x50>
    8894:	lea    rdi,[rip+0x158ff]        # 1e19a <_IO_stdin_used+0x19a>
    889b:	lea    rbp,[r13+0x12af8]
    88a2:	xor    ebx,ebx
    88a4:	call   5090 <puts@plt>
    88a9:	lea    r14,[rsp+0x20]
    88ae:	mov    QWORD PTR [rsp+0x18],r13
    88b3:	jmp    88ce <hvm_summary.part.19+0x1fe>
    88b5:	nop    DWORD PTR [rax]
    88b8:	add    ebx,0x1
    88bb:	add    rbp,0xf8
    88c2:	cmp    ebx,0x15e
    88c8:	je     8b56 <hvm_summary.part.19+0x486>
    88ce:	mov    ecx,DWORD PTR [rbp+0x0]
    88d1:	test   ecx,ecx
    88d3:	je     88b8 <hvm_summary.part.19+0x1e8>
    88d5:	mov    edx,ebx
    88d7:	lea    rsi,[rip+0x158e3]        # 1e1c1 <_IO_stdin_used+0x1c1>
    88de:	mov    edi,0x1
    88e3:	xor    eax,eax
    88e5:	call   5200 <__printf_chk@plt>
    88ea:	mov    DWORD PTR [rsp+0x14],ebx
    88ee:	lea    r13,[rip+0x22f4b]        # 2b840 <guest_interrupt_case_name>
    88f5:	lea    r12,[rbp+0x44]
    88f9:	mov    r9,QWORD PTR [r13+0x8]
    88fd:	mov    ecx,0x50
    8902:	mov    edx,0x1
    8907:	xor    eax,eax
    8909:	lea    r8,[rip+0x158bd]        # 1e1cd <_IO_stdin_used+0x1cd>
    8910:	mov    esi,0x50
    8915:	mov    rdi,r14
    8918:	call   5030 <__snprintf_chk@plt>
    891d:	mov    ecx,DWORD PTR [r12]
    8921:	test   ecx,ecx
    8923:	je     89ee <hvm_summary.part.19+0x31e>
    8929:	mov    rsi,QWORD PTR [r12+0xc]
    892e:	movsxd rdi,ecx
    8931:	xor    edx,edx
    8933:	mov    r9d,DWORD PTR [rip+0x2279e]        # 2b0d8 <opt+0x38>
    893a:	mov    rax,rsi
    893d:	div    rdi
    8940:	mov    r8,rax
    8943:	test   r9d,r9d
    8946:	je     8a10 <hvm_summary.part.19+0x340>
    894c:	cmp    DWORD PTR [r12+0x4],ecx
    8951:	cmovle ecx,DWORD PTR [r12+0x4]
    8957:	mov    edx,0x32
    895c:	mov    QWORD PTR [rsp+0x8],rax
    8961:	mov    rdi,QWORD PTR [r12+0x14]
    8966:	mov    esi,ecx
    8968:	mov    r15d,ecx
    896b:	call   84c0 <self_weighted_percentile>
    8970:	mov    rdi,QWORD PTR [r12+0x14]
    8975:	mov    edx,0x5
    897a:	mov    esi,r15d
    897d:	mov    rbx,rax
    8980:	call   84c0 <self_weighted_percentile>
    8985:	mov    rdi,QWORD PTR [r12+0x14]
    898a:	mov    edx,0x5f
    898f:	mov    esi,r15d
    8992:	mov    QWORD PTR [rsp],rax
    8996:	call   84c0 <self_weighted_percentile>
    899b:	mov    rdx,QWORD PTR [r12+0xc]
    89a0:	mov    r9,QWORD PTR [rsp]
    89a4:	mov    r8,QWORD PTR [rsp+0x8]
    89a9:	test   rdx,rdx
    89ac:	js     8a50 <hvm_summary.part.19+0x380>
    89b2:	pxor   xmm0,xmm0
    89b6:	cvtsi2sd xmm0,rdx
    89bb:	pxor   xmm1,xmm1
    89bf:	push   rax
    89c0:	mov    edi,0x1
    89c5:	mov    rdx,r14
    89c8:	cvtsi2sd xmm1,QWORD PTR [rip+0x226df]        # 2b0b0 <opt+0x10>
    89d1:	push   rbx
    89d2:	mov    ecx,DWORD PTR [r12]
    89d6:	lea    rsi,[rip+0x17f9b]        # 20978 <_IO_stdin_used+0x2978>
    89dd:	mov    eax,0x1
    89e2:	divsd  xmm0,xmm1
    89e6:	call   5200 <__printf_chk@plt>
    89eb:	pop    rdi
    89ec:	pop    r8
    89ee:	add    r13,0x8
    89f2:	lea    rax,[rip+0x22e5f]        # 2b858 <guest_interrupt_case_name+0x18>
    89f9:	add    r12,0x38
    89fd:	cmp    rax,r13
    8a00:	jne    88f9 <hvm_summary.part.19+0x229>
    8a06:	mov    ebx,DWORD PTR [rsp+0x14]
    8a0a:	jmp    88b8 <hvm_summary.part.19+0x1e8>
    8a0f:	nop
    8a10:	test   rsi,rsi
    8a13:	js     8a70 <hvm_summary.part.19+0x3a0>
    8a15:	pxor   xmm0,xmm0
    8a19:	cvtsi2sd xmm0,rsi
    8a1e:	pxor   xmm1,xmm1
    8a22:	mov    rdx,r14
    8a25:	mov    edi,0x1
    8a2a:	mov    eax,0x1
    8a2f:	cvtsi2sd xmm1,QWORD PTR [rip+0x22678]        # 2b0b0 <opt+0x10>
    8a38:	lea    rsi,[rip+0x15796]        # 1e1d5 <_IO_stdin_used+0x1d5>
    8a3f:	divsd  xmm0,xmm1
    8a43:	call   5200 <__printf_chk@plt>
    8a48:	jmp    89ee <hvm_summary.part.19+0x31e>
    8a4a:	nop    WORD PTR [rax+rax*1+0x0]
    8a50:	mov    rsi,rdx
    8a53:	and    edx,0x1
    8a56:	pxor   xmm0,xmm0
    8a5a:	shr    rsi,1
    8a5d:	or     rsi,rdx
    8a60:	cvtsi2sd xmm0,rsi
    8a65:	addsd  xmm0,xmm0
    8a69:	jmp    89bb <hvm_summary.part.19+0x2eb>
    8a6e:	xchg   ax,ax
    8a70:	mov    rax,rsi
    8a73:	and    esi,0x1
    8a76:	pxor   xmm0,xmm0
    8a7a:	shr    rax,1
    8a7d:	or     rax,rsi
    8a80:	cvtsi2sd xmm0,rax
    8a85:	addsd  xmm0,xmm0
    8a89:	jmp    8a1e <hvm_summary.part.19+0x34e>
    8a8b:	nop    DWORD PTR [rax+rax*1+0x0]
    8a90:	test   ecx,ecx
    8a92:	je     8866 <hvm_summary.part.19+0x196>
    8a98:	mov    ebx,DWORD PTR [rip+0x2263a]        # 2b0d8 <opt+0x38>
    8a9e:	test   ebx,ebx
    8aa0:	je     8dbc <hvm_summary.part.19+0x6ec>
    8aa6:	mov    r15d,DWORD PTR [r12+0x4]
    8aab:	cmp    DWORD PTR [r12+0x8],r15d
    8ab0:	cmovle r15d,DWORD PTR [r12+0x8]
    8ab6:	test   r15d,r15d
    8ab9:	je     8ec3 <hvm_summary.part.19+0x7f3>
    8abf:	mov    rdi,QWORD PTR [r12+0x18]
    8ac4:	mov    esi,r15d
    8ac7:	mov    edx,0x32
    8acc:	mov    DWORD PTR [rsp],ebp
    8acf:	call   57f0 <percentile.part.6>
    8ad4:	mov    rdi,QWORD PTR [r12+0x18]
    8ad9:	mov    esi,r15d
    8adc:	mov    edx,0x5
    8ae1:	mov    r14,rax
    8ae4:	call   57f0 <percentile.part.6>
    8ae9:	mov    rdi,QWORD PTR [r12+0x18]
    8aee:	mov    esi,r15d
    8af1:	mov    edx,0x5f
    8af6:	mov    rbx,rax
    8af9:	call   57f0 <percentile.part.6>
    8afe:	mov    r9d,DWORD PTR [rsp]
    8b02:	mov    r15,rax
    8b05:	lea    rsi,[rip+0x156ae]        # 1e1ba <_IO_stdin_used+0x1ba>
    8b0c:	mov    edx,r9d
    8b0f:	mov    edi,0x1
    8b14:	xor    eax,eax
    8b16:	call   5200 <__printf_chk@plt>
    8b1b:	mov    eax,DWORD PTR [r12+0x4]
    8b20:	mov    rsi,QWORD PTR [r12+0x10]
    8b25:	test   eax,eax
    8b27:	jne    87e5 <hvm_summary.part.19+0x115>
    8b2d:	xor    ecx,ecx
    8b2f:	jmp    87f3 <hvm_summary.part.19+0x123>
    8b34:	nop    DWORD PTR [rax+0x0]
    8b38:	mov    rax,rsi
    8b3b:	and    esi,0x1
    8b3e:	pxor   xmm0,xmm0
    8b42:	shr    rax,1
    8b45:	or     rax,rsi
    8b48:	cvtsi2sd xmm0,rax
    8b4d:	addsd  xmm0,xmm0
    8b51:	jmp    882b <hvm_summary.part.19+0x15b>
    8b56:	mov    r13,QWORD PTR [rsp+0x18]
    8b5b:	mov    ecx,DWORD PTR [r13+0x27e08]
    8b62:	test   ecx,ecx
    8b64:	jne    8ea6 <hvm_summary.part.19+0x7d6>
    8b6a:	test   BYTE PTR [rip+0x22530],0x10        # 2b0a1 <opt+0x1>
    8b71:	jne    8e21 <hvm_summary.part.19+0x751>
    8b77:	mov    esi,DWORD PTR [r13+0x27f00]
    8b7e:	test   esi,esi
    8b80:	je     8c8b <hvm_summary.part.19+0x5bb>
    8b86:	mov    ecx,DWORD PTR [rip+0x2254c]        # 2b0d8 <opt+0x38>
    8b8c:	test   ecx,ecx
    8b8e:	je     8f01 <hvm_summary.part.19+0x831>
    8b94:	mov    ebx,DWORD PTR [r13+0x27f04]
    8b9b:	cmp    DWORD PTR [r13+0x27f08],ebx
    8ba2:	cmovle ebx,DWORD PTR [r13+0x27f08]
    8baa:	test   ebx,ebx
    8bac:	je     8f88 <hvm_summary.part.19+0x8b8>
    8bb2:	mov    rdi,QWORD PTR [r13+0x27f18]
    8bb9:	mov    esi,ebx
    8bbb:	mov    edx,0x32
    8bc0:	call   57f0 <percentile.part.6>
    8bc5:	mov    rdi,QWORD PTR [r13+0x27f18]
    8bcc:	mov    esi,ebx
    8bce:	mov    edx,0x5
    8bd3:	mov    r12,rax
    8bd6:	call   57f0 <percentile.part.6>
    8bdb:	mov    rdi,QWORD PTR [r13+0x27f18]
    8be2:	mov    esi,ebx
    8be4:	mov    edx,0x5f
    8be9:	mov    rbp,rax
    8bec:	call   57f0 <percentile.part.6>
    8bf1:	mov    rbx,rax
    8bf4:	lea    rdi,[rip+0x15627]        # 1e222 <_IO_stdin_used+0x222>
    8bfb:	call   5090 <puts@plt>
    8c00:	mov    eax,DWORD PTR [r13+0x27f04]
    8c07:	mov    rsi,QWORD PTR [r13+0x27f10]
    8c0e:	xor    ecx,ecx
    8c10:	test   eax,eax
    8c12:	jne    8ed0 <hvm_summary.part.19+0x800>
    8c18:	lea    rdx,[rsi+rsi*4]
    8c1c:	pxor   xmm1,xmm1
    8c20:	pxor   xmm0,xmm0
    8c24:	cvtsi2sd xmm0,QWORD PTR [rip+0x265a3]        # 2f1d0 <P+0x30>
    8c2d:	lea    rdx,[rdx+rdx*4]
    8c31:	shl    rdx,0x2
    8c35:	cvtsi2sd xmm1,rdx
    8c3a:	divsd  xmm1,xmm0
    8c3e:	test   rsi,rsi
    8c41:	js     8ee3 <hvm_summary.part.19+0x813>
    8c47:	pxor   xmm0,xmm0
    8c4b:	cvtsi2sd xmm0,rsi
    8c50:	pxor   xmm2,xmm2
    8c54:	sub    rsp,0x8
    8c58:	mov    r9,r12
    8c5b:	mov    r8,rbp
    8c5e:	cvtsi2sd xmm2,QWORD PTR [rip+0x22449]        # 2b0b0 <opt+0x10>
    8c67:	mov    edi,0x1
    8c6c:	mov    eax,0x2
    8c71:	mov    edx,DWORD PTR [r13+0x27f00]
    8c78:	push   rbx
    8c79:	lea    rsi,[rip+0x17b98]        # 20818 <_IO_stdin_used+0x2818>
    8c80:	divsd  xmm0,xmm2
    8c84:	call   5200 <__printf_chk@plt>
    8c89:	pop    rax
    8c8a:	pop    rdx
    8c8b:	xor    ebx,ebx
    8c8d:	lea    rbp,[rip+0x1559b]        # 1e22f <_IO_stdin_used+0x22f>
    8c94:	jmp    8cad <hvm_summary.part.19+0x5dd>
    8c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    8ca0:	add    rbx,0x1
    8ca4:	cmp    rbx,0x100
    8cab:	je     8cd7 <hvm_summary.part.19+0x607>
    8cad:	mov    ecx,DWORD PTR [r13+rbx*4+0x27f38]
    8cb5:	test   ecx,ecx
    8cb7:	je     8ca0 <hvm_summary.part.19+0x5d0>
    8cb9:	mov    edx,ebx
    8cbb:	mov    rsi,rbp
    8cbe:	mov    edi,0x1
    8cc3:	xor    eax,eax
    8cc5:	call   5200 <__printf_chk@plt>
    8cca:	add    rbx,0x1
    8cce:	cmp    rbx,0x100
    8cd5:	jne    8cad <hvm_summary.part.19+0x5dd>
    8cd7:	mov    rdi,QWORD PTR [r13+0x28340]
    8cde:	test   rdi,rdi
    8ce1:	je     8cef <hvm_summary.part.19+0x61f>
    8ce3:	lea    rsi,[rip+0x15557]        # 1e241 <_IO_stdin_used+0x241>
    8cea:	call   7440 <hvm_io_address_summary.part.14>
    8cef:	mov    rdi,QWORD PTR [r13+0x28338]
    8cf6:	test   rdi,rdi
    8cf9:	je     8d07 <hvm_summary.part.19+0x637>
    8cfb:	lea    rsi,[rip+0x1553d]        # 1e23f <_IO_stdin_used+0x23f>
    8d02:	call   7440 <hvm_io_address_summary.part.14>
    8d07:	mov    rax,QWORD PTR [rsp+0x78]
    8d0c:	xor    rax,QWORD PTR fs:0x28
    8d15:	jne    8fbc <hvm_summary.part.19+0x8ec>
    8d1b:	add    rsp,0x88
    8d22:	pop    rbx
    8d23:	pop    rbp
    8d24:	pop    r12
    8d26:	pop    r13
    8d28:	pop    r14
    8d2a:	pop    r15
    8d2c:	ret    
    8d2d:	lea    rsi,[rip+0x1547e]        # 1e1b2 <_IO_stdin_used+0x1b2>
    8d34:	mov    edi,0x1
    8d39:	xor    eax,eax
    8d3b:	call   5200 <__printf_chk@plt>
    8d40:	mov    eax,DWORD PTR [r12+0x4]
    8d45:	mov    rsi,QWORD PTR [r12+0x10]
    8d4a:	test   eax,eax
    8d4c:	jne    8de3 <hvm_summary.part.19+0x713>
    8d52:	xor    ecx,ecx
    8d54:	lea    rdx,[rsi+rsi*4]
    8d58:	pxor   xmm1,xmm1
    8d5c:	pxor   xmm0,xmm0
    8d60:	cvtsi2sd xmm0,QWORD PTR [rip+0x26467]        # 2f1d0 <P+0x30>
    8d69:	lea    rdx,[rdx+rdx*4]
    8d6d:	shl    rdx,0x2
    8d71:	cvtsi2sd xmm1,rdx
    8d76:	divsd  xmm1,xmm0
    8d7a:	test   rsi,rsi
    8d7d:	js     8e03 <hvm_summary.part.19+0x733>
    8d83:	pxor   xmm0,xmm0
    8d87:	cvtsi2sd xmm0,rsi
    8d8c:	pxor   xmm2,xmm2
    8d90:	mov    edx,DWORD PTR [r12]
    8d94:	mov    edi,0x1
    8d99:	lea    rsi,[rip+0x17ab0]        # 20850 <_IO_stdin_used+0x2850>
    8da0:	cvtsi2sd xmm2,QWORD PTR [rip+0x22307]        # 2b0b0 <opt+0x10>
    8da9:	mov    eax,0x2
    8dae:	divsd  xmm0,xmm2
    8db2:	call   5200 <__printf_chk@plt>
    8db7:	jmp    8866 <hvm_summary.part.19+0x196>
    8dbc:	lea    rsi,[rip+0x153f7]        # 1e1ba <_IO_stdin_used+0x1ba>
    8dc3:	mov    edx,ebp
    8dc5:	mov    edi,0x1
    8dca:	xor    eax,eax
    8dcc:	call   5200 <__printf_chk@plt>
    8dd1:	mov    eax,DWORD PTR [r12+0x4]
    8dd6:	mov    rsi,QWORD PTR [r12+0x10]
    8ddb:	test   eax,eax
    8ddd:	je     8d52 <hvm_summary.part.19+0x682>
    8de3:	movsxd rcx,eax
    8de6:	xor    edx,edx
    8de8:	mov    rax,rsi
    8deb:	div    rcx
    8dee:	mov    rcx,rax
    8df1:	jmp    8d54 <hvm_summary.part.19+0x684>
    8df6:	xor    r15d,r15d
    8df9:	xor    ebx,ebx
    8dfb:	xor    r14d,r14d
    8dfe:	jmp    87bc <hvm_summary.part.19+0xec>
    8e03:	mov    rax,rsi
    8e06:	and    esi,0x1
    8e09:	pxor   xmm0,xmm0
    8e0d:	shr    rax,1
    8e10:	or     rax,rsi
    8e13:	cvtsi2sd xmm0,rax
    8e18:	addsd  xmm0,xmm0
    8e1c:	jmp    8d8c <hvm_summary.part.19+0x6bc>
    8e21:	xor    edx,edx
    8e23:	lea    rdi,[rip+0x153ce]        # 1e1f8 <_IO_stdin_used+0x1f8>
    8e2a:	movabs rax,0x1000000000000
    8e34:	div    QWORD PTR [rip+0x2228d]        # 2b0c8 <opt+0x28>
    8e3b:	mov    rbx,rax
    8e3e:	call   5090 <puts@plt>
    8e43:	test   ebx,ebx
    8e45:	je     8b77 <hvm_summary.part.19+0x4a7>
    8e4b:	lea    r14d,[rbx-0x1]
    8e4f:	lea    r12,[rip+0x153bb]        # 1e211 <_IO_stdin_used+0x211>
    8e56:	xor    ebx,ebx
    8e58:	jmp    8e6c <hvm_summary.part.19+0x79c>
    8e5a:	nop    WORD PTR [rax+rax*1+0x0]
    8e60:	cmp    r14,rbx
    8e63:	je     8b77 <hvm_summary.part.19+0x4a7>
    8e69:	mov    rbx,rbp
    8e6c:	mov    rax,QWORD PTR [r13+0x10470]
    8e73:	lea    rbp,[rbx+0x1]
    8e77:	mov    r8d,DWORD PTR [rax+rbx*4]
    8e7b:	test   r8d,r8d
    8e7e:	je     8e60 <hvm_summary.part.19+0x790>
    8e80:	mov    rax,QWORD PTR [rip+0x22241]        # 2b0c8 <opt+0x28>
    8e87:	mov    rdx,rbp
    8e8a:	mov    rsi,r12
    8e8d:	mov    edi,0x1
    8e92:	imul   rdx,rax
    8e96:	lea    rcx,[rdx-0x1]
    8e9a:	sub    rdx,rax
    8e9d:	xor    eax,eax
    8e9f:	call   5200 <__printf_chk@plt>
    8ea4:	jmp    8e60 <hvm_summary.part.19+0x790>
    8ea6:	mov    edx,0x15e
    8eab:	lea    rsi,[rip+0x1533a]        # 1e1ec <_IO_stdin_used+0x1ec>
    8eb2:	mov    edi,0x1
    8eb7:	xor    eax,eax
    8eb9:	call   5200 <__printf_chk@plt>
    8ebe:	jmp    8b6a <hvm_summary.part.19+0x49a>
    8ec3:	xor    r15d,r15d
    8ec6:	xor    ebx,ebx
    8ec8:	xor    r14d,r14d
    8ecb:	jmp    8b05 <hvm_summary.part.19+0x435>
    8ed0:	movsxd rcx,eax
    8ed3:	xor    edx,edx
    8ed5:	mov    rax,rsi
    8ed8:	div    rcx
    8edb:	mov    rcx,rax
    8ede:	jmp    8c18 <hvm_summary.part.19+0x548>
    8ee3:	mov    rdx,rsi
    8ee6:	and    esi,0x1
    8ee9:	pxor   xmm0,xmm0
    8eed:	shr    rdx,1
    8ef0:	or     rdx,rsi
    8ef3:	cvtsi2sd xmm0,rdx
    8ef8:	addsd  xmm0,xmm0
    8efc:	jmp    8c50 <hvm_summary.part.19+0x580>
    8f01:	lea    rdi,[rip+0x1531a]        # 1e222 <_IO_stdin_used+0x222>
    8f08:	call   5090 <puts@plt>
    8f0d:	movsxd rcx,DWORD PTR [r13+0x27f04]
    8f14:	mov    rsi,QWORD PTR [r13+0x27f10]
    8f1b:	test   ecx,ecx
    8f1d:	jne    8f94 <hvm_summary.part.19+0x8c4>
    8f1f:	xor    ecx,ecx
    8f21:	lea    rax,[rsi+rsi*4]
    8f25:	pxor   xmm1,xmm1
    8f29:	pxor   xmm0,xmm0
    8f2d:	cvtsi2sd xmm0,QWORD PTR [rip+0x2629a]        # 2f1d0 <P+0x30>
    8f36:	lea    rdx,[rax+rax*4]
    8f3a:	shl    rdx,0x2
    8f3e:	cvtsi2sd xmm1,rdx
    8f43:	divsd  xmm1,xmm0
    8f47:	test   rsi,rsi
    8f4a:	js     8fa1 <hvm_summary.part.19+0x8d1>
    8f4c:	pxor   xmm0,xmm0
    8f50:	cvtsi2sd xmm0,rsi
    8f55:	pxor   xmm2,xmm2
    8f59:	mov    edi,0x1
    8f5e:	mov    eax,0x2
    8f63:	mov    edx,DWORD PTR [r13+0x27f00]
    8f6a:	cvtsi2sd xmm2,QWORD PTR [rip+0x2213d]        # 2b0b0 <opt+0x10>
    8f73:	lea    rsi,[rip+0x178d6]        # 20850 <_IO_stdin_used+0x2850>
    8f7a:	divsd  xmm0,xmm2
    8f7e:	call   5200 <__printf_chk@plt>
    8f83:	jmp    8c8b <hvm_summary.part.19+0x5bb>
    8f88:	xor    ebx,ebx
    8f8a:	xor    ebp,ebp
    8f8c:	xor    r12d,r12d
    8f8f:	jmp    8bf4 <hvm_summary.part.19+0x524>
    8f94:	mov    rax,rsi
    8f97:	xor    edx,edx
    8f99:	div    rcx
    8f9c:	mov    rcx,rax
    8f9f:	jmp    8f21 <hvm_summary.part.19+0x851>
    8fa1:	mov    rdx,rsi
    8fa4:	and    esi,0x1
    8fa7:	pxor   xmm0,xmm0
    8fab:	shr    rdx,1
    8fae:	or     rdx,rsi
    8fb1:	cvtsi2sd xmm0,rdx
    8fb6:	addsd  xmm0,xmm0
    8fba:	jmp    8f55 <hvm_summary.part.19+0x885>
    8fbc:	call   50d0 <__stack_chk_fail@plt>
    8fc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    8fcc:	nop    DWORD PTR [rax+0x0]

0000000000008fd0 <__interval_cycle_percent_output>:
    8fd0:	push   rbx
    8fd1:	mov    rax,QWORD PTR [rdi+0x8]
    8fd5:	pxor   xmm0,xmm0
    8fd9:	pxor   xmm1,xmm1
    8fdd:	cvtsi2sd xmm1,rsi
    8fe2:	mov    rbx,rdi
    8fe5:	lea    rsi,[rip+0x15269]        # 1e255 <_IO_stdin_used+0x255>
    8fec:	mov    edi,0x1
    8ff1:	lea    rax,[rax+rax*4]
    8ff5:	lea    rax,[rax+rax*4]
    8ff9:	shl    rax,0x2
    8ffd:	cvtsi2sd xmm0,rax
    9002:	mov    eax,0x1
    9007:	divsd  xmm0,xmm1
    900b:	call   5200 <__printf_chk@plt>
    9010:	mov    QWORD PTR [rbx+0x8],0x0
    9018:	mov    DWORD PTR [rbx],0x0
    901e:	mov    QWORD PTR [rbx+0x10],0x0
    9026:	pop    rbx
    9027:	ret    
    9028:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009030 <interval_cycle_percent_output>:
    9030:	push   rbx
    9031:	mov    rax,QWORD PTR [rdi+0x8]
    9035:	pxor   xmm0,xmm0
    9039:	pxor   xmm1,xmm1
    903d:	cvtsi2sd xmm1,QWORD PTR [rip+0x220a2]        # 2b0e8 <opt+0x48>
    9046:	mov    rbx,rdi
    9049:	lea    rsi,[rip+0x15205]        # 1e255 <_IO_stdin_used+0x255>
    9050:	mov    edi,0x1
    9055:	lea    rax,[rax+rax*4]
    9059:	lea    rax,[rax+rax*4]
    905d:	shl    rax,0x2
    9061:	cvtsi2sd xmm0,rax
    9066:	mov    eax,0x1
    906b:	divsd  xmm0,xmm1
    906f:	call   5200 <__printf_chk@plt>
    9074:	mov    QWORD PTR [rbx+0x8],0x0
    907c:	mov    DWORD PTR [rbx],0x0
    9082:	mov    QWORD PTR [rbx+0x10],0x0
    908a:	pop    rbx
    908b:	ret    
    908c:	nop    DWORD PTR [rax+0x0]

0000000000009090 <interval_time_output>:
    9090:	mov    rax,QWORD PTR [rip+0x5e161]        # 671f8 <P+0x38058>
    9097:	mov    rdx,QWORD PTR [rip+0x26122]        # 2f1c0 <P+0x20>
    909e:	cmp    rax,rdx
    90a1:	jbe    90f8 <interval_time_output+0x68>
    90a3:	sub    rax,rdx
    90a6:	xor    edx,edx
    90a8:	mov    rcx,rax
    90ab:	shl    rcx,0xa
    90af:	mov    rax,rcx
    90b2:	div    QWORD PTR [rip+0x21fef]        # 2b0a8 <opt+0x8>
    90b9:	movabs rdx,0x44b82fa09b5a53
    90c3:	mov    rcx,rax
    90c6:	shr    rax,0x9
    90ca:	mul    rdx
    90cd:	mov    rax,rdx
    90d0:	shr    rax,0xb
    90d4:	mov    edx,eax
    90d6:	imul   eax,eax,0x3b9aca00
    90dc:	sub    ecx,eax
    90de:	lea    rsi,[rip+0x15178]        # 1e25d <_IO_stdin_used+0x25d>
    90e5:	mov    edi,0x1
    90ea:	xor    eax,eax
    90ec:	jmp    5200 <__printf_chk@plt>
    90f1:	nop    DWORD PTR [rax+0x0]
    90f8:	xor    ecx,ecx
    90fa:	xor    edx,edx
    90fc:	jmp    90de <interval_time_output+0x4e>
    90fe:	xchg   ax,ax

0000000000009100 <interval_table_output>:
    9100:	push   rbp
    9101:	push   rbx
    9102:	sub    rsp,0x8
    9106:	call   9090 <interval_time_output>
    910b:	mov    eax,DWORD PTR [rip+0x21fe7]        # 2b0f8 <opt+0x58>
    9111:	cmp    eax,0x1
    9114:	je     9158 <interval_table_output+0x58>
    9116:	cmp    eax,0x2
    9119:	je     9130 <interval_table_output+0x30>
    911b:	add    rsp,0x8
    911f:	mov    edi,0xa
    9124:	pop    rbx
    9125:	pop    rbp
    9126:	jmp    5050 <putchar@plt>
    912b:	nop    DWORD PTR [rax+rax*1+0x0]
    9130:	mov    rbx,QWORD PTR [rip+0x5e0c9]        # 67200 <P+0x38060>
    9137:	test   rbx,rbx
    913a:	je     911b <interval_table_output+0x1b>
    913c:	nop    DWORD PTR [rax+0x0]
    9140:	mov    rdi,QWORD PTR [rbx]
    9143:	call   9030 <interval_cycle_percent_output>
    9148:	mov    rbx,QWORD PTR [rbx+0x8]
    914c:	test   rbx,rbx
    914f:	jne    9140 <interval_table_output+0x40>
    9151:	jmp    911b <interval_table_output+0x1b>
    9153:	nop    DWORD PTR [rax+rax*1+0x0]
    9158:	mov    eax,DWORD PTR [rip+0x5e0aa]        # 67208 <P+0x38068>
    915e:	test   eax,eax
    9160:	jle    911b <interval_table_output+0x1b>
    9162:	xor    ebx,ebx
    9164:	lea    rbp,[rip+0x150fa]        # 1e265 <_IO_stdin_used+0x265>
    916b:	jmp    9181 <interval_table_output+0x81>
    916d:	nop    DWORD PTR [rax]
    9170:	call   9030 <interval_cycle_percent_output>
    9175:	add    rbx,0x1
    9179:	cmp    DWORD PTR [rip+0x5e089],ebx        # 67208 <P+0x38068>
    917f:	jle    911b <interval_table_output+0x1b>
    9181:	mov    rax,QWORD PTR [rip+0x5e078]        # 67200 <P+0x38060>
    9188:	mov    rdi,QWORD PTR [rax+rbx*8]
    918c:	test   rdi,rdi
    918f:	jne    9170 <interval_table_output+0x70>
    9191:	mov    rsi,rbp
    9194:	mov    edi,0x1
    9199:	xor    eax,eax
    919b:	call   5200 <__printf_chk@plt>
    91a0:	jmp    9175 <interval_table_output+0x75>
    91a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    91ad:	nop    DWORD PTR [rax]

00000000000091b0 <interval_table_tail>:
    91b0:	push   rbp
    91b1:	lea    rsi,[rip+0x16112]        # 1f2ca <_IO_stdin_used+0x12ca>
    91b8:	mov    edi,0x1
    91bd:	xor    eax,eax
    91bf:	push   rbx
    91c0:	sub    rsp,0x8
    91c4:	call   5200 <__printf_chk@plt>
    91c9:	mov    rbx,QWORD PTR [rip+0x5e030]        # 67200 <P+0x38060>
    91d0:	test   rbx,rbx
    91d3:	je     91fc <interval_table_tail+0x4c>
    91d5:	lea    rbp,[rip+0x14ff5]        # 1e1d1 <_IO_stdin_used+0x1d1>
    91dc:	nop    DWORD PTR [rax+0x0]
    91e0:	lea    rdx,[rbx+0x10]
    91e4:	mov    rsi,rbp
    91e7:	mov    edi,0x1
    91ec:	xor    eax,eax
    91ee:	call   5200 <__printf_chk@plt>
    91f3:	mov    rbx,QWORD PTR [rbx+0x8]
    91f7:	test   rbx,rbx
    91fa:	jne    91e0 <interval_table_tail+0x30>
    91fc:	add    rsp,0x8
    9200:	mov    edi,0xa
    9205:	pop    rbx
    9206:	pop    rbp
    9207:	jmp    5050 <putchar@plt>
    920c:	nop    DWORD PTR [rax+0x0]

0000000000009210 <interval_table_alloc>:
    9210:	push   rbx
    9211:	mov    DWORD PTR [rip+0x5dff1],edi        # 67208 <P+0x38068>
    9217:	movsxd rdi,edi
    921a:	lea    rbx,[rdi*8+0x0]
    9222:	mov    rdi,rbx
    9225:	call   51a0 <malloc@plt>
    922a:	mov    QWORD PTR [rip+0x5dfcf],rax        # 67200 <P+0x38060>
    9231:	test   rax,rax
    9234:	je     9248 <interval_table_alloc+0x38>
    9236:	mov    rdx,rbx
    9239:	xor    esi,esi
    923b:	mov    rdi,rax
    923e:	pop    rbx
    923f:	jmp    5130 <memset@plt>
    9244:	nop    DWORD PTR [rax+0x0]
    9248:	mov    rcx,QWORD PTR [rip+0x251f1]        # 2e440 <stderr@@GLIBC_2.2.5>
    924f:	mov    edx,0xf
    9254:	mov    esi,0x1
    9259:	lea    rdi,[rip+0x15122]        # 1e382 <_IO_stdin_used+0x382>
    9260:	call   5260 <fwrite@plt>
    9265:	cmp    DWORD PTR [rip+0x21e74],0x7        # 2b0e0 <opt+0x40>
    926c:	jbe    9283 <interval_table_alloc+0x73>
    926e:	mov    rax,QWORD PTR [rip+0x5df8b]        # 67200 <P+0x38060>
    9275:	mov    rdx,rbx
    9278:	xor    esi,esi
    927a:	pop    rbx
    927b:	mov    rdi,rax
    927e:	jmp    5130 <memset@plt>
    9283:	mov    edi,0x1
    9288:	call   5250 <exit@plt>
    928d:	nop    DWORD PTR [rax]

0000000000009290 <interval_list_add>:
    9290:	push   r12
    9292:	mov    r12,rdi
    9295:	mov    rdi,QWORD PTR [rip+0x5dfbc]        # 67258 <warn>
    929c:	mov    r8,rsi
    929f:	push   rbp
    92a0:	lea    rcx,[rip+0x1b5c9]        # 24870 <__func__.5963>
    92a7:	mov    rbp,rsi
    92aa:	xor    eax,eax
    92ac:	push   rbx
    92ad:	lea    rdx,[rip+0x14fb6]        # 1e26a <_IO_stdin_used+0x26a>
    92b4:	mov    esi,0x1
    92b9:	call   5270 <__fprintf_chk@plt>
    92be:	mov    edi,0x30
    92c3:	call   51a0 <malloc@plt>
    92c8:	mov    rbx,rax
    92cb:	test   rax,rax
    92ce:	je     9320 <interval_list_add+0x90>
    92d0:	pxor   xmm0,xmm0
    92d4:	lea    rdi,[rbx+0x10]
    92d8:	mov    edx,0x1f
    92dd:	mov    rsi,rbp
    92e0:	movups XMMWORD PTR [rbx+0x10],xmm0
    92e4:	movups XMMWORD PTR [rdi+0x10],xmm0
    92e8:	mov    QWORD PTR [rbx],r12
    92eb:	call   5070 <strncpy@plt>
    92f0:	cmp    QWORD PTR [rip+0x5df08],0x0        # 67200 <P+0x38060>
    92f8:	mov    QWORD PTR [rbx+0x8],0x0
    9300:	je     9350 <interval_list_add+0xc0>
    9302:	mov    rax,QWORD PTR [rip+0x5deff]        # 67208 <P+0x38068>
    9309:	mov    QWORD PTR [rax],rbx
    930c:	add    rbx,0x8
    9310:	mov    QWORD PTR [rip+0x5def1],rbx        # 67208 <P+0x38068>
    9317:	pop    rbx
    9318:	pop    rbp
    9319:	pop    r12
    931b:	ret    
    931c:	nop    DWORD PTR [rax+0x0]
    9320:	mov    rcx,QWORD PTR [rip+0x25119]        # 2e440 <stderr@@GLIBC_2.2.5>
    9327:	mov    edx,0x11
    932c:	mov    esi,0x1
    9331:	lea    rdi,[rip+0x14f4b]        # 1e283 <_IO_stdin_used+0x283>
    9338:	call   5260 <fwrite@plt>
    933d:	cmp    DWORD PTR [rip+0x21d9c],0x7        # 2b0e0 <opt+0x40>
    9344:	ja     92d0 <interval_list_add+0x40>
    9346:	mov    edi,0x1
    934b:	call   5250 <exit@plt>
    9350:	mov    QWORD PTR [rip+0x5dea9],rbx        # 67200 <P+0x38060>
    9357:	add    rbx,0x8
    935b:	mov    QWORD PTR [rip+0x5dea6],rbx        # 67208 <P+0x38068>
    9362:	pop    rbx
    9363:	pop    rbp
    9364:	pop    r12
    9366:	ret    
    9367:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009370 <interval_cr3_schedule_time_header>:
    9370:	cmp    DWORD PTR [rip+0x21d81],0x1        # 2b0f8 <opt+0x58>
    9377:	je     9380 <interval_cr3_schedule_time_header+0x10>
    9379:	ret    
    937a:	nop    WORD PTR [rax+rax*1+0x0]
    9380:	push   rbp
    9381:	lea    rsi,[rip+0x15f42]        # 1f2ca <_IO_stdin_used+0x12ca>
    9388:	mov    edi,0x1
    938d:	xor    eax,eax
    938f:	push   rbx
    9390:	sub    rsp,0x8
    9394:	call   5200 <__printf_chk@plt>
    9399:	mov    eax,DWORD PTR [rip+0x21d69]        # 2b108 <opt+0x68>
    939f:	test   eax,eax
    93a1:	jle    93d6 <interval_cr3_schedule_time_header+0x66>
    93a3:	xor    ebx,ebx
    93a5:	lea    rbp,[rip+0x14ffe]        # 1e3aa <_IO_stdin_used+0x3aa>
    93ac:	nop    DWORD PTR [rax+0x0]
    93b0:	mov    rax,QWORD PTR [rip+0x21d49]        # 2b100 <opt+0x60>
    93b7:	mov    rsi,rbp
    93ba:	mov    edi,0x1
    93bf:	mov    rdx,QWORD PTR [rax+rbx*8]
    93c3:	xor    eax,eax
    93c5:	add    rbx,0x1
    93c9:	call   5200 <__printf_chk@plt>
    93ce:	cmp    DWORD PTR [rip+0x21d34],ebx        # 2b108 <opt+0x68>
    93d4:	jg     93b0 <interval_cr3_schedule_time_header+0x40>
    93d6:	add    rsp,0x8
    93da:	mov    edi,0xa
    93df:	pop    rbx
    93e0:	pop    rbp
    93e1:	jmp    5050 <putchar@plt>
    93e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000093f0 <interval_cr3_value_check>:
    93f0:	push   r13
    93f2:	push   r12
    93f4:	push   rbp
    93f5:	mov    rbp,rdi
    93f8:	push   rbx
    93f9:	sub    rsp,0x38
    93fd:	mov    rax,QWORD PTR fs:0x28
    9406:	mov    QWORD PTR [rsp+0x28],rax
    940b:	xor    eax,eax
    940d:	mov    eax,DWORD PTR [rip+0x21ce5]        # 2b0f8 <opt+0x58>
    9413:	cmp    eax,0x1
    9416:	je     9458 <interval_cr3_value_check+0x68>
    9418:	mov    r9,QWORD PTR [rdi+0x10]
    941c:	cmp    eax,0x2
    941f:	je     9518 <interval_cr3_value_check+0x128>
    9425:	mov    rax,QWORD PTR [rip+0x21cd4]        # 2b100 <opt+0x60>
    942c:	cmp    QWORD PTR [rax],r9
    942f:	je     9508 <interval_cr3_value_check+0x118>
    9435:	mov    rax,QWORD PTR [rsp+0x28]
    943a:	xor    rax,QWORD PTR fs:0x28
    9443:	jne    954c <interval_cr3_value_check+0x15c>
    9449:	add    rsp,0x38
    944d:	pop    rbx
    944e:	pop    rbp
    944f:	pop    r12
    9451:	pop    r13
    9453:	ret    
    9454:	nop    DWORD PTR [rax+0x0]
    9458:	mov    eax,DWORD PTR [rip+0x21caa]        # 2b108 <opt+0x68>
    945e:	xor    ebx,ebx
    9460:	lea    r13,[rdi+0x58]
    9464:	test   eax,eax
    9466:	jg     947c <interval_cr3_value_check+0x8c>
    9468:	jmp    9435 <interval_cr3_value_check+0x45>
    946a:	nop    WORD PTR [rax+rax*1+0x0]
    9470:	add    rbx,0x1
    9474:	cmp    DWORD PTR [rip+0x21c8e],ebx        # 2b108 <opt+0x68>
    947a:	jle    9435 <interval_cr3_value_check+0x45>
    947c:	mov    rax,QWORD PTR [rip+0x21c7d]        # 2b100 <opt+0x60>
    9483:	mov    r8,QWORD PTR [rbp+0x10]
    9487:	lea    r12,[rbx*8+0x0]
    948f:	cmp    r8,QWORD PTR [rax+rbx*8]
    9493:	jne    9470 <interval_cr3_value_check+0x80>
    9495:	mov    rax,QWORD PTR [rip+0x5dd64]        # 67200 <P+0x38060>
    949c:	mov    rdi,QWORD PTR [rip+0x24f9d]        # 2e440 <stderr@@GLIBC_2.2.5>
    94a3:	cmp    QWORD PTR [rax+rbx*8],0x0
    94a8:	je     94d8 <interval_cr3_value_check+0xe8>
    94aa:	xor    eax,eax
    94ac:	mov    rcx,r8
    94af:	mov    esi,0x1
    94b4:	lea    rdx,[rip+0x174ed]        # 209a8 <_IO_stdin_used+0x29a8>
    94bb:	call   5270 <__fprintf_chk@plt>
    94c0:	cmp    DWORD PTR [rip+0x21c19],0x6        # 2b0e0 <opt+0x40>
    94c7:	jbe    9551 <interval_cr3_value_check+0x161>
    94cd:	mov    r8,QWORD PTR [rbp+0x10]
    94d1:	mov    rdi,QWORD PTR [rip+0x24f68]        # 2e440 <stderr@@GLIBC_2.2.5>
    94d8:	lea    rcx,[rip+0x1b371]        # 24850 <__func__.5975>
    94df:	lea    rdx,[rip+0x14daf]        # 1e295 <_IO_stdin_used+0x295>
    94e6:	mov    esi,0x1
    94eb:	xor    eax,eax
    94ed:	call   5270 <__fprintf_chk@plt>
    94f2:	mov    rax,QWORD PTR [rip+0x5dd07]        # 67200 <P+0x38060>
    94f9:	mov    QWORD PTR [rax+r12*1],r13
    94fd:	jmp    9470 <interval_cr3_value_check+0x80>
    9502:	nop    WORD PTR [rax+rax*1+0x0]
    9508:	mov    QWORD PTR [rip+0x5dcf1],rdi        # 67200 <P+0x38060>
    950f:	jmp    9435 <interval_cr3_value_check+0x45>
    9514:	nop    DWORD PTR [rax+0x0]
    9518:	mov    rbx,rsp
    951b:	mov    ecx,0x20
    9520:	mov    edx,0x1
    9525:	xor    eax,eax
    9527:	mov    rdi,rbx
    952a:	lea    r8,[rip+0x14e7a]        # 1e3ab <_IO_stdin_used+0x3ab>
    9531:	mov    esi,0x20
    9536:	call   5030 <__snprintf_chk@plt>
    953b:	lea    rdi,[rbp+0x58]
    953f:	mov    rsi,rbx
    9542:	call   9290 <interval_list_add>
    9547:	jmp    9435 <interval_cr3_value_check+0x45>
    954c:	call   50d0 <__stack_chk_fail@plt>
    9551:	mov    edi,0x1
    9556:	call   5250 <exit@plt>
    955b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009560 <interval_cr3_schedule_ordered_output>:
    9560:	push   r14
    9562:	push   r13
    9564:	push   r12
    9566:	push   rbp
    9567:	push   rbx
    9568:	mov    rbx,QWORD PTR [rip+0x5dc79]        # 671e8 <P+0x38048>
    956f:	test   rbx,rbx
    9572:	je     9670 <interval_cr3_schedule_ordered_output+0x110>
    9578:	mov    rax,rbx
    957b:	xor    r13d,r13d
    957e:	jmp    9583 <interval_cr3_schedule_ordered_output+0x23>
    9580:	movsxd r13,esi
    9583:	mov    rax,QWORD PTR [rax+0x8]
    9587:	lea    esi,[r13+0x1]
    958b:	test   rax,rax
    958e:	jne    9580 <interval_cr3_schedule_ordered_output+0x20>
    9590:	movsxd rbp,esi
    9593:	lea    rdi,[rbp*8+0x0]
    959b:	call   51a0 <malloc@plt>
    95a0:	mov    r12,rax
    95a3:	mov    r14,rax
    95a6:	mov    QWORD PTR [rax],rbx
    95a9:	mov    rbx,QWORD PTR [rbx+0x8]
    95ad:	add    rax,0x8
    95b1:	test   rbx,rbx
    95b4:	jne    95a6 <interval_cr3_schedule_ordered_output+0x46>
    95b6:	mov    rsi,rbp
    95b9:	mov    edx,0x8
    95be:	lea    rbp,[r12+r13*8+0x8]
    95c3:	mov    rdi,r12
    95c6:	lea    rcx,[rip+0xffffffffffffbf83]        # 5550 <cr3_time_compare>
    95cd:	lea    r13,[rip+0x14cd6]        # 1e2aa <_IO_stdin_used+0x2aa>
    95d4:	call   50a0 <qsort@plt>
    95d9:	call   9090 <interval_time_output>
    95de:	xchg   ax,ax
    95e0:	mov    rbx,QWORD PTR [r14]
    95e3:	mov    rax,QWORD PTR [rbx+0x60]
    95e7:	test   rax,rax
    95ea:	jle    963b <interval_cr3_schedule_ordered_output+0xdb>
    95ec:	lea    rax,[rax+rax*4]
    95f0:	mov    rdi,QWORD PTR [rbx+0x20]
    95f4:	pxor   xmm0,xmm0
    95f8:	pxor   xmm1,xmm1
    95fc:	cmp    QWORD PTR [rip+0x5dbf5],rdi        # 671f8 <P+0x38058>
    9603:	lea    rax,[rax+rax*4]
    9607:	mov    rdx,QWORD PTR [rbx+0x10]
    960b:	mov    rsi,r13
    960e:	cvtsi2sd xmm1,QWORD PTR [rip+0x21ad1]        # 2b0e8 <opt+0x48>
    9617:	sbb    ecx,ecx
    9619:	shl    rax,0x2
    961d:	mov    edi,0x1
    9622:	cvtsi2sd xmm0,rax
    9627:	and    ecx,0xa
    962a:	mov    eax,0x1
    962f:	add    ecx,0x20
    9632:	divsd  xmm0,xmm1
    9636:	call   5200 <__printf_chk@plt>
    963b:	add    r14,0x8
    963f:	mov    QWORD PTR [rbx+0x60],0x0
    9647:	mov    DWORD PTR [rbx+0x58],0x0
    964e:	mov    QWORD PTR [rbx+0x68],0x0
    9656:	cmp    r14,rbp
    9659:	jne    95e0 <interval_cr3_schedule_ordered_output+0x80>
    965b:	pop    rbx
    965c:	mov    rdi,r12
    965f:	pop    rbp
    9660:	pop    r12
    9662:	pop    r13
    9664:	pop    r14
    9666:	jmp    5040 <free@plt>
    966b:	nop    DWORD PTR [rax+rax*1+0x0]
    9670:	pop    rbx
    9671:	pop    rbp
    9672:	pop    r12
    9674:	pop    r13
    9676:	pop    r14
    9678:	ret    
    9679:	nop    DWORD PTR [rax+0x0]

0000000000009680 <interval_cr3_short_summary_header>:
    9680:	push   r12
    9682:	lea    rsi,[rip+0x14c34]        # 1e2bd <_IO_stdin_used+0x2bd>
    9689:	mov    edi,0x1
    968e:	xor    eax,eax
    9690:	push   rbp
    9691:	lea    rbp,[rip+0x14b39]        # 1e1d1 <_IO_stdin_used+0x1d1>
    9698:	push   rbx
    9699:	lea    rbx,[rip+0x21e60]        # 2b500 <hvm_short_summary_name>
    96a0:	lea    r12,[rbx+0x50]
    96a4:	call   5200 <__printf_chk@plt>
    96a9:	nop    DWORD PTR [rax+0x0]
    96b0:	mov    rdx,QWORD PTR [rbx]
    96b3:	mov    rsi,rbp
    96b6:	mov    edi,0x1
    96bb:	xor    eax,eax
    96bd:	add    rbx,0x8
    96c1:	call   5200 <__printf_chk@plt>
    96c6:	cmp    rbx,r12
    96c9:	jne    96b0 <interval_cr3_short_summary_header+0x30>
    96cb:	pop    rbx
    96cc:	mov    edi,0xa
    96d1:	pop    rbp
    96d2:	pop    r12
    96d4:	jmp    5050 <putchar@plt>
    96d9:	nop    DWORD PTR [rax+0x0]

00000000000096e0 <interval_cr3_short_summary_output>:
    96e0:	push   r13
    96e2:	push   r12
    96e4:	push   rbp
    96e5:	push   rbx
    96e6:	sub    rsp,0x8
    96ea:	mov    rbp,QWORD PTR [rip+0x5db0f]        # 67200 <P+0x38060>
    96f1:	test   rbp,rbp
    96f4:	je     97e0 <interval_cr3_short_summary_output+0x100>
    96fa:	call   9090 <interval_time_output>
    96ff:	mov    rax,QWORD PTR [rbp+0x60]
    9703:	pxor   xmm0,xmm0
    9707:	pxor   xmm1,xmm1
    970b:	cvtsi2sd xmm1,QWORD PTR [rip+0x219d4]        # 2b0e8 <opt+0x48>
    9714:	lea    rsi,[rip+0x14b3a]        # 1e255 <_IO_stdin_used+0x255>
    971b:	mov    edi,0x1
    9720:	lea    rax,[rax+rax*4]
    9724:	lea    rbx,[rbp+0x108]
    972b:	lea    rax,[rax+rax*4]
    972f:	lea    r13,[rbp+0x338]
    9736:	shl    rax,0x2
    973a:	lea    r12,[rip+0x14b14]        # 1e255 <_IO_stdin_used+0x255>
    9741:	cvtsi2sd xmm0,rax
    9746:	mov    eax,0x1
    974b:	divsd  xmm0,xmm1
    974f:	call   5200 <__printf_chk@plt>
    9754:	nop    DWORD PTR [rax+0x0]
    9758:	mov    rax,QWORD PTR [rbx+0x8]
    975c:	pxor   xmm0,xmm0
    9760:	pxor   xmm1,xmm1
    9764:	mov    rsi,r12
    9767:	cvtsi2sd xmm1,QWORD PTR [rbp+0x60]
    976d:	mov    edi,0x1
    9772:	add    rbx,0x38
    9776:	lea    rax,[rax+rax*4]
    977a:	lea    rax,[rax+rax*4]
    977e:	shl    rax,0x2
    9782:	cvtsi2sd xmm0,rax
    9787:	mov    eax,0x1
    978c:	divsd  xmm0,xmm1
    9790:	call   5200 <__printf_chk@plt>
    9795:	mov    QWORD PTR [rbx-0x30],0x0
    979d:	mov    DWORD PTR [rbx-0x38],0x0
    97a4:	mov    QWORD PTR [rbx-0x28],0x0
    97ac:	cmp    r13,rbx
    97af:	jne    9758 <interval_cr3_short_summary_output+0x78>
    97b1:	mov    QWORD PTR [rbp+0x60],0x0
    97b9:	mov    edi,0xa
    97be:	mov    DWORD PTR [rbp+0x58],0x0
    97c5:	mov    QWORD PTR [rbp+0x68],0x0
    97cd:	add    rsp,0x8
    97d1:	pop    rbx
    97d2:	pop    rbp
    97d3:	pop    r12
    97d5:	pop    r13
    97d7:	jmp    5050 <putchar@plt>
    97dc:	nop    DWORD PTR [rax+0x0]
    97e0:	add    rsp,0x8
    97e4:	pop    rbx
    97e5:	pop    rbp
    97e6:	pop    r12
    97e8:	pop    r13
    97ea:	ret    
    97eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000097f0 <interval_domain_value_check>:
    97f0:	push   r13
    97f2:	push   r12
    97f4:	mov    r12,rdi
    97f7:	push   rbp
    97f8:	push   rbx
    97f9:	sub    rsp,0x38
    97fd:	mov    rax,QWORD PTR fs:0x28
    9806:	mov    QWORD PTR [rsp+0x28],rax
    980b:	xor    eax,eax
    980d:	mov    eax,DWORD PTR [rip+0x218e5]        # 2b0f8 <opt+0x58>
    9813:	cmp    eax,0x1
    9816:	je     9858 <interval_domain_value_check+0x68>
    9818:	movsxd r9,DWORD PTR [rdi+0x8]
    981c:	cmp    eax,0x2
    981f:	je     98f0 <interval_domain_value_check+0x100>
    9825:	mov    rax,QWORD PTR [rip+0x218d4]        # 2b100 <opt+0x60>
    982c:	cmp    r9,QWORD PTR [rax]
    982f:	je     98e0 <interval_domain_value_check+0xf0>
    9835:	mov    rax,QWORD PTR [rsp+0x28]
    983a:	xor    rax,QWORD PTR fs:0x28
    9843:	jne    9928 <interval_domain_value_check+0x138>
    9849:	add    rsp,0x38
    984d:	pop    rbx
    984e:	pop    rbp
    984f:	pop    r12
    9851:	pop    r13
    9853:	ret    
    9854:	nop    DWORD PTR [rax+0x0]
    9858:	mov    eax,DWORD PTR [rip+0x218aa]        # 2b108 <opt+0x68>
    985e:	xor    ebx,ebx
    9860:	lea    r13,[rdi+0x840]
    9867:	test   eax,eax
    9869:	jg     987c <interval_domain_value_check+0x8c>
    986b:	jmp    9835 <interval_domain_value_check+0x45>
    986d:	nop    DWORD PTR [rax]
    9870:	add    rbx,0x1
    9874:	cmp    DWORD PTR [rip+0x2188e],ebx        # 2b108 <opt+0x68>
    987a:	jle    9835 <interval_domain_value_check+0x45>
    987c:	movsxd rdx,DWORD PTR [r12+0x8]
    9881:	mov    rax,QWORD PTR [rip+0x21878]        # 2b100 <opt+0x60>
    9888:	lea    rbp,[rbx*8+0x0]
    9890:	mov    rcx,rdx
    9893:	cmp    rdx,QWORD PTR [rax+rbx*8]
    9897:	jne    9870 <interval_domain_value_check+0x80>
    9899:	mov    rax,QWORD PTR [rip+0x5d960]        # 67200 <P+0x38060>
    98a0:	add    rax,rbp
    98a3:	cmp    QWORD PTR [rax],0x0
    98a7:	je     98d6 <interval_domain_value_check+0xe6>
    98a9:	mov    rdi,QWORD PTR [rip+0x24b90]        # 2e440 <stderr@@GLIBC_2.2.5>
    98b0:	xor    eax,eax
    98b2:	mov    esi,0x1
    98b7:	lea    rdx,[rip+0x17112]        # 209d0 <_IO_stdin_used+0x29d0>
    98be:	call   5270 <__fprintf_chk@plt>
    98c3:	cmp    DWORD PTR [rip+0x21816],0x6        # 2b0e0 <opt+0x40>
    98ca:	jbe    992d <interval_domain_value_check+0x13d>
    98cc:	mov    rax,QWORD PTR [rip+0x5d92d]        # 67200 <P+0x38060>
    98d3:	add    rax,rbp
    98d6:	mov    QWORD PTR [rax],r13
    98d9:	jmp    9870 <interval_domain_value_check+0x80>
    98db:	nop    DWORD PTR [rax+rax*1+0x0]
    98e0:	mov    QWORD PTR [rip+0x5d919],rdi        # 67200 <P+0x38060>
    98e7:	jmp    9835 <interval_domain_value_check+0x45>
    98ec:	nop    DWORD PTR [rax+0x0]
    98f0:	mov    rbx,rsp
    98f3:	mov    ecx,0x20
    98f8:	mov    edx,0x1
    98fd:	xor    eax,eax
    98ff:	mov    rdi,rbx
    9902:	lea    r8,[rip+0x14c22]        # 1e52b <_IO_stdin_used+0x52b>
    9909:	mov    esi,0x20
    990e:	call   5030 <__snprintf_chk@plt>
    9913:	lea    rdi,[r12+0x840]
    991b:	mov    rsi,rbx
    991e:	call   9290 <interval_list_add>
    9923:	jmp    9835 <interval_domain_value_check+0x45>
    9928:	call   50d0 <__stack_chk_fail@plt>
    992d:	mov    edi,0x1
    9932:	call   5250 <exit@plt>
    9937:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009940 <interval_domain_short_summary_header>:
    9940:	push   r12
    9942:	lea    rsi,[rip+0x1497f]        # 1e2c8 <_IO_stdin_used+0x2c8>
    9949:	mov    edi,0x1
    994e:	xor    eax,eax
    9950:	push   rbp
    9951:	lea    rbp,[rip+0x14879]        # 1e1d1 <_IO_stdin_used+0x1d1>
    9958:	push   rbx
    9959:	lea    rbx,[rip+0x21ba0]        # 2b500 <hvm_short_summary_name>
    9960:	lea    r12,[rbx+0x50]
    9964:	call   5200 <__printf_chk@plt>
    9969:	nop    DWORD PTR [rax+0x0]
    9970:	mov    rdx,QWORD PTR [rbx]
    9973:	mov    rsi,rbp
    9976:	mov    edi,0x1
    997b:	xor    eax,eax
    997d:	add    rbx,0x8
    9981:	call   5200 <__printf_chk@plt>
    9986:	cmp    rbx,r12
    9989:	jne    9970 <interval_domain_short_summary_header+0x30>
    998b:	pop    rbx
    998c:	mov    edi,0xa
    9991:	pop    rbp
    9992:	pop    r12
    9994:	jmp    5050 <putchar@plt>
    9999:	nop    DWORD PTR [rax+0x0]

00000000000099a0 <interval_domain_short_summary_output>:
    99a0:	push   rbp
    99a1:	push   rbx
    99a2:	sub    rsp,0x8
    99a6:	mov    rbp,QWORD PTR [rip+0x5d853]        # 67200 <P+0x38060>
    99ad:	test   rbp,rbp
    99b0:	je     9a00 <interval_domain_short_summary_output+0x60>
    99b2:	call   9090 <interval_time_output>
    99b7:	lea    rdi,[rbp+0x840]
    99be:	lea    rbx,[rbp+0xf98]
    99c5:	add    rbp,0x11c8
    99cc:	call   9030 <interval_cycle_percent_output>
    99d1:	nop    DWORD PTR [rax+0x0]
    99d8:	mov    rdi,rbx
    99db:	add    rbx,0x38
    99df:	call   9030 <interval_cycle_percent_output>
    99e4:	cmp    rbx,rbp
    99e7:	jne    99d8 <interval_domain_short_summary_output+0x38>
    99e9:	add    rsp,0x8
    99ed:	mov    edi,0xa
    99f2:	pop    rbx
    99f3:	pop    rbp
    99f4:	jmp    5050 <putchar@plt>
    99f9:	nop    DWORD PTR [rax+0x0]
    9a00:	add    rsp,0x8
    9a04:	pop    rbx
    9a05:	pop    rbp
    9a06:	ret    
    9a07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009a10 <interval_domain_guest_interrupt>:
    9a10:	mov    rax,QWORD PTR [rdi+0x10]
    9a14:	lea    rcx,[rip+0x5d7ed]        # 67208 <P+0x38068>
    9a1b:	mov    r8,QWORD PTR [rax+0x8]
    9a1f:	xor    eax,eax
    9a21:	nop    DWORD PTR [rax+0x0]
    9a28:	mov    edx,DWORD PTR [rcx+rax*4]
    9a2b:	movsxd rdi,eax
    9a2e:	test   edx,edx
    9a30:	je     9a78 <interval_domain_guest_interrupt+0x68>
    9a32:	cmp    edx,esi
    9a34:	je     9a86 <interval_domain_guest_interrupt+0x76>
    9a36:	add    rax,0x1
    9a3a:	cmp    rax,0xa
    9a3e:	jne    9a28 <interval_domain_guest_interrupt+0x18>
    9a40:	sub    rsp,0x8
    9a44:	xor    eax,eax
    9a46:	mov    ecx,0xa
    9a4b:	mov    esi,0x1
    9a50:	mov    rdi,QWORD PTR [rip+0x249e9]        # 2e440 <stderr@@GLIBC_2.2.5>
    9a57:	lea    rdx,[rip+0x16f9a]        # 209f8 <_IO_stdin_used+0x29f8>
    9a5e:	call   5270 <__fprintf_chk@plt>
    9a63:	cmp    DWORD PTR [rip+0x21676],0x5        # 2b0e0 <opt+0x40>
    9a6a:	jbe    9a93 <interval_domain_guest_interrupt+0x83>
    9a6c:	add    rsp,0x8
    9a70:	ret    
    9a71:	nop    DWORD PTR [rax+0x0]
    9a78:	lea    rax,[rip+0x25721]        # 2f1a0 <P>
    9a7f:	mov    DWORD PTR [rax+rdi*4+0x38068],esi
    9a86:	movsxd rsi,esi
    9a89:	add    DWORD PTR [r8+rsi*4+0x9f8],0x1
    9a92:	ret    
    9a93:	mov    edi,0x1
    9a98:	call   5250 <exit@plt>
    9a9d:	nop    DWORD PTR [rax]

0000000000009aa0 <interval_domain_guest_interrupt_tail>:
    9aa0:	push   r12
    9aa2:	lea    rsi,[rip+0x1481f]        # 1e2c8 <_IO_stdin_used+0x2c8>
    9aa9:	mov    edi,0x1
    9aae:	xor    eax,eax
    9ab0:	push   rbp
    9ab1:	lea    rbp,[rip+0x14a72]        # 1e52a <_IO_stdin_used+0x52a>
    9ab8:	push   rbx
    9ab9:	lea    rbx,[rip+0x5d748]        # 67208 <P+0x38068>
    9ac0:	lea    r12,[rbx+0x28]
    9ac4:	call   5200 <__printf_chk@plt>
    9ac9:	nop    DWORD PTR [rax+0x0]
    9ad0:	mov    edx,DWORD PTR [rbx]
    9ad2:	test   edx,edx
    9ad4:	je     9aee <interval_domain_guest_interrupt_tail+0x4e>
    9ad6:	mov    rsi,rbp
    9ad9:	mov    edi,0x1
    9ade:	xor    eax,eax
    9ae0:	add    rbx,0x4
    9ae4:	call   5200 <__printf_chk@plt>
    9ae9:	cmp    rbx,r12
    9aec:	jne    9ad0 <interval_domain_guest_interrupt_tail+0x30>
    9aee:	pop    rbx
    9aef:	mov    edi,0xa
    9af4:	pop    rbp
    9af5:	pop    r12
    9af7:	jmp    5050 <putchar@plt>
    9afc:	nop    DWORD PTR [rax+0x0]

0000000000009b00 <interval_domain_guest_interrupt_output>:
    9b00:	push   r14
    9b02:	push   r13
    9b04:	push   r12
    9b06:	push   rbp
    9b07:	mov    rbp,QWORD PTR [rip+0x5d6f2]        # 67200 <P+0x38060>
    9b0e:	push   rbx
    9b0f:	test   rbp,rbp
    9b12:	je     9b80 <interval_domain_guest_interrupt_output+0x80>
    9b14:	lea    rbx,[rip+0x5d6ed]        # 67208 <P+0x38068>
    9b1b:	lea    r12,[rip+0x14a08]        # 1e52a <_IO_stdin_used+0x52a>
    9b22:	call   9090 <interval_time_output>
    9b27:	lea    r13,[rbx+0x28]
    9b2b:	nop    DWORD PTR [rax+rax*1+0x0]
    9b30:	movsxd rax,DWORD PTR [rbx]
    9b33:	test   eax,eax
    9b35:	je     9b66 <interval_domain_guest_interrupt_output+0x66>
    9b37:	lea    r14,[rbp+rax*4+0x0]
    9b3c:	mov    rsi,r12
    9b3f:	mov    edi,0x1
    9b44:	xor    eax,eax
    9b46:	mov    edx,DWORD PTR [r14+0x9f8]
    9b4d:	add    rbx,0x4
    9b51:	call   5200 <__printf_chk@plt>
    9b56:	mov    DWORD PTR [r14+0x9f8],0x0
    9b61:	cmp    rbx,r13
    9b64:	jne    9b30 <interval_domain_guest_interrupt_output+0x30>
    9b66:	pop    rbx
    9b67:	mov    edi,0xa
    9b6c:	pop    rbp
    9b6d:	pop    r12
    9b6f:	pop    r13
    9b71:	pop    r14
    9b73:	jmp    5050 <putchar@plt>
    9b78:	nop    DWORD PTR [rax+rax*1+0x0]
    9b80:	pop    rbx
    9b81:	pop    rbp
    9b82:	pop    r12
    9b84:	pop    r13
    9b86:	pop    r14
    9b88:	ret    
    9b89:	nop    DWORD PTR [rax+0x0]

0000000000009b90 <interval_domain_grant_maps_output>:
    9b90:	push   rbx
    9b91:	mov    rbx,QWORD PTR [rip+0x5d668]        # 67200 <P+0x38060>
    9b98:	test   rbx,rbx
    9b9b:	je     9bd0 <interval_domain_grant_maps_output+0x40>
    9b9d:	call   9090 <interval_time_output>
    9ba2:	mov    edx,DWORD PTR [rbx+0x1290]
    9ba8:	mov    edi,0x1
    9bad:	xor    eax,eax
    9baf:	lea    rsi,[rip+0x14974]        # 1e52a <_IO_stdin_used+0x52a>
    9bb6:	call   5200 <__printf_chk@plt>
    9bbb:	mov    edi,0xa
    9bc0:	mov    DWORD PTR [rbx+0x1290],0x0
    9bca:	pop    rbx
    9bcb:	jmp    5050 <putchar@plt>
    9bd0:	pop    rbx
    9bd1:	ret    
    9bd2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    9bdd:	nop    DWORD PTR [rax]

0000000000009be0 <interval_callback>:
    9be0:	mov    eax,DWORD PTR [rip+0x21512]        # 2b0f8 <opt+0x58>
    9be6:	sub    eax,0x1
    9be9:	cmp    eax,0x1
    9bec:	jbe    9c10 <interval_callback+0x30>
    9bee:	cmp    DWORD PTR [rip+0x214ff],0x6        # 2b0f4 <opt+0x54>
    9bf5:	ja     9c40 <interval_callback+0x60>
    9bf7:	mov    eax,DWORD PTR [rip+0x214f7]        # 2b0f4 <opt+0x54>
    9bfd:	lea    rdx,[rip+0x1a37c]        # 23f80 <_IO_stdin_used+0x5f80>
    9c04:	movsxd rax,DWORD PTR [rdx+rax*4]
    9c08:	add    rax,rdx
    9c0b:	jmp    rax
    9c0d:	nop    DWORD PTR [rax]
    9c10:	jmp    9100 <interval_table_output>
    9c15:	nop    DWORD PTR [rax]
    9c18:	jmp    9b90 <interval_domain_grant_maps_output>
    9c1d:	nop    DWORD PTR [rax]
    9c20:	jmp    9560 <interval_cr3_schedule_ordered_output>
    9c25:	nop    DWORD PTR [rax]
    9c28:	jmp    96e0 <interval_cr3_short_summary_output>
    9c2d:	nop    DWORD PTR [rax]
    9c30:	jmp    99a0 <interval_domain_short_summary_output>
    9c35:	nop    DWORD PTR [rax]
    9c38:	jmp    9b00 <interval_domain_guest_interrupt_output>
    9c3d:	nop    DWORD PTR [rax]
    9c40:	ret    
    9c41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    9c4c:	nop    DWORD PTR [rax+0x0]

0000000000009c50 <interval_header>:
    9c50:	mov    eax,DWORD PTR [rip+0x2149e]        # 2b0f4 <opt+0x54>
    9c56:	cmp    eax,0x2
    9c59:	je     9c70 <interval_header+0x20>
    9c5b:	cmp    eax,0x4
    9c5e:	jne    9c68 <interval_header+0x18>
    9c60:	jmp    9940 <interval_domain_short_summary_header>
    9c65:	nop    DWORD PTR [rax]
    9c68:	ret    
    9c69:	nop    DWORD PTR [rax+0x0]
    9c70:	jmp    9680 <interval_cr3_short_summary_header>
    9c75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000009c80 <interval_tail>:
    9c80:	cmp    DWORD PTR [rip+0x21471],0x2        # 2b0f8 <opt+0x58>
    9c87:	je     9ca0 <interval_tail+0x20>
    9c89:	cmp    DWORD PTR [rip+0x21464],0x5        # 2b0f4 <opt+0x54>
    9c90:	je     9c98 <interval_tail+0x18>
    9c92:	ret    
    9c93:	nop    DWORD PTR [rax+rax*1+0x0]
    9c98:	jmp    9aa0 <interval_domain_guest_interrupt_tail>
    9c9d:	nop    DWORD PTR [rax]
    9ca0:	jmp    91b0 <interval_table_tail>
    9ca5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000009cb0 <update_eip>:
    9cb0:	push   r15
    9cb2:	mov    r15d,ecx
    9cb5:	push   r14
    9cb7:	mov    r14,rdx
    9cba:	push   r13
    9cbc:	push   r12
    9cbe:	mov    r12,rsi
    9cc1:	push   rbp
    9cc2:	mov    rbp,rdi
    9cc5:	push   rbx
    9cc6:	sub    rsp,0x18
    9cca:	mov    rbx,QWORD PTR [rdi]
    9ccd:	test   rbx,rbx
    9cd0:	je     9cf8 <update_eip+0x48>
    9cd2:	mov    rax,QWORD PTR [rbx+0x8]
    9cd6:	cmp    rsi,rax
    9cd9:	ja     9ced <update_eip+0x3d>
    9cdb:	jmp    9da0 <update_eip+0xf0>
    9ce0:	mov    rax,QWORD PTR [rbx+0x8]
    9ce4:	cmp    rax,r12
    9ce7:	jae    9da0 <update_eip+0xf0>
    9ced:	mov    rbp,rbx
    9cf0:	mov    rbx,QWORD PTR [rbx]
    9cf3:	test   rbx,rbx
    9cf6:	jne    9ce0 <update_eip+0x30>
    9cf8:	mov    edi,0x58
    9cfd:	mov    QWORD PTR [rsp+0x8],r8
    9d02:	call   51a0 <malloc@plt>
    9d07:	mov    r8,QWORD PTR [rsp+0x8]
    9d0c:	test   rax,rax
    9d0f:	mov    r13,rax
    9d12:	mov    rbx,rax
    9d15:	je     9e80 <update_eip+0x1d0>
    9d1b:	xor    eax,eax
    9d1d:	mov    ecx,0xb
    9d22:	mov    rdi,r13
    9d25:	movsxd rdx,r15d
    9d28:	rep stos QWORD PTR es:[rdi],rax
    9d2b:	lea    rdx,[rdx+rdx*2]
    9d2f:	lea    rax,[rip+0x5d50a]        # 67240 <eip_list_type>
    9d36:	mov    QWORD PTR [r13+0x8],r12
    9d3a:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
    9d3f:	mov    DWORD PTR [r13+0x48],r15d
    9d43:	test   rax,rax
    9d46:	je     9d50 <update_eip+0xa0>
    9d48:	mov    rsi,r8
    9d4b:	mov    rdi,r13
    9d4e:	call   rax
    9d50:	mov    rax,QWORD PTR [rbp+0x0]
    9d54:	mov    QWORD PTR [r13+0x0],rax
    9d58:	mov    QWORD PTR [rbp+0x0],r13
    9d5c:	add    DWORD PTR [rbx+0x10],0x1
    9d60:	test   r14,r14
    9d63:	je     9d87 <update_eip+0xd7>
    9d65:	movsxd rcx,DWORD PTR [rbx+0x14]
    9d69:	mov    edx,DWORD PTR [rip+0x21369]        # 2b0d8 <opt+0x38>
    9d6f:	mov    eax,ecx
    9d71:	test   edx,edx
    9d73:	jne    9de0 <update_eip+0x130>
    9d75:	add    eax,0x1
    9d78:	add    QWORD PTR [rbx+0x20],r14
    9d7c:	add    DWORD PTR [rbx+0x30],0x1
    9d80:	add    QWORD PTR [rbx+0x38],r14
    9d84:	mov    DWORD PTR [rbx+0x14],eax
    9d87:	add    rsp,0x18
    9d8b:	pop    rbx
    9d8c:	pop    rbp
    9d8d:	pop    r12
    9d8f:	pop    r13
    9d91:	pop    r14
    9d93:	pop    r15
    9d95:	ret    
    9d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9da0:	cmp    r12,rax
    9da3:	jne    9cf8 <update_eip+0x48>
    9da9:	mov    ecx,DWORD PTR [rbx+0x48]
    9dac:	cmp    ecx,r15d
    9daf:	jne    9ec0 <update_eip+0x210>
    9db5:	movsxd rdx,r15d
    9db8:	lea    rax,[rip+0x5d481]        # 67240 <eip_list_type>
    9dbf:	lea    rdx,[rdx+rdx*2]
    9dc3:	mov    rax,QWORD PTR [rax+rdx*8]
    9dc7:	test   rax,rax
    9dca:	je     9d5c <update_eip+0xac>
    9dcc:	mov    rsi,r8
    9dcf:	mov    rdi,rbx
    9dd2:	call   rax
    9dd4:	jmp    9d5c <update_eip+0xac>
    9dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    9de0:	mov    eax,DWORD PTR [rbx+0x18]
    9de3:	cmp    eax,ecx
    9de5:	jg     9eb0 <update_eip+0x200>
    9deb:	mov    ebp,DWORD PTR [rip+0x212eb]        # 2b0dc <opt+0x3c>
    9df1:	test   ecx,ecx
    9df3:	je     9e01 <update_eip+0x151>
    9df5:	test   ebp,ebp
    9df7:	je     9e01 <update_eip+0x151>
    9df9:	cmp    eax,ebp
    9dfb:	jge    9ee2 <update_eip+0x232>
    9e01:	add    eax,eax
    9e03:	cmove  eax,edx
    9e06:	test   ebp,ebp
    9e08:	je     9ef1 <update_eip+0x241>
    9e0e:	cmp    eax,ebp
    9e10:	jle    9ef1 <update_eip+0x241>
    9e16:	movsxd rsi,ebp
    9e19:	mov    rdi,QWORD PTR [rbx+0x28]
    9e1d:	shl    rsi,0x3
    9e21:	call   51d0 <realloc@plt>
    9e26:	test   rax,rax
    9e29:	je     9ee9 <update_eip+0x239>
    9e2f:	mov    QWORD PTR [rbx+0x28],rax
    9e33:	mov    DWORD PTR [rbx+0x18],ebp
    9e36:	movsxd rcx,DWORD PTR [rbx+0x14]
    9e3a:	cmp    ecx,ebp
    9e3c:	jl     9eb0 <update_eip+0x200>
    9e3e:	mov    eax,ecx
    9e40:	cdq    
    9e41:	idiv   ebp
    9e43:	lea    esi,[rax+0x1]
    9e46:	movsxd rdi,edx
    9e49:	mov    edx,0x55555556
    9e4e:	mov    eax,esi
    9e50:	imul   edx
    9e52:	mov    eax,esi
    9e54:	sar    eax,0x1f
    9e57:	sub    eax,edx
    9e59:	add    eax,edi
    9e5b:	cdq    
    9e5c:	idiv   esi
    9e5e:	mov    eax,ecx
    9e60:	test   edx,edx
    9e62:	jne    9d75 <update_eip+0xc5>
    9e68:	mov    rax,QWORD PTR [rbx+0x28]
    9e6c:	mov    QWORD PTR [rax+rdi*8],r14
    9e70:	mov    eax,DWORD PTR [rbx+0x14]
    9e73:	jmp    9d75 <update_eip+0xc5>
    9e78:	nop    DWORD PTR [rax+rax*1+0x0]
    9e80:	lea    rdi,[rip+0x1444e]        # 1e2d5 <_IO_stdin_used+0x2d5>
    9e87:	call   5240 <perror@plt>
    9e8c:	cmp    DWORD PTR [rip+0x2124d],0x7        # 2b0e0 <opt+0x40>
    9e93:	mov    r8,QWORD PTR [rsp+0x8]
    9e98:	ja     9d1b <update_eip+0x6b>
    9e9e:	mov    edi,0x1
    9ea3:	call   5250 <exit@plt>
    9ea8:	nop    DWORD PTR [rax+rax*1+0x0]
    9eb0:	mov    rax,QWORD PTR [rbx+0x28]
    9eb4:	mov    QWORD PTR [rax+rcx*8],r14
    9eb8:	mov    eax,DWORD PTR [rbx+0x14]
    9ebb:	jmp    9d75 <update_eip+0xc5>
    9ec0:	mov    rdi,QWORD PTR [rip+0x24579]        # 2e440 <stderr@@GLIBC_2.2.5>
    9ec7:	mov    r8d,r15d
    9eca:	mov    esi,0x1
    9ecf:	xor    eax,eax
    9ed1:	lea    rdx,[rip+0x1440b]        # 1e2e3 <_IO_stdin_used+0x2e3>
    9ed8:	call   5270 <__fprintf_chk@plt>
    9edd:	jmp    9d5c <update_eip+0xac>
    9ee2:	mov    ebp,eax
    9ee4:	jmp    9e3e <update_eip+0x18e>
    9ee9:	mov    ebp,DWORD PTR [rbx+0x18]
    9eec:	jmp    9e36 <update_eip+0x186>
    9ef1:	mov    ebp,eax
    9ef3:	jmp    9e16 <update_eip+0x166>
    9ef8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000009f00 <dump_eip>:
    9f00:	test   rdi,rdi
    9f03:	je     a170 <dump_eip+0x270>
    9f09:	push   r15
    9f0b:	mov    rax,rdi
    9f0e:	xor    r15d,r15d
    9f11:	xor    edx,edx
    9f13:	push   r14
    9f15:	push   r13
    9f17:	push   r12
    9f19:	mov    r12,rdi
    9f1c:	push   rbp
    9f1d:	push   rbx
    9f1e:	sub    rsp,0x28
    9f22:	jmp    9f2b <dump_eip+0x2b>
    9f24:	nop    DWORD PTR [rax+0x0]
    9f28:	movsxd r15,esi
    9f2b:	mov    ebx,DWORD PTR [rax+0x14]
    9f2e:	mov    rax,QWORD PTR [rax]
    9f31:	lea    esi,[r15+0x1]
    9f35:	add    ebx,edx
    9f37:	mov    edx,ebx
    9f39:	test   rax,rax
    9f3c:	jne    9f28 <dump_eip+0x28>
    9f3e:	movsxd r13,esi
    9f41:	lea    rdi,[r13*8+0x0]
    9f49:	call   51a0 <malloc@plt>
    9f4e:	mov    r14,rax
    9f51:	mov    rbp,rax
    9f54:	mov    QWORD PTR [rax],r12
    9f57:	mov    r12,QWORD PTR [r12]
    9f5b:	add    rax,0x8
    9f5f:	test   r12,r12
    9f62:	jne    9f54 <dump_eip+0x54>
    9f64:	mov    rsi,r13
    9f67:	mov    edx,0x8
    9f6c:	lea    r13,[r14+r15*8+0x8]
    9f71:	mov    rdi,r14
    9f74:	lea    rcx,[rip+0xffffffffffffb615]        # 5590 <eip_compare>
    9f7b:	lea    r12,[rip+0x5d2be]        # 67240 <eip_list_type>
    9f82:	call   50a0 <qsort@plt>
    9f87:	mov    edx,ebx
    9f89:	lea    rsi,[rip+0x14370]        # 1e300 <_IO_stdin_used+0x300>
    9f90:	xor    eax,eax
    9f92:	mov    edi,0x1
    9f97:	call   5200 <__printf_chk@plt>
    9f9c:	jmp    a102 <dump_eip+0x202>
    9fa1:	nop    DWORD PTR [rax+0x0]
    9fa8:	mov    esi,DWORD PTR [r15+0x10]
    9fac:	test   esi,esi
    9fae:	je     a0e2 <dump_eip+0x1e2>
    9fb4:	mov    ecx,DWORD PTR [rip+0x2111e]        # 2b0d8 <opt+0x38>
    9fba:	test   ecx,ecx
    9fbc:	je     a190 <dump_eip+0x290>
    9fc2:	mov    ecx,DWORD PTR [r15+0x14]
    9fc6:	cmp    DWORD PTR [r15+0x18],ecx
    9fca:	cmovle ecx,DWORD PTR [r15+0x18]
    9fcf:	test   ecx,ecx
    9fd1:	je     a260 <dump_eip+0x360>
    9fd7:	mov    rdi,QWORD PTR [r15+0x28]
    9fdb:	mov    esi,ecx
    9fdd:	mov    edx,0x32
    9fe2:	mov    DWORD PTR [rsp+0x8],ecx
    9fe6:	call   57f0 <percentile.part.6>
    9feb:	mov    ecx,DWORD PTR [rsp+0x8]
    9fef:	mov    rdi,QWORD PTR [r15+0x28]
    9ff3:	mov    edx,0x5
    9ff8:	mov    QWORD PTR [rsp+0x10],rax
    9ffd:	mov    esi,ecx
    9fff:	mov    DWORD PTR [rsp+0x18],ecx
    a003:	call   57f0 <percentile.part.6>
    a008:	mov    ecx,DWORD PTR [rsp+0x18]
    a00c:	mov    rdi,QWORD PTR [r15+0x28]
    a010:	mov    edx,0x5f
    a015:	mov    QWORD PTR [rsp+0x8],rax
    a01a:	mov    esi,ecx
    a01c:	call   57f0 <percentile.part.6>
    a021:	mov    r8,rax
    a024:	mov    rdi,QWORD PTR [r15+0x8]
    a028:	mov    QWORD PTR [rsp+0x18],r8
    a02d:	call   7ee0 <find_symbol>
    a032:	mov    rdx,QWORD PTR [r15+0x8]
    a036:	mov    edi,0x1
    a03b:	lea    rsi,[rip+0x142d4]        # 1e316 <_IO_stdin_used+0x316>
    a042:	mov    rcx,rax
    a045:	xor    eax,eax
    a047:	call   5200 <__printf_chk@plt>
    a04c:	mov    eax,DWORD PTR [r15+0x14]
    a050:	xor    ecx,ecx
    a052:	mov    rsi,QWORD PTR [r15+0x20]
    a056:	mov    r8,QWORD PTR [rsp+0x18]
    a05b:	test   eax,eax
    a05d:	je     a06d <dump_eip+0x16d>
    a05f:	movsxd rcx,eax
    a062:	xor    edx,edx
    a064:	mov    rax,rsi
    a067:	div    rcx
    a06a:	mov    rcx,rax
    a06d:	lea    rax,[rsi+rsi*4]
    a071:	pxor   xmm1,xmm1
    a075:	pxor   xmm0,xmm0
    a079:	cvtsi2sd xmm0,QWORD PTR [rip+0x2514e]        # 2f1d0 <P+0x30>
    a082:	lea    rdx,[rax+rax*4]
    a086:	shl    rdx,0x2
    a08a:	cvtsi2sd xmm1,rdx
    a08f:	divsd  xmm1,xmm0
    a093:	test   rsi,rsi
    a096:	js     a240 <dump_eip+0x340>
    a09c:	pxor   xmm0,xmm0
    a0a0:	cvtsi2sd xmm0,rsi
    a0a5:	pxor   xmm2,xmm2
    a0a9:	sub    rsp,0x8
    a0ad:	mov    edx,DWORD PTR [r15+0x10]
    a0b1:	lea    rsi,[rip+0x16760]        # 20818 <_IO_stdin_used+0x2818>
    a0b8:	cvtsi2sd xmm2,QWORD PTR [rip+0x20fef]        # 2b0b0 <opt+0x10>
    a0c1:	push   r8
    a0c3:	mov    r9,QWORD PTR [rsp+0x20]
    a0c8:	mov    edi,0x1
    a0cd:	mov    r8,QWORD PTR [rsp+0x18]
    a0d2:	mov    eax,0x2
    a0d7:	divsd  xmm0,xmm2
    a0db:	call   5200 <__printf_chk@plt>
    a0e0:	pop    rax
    a0e1:	pop    rdx
    a0e2:	movsxd rax,DWORD PTR [r15+0x48]
    a0e6:	lea    rax,[rax+rax*2]
    a0ea:	mov    rax,QWORD PTR [r12+rax*8+0x10]
    a0ef:	test   rax,rax
    a0f2:	je     a0f9 <dump_eip+0x1f9>
    a0f4:	mov    rdi,r15
    a0f7:	call   rax
    a0f9:	add    rbp,0x8
    a0fd:	cmp    r13,rbp
    a100:	je     a178 <dump_eip+0x278>
    a102:	mov    r15,QWORD PTR [rbp+0x0]
    a106:	cmp    QWORD PTR [r15+0x20],0x0
    a10b:	jne    9fa8 <dump_eip+0xa8>
    a111:	mov    rdi,QWORD PTR [r15+0x8]
    a115:	call   7ee0 <find_symbol>
    a11a:	mov    rdx,QWORD PTR [r15+0x8]
    a11e:	mov    edi,0x1
    a123:	lea    rsi,[rip+0x141ec]        # 1e316 <_IO_stdin_used+0x316>
    a12a:	mov    rcx,rax
    a12d:	xor    eax,eax
    a12f:	call   5200 <__printf_chk@plt>
    a134:	mov    edx,DWORD PTR [r15+0x14]
    a138:	pxor   xmm0,xmm0
    a13c:	pxor   xmm1,xmm1
    a140:	cvtsi2sd xmm1,ebx
    a144:	mov    edi,0x1
    a149:	mov    eax,0x1
    a14e:	cvtsi2sd xmm0,edx
    a152:	mulsd  xmm0,QWORD PTR [rip+0x1a78e]        # 248e8 <__PRETTY_FUNCTION__.5821+0x18>
    a15a:	lea    rsi,[rip+0x141c6]        # 1e327 <_IO_stdin_used+0x327>
    a161:	divsd  xmm0,xmm1
    a165:	call   5200 <__printf_chk@plt>
    a16a:	jmp    a0e2 <dump_eip+0x1e2>
    a16f:	nop
    a170:	ret    
    a171:	nop    DWORD PTR [rax+0x0]
    a178:	add    rsp,0x28
    a17c:	mov    rdi,r14
    a17f:	pop    rbx
    a180:	pop    rbp
    a181:	pop    r12
    a183:	pop    r13
    a185:	pop    r14
    a187:	pop    r15
    a189:	jmp    5040 <free@plt>
    a18e:	xchg   ax,ax
    a190:	mov    rdi,QWORD PTR [r15+0x8]
    a194:	call   7ee0 <find_symbol>
    a199:	mov    rdx,QWORD PTR [r15+0x8]
    a19d:	mov    edi,0x1
    a1a2:	lea    rsi,[rip+0x1416d]        # 1e316 <_IO_stdin_used+0x316>
    a1a9:	mov    rcx,rax
    a1ac:	xor    eax,eax
    a1ae:	call   5200 <__printf_chk@plt>
    a1b3:	mov    eax,DWORD PTR [r15+0x14]
    a1b7:	mov    rsi,QWORD PTR [r15+0x20]
    a1bb:	xor    ecx,ecx
    a1bd:	test   eax,eax
    a1bf:	je     a1cf <dump_eip+0x2cf>
    a1c1:	movsxd rcx,eax
    a1c4:	xor    edx,edx
    a1c6:	mov    rax,rsi
    a1c9:	div    rcx
    a1cc:	mov    rcx,rax
    a1cf:	lea    rdx,[rsi+rsi*4]
    a1d3:	pxor   xmm1,xmm1
    a1d7:	pxor   xmm0,xmm0
    a1db:	cvtsi2sd xmm0,QWORD PTR [rip+0x24fec]        # 2f1d0 <P+0x30>
    a1e4:	lea    rdx,[rdx+rdx*4]
    a1e8:	shl    rdx,0x2
    a1ec:	cvtsi2sd xmm1,rdx
    a1f1:	divsd  xmm1,xmm0
    a1f5:	test   rsi,rsi
    a1f8:	js     a280 <dump_eip+0x380>
    a1fe:	pxor   xmm0,xmm0
    a202:	cvtsi2sd xmm0,rsi
    a207:	pxor   xmm2,xmm2
    a20b:	mov    edx,DWORD PTR [r15+0x10]
    a20f:	mov    edi,0x1
    a214:	lea    rsi,[rip+0x16635]        # 20850 <_IO_stdin_used+0x2850>
    a21b:	cvtsi2sd xmm2,QWORD PTR [rip+0x20e8c]        # 2b0b0 <opt+0x10>
    a224:	mov    eax,0x2
    a229:	divsd  xmm0,xmm2
    a22d:	call   5200 <__printf_chk@plt>
    a232:	jmp    a0e2 <dump_eip+0x1e2>
    a237:	nop    WORD PTR [rax+rax*1+0x0]
    a240:	mov    rax,rsi
    a243:	and    esi,0x1
    a246:	pxor   xmm0,xmm0
    a24a:	shr    rax,1
    a24d:	or     rax,rsi
    a250:	cvtsi2sd xmm0,rax
    a255:	addsd  xmm0,xmm0
    a259:	jmp    a0a5 <dump_eip+0x1a5>
    a25e:	xchg   ax,ax
    a260:	mov    QWORD PTR [rsp+0x8],0x0
    a269:	xor    r8d,r8d
    a26c:	mov    QWORD PTR [rsp+0x10],0x0
    a275:	jmp    a024 <dump_eip+0x124>
    a27a:	nop    WORD PTR [rax+rax*1+0x0]
    a280:	mov    rax,rsi
    a283:	and    esi,0x1
    a286:	pxor   xmm0,xmm0
    a28a:	shr    rax,1
    a28d:	or     rax,rsi
    a290:	cvtsi2sd xmm0,rax
    a295:	addsd  xmm0,xmm0
    a299:	jmp    a207 <dump_eip+0x307>
    a29e:	xchg   ax,ax

000000000000a2a0 <hvm_update_short_summary>:
    a2a0:	push   r15
    a2a2:	push   r14
    a2a4:	push   r13
    a2a6:	push   r12
    a2a8:	mov    r12,rdi
    a2ab:	push   rbp
    a2ac:	push   rbx
    a2ad:	movsxd rbx,esi
    a2b0:	sub    rsp,0x18
    a2b4:	mov    r14,QWORD PTR [rdi+0x10]
    a2b8:	mov    rbp,QWORD PTR [rdi+0x283e8]
    a2bf:	mov    r13,QWORD PTR [r14+0x70]
    a2c3:	test   r13,r13
    a2c6:	je     a416 <hvm_update_short_summary+0x176>
    a2cc:	lea    rax,[rbx*8+0x0]
    a2d4:	sub    rax,rbx
    a2d7:	lea    rdx,[r13+rax*8+0x0]
    a2dc:	add    DWORD PTR [rdx+0xe8],0x1
    a2e3:	test   rbp,rbp
    a2e6:	je     a40e <hvm_update_short_summary+0x16e>
    a2ec:	mov    ecx,DWORD PTR [rip+0x20de6]        # 2b0d8 <opt+0x38>
    a2f2:	movsxd rax,DWORD PTR [rdx+0xec]
    a2f9:	test   ecx,ecx
    a2fb:	je     a3e0 <hvm_update_short_summary+0x140>
    a301:	mov    edx,DWORD PTR [rdx+0xf0]
    a307:	cmp    edx,eax
    a309:	jg     a590 <hvm_update_short_summary+0x2f0>
    a30f:	mov    r15d,DWORD PTR [rip+0x20dc6]        # 2b0dc <opt+0x3c>
    a316:	test   eax,eax
    a318:	je     a330 <hvm_update_short_summary+0x90>
    a31a:	test   r15d,r15d
    a31d:	je     a330 <hvm_update_short_summary+0x90>
    a31f:	cmp    edx,r15d
    a322:	jl     a330 <hvm_update_short_summary+0x90>
    a324:	mov    r15d,edx
    a327:	jmp    a3a7 <hvm_update_short_summary+0x107>
    a329:	nop    DWORD PTR [rax+0x0]
    a330:	add    edx,edx
    a332:	cmove  edx,ecx
    a335:	test   r15d,r15d
    a338:	je     a640 <hvm_update_short_summary+0x3a0>
    a33e:	cmp    edx,r15d
    a341:	jle    a640 <hvm_update_short_summary+0x3a0>
    a347:	lea    rax,[rbx*8+0x0]
    a34f:	movsxd rsi,r15d
    a352:	sub    rax,rbx
    a355:	shl    rsi,0x3
    a359:	lea    rdx,[r13+rax*8+0x0]
    a35e:	mov    rdi,QWORD PTR [rdx+0x100]
    a365:	mov    QWORD PTR [rsp+0x8],rdx
    a36a:	call   51d0 <realloc@plt>
    a36f:	mov    rdx,QWORD PTR [rsp+0x8]
    a374:	test   rax,rax
    a377:	je     a630 <hvm_update_short_summary+0x390>
    a37d:	mov    QWORD PTR [rdx+0x100],rax
    a384:	mov    DWORD PTR [rdx+0xf0],r15d
    a38b:	lea    rax,[rbx*8+0x0]
    a393:	sub    rax,rbx
    a396:	movsxd rax,DWORD PTR [r13+rax*8+0xec]
    a39e:	cmp    eax,r15d
    a3a1:	jl     a590 <hvm_update_short_summary+0x2f0>
    a3a7:	cdq    
    a3a8:	idiv   r15d
    a3ab:	lea    ecx,[rax+0x1]
    a3ae:	mov    esi,edx
    a3b0:	mov    edx,0x55555556
    a3b5:	mov    eax,ecx
    a3b7:	imul   edx
    a3b9:	mov    eax,ecx
    a3bb:	sar    eax,0x1f
    a3be:	sub    eax,edx
    a3c0:	add    eax,esi
    a3c2:	cdq    
    a3c3:	idiv   ecx
    a3c5:	lea    rax,[rbx*8+0x0]
    a3cd:	sub    rax,rbx
    a3d0:	test   edx,edx
    a3d2:	je     a5e0 <hvm_update_short_summary+0x340>
    a3d8:	mov    eax,DWORD PTR [r13+rax*8+0xec]
    a3e0:	lea    rdx,[rbx*8+0x0]
    a3e8:	add    eax,0x1
    a3eb:	sub    rdx,rbx
    a3ee:	lea    rdx,[r13+rdx*8+0x0]
    a3f3:	add    QWORD PTR [rdx+0xf8],rbp
    a3fa:	add    DWORD PTR [rdx+0x108],0x1
    a401:	add    QWORD PTR [rdx+0x110],rbp
    a408:	mov    DWORD PTR [rdx+0xec],eax
    a40e:	mov    rbp,QWORD PTR [r12+0x283e8]
    a416:	mov    r13,QWORD PTR [r14+0x8]
    a41a:	lea    rax,[rbx*8+0x0]
    a422:	sub    rax,rbx
    a425:	lea    rdx,[r13+rax*8+0x0]
    a42a:	add    DWORD PTR [rdx+0xf78],0x1
    a431:	test   rbp,rbp
    a434:	je     a475 <hvm_update_short_summary+0x1d5>
    a436:	mov    ecx,DWORD PTR [rip+0x20c9c]        # 2b0d8 <opt+0x38>
    a43c:	movsxd rax,DWORD PTR [rdx+0xf7c]
    a443:	test   ecx,ecx
    a445:	jne    a490 <hvm_update_short_summary+0x1f0>
    a447:	lea    rdx,[rbx*8+0x0]
    a44f:	add    eax,0x1
    a452:	sub    rdx,rbx
    a455:	lea    rdx,[r13+rdx*8+0x0]
    a45a:	add    QWORD PTR [rdx+0xf88],rbp
    a461:	add    DWORD PTR [rdx+0xf98],0x1
    a468:	add    QWORD PTR [rdx+0xfa0],rbp
    a46f:	mov    DWORD PTR [rdx+0xf7c],eax
    a475:	or     BYTE PTR [r12+0x28408],0x1
    a47e:	add    rsp,0x18
    a482:	pop    rbx
    a483:	pop    rbp
    a484:	pop    r12
    a486:	pop    r13
    a488:	pop    r14
    a48a:	pop    r15
    a48c:	ret    
    a48d:	nop    DWORD PTR [rax]
    a490:	mov    edx,DWORD PTR [rdx+0xf80]
    a496:	cmp    edx,eax
    a498:	jg     a560 <hvm_update_short_summary+0x2c0>
    a49e:	mov    r14d,DWORD PTR [rip+0x20c37]        # 2b0dc <opt+0x3c>
    a4a5:	test   eax,eax
    a4a7:	je     a4b7 <hvm_update_short_summary+0x217>
    a4a9:	test   r14d,r14d
    a4ac:	je     a4b7 <hvm_update_short_summary+0x217>
    a4ae:	cmp    edx,r14d
    a4b1:	jge    a600 <hvm_update_short_summary+0x360>
    a4b7:	add    edx,edx
    a4b9:	cmove  edx,ecx
    a4bc:	cmp    edx,r14d
    a4bf:	jle    a620 <hvm_update_short_summary+0x380>
    a4c5:	test   r14d,r14d
    a4c8:	je     a620 <hvm_update_short_summary+0x380>
    a4ce:	lea    rax,[rbx*8+0x0]
    a4d6:	movsxd rsi,r14d
    a4d9:	sub    rax,rbx
    a4dc:	shl    rsi,0x3
    a4e0:	lea    r15,[r13+rax*8+0x0]
    a4e5:	mov    rdi,QWORD PTR [r15+0xf90]
    a4ec:	call   51d0 <realloc@plt>
    a4f1:	test   rax,rax
    a4f4:	je     a610 <hvm_update_short_summary+0x370>
    a4fa:	mov    QWORD PTR [r15+0xf90],rax
    a501:	mov    DWORD PTR [r15+0xf80],r14d
    a508:	lea    rax,[rbx*8+0x0]
    a510:	sub    rax,rbx
    a513:	movsxd rax,DWORD PTR [r13+rax*8+0xf7c]
    a51b:	cmp    eax,r14d
    a51e:	jl     a560 <hvm_update_short_summary+0x2c0>
    a520:	cdq    
    a521:	idiv   r14d
    a524:	lea    ecx,[rax+0x1]
    a527:	mov    esi,edx
    a529:	mov    edx,0x55555556
    a52e:	mov    eax,ecx
    a530:	imul   edx
    a532:	mov    eax,ecx
    a534:	sar    eax,0x1f
    a537:	sub    eax,edx
    a539:	add    eax,esi
    a53b:	cdq    
    a53c:	idiv   ecx
    a53e:	lea    rax,[rbx*8+0x0]
    a546:	sub    rax,rbx
    a549:	test   edx,edx
    a54b:	je     a5c0 <hvm_update_short_summary+0x320>
    a54d:	mov    eax,DWORD PTR [r13+rax*8+0xf7c]
    a555:	jmp    a447 <hvm_update_short_summary+0x1a7>
    a55a:	nop    WORD PTR [rax+rax*1+0x0]
    a560:	lea    rdx,[rbx*8+0x0]
    a568:	sub    rdx,rbx
    a56b:	lea    rdx,[r13+rdx*8+0x0]
    a570:	mov    rcx,QWORD PTR [rdx+0xf90]
    a577:	mov    QWORD PTR [rcx+rax*8],rbp
    a57b:	mov    eax,DWORD PTR [rdx+0xf7c]
    a581:	jmp    a447 <hvm_update_short_summary+0x1a7>
    a586:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a590:	lea    rdx,[rbx*8+0x0]
    a598:	sub    rdx,rbx
    a59b:	lea    rdx,[r13+rdx*8+0x0]
    a5a0:	mov    rcx,QWORD PTR [rdx+0x100]
    a5a7:	mov    QWORD PTR [rcx+rax*8],rbp
    a5ab:	mov    eax,DWORD PTR [rdx+0xec]
    a5b1:	jmp    a3e0 <hvm_update_short_summary+0x140>
    a5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    a5c0:	lea    rdx,[r13+rax*8+0x0]
    a5c5:	movsxd rax,esi
    a5c8:	mov    rcx,QWORD PTR [rdx+0xf90]
    a5cf:	mov    QWORD PTR [rcx+rax*8],rbp
    a5d3:	mov    eax,DWORD PTR [rdx+0xf7c]
    a5d9:	jmp    a447 <hvm_update_short_summary+0x1a7>
    a5de:	xchg   ax,ax
    a5e0:	lea    rdx,[r13+rax*8+0x0]
    a5e5:	movsxd rax,esi
    a5e8:	mov    rcx,QWORD PTR [rdx+0x100]
    a5ef:	mov    QWORD PTR [rcx+rax*8],rbp
    a5f3:	mov    eax,DWORD PTR [rdx+0xec]
    a5f9:	jmp    a3e0 <hvm_update_short_summary+0x140>
    a5fe:	xchg   ax,ax
    a600:	mov    r14d,edx
    a603:	jmp    a520 <hvm_update_short_summary+0x280>
    a608:	nop    DWORD PTR [rax+rax*1+0x0]
    a610:	mov    r14d,DWORD PTR [r15+0xf80]
    a617:	jmp    a508 <hvm_update_short_summary+0x268>
    a61c:	nop    DWORD PTR [rax+0x0]
    a620:	mov    r14d,edx
    a623:	jmp    a4ce <hvm_update_short_summary+0x22e>
    a628:	nop    DWORD PTR [rax+rax*1+0x0]
    a630:	mov    r15d,DWORD PTR [rdx+0xf0]
    a637:	jmp    a38b <hvm_update_short_summary+0xeb>
    a63c:	nop    DWORD PTR [rax+0x0]
    a640:	mov    r15d,edx
    a643:	jmp    a347 <hvm_update_short_summary+0xa7>
    a648:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000a650 <shadow_fixup_postprocess>:
    a650:	mov    eax,DWORD PTR [rip+0x20a4e]        # 2b0a4 <opt+0x4>
    a656:	push   r12
    a658:	push   rbp
    a659:	push   rbx
    a65a:	mov    rbx,rdi
    a65d:	test   eax,eax
    a65f:	je     ae25 <shadow_fixup_postprocess+0x7d5>
    a665:	mov    rbp,QWORD PTR [rdi+0x283e8]
    a66c:	add    DWORD PTR [rdi+0x10a28],0x1
    a673:	test   rbp,rbp
    a676:	je     a74e <shadow_fixup_postprocess+0xfe>
    a67c:	movsxd rcx,DWORD PTR [rdi+0x10a2c]
    a683:	mov    edx,DWORD PTR [rip+0x20a4f]        # 2b0d8 <opt+0x38>
    a689:	mov    eax,ecx
    a68b:	test   edx,edx
    a68d:	je     a730 <shadow_fixup_postprocess+0xe0>
    a693:	mov    eax,DWORD PTR [rdi+0x10a30]
    a699:	cmp    eax,ecx
    a69b:	jg     afb8 <shadow_fixup_postprocess+0x968>
    a6a1:	mov    r12d,DWORD PTR [rip+0x20a34]        # 2b0dc <opt+0x3c>
    a6a8:	test   ecx,ecx
    a6aa:	jne    b0b0 <shadow_fixup_postprocess+0xa60>
    a6b0:	add    eax,eax
    a6b2:	cmove  eax,edx
    a6b5:	cmp    eax,r12d
    a6b8:	jle    b1c0 <shadow_fixup_postprocess+0xb70>
    a6be:	test   r12d,r12d
    a6c1:	je     b1c0 <shadow_fixup_postprocess+0xb70>
    a6c7:	movsxd rsi,r12d
    a6ca:	mov    rdi,QWORD PTR [rbx+0x10a40]
    a6d1:	shl    rsi,0x3
    a6d5:	call   51d0 <realloc@plt>
    a6da:	test   rax,rax
    a6dd:	je     b130 <shadow_fixup_postprocess+0xae0>
    a6e3:	mov    QWORD PTR [rbx+0x10a40],rax
    a6ea:	mov    DWORD PTR [rbx+0x10a30],r12d
    a6f1:	movsxd rcx,DWORD PTR [rbx+0x10a2c]
    a6f8:	cmp    ecx,r12d
    a6fb:	jl     afb8 <shadow_fixup_postprocess+0x968>
    a701:	mov    eax,ecx
    a703:	cdq    
    a704:	idiv   r12d
    a707:	lea    esi,[rax+0x1]
    a70a:	movsxd rdi,edx
    a70d:	mov    edx,0x55555556
    a712:	mov    eax,esi
    a714:	imul   edx
    a716:	mov    eax,esi
    a718:	sar    eax,0x1f
    a71b:	sub    eax,edx
    a71d:	add    eax,edi
    a71f:	cdq    
    a720:	idiv   esi
    a722:	mov    eax,ecx
    a724:	test   edx,edx
    a726:	je     b0d0 <shadow_fixup_postprocess+0xa80>
    a72c:	nop    DWORD PTR [rax+0x0]
    a730:	add    eax,0x1
    a733:	add    QWORD PTR [rbx+0x10a38],rbp
    a73a:	add    DWORD PTR [rbx+0x10a48],0x1
    a741:	add    QWORD PTR [rbx+0x10a50],rbp
    a748:	mov    DWORD PTR [rbx+0x10a2c],eax
    a74e:	test   BYTE PTR [rbx+0x28408],0x2
    a755:	je     a85e <shadow_fixup_postprocess+0x20e>
    a75b:	mov    rbp,QWORD PTR [rbx+0x283e8]
    a762:	add    DWORD PTR [rbx+0x110f0],0x1
    a769:	test   rbp,rbp
    a76c:	je     a85e <shadow_fixup_postprocess+0x20e>
    a772:	movsxd rcx,DWORD PTR [rbx+0x110f4]
    a779:	mov    edx,DWORD PTR [rip+0x20959]        # 2b0d8 <opt+0x38>
    a77f:	mov    eax,ecx
    a781:	test   edx,edx
    a783:	je     a840 <shadow_fixup_postprocess+0x1f0>
    a789:	mov    eax,DWORD PTR [rbx+0x110f8]
    a78f:	cmp    eax,ecx
    a791:	jg     b0f0 <shadow_fixup_postprocess+0xaa0>
    a797:	mov    r12d,DWORD PTR [rip+0x2093e]        # 2b0dc <opt+0x3c>
    a79e:	test   ecx,ecx
    a7a0:	je     a7b0 <shadow_fixup_postprocess+0x160>
    a7a2:	cmp    eax,r12d
    a7a5:	jl     a7b0 <shadow_fixup_postprocess+0x160>
    a7a7:	test   r12d,r12d
    a7aa:	jne    b27c <shadow_fixup_postprocess+0xc2c>
    a7b0:	add    eax,eax
    a7b2:	cmove  eax,edx
    a7b5:	test   r12d,r12d
    a7b8:	je     b22c <shadow_fixup_postprocess+0xbdc>
    a7be:	cmp    eax,r12d
    a7c1:	jle    b22c <shadow_fixup_postprocess+0xbdc>
    a7c7:	movsxd rsi,r12d
    a7ca:	mov    rdi,QWORD PTR [rbx+0x11108]
    a7d1:	shl    rsi,0x3
    a7d5:	call   51d0 <realloc@plt>
    a7da:	test   rax,rax
    a7dd:	je     b220 <shadow_fixup_postprocess+0xbd0>
    a7e3:	mov    QWORD PTR [rbx+0x11108],rax
    a7ea:	mov    DWORD PTR [rbx+0x110f8],r12d
    a7f1:	movsxd rcx,DWORD PTR [rbx+0x110f4]
    a7f8:	cmp    ecx,r12d
    a7fb:	jl     b0f0 <shadow_fixup_postprocess+0xaa0>
    a801:	mov    eax,ecx
    a803:	cdq    
    a804:	idiv   r12d
    a807:	lea    esi,[rax+0x1]
    a80a:	movsxd rdi,edx
    a80d:	mov    edx,0x55555556
    a812:	mov    eax,esi
    a814:	imul   edx
    a816:	mov    eax,esi
    a818:	sar    eax,0x1f
    a81b:	sub    eax,edx
    a81d:	add    eax,edi
    a81f:	cdq    
    a820:	idiv   esi
    a822:	mov    eax,ecx
    a824:	test   edx,edx
    a826:	jne    a840 <shadow_fixup_postprocess+0x1f0>
    a828:	mov    rax,QWORD PTR [rbx+0x11108]
    a82f:	mov    QWORD PTR [rax+rdi*8],rbp
    a833:	mov    eax,DWORD PTR [rbx+0x110f4]
    a839:	nop    DWORD PTR [rax+0x0]
    a840:	add    eax,0x1
    a843:	add    QWORD PTR [rbx+0x11100],rbp
    a84a:	add    DWORD PTR [rbx+0x11110],0x1
    a851:	add    QWORD PTR [rbx+0x11118],rbp
    a858:	mov    DWORD PTR [rbx+0x110f4],eax
    a85e:	movzx  edx,BYTE PTR [rbx+0x28352]
    a865:	mov    eax,edx
    a867:	test   dl,0x4
    a86a:	je     a9a1 <shadow_fixup_postprocess+0x351>
    a870:	mov    rbp,QWORD PTR [rbx+0x283e8]
    a877:	add    DWORD PTR [rbx+0x11160],0x1
    a87e:	test   rbp,rbp
    a881:	je     af38 <shadow_fixup_postprocess+0x8e8>
    a887:	movsxd rcx,DWORD PTR [rbx+0x11164]
    a88e:	mov    edx,DWORD PTR [rip+0x20844]        # 2b0d8 <opt+0x38>
    a894:	mov    rsi,rbp
    a897:	mov    eax,ecx
    a899:	test   edx,edx
    a89b:	je     a950 <shadow_fixup_postprocess+0x300>
    a8a1:	mov    eax,DWORD PTR [rbx+0x11168]
    a8a7:	cmp    eax,ecx
    a8a9:	jg     b010 <shadow_fixup_postprocess+0x9c0>
    a8af:	mov    r12d,DWORD PTR [rip+0x20826]        # 2b0dc <opt+0x3c>
    a8b6:	test   ecx,ecx
    a8b8:	je     a8c8 <shadow_fixup_postprocess+0x278>
    a8ba:	test   r12d,r12d
    a8bd:	je     a8c8 <shadow_fixup_postprocess+0x278>
    a8bf:	cmp    eax,r12d
    a8c2:	jge    b25c <shadow_fixup_postprocess+0xc0c>
    a8c8:	add    eax,eax
    a8ca:	cmove  eax,edx
    a8cd:	test   r12d,r12d
    a8d0:	je     b254 <shadow_fixup_postprocess+0xc04>
    a8d6:	cmp    eax,r12d
    a8d9:	jle    b254 <shadow_fixup_postprocess+0xc04>
    a8df:	movsxd rsi,r12d
    a8e2:	mov    rdi,QWORD PTR [rbx+0x11178]
    a8e9:	shl    rsi,0x3
    a8ed:	call   51d0 <realloc@plt>
    a8f2:	test   rax,rax
    a8f5:	je     b1d0 <shadow_fixup_postprocess+0xb80>
    a8fb:	mov    QWORD PTR [rbx+0x11178],rax
    a902:	mov    DWORD PTR [rbx+0x11168],r12d
    a909:	movsxd rcx,DWORD PTR [rbx+0x11164]
    a910:	cmp    ecx,r12d
    a913:	jl     b010 <shadow_fixup_postprocess+0x9c0>
    a919:	mov    eax,ecx
    a91b:	cdq    
    a91c:	idiv   r12d
    a91f:	lea    esi,[rax+0x1]
    a922:	movsxd rdi,edx
    a925:	mov    edx,0x55555556
    a92a:	mov    eax,esi
    a92c:	imul   edx
    a92e:	mov    eax,esi
    a930:	sar    eax,0x1f
    a933:	sub    eax,edx
    a935:	add    eax,edi
    a937:	cdq    
    a938:	idiv   esi
    a93a:	test   edx,edx
    a93c:	je     b140 <shadow_fixup_postprocess+0xaf0>
    a942:	mov    rsi,QWORD PTR [rbx+0x283e8]
    a949:	mov    eax,ecx
    a94b:	nop    DWORD PTR [rax+rax*1+0x0]
    a950:	add    eax,0x1
    a953:	add    QWORD PTR [rbx+0x11170],rbp
    a95a:	mov    DWORD PTR [rbx+0x11164],eax
    a960:	movsxd rax,DWORD PTR [rbx+0x283d0]
    a967:	add    DWORD PTR [rbx+0x11180],0x1
    a96e:	add    QWORD PTR [rbx+0x11188],rbp
    a975:	cmp    eax,0x1
    a978:	jle    afd0 <shadow_fixup_postprocess+0x980>
    a97e:	add    DWORD PTR [rbx+0x11358],0x1
    a985:	test   rsi,rsi
    a988:	je     b28c <shadow_fixup_postprocess+0xc3c>
    a98e:	lea    rdi,[rbx+0x11358]
    a995:	call   56e0 <update_cycles.part.5>
    a99a:	movzx  eax,BYTE PTR [rbx+0x28352]
    a9a1:	test   al,0x8
    a9a3:	je     aaa6 <shadow_fixup_postprocess+0x456>
    a9a9:	mov    rbp,QWORD PTR [rbx+0x283e8]
    a9b0:	add    DWORD PTR [rbx+0x11198],0x1
    a9b7:	test   rbp,rbp
    a9ba:	je     aaa6 <shadow_fixup_postprocess+0x456>
    a9c0:	movsxd rcx,DWORD PTR [rbx+0x1119c]
    a9c7:	mov    esi,DWORD PTR [rip+0x2070b]        # 2b0d8 <opt+0x38>
    a9cd:	mov    edx,ecx
    a9cf:	test   esi,esi
    a9d1:	je     aa88 <shadow_fixup_postprocess+0x438>
    a9d7:	mov    eax,DWORD PTR [rbx+0x111a0]
    a9dd:	cmp    eax,ecx
    a9df:	jg     b030 <shadow_fixup_postprocess+0x9e0>
    a9e5:	mov    r12d,DWORD PTR [rip+0x206f0]        # 2b0dc <opt+0x3c>
    a9ec:	test   ecx,ecx
    a9ee:	je     a9fe <shadow_fixup_postprocess+0x3ae>
    a9f0:	test   r12d,r12d
    a9f3:	je     a9fe <shadow_fixup_postprocess+0x3ae>
    a9f5:	cmp    eax,r12d
    a9f8:	jge    b26c <shadow_fixup_postprocess+0xc1c>
    a9fe:	add    eax,eax
    aa00:	cmove  eax,esi
    aa03:	test   r12d,r12d
    aa06:	je     b244 <shadow_fixup_postprocess+0xbf4>
    aa0c:	cmp    eax,r12d
    aa0f:	jle    b244 <shadow_fixup_postprocess+0xbf4>
    aa15:	movsxd rsi,r12d
    aa18:	mov    rdi,QWORD PTR [rbx+0x111b0]
    aa1f:	shl    rsi,0x3
    aa23:	call   51d0 <realloc@plt>
    aa28:	test   rax,rax
    aa2b:	je     b1e0 <shadow_fixup_postprocess+0xb90>
    aa31:	mov    QWORD PTR [rbx+0x111b0],rax
    aa38:	mov    DWORD PTR [rbx+0x111a0],r12d
    aa3f:	movsxd rcx,DWORD PTR [rbx+0x1119c]
    aa46:	cmp    ecx,r12d
    aa49:	jl     b030 <shadow_fixup_postprocess+0x9e0>
    aa4f:	mov    eax,ecx
    aa51:	cdq    
    aa52:	idiv   r12d
    aa55:	lea    esi,[rax+0x1]
    aa58:	movsxd rdi,edx
    aa5b:	mov    edx,0x55555556
    aa60:	mov    eax,esi
    aa62:	imul   edx
    aa64:	mov    eax,esi
    aa66:	sar    eax,0x1f
    aa69:	sub    eax,edx
    aa6b:	add    eax,edi
    aa6d:	cdq    
    aa6e:	idiv   esi
    aa70:	test   edx,edx
    aa72:	je     b180 <shadow_fixup_postprocess+0xb30>
    aa78:	movzx  eax,BYTE PTR [rbx+0x28352]
    aa7f:	mov    edx,ecx
    aa81:	nop    DWORD PTR [rax+0x0]
    aa88:	add    edx,0x1
    aa8b:	add    QWORD PTR [rbx+0x111a8],rbp
    aa92:	add    DWORD PTR [rbx+0x111b8],0x1
    aa99:	add    QWORD PTR [rbx+0x111c0],rbp
    aaa0:	mov    DWORD PTR [rbx+0x1119c],edx
    aaa6:	test   al,0x10
    aaa8:	je     abae <shadow_fixup_postprocess+0x55e>
    aaae:	mov    rbp,QWORD PTR [rbx+0x283e8]
    aab5:	add    DWORD PTR [rbx+0x111d0],0x1
    aabc:	test   rbp,rbp
    aabf:	je     abae <shadow_fixup_postprocess+0x55e>
    aac5:	movsxd rcx,DWORD PTR [rbx+0x111d4]
    aacc:	mov    edx,DWORD PTR [rip+0x20606]        # 2b0d8 <opt+0x38>
    aad2:	mov    eax,ecx
    aad4:	test   edx,edx
    aad6:	je     ab90 <shadow_fixup_postprocess+0x540>
    aadc:	mov    eax,DWORD PTR [rbx+0x111d8]
    aae2:	cmp    eax,ecx
    aae4:	jg     b050 <shadow_fixup_postprocess+0xa00>
    aaea:	mov    r12d,DWORD PTR [rip+0x205eb]        # 2b0dc <opt+0x3c>
    aaf1:	test   ecx,ecx
    aaf3:	je     ab03 <shadow_fixup_postprocess+0x4b3>
    aaf5:	cmp    eax,r12d
    aaf8:	jl     ab03 <shadow_fixup_postprocess+0x4b3>
    aafa:	test   r12d,r12d
    aafd:	jne    b284 <shadow_fixup_postprocess+0xc34>
    ab03:	add    eax,eax
    ab05:	cmove  eax,edx
    ab08:	cmp    eax,r12d
    ab0b:	jle    b24c <shadow_fixup_postprocess+0xbfc>
    ab11:	test   r12d,r12d
    ab14:	je     b24c <shadow_fixup_postprocess+0xbfc>
    ab1a:	movsxd rsi,r12d
    ab1d:	mov    rdi,QWORD PTR [rbx+0x111e8]
    ab24:	shl    rsi,0x3
    ab28:	call   51d0 <realloc@plt>
    ab2d:	test   rax,rax
    ab30:	je     b1f0 <shadow_fixup_postprocess+0xba0>
    ab36:	mov    QWORD PTR [rbx+0x111e8],rax
    ab3d:	mov    DWORD PTR [rbx+0x111d8],r12d
    ab44:	movsxd rcx,DWORD PTR [rbx+0x111d4]
    ab4b:	cmp    ecx,r12d
    ab4e:	jl     b050 <shadow_fixup_postprocess+0xa00>
    ab54:	mov    eax,ecx
    ab56:	cdq    
    ab57:	idiv   r12d
    ab5a:	lea    esi,[rax+0x1]
    ab5d:	movsxd rdi,edx
    ab60:	mov    edx,0x55555556
    ab65:	mov    eax,esi
    ab67:	imul   edx
    ab69:	mov    eax,esi
    ab6b:	sar    eax,0x1f
    ab6e:	sub    eax,edx
    ab70:	add    eax,edi
    ab72:	cdq    
    ab73:	idiv   esi
    ab75:	mov    eax,ecx
    ab77:	test   edx,edx
    ab79:	jne    ab90 <shadow_fixup_postprocess+0x540>
    ab7b:	mov    rax,QWORD PTR [rbx+0x111e8]
    ab82:	mov    QWORD PTR [rax+rdi*8],rbp
    ab86:	mov    eax,DWORD PTR [rbx+0x111d4]
    ab8c:	nop    DWORD PTR [rax+0x0]
    ab90:	add    eax,0x1
    ab93:	add    QWORD PTR [rbx+0x111e0],rbp
    ab9a:	add    DWORD PTR [rbx+0x111f0],0x1
    aba1:	add    QWORD PTR [rbx+0x111f8],rbp
    aba8:	mov    DWORD PTR [rbx+0x111d4],eax
    abae:	movzx  eax,BYTE PTR [rbx+0x28351]
    abb5:	mov    edx,eax
    abb7:	test   al,0x2
    abb9:	je     acbe <shadow_fixup_postprocess+0x66e>
    abbf:	mov    rbp,QWORD PTR [rbx+0x283e8]
    abc6:	add    DWORD PTR [rbx+0x11208],0x1
    abcd:	test   rbp,rbp
    abd0:	je     ae80 <shadow_fixup_postprocess+0x830>
    abd6:	movsxd rcx,DWORD PTR [rbx+0x1120c]
    abdd:	mov    edi,DWORD PTR [rip+0x204f5]        # 2b0d8 <opt+0x38>
    abe3:	mov    esi,ecx
    abe5:	test   edi,edi
    abe7:	je     aca0 <shadow_fixup_postprocess+0x650>
    abed:	mov    eax,DWORD PTR [rbx+0x11210]
    abf3:	cmp    eax,ecx
    abf5:	jg     b090 <shadow_fixup_postprocess+0xa40>
    abfb:	mov    r12d,DWORD PTR [rip+0x204da]        # 2b0dc <opt+0x3c>
    ac02:	test   ecx,ecx
    ac04:	je     ac14 <shadow_fixup_postprocess+0x5c4>
    ac06:	test   r12d,r12d
    ac09:	je     ac14 <shadow_fixup_postprocess+0x5c4>
    ac0b:	cmp    eax,r12d
    ac0e:	jge    b264 <shadow_fixup_postprocess+0xc14>
    ac14:	add    eax,eax
    ac16:	cmove  eax,edi
    ac19:	test   r12d,r12d
    ac1c:	je     b23c <shadow_fixup_postprocess+0xbec>
    ac22:	cmp    eax,r12d
    ac25:	jle    b23c <shadow_fixup_postprocess+0xbec>
    ac2b:	movsxd rsi,r12d
    ac2e:	mov    rdi,QWORD PTR [rbx+0x11220]
    ac35:	shl    rsi,0x3
    ac39:	call   51d0 <realloc@plt>
    ac3e:	test   rax,rax
    ac41:	je     b210 <shadow_fixup_postprocess+0xbc0>
    ac47:	mov    QWORD PTR [rbx+0x11220],rax
    ac4e:	mov    DWORD PTR [rbx+0x11210],r12d
    ac55:	movsxd rcx,DWORD PTR [rbx+0x1120c]
    ac5c:	cmp    ecx,r12d
    ac5f:	jl     b090 <shadow_fixup_postprocess+0xa40>
    ac65:	mov    eax,ecx
    ac67:	cdq    
    ac68:	idiv   r12d
    ac6b:	lea    esi,[rax+0x1]
    ac6e:	movsxd rdi,edx
    ac71:	mov    edx,0x55555556
    ac76:	mov    eax,esi
    ac78:	imul   edx
    ac7a:	mov    eax,esi
    ac7c:	sar    eax,0x1f
    ac7f:	sub    eax,edx
    ac81:	add    eax,edi
    ac83:	cdq    
    ac84:	idiv   esi
    ac86:	test   edx,edx
    ac88:	je     b160 <shadow_fixup_postprocess+0xb10>
    ac8e:	movzx  eax,BYTE PTR [rbx+0x28351]
    ac95:	mov    esi,ecx
    ac97:	mov    edx,eax
    ac99:	nop    DWORD PTR [rax+0x0]
    aca0:	add    esi,0x1
    aca3:	add    QWORD PTR [rbx+0x11218],rbp
    acaa:	add    DWORD PTR [rbx+0x11228],0x1
    acb1:	add    QWORD PTR [rbx+0x11230],rbp
    acb8:	mov    DWORD PTR [rbx+0x1120c],esi
    acbe:	test   al,0x4
    acc0:	je     ae90 <shadow_fixup_postprocess+0x840>
    acc6:	mov    rbp,QWORD PTR [rbx+0x283e8]
    accd:	add    DWORD PTR [rbx+0x11278],0x1
    acd4:	test   rbp,rbp
    acd7:	je     af7f <shadow_fixup_postprocess+0x92f>
    acdd:	movsxd rcx,DWORD PTR [rbx+0x1127c]
    ace4:	mov    esi,DWORD PTR [rip+0x203ee]        # 2b0d8 <opt+0x38>
    acea:	mov    edx,ecx
    acec:	test   esi,esi
    acee:	je     ada0 <shadow_fixup_postprocess+0x750>
    acf4:	mov    eax,DWORD PTR [rbx+0x11280]
    acfa:	cmp    eax,ecx
    acfc:	jg     b070 <shadow_fixup_postprocess+0xa20>
    ad02:	mov    r12d,DWORD PTR [rip+0x203d3]        # 2b0dc <opt+0x3c>
    ad09:	test   ecx,ecx
    ad0b:	je     ad1b <shadow_fixup_postprocess+0x6cb>
    ad0d:	test   r12d,r12d
    ad10:	je     ad1b <shadow_fixup_postprocess+0x6cb>
    ad12:	cmp    eax,r12d
    ad15:	jge    b274 <shadow_fixup_postprocess+0xc24>
    ad1b:	add    eax,eax
    ad1d:	cmove  eax,esi
    ad20:	cmp    eax,r12d
    ad23:	jle    b234 <shadow_fixup_postprocess+0xbe4>
    ad29:	test   r12d,r12d
    ad2c:	je     b234 <shadow_fixup_postprocess+0xbe4>
    ad32:	movsxd rsi,r12d
    ad35:	mov    rdi,QWORD PTR [rbx+0x11290]
    ad3c:	shl    rsi,0x3
    ad40:	call   51d0 <realloc@plt>
    ad45:	test   rax,rax
    ad48:	je     b200 <shadow_fixup_postprocess+0xbb0>
    ad4e:	mov    QWORD PTR [rbx+0x11290],rax
    ad55:	mov    DWORD PTR [rbx+0x11280],r12d
    ad5c:	movsxd rcx,DWORD PTR [rbx+0x1127c]
    ad63:	cmp    ecx,r12d
    ad66:	jl     b070 <shadow_fixup_postprocess+0xa20>
    ad6c:	mov    eax,ecx
    ad6e:	cdq    
    ad6f:	idiv   r12d
    ad72:	lea    esi,[rax+0x1]
    ad75:	movsxd rdi,edx
    ad78:	mov    edx,0x55555556
    ad7d:	mov    eax,esi
    ad7f:	imul   edx
    ad81:	mov    eax,esi
    ad83:	sar    eax,0x1f
    ad86:	sub    eax,edx
    ad88:	add    eax,edi
    ad8a:	cdq    
    ad8b:	idiv   esi
    ad8d:	test   edx,edx
    ad8f:	je     b1a0 <shadow_fixup_postprocess+0xb50>
    ad95:	movzx  eax,BYTE PTR [rbx+0x28351]
    ad9c:	mov    edx,ecx
    ad9e:	xchg   ax,ax
    ada0:	add    edx,0x1
    ada3:	add    QWORD PTR [rbx+0x11288],rbp
    adaa:	mov    DWORD PTR [rbx+0x1127c],edx
    adb0:	add    DWORD PTR [rbx+0x11298],0x1
    adb7:	add    QWORD PTR [rbx+0x112a0],rbp
    adbe:	test   al,0x10
    adc0:	jne    adcf <shadow_fixup_postprocess+0x77f>
    adc2:	test   BYTE PTR [rbx+0x28408],0x4
    adc9:	je     af93 <shadow_fixup_postprocess+0x943>
    adcf:	mov    rsi,QWORD PTR [rbx+0x283e8]
    add6:	lea    rdi,[rbx+0x112b0]
    addd:	add    DWORD PTR [rbx+0x112b0],0x1
    ade4:	test   rsi,rsi
    ade7:	je     af93 <shadow_fixup_postprocess+0x943>
    aded:	call   56e0 <update_cycles.part.5>
    adf2:	movzx  edx,BYTE PTR [rbx+0x28351]
    adf9:	movzx  eax,BYTE PTR [rbx+0x28352]
    ae00:	and    eax,0x4
    ae03:	and    edx,0x2
    ae06:	je     aed4 <shadow_fixup_postprocess+0x884>
    ae0c:	nop    DWORD PTR [rax+0x0]
    ae10:	test   al,al
    ae12:	je     afa0 <shadow_fixup_postprocess+0x950>
    ae18:	mov    esi,0x1
    ae1d:	mov    rdi,rbx
    ae20:	call   a2a0 <hvm_update_short_summary>
    ae25:	test   BYTE PTR [rip+0x20274],0x2        # 2b0a0 <opt>
    ae2c:	je     ae78 <shadow_fixup_postprocess+0x828>
    ae2e:	test   BYTE PTR [rbx+0x28408],0x2
    ae35:	jne    af20 <shadow_fixup_postprocess+0x8d0>
    ae3b:	test   BYTE PTR [rbx+0x28351],0x2
    ae42:	je     ae78 <shadow_fixup_postprocess+0x828>
    ae44:	test   BYTE PTR [rip+0x20257],0x20        # 2b0a2 <opt+0x2>
    ae4b:	je     af60 <shadow_fixup_postprocess+0x910>
    ae51:	mov    rax,QWORD PTR [rbx+0x10]
    ae55:	mov    rax,QWORD PTR [rax+0x70]
    ae59:	test   rax,rax
    ae5c:	je     ae78 <shadow_fixup_postprocess+0x828>
    ae5e:	mov    rdi,QWORD PTR [rbx+0x283e0]
    ae65:	movsxd rsi,DWORD PTR [rax+0x18]
    ae69:	pop    rbx
    ae6a:	pop    rbp
    ae6b:	pop    r12
    ae6d:	jmp    8200 <scatterplot_vs_time>
    ae72:	nop    WORD PTR [rax+rax*1+0x0]
    ae78:	pop    rbx
    ae79:	pop    rbp
    ae7a:	pop    r12
    ae7c:	ret    
    ae7d:	nop    DWORD PTR [rax]
    ae80:	test   al,0x4
    ae82:	jne    af78 <shadow_fixup_postprocess+0x928>
    ae88:	nop    DWORD PTR [rax+rax*1+0x0]
    ae90:	test   al,0x10
    ae92:	jne    ae9d <shadow_fixup_postprocess+0x84d>
    ae94:	test   BYTE PTR [rbx+0x28408],0x4
    ae9b:	je     aec1 <shadow_fixup_postprocess+0x871>
    ae9d:	mov    rcx,QWORD PTR [rip+0x5c3b4]        # 67258 <warn>
    aea4:	mov    edx,0x21
    aea9:	mov    esi,0x1
    aeae:	lea    rdi,[rip+0x15b73]        # 20a28 <_IO_stdin_used+0x2a28>
    aeb5:	call   5260 <fwrite@plt>
    aeba:	movzx  edx,BYTE PTR [rbx+0x28351]
    aec1:	movzx  eax,BYTE PTR [rbx+0x28352]
    aec8:	and    eax,0x4
    aecb:	and    edx,0x2
    aece:	jne    ae10 <shadow_fixup_postprocess+0x7c0>
    aed4:	test   BYTE PTR [rbx+0x28408],0x2
    aedb:	jne    ae10 <shadow_fixup_postprocess+0x7c0>
    aee1:	test   al,al
    aee3:	jne    ae18 <shadow_fixup_postprocess+0x7c8>
    aee9:	mov    rsi,QWORD PTR [rbx+0x283e8]
    aef0:	add    DWORD PTR [rbx+0x11240],0x1
    aef7:	test   rsi,rsi
    aefa:	je     afa0 <shadow_fixup_postprocess+0x950>
    af00:	lea    rdi,[rbx+0x11240]
    af07:	call   56e0 <update_cycles.part.5>
    af0c:	movzx  eax,BYTE PTR [rbx+0x28352]
    af13:	and    eax,0x4
    af16:	jmp    ae10 <shadow_fixup_postprocess+0x7c0>
    af1b:	nop    DWORD PTR [rax+rax*1+0x0]
    af20:	mov    rdi,QWORD PTR [rbx+0x283e0]
    af27:	xor    esi,esi
    af29:	call   8200 <scatterplot_vs_time>
    af2e:	jmp    ae3b <shadow_fixup_postprocess+0x7eb>
    af33:	nop    DWORD PTR [rax+rax*1+0x0]
    af38:	movsxd rcx,DWORD PTR [rbx+0x283d0]
    af3f:	cmp    ecx,0x1
    af42:	jle    b110 <shadow_fixup_postprocess+0xac0>
    af48:	add    DWORD PTR [rbx+0x11358],0x1
    af4f:	mov    eax,edx
    af51:	jmp    a9a1 <shadow_fixup_postprocess+0x351>
    af56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    af60:	mov    rdi,QWORD PTR [rbx+0x283e0]
    af67:	mov    esi,0x2
    af6c:	pop    rbx
    af6d:	pop    rbp
    af6e:	pop    r12
    af70:	jmp    8200 <scatterplot_vs_time>
    af75:	nop    DWORD PTR [rax]
    af78:	add    DWORD PTR [rbx+0x11278],0x1
    af7f:	test   al,0x10
    af81:	jne    b000 <shadow_fixup_postprocess+0x9b0>
    af83:	test   BYTE PTR [rbx+0x28408],0x4
    af8a:	je     af93 <shadow_fixup_postprocess+0x943>
    af8c:	add    DWORD PTR [rbx+0x112b0],0x1
    af93:	mov    edx,eax
    af95:	jmp    aec1 <shadow_fixup_postprocess+0x871>
    af9a:	nop    WORD PTR [rax+rax*1+0x0]
    afa0:	mov    esi,0x2
    afa5:	mov    rdi,rbx
    afa8:	call   a2a0 <hvm_update_short_summary>
    afad:	jmp    ae25 <shadow_fixup_postprocess+0x7d5>
    afb2:	nop    WORD PTR [rax+rax*1+0x0]
    afb8:	mov    rax,QWORD PTR [rbx+0x10a40]
    afbf:	mov    QWORD PTR [rax+rcx*8],rbp
    afc3:	mov    eax,DWORD PTR [rbx+0x10a2c]
    afc9:	jmp    a730 <shadow_fixup_postprocess+0xe0>
    afce:	xchg   ax,ax
    afd0:	lea    rdx,[rax*8+0x0]
    afd8:	sub    rdx,rax
    afdb:	mov    rax,rdx
    afde:	shl    rax,0x3
    afe2:	lea    rdi,[rbx+rax*1+0x112e8]
    afea:	add    DWORD PTR [rbx+rax*1+0x112e8],0x1
    aff2:	test   rsi,rsi
    aff5:	jne    a995 <shadow_fixup_postprocess+0x345>
    affb:	jmp    a99a <shadow_fixup_postprocess+0x34a>
    b000:	add    DWORD PTR [rbx+0x112b0],0x1
    b007:	jmp    aec1 <shadow_fixup_postprocess+0x871>
    b00c:	nop    DWORD PTR [rax+0x0]
    b010:	mov    rax,QWORD PTR [rbx+0x11178]
    b017:	mov    QWORD PTR [rax+rcx*8],rbp
    b01b:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b022:	mov    eax,DWORD PTR [rbx+0x11164]
    b028:	jmp    a950 <shadow_fixup_postprocess+0x300>
    b02d:	nop    DWORD PTR [rax]
    b030:	mov    rax,QWORD PTR [rbx+0x111b0]
    b037:	mov    QWORD PTR [rax+rcx*8],rbp
    b03b:	mov    edx,DWORD PTR [rbx+0x1119c]
    b041:	movzx  eax,BYTE PTR [rbx+0x28352]
    b048:	jmp    aa88 <shadow_fixup_postprocess+0x438>
    b04d:	nop    DWORD PTR [rax]
    b050:	mov    rax,QWORD PTR [rbx+0x111e8]
    b057:	mov    QWORD PTR [rax+rcx*8],rbp
    b05b:	mov    eax,DWORD PTR [rbx+0x111d4]
    b061:	jmp    ab90 <shadow_fixup_postprocess+0x540>
    b066:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b070:	mov    rax,QWORD PTR [rbx+0x11290]
    b077:	mov    QWORD PTR [rax+rcx*8],rbp
    b07b:	movzx  eax,BYTE PTR [rbx+0x28351]
    b082:	mov    edx,DWORD PTR [rbx+0x1127c]
    b088:	jmp    ada0 <shadow_fixup_postprocess+0x750>
    b08d:	nop    DWORD PTR [rax]
    b090:	mov    rax,QWORD PTR [rbx+0x11220]
    b097:	mov    QWORD PTR [rax+rcx*8],rbp
    b09b:	movzx  eax,BYTE PTR [rbx+0x28351]
    b0a2:	mov    esi,DWORD PTR [rbx+0x1120c]
    b0a8:	mov    edx,eax
    b0aa:	jmp    aca0 <shadow_fixup_postprocess+0x650>
    b0af:	nop
    b0b0:	cmp    eax,r12d
    b0b3:	jl     a6b0 <shadow_fixup_postprocess+0x60>
    b0b9:	test   r12d,r12d
    b0bc:	je     a6b0 <shadow_fixup_postprocess+0x60>
    b0c2:	mov    r12d,eax
    b0c5:	jmp    a701 <shadow_fixup_postprocess+0xb1>
    b0ca:	nop    WORD PTR [rax+rax*1+0x0]
    b0d0:	mov    rax,QWORD PTR [rbx+0x10a40]
    b0d7:	mov    QWORD PTR [rax+rdi*8],rbp
    b0db:	mov    eax,DWORD PTR [rbx+0x10a2c]
    b0e1:	jmp    a730 <shadow_fixup_postprocess+0xe0>
    b0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b0f0:	mov    rax,QWORD PTR [rbx+0x11108]
    b0f7:	mov    QWORD PTR [rax+rcx*8],rbp
    b0fb:	mov    eax,DWORD PTR [rbx+0x110f4]
    b101:	jmp    a840 <shadow_fixup_postprocess+0x1f0>
    b106:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b110:	lea    rdx,[rcx*8+0x0]
    b118:	sub    rdx,rcx
    b11b:	add    DWORD PTR [rbx+rdx*8+0x112e8],0x1
    b123:	jmp    a9a1 <shadow_fixup_postprocess+0x351>
    b128:	nop    DWORD PTR [rax+rax*1+0x0]
    b130:	mov    r12d,DWORD PTR [rbx+0x10a30]
    b137:	jmp    a6f1 <shadow_fixup_postprocess+0xa1>
    b13c:	nop    DWORD PTR [rax+0x0]
    b140:	mov    rax,QWORD PTR [rbx+0x11178]
    b147:	mov    QWORD PTR [rax+rdi*8],rbp
    b14b:	mov    rsi,QWORD PTR [rbx+0x283e8]
    b152:	mov    eax,DWORD PTR [rbx+0x11164]
    b158:	jmp    a950 <shadow_fixup_postprocess+0x300>
    b15d:	nop    DWORD PTR [rax]
    b160:	mov    rax,QWORD PTR [rbx+0x11220]
    b167:	mov    QWORD PTR [rax+rdi*8],rbp
    b16b:	movzx  eax,BYTE PTR [rbx+0x28351]
    b172:	mov    esi,DWORD PTR [rbx+0x1120c]
    b178:	mov    edx,eax
    b17a:	jmp    aca0 <shadow_fixup_postprocess+0x650>
    b17f:	nop
    b180:	mov    rax,QWORD PTR [rbx+0x111b0]
    b187:	mov    QWORD PTR [rax+rdi*8],rbp
    b18b:	mov    edx,DWORD PTR [rbx+0x1119c]
    b191:	movzx  eax,BYTE PTR [rbx+0x28352]
    b198:	jmp    aa88 <shadow_fixup_postprocess+0x438>
    b19d:	nop    DWORD PTR [rax]
    b1a0:	mov    rax,QWORD PTR [rbx+0x11290]
    b1a7:	mov    QWORD PTR [rax+rdi*8],rbp
    b1ab:	movzx  eax,BYTE PTR [rbx+0x28351]
    b1b2:	mov    edx,DWORD PTR [rbx+0x1127c]
    b1b8:	jmp    ada0 <shadow_fixup_postprocess+0x750>
    b1bd:	nop    DWORD PTR [rax]
    b1c0:	mov    r12d,eax
    b1c3:	jmp    a6c7 <shadow_fixup_postprocess+0x77>
    b1c8:	nop    DWORD PTR [rax+rax*1+0x0]
    b1d0:	mov    r12d,DWORD PTR [rbx+0x11168]
    b1d7:	jmp    a909 <shadow_fixup_postprocess+0x2b9>
    b1dc:	nop    DWORD PTR [rax+0x0]
    b1e0:	mov    r12d,DWORD PTR [rbx+0x111a0]
    b1e7:	jmp    aa3f <shadow_fixup_postprocess+0x3ef>
    b1ec:	nop    DWORD PTR [rax+0x0]
    b1f0:	mov    r12d,DWORD PTR [rbx+0x111d8]
    b1f7:	jmp    ab44 <shadow_fixup_postprocess+0x4f4>
    b1fc:	nop    DWORD PTR [rax+0x0]
    b200:	mov    r12d,DWORD PTR [rbx+0x11280]
    b207:	jmp    ad5c <shadow_fixup_postprocess+0x70c>
    b20c:	nop    DWORD PTR [rax+0x0]
    b210:	mov    r12d,DWORD PTR [rbx+0x11210]
    b217:	jmp    ac55 <shadow_fixup_postprocess+0x605>
    b21c:	nop    DWORD PTR [rax+0x0]
    b220:	mov    r12d,DWORD PTR [rbx+0x110f8]
    b227:	jmp    a7f1 <shadow_fixup_postprocess+0x1a1>
    b22c:	mov    r12d,eax
    b22f:	jmp    a7c7 <shadow_fixup_postprocess+0x177>
    b234:	mov    r12d,eax
    b237:	jmp    ad32 <shadow_fixup_postprocess+0x6e2>
    b23c:	mov    r12d,eax
    b23f:	jmp    ac2b <shadow_fixup_postprocess+0x5db>
    b244:	mov    r12d,eax
    b247:	jmp    aa15 <shadow_fixup_postprocess+0x3c5>
    b24c:	mov    r12d,eax
    b24f:	jmp    ab1a <shadow_fixup_postprocess+0x4ca>
    b254:	mov    r12d,eax
    b257:	jmp    a8df <shadow_fixup_postprocess+0x28f>
    b25c:	mov    r12d,eax
    b25f:	jmp    a919 <shadow_fixup_postprocess+0x2c9>
    b264:	mov    r12d,eax
    b267:	jmp    ac65 <shadow_fixup_postprocess+0x615>
    b26c:	mov    r12d,eax
    b26f:	jmp    aa4f <shadow_fixup_postprocess+0x3ff>
    b274:	mov    r12d,eax
    b277:	jmp    ad6c <shadow_fixup_postprocess+0x71c>
    b27c:	mov    r12d,eax
    b27f:	jmp    a801 <shadow_fixup_postprocess+0x1b1>
    b284:	mov    r12d,eax
    b287:	jmp    ab54 <shadow_fixup_postprocess+0x504>
    b28c:	movzx  edx,BYTE PTR [rbx+0x28352]
    b293:	mov    eax,edx
    b295:	jmp    a9a1 <shadow_fixup_postprocess+0x351>
    b29a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000b2a0 <shadow_propagate_postprocess>:
    b2a0:	mov    eax,DWORD PTR [rip+0x1fdfe]        # 2b0a4 <opt+0x4>
    b2a6:	test   eax,eax
    b2a8:	je     b410 <shadow_propagate_postprocess+0x170>
    b2ae:	push   r14
    b2b0:	push   r13
    b2b2:	push   r12
    b2b4:	push   rbp
    b2b5:	push   rbx
    b2b6:	movsxd rbp,DWORD PTR [rdi+0x28358]
    b2bd:	mov    rbx,rdi
    b2c0:	test   ebp,ebp
    b2c2:	je     b418 <shadow_propagate_postprocess+0x178>
    b2c8:	lea    rax,[rbp*8+0x0]
    b2d0:	mov    r12,QWORD PTR [rdi+0x283e8]
    b2d7:	sub    rax,rbp
    b2da:	lea    rdx,[rdi+rax*8]
    b2de:	add    DWORD PTR [rdx+0x108d8],0x1
    b2e5:	test   r12,r12
    b2e8:	je     b3f5 <shadow_propagate_postprocess+0x155>
    b2ee:	mov    ecx,DWORD PTR [rip+0x1fde4]        # 2b0d8 <opt+0x38>
    b2f4:	movsxd rax,DWORD PTR [rdx+0x108dc]
    b2fb:	test   ecx,ecx
    b2fd:	je     b3c8 <shadow_propagate_postprocess+0x128>
    b303:	mov    edx,DWORD PTR [rdx+0x108e0]
    b309:	cmp    edx,eax
    b30b:	jg     b440 <shadow_propagate_postprocess+0x1a0>
    b311:	mov    r13d,DWORD PTR [rip+0x1fdc4]        # 2b0dc <opt+0x3c>
    b318:	test   eax,eax
    b31a:	jne    b468 <shadow_propagate_postprocess+0x1c8>
    b320:	add    edx,edx
    b322:	cmove  edx,ecx
    b325:	test   r13d,r13d
    b328:	je     b4b8 <shadow_propagate_postprocess+0x218>
    b32e:	cmp    edx,r13d
    b331:	jle    b4b8 <shadow_propagate_postprocess+0x218>
    b337:	lea    rax,[rbp*8+0x0]
    b33f:	movsxd rsi,r13d
    b342:	sub    rax,rbp
    b345:	shl    rsi,0x3
    b349:	lea    r14,[rbx+rax*8]
    b34d:	mov    rdi,QWORD PTR [r14+0x108f0]
    b354:	call   51d0 <realloc@plt>
    b359:	test   rax,rax
    b35c:	je     b4a8 <shadow_propagate_postprocess+0x208>
    b362:	mov    QWORD PTR [r14+0x108f0],rax
    b369:	mov    DWORD PTR [r14+0x108e0],r13d
    b370:	lea    rax,[rbp*8+0x0]
    b378:	sub    rax,rbp
    b37b:	movsxd rax,DWORD PTR [rbx+rax*8+0x108dc]
    b383:	cmp    eax,r13d
    b386:	jl     b440 <shadow_propagate_postprocess+0x1a0>
    b38c:	cdq    
    b38d:	idiv   r13d
    b390:	lea    ecx,[rax+0x1]
    b393:	mov    esi,edx
    b395:	mov    edx,0x55555556
    b39a:	mov    eax,ecx
    b39c:	imul   edx
    b39e:	mov    eax,ecx
    b3a0:	sar    eax,0x1f
    b3a3:	sub    eax,edx
    b3a5:	add    eax,esi
    b3a7:	cdq    
    b3a8:	idiv   ecx
    b3aa:	lea    rax,[rbp*8+0x0]
    b3b2:	sub    rax,rbp
    b3b5:	test   edx,edx
    b3b7:	je     b488 <shadow_propagate_postprocess+0x1e8>
    b3bd:	mov    eax,DWORD PTR [rbx+rax*8+0x108dc]
    b3c4:	nop    DWORD PTR [rax+0x0]
    b3c8:	lea    rdx,[rbp*8+0x0]
    b3d0:	add    eax,0x1
    b3d3:	sub    rdx,rbp
    b3d6:	lea    rdx,[rbx+rdx*8]
    b3da:	add    QWORD PTR [rdx+0x108e8],r12
    b3e1:	add    DWORD PTR [rdx+0x108f8],0x1
    b3e8:	add    QWORD PTR [rdx+0x10900],r12
    b3ef:	mov    DWORD PTR [rdx+0x108dc],eax
    b3f5:	mov    rdi,rbx
    b3f8:	mov    esi,0x4
    b3fd:	pop    rbx
    b3fe:	pop    rbp
    b3ff:	pop    r12
    b401:	pop    r13
    b403:	pop    r14
    b405:	jmp    a2a0 <hvm_update_short_summary>
    b40a:	nop    WORD PTR [rax+rax*1+0x0]
    b410:	ret    
    b411:	nop    DWORD PTR [rax+0x0]
    b418:	mov    rcx,QWORD PTR [rip+0x5be39]        # 67258 <warn>
    b41f:	mov    edx,0x14
    b424:	mov    esi,0x1
    b429:	lea    rdi,[rip+0x12f06]        # 1e336 <_IO_stdin_used+0x336>
    b430:	call   5260 <fwrite@plt>
    b435:	jmp    b3f5 <shadow_propagate_postprocess+0x155>
    b437:	nop    WORD PTR [rax+rax*1+0x0]
    b440:	lea    rdx,[rbp*8+0x0]
    b448:	sub    rdx,rbp
    b44b:	lea    rdx,[rbx+rdx*8]
    b44f:	mov    rcx,QWORD PTR [rdx+0x108f0]
    b456:	mov    QWORD PTR [rcx+rax*8],r12
    b45a:	mov    eax,DWORD PTR [rdx+0x108dc]
    b460:	jmp    b3c8 <shadow_propagate_postprocess+0x128>
    b465:	nop    DWORD PTR [rax]
    b468:	cmp    edx,r13d
    b46b:	jl     b320 <shadow_propagate_postprocess+0x80>
    b471:	test   r13d,r13d
    b474:	je     b320 <shadow_propagate_postprocess+0x80>
    b47a:	mov    r13d,edx
    b47d:	jmp    b38c <shadow_propagate_postprocess+0xec>
    b482:	nop    WORD PTR [rax+rax*1+0x0]
    b488:	lea    rdx,[rbx+rax*8]
    b48c:	movsxd rax,esi
    b48f:	mov    rcx,QWORD PTR [rdx+0x108f0]
    b496:	mov    QWORD PTR [rcx+rax*8],r12
    b49a:	mov    eax,DWORD PTR [rdx+0x108dc]
    b4a0:	jmp    b3c8 <shadow_propagate_postprocess+0x128>
    b4a5:	nop    DWORD PTR [rax]
    b4a8:	mov    r13d,DWORD PTR [r14+0x108e0]
    b4af:	jmp    b370 <shadow_propagate_postprocess+0xd0>
    b4b4:	nop    DWORD PTR [rax+0x0]
    b4b8:	mov    r13d,edx
    b4bb:	jmp    b337 <shadow_propagate_postprocess+0x97>

000000000000b4c0 <shadow_fault_generic_postprocess>:
    b4c0:	mov    r8d,DWORD PTR [rdi+0x28358]
    b4c7:	lea    eax,[r8-0x1]
    b4cb:	cmp    eax,0xa
    b4ce:	ja     b648 <shadow_fault_generic_postprocess+0x188>
    b4d4:	mov    eax,DWORD PTR [rip+0x1fbca]        # 2b0a4 <opt+0x4>
    b4da:	test   eax,eax
    b4dc:	je     b550 <shadow_fault_generic_postprocess+0x90>
    b4de:	push   r14
    b4e0:	push   r13
    b4e2:	push   r12
    b4e4:	push   rbp
    b4e5:	mov    rbp,rdi
    b4e8:	push   rbx
    b4e9:	movsxd rbx,r8d
    b4ec:	mov    r12,QWORD PTR [rdi+0x283e8]
    b4f3:	lea    rax,[rbx*8+0x0]
    b4fb:	sub    rax,rbx
    b4fe:	lea    rdx,[rdi+rax*8]
    b502:	add    DWORD PTR [rdx+0x108d8],0x1
    b509:	test   r12,r12
    b50c:	je     b62e <shadow_fault_generic_postprocess+0x16e>
    b512:	mov    ecx,DWORD PTR [rip+0x1fbc0]        # 2b0d8 <opt+0x38>
    b518:	movsxd rax,DWORD PTR [rdx+0x108dc]
    b51f:	test   ecx,ecx
    b521:	je     b600 <shadow_fault_generic_postprocess+0x140>
    b527:	mov    edx,DWORD PTR [rdx+0x108e0]
    b52d:	cmp    edx,eax
    b52f:	jg     b670 <shadow_fault_generic_postprocess+0x1b0>
    b535:	mov    r13d,DWORD PTR [rip+0x1fba0]        # 2b0dc <opt+0x3c>
    b53c:	test   eax,eax
    b53e:	je     b558 <shadow_fault_generic_postprocess+0x98>
    b540:	cmp    edx,r13d
    b543:	jl     b558 <shadow_fault_generic_postprocess+0x98>
    b545:	test   r13d,r13d
    b548:	je     b558 <shadow_fault_generic_postprocess+0x98>
    b54a:	mov    r13d,edx
    b54d:	jmp    b5c0 <shadow_fault_generic_postprocess+0x100>
    b54f:	nop
    b550:	ret    
    b551:	nop    DWORD PTR [rax+0x0]
    b558:	add    edx,edx
    b55a:	cmove  edx,ecx
    b55d:	test   r13d,r13d
    b560:	je     b567 <shadow_fault_generic_postprocess+0xa7>
    b562:	cmp    edx,r13d
    b565:	jg     b56a <shadow_fault_generic_postprocess+0xaa>
    b567:	mov    r13d,edx
    b56a:	lea    rax,[rbx*8+0x0]
    b572:	movsxd rsi,r13d
    b575:	sub    rax,rbx
    b578:	shl    rsi,0x3
    b57c:	lea    r14,[rbp+rax*8+0x0]
    b581:	mov    rdi,QWORD PTR [r14+0x108f0]
    b588:	call   51d0 <realloc@plt>
    b58d:	test   rax,rax
    b590:	je     b6a0 <shadow_fault_generic_postprocess+0x1e0>
    b596:	mov    QWORD PTR [r14+0x108f0],rax
    b59d:	mov    DWORD PTR [r14+0x108e0],r13d
    b5a4:	lea    rax,[rbx*8+0x0]
    b5ac:	sub    rax,rbx
    b5af:	movsxd rax,DWORD PTR [rbp+rax*8+0x108dc]
    b5b7:	cmp    eax,r13d
    b5ba:	jl     b670 <shadow_fault_generic_postprocess+0x1b0>
    b5c0:	cdq    
    b5c1:	idiv   r13d
    b5c4:	lea    ecx,[rax+0x1]
    b5c7:	mov    esi,edx
    b5c9:	mov    edx,0x55555556
    b5ce:	mov    eax,ecx
    b5d0:	imul   edx
    b5d2:	mov    eax,ecx
    b5d4:	sar    eax,0x1f
    b5d7:	sub    eax,edx
    b5d9:	add    eax,esi
    b5db:	cdq    
    b5dc:	idiv   ecx
    b5de:	lea    rax,[rbx*8+0x0]
    b5e6:	sub    rax,rbx
    b5e9:	test   edx,edx
    b5eb:	je     b6b0 <shadow_fault_generic_postprocess+0x1f0>
    b5f1:	mov    eax,DWORD PTR [rbp+rax*8+0x108dc]
    b5f8:	nop    DWORD PTR [rax+rax*1+0x0]
    b600:	lea    rdx,[rbx*8+0x0]
    b608:	add    eax,0x1
    b60b:	sub    rdx,rbx
    b60e:	lea    rdx,[rbp+rdx*8+0x0]
    b613:	add    QWORD PTR [rdx+0x108e8],r12
    b61a:	add    DWORD PTR [rdx+0x108f8],0x1
    b621:	add    QWORD PTR [rdx+0x10900],r12
    b628:	mov    DWORD PTR [rdx+0x108dc],eax
    b62e:	pop    rbx
    b62f:	mov    rdi,rbp
    b632:	mov    esi,0x4
    b637:	pop    rbp
    b638:	pop    r12
    b63a:	pop    r13
    b63c:	pop    r14
    b63e:	jmp    a2a0 <hvm_update_short_summary>
    b643:	nop    DWORD PTR [rax+rax*1+0x0]
    b648:	mov    rdi,QWORD PTR [rip+0x5bc09]        # 67258 <warn>
    b64f:	lea    rcx,[rip+0x18e6a]        # 244c0 <__func__.7239>
    b656:	lea    rdx,[rip+0x153f3]        # 20a50 <_IO_stdin_used+0x2a50>
    b65d:	xor    eax,eax
    b65f:	mov    esi,0x1
    b664:	jmp    5270 <__fprintf_chk@plt>
    b669:	nop    DWORD PTR [rax+0x0]
    b670:	lea    rdx,[rbx*8+0x0]
    b678:	sub    rdx,rbx
    b67b:	lea    rdx,[rbp+rdx*8+0x0]
    b680:	mov    rcx,QWORD PTR [rdx+0x108f0]
    b687:	mov    QWORD PTR [rcx+rax*8],r12
    b68b:	mov    eax,DWORD PTR [rdx+0x108dc]
    b691:	jmp    b600 <shadow_fault_generic_postprocess+0x140>
    b696:	nop    WORD PTR cs:[rax+rax*1+0x0]
    b6a0:	mov    r13d,DWORD PTR [r14+0x108e0]
    b6a7:	jmp    b5a4 <shadow_fault_generic_postprocess+0xe4>
    b6ac:	nop    DWORD PTR [rax+0x0]
    b6b0:	lea    rdx,[rbp+rax*8+0x0]
    b6b5:	movsxd rax,esi
    b6b8:	mov    rcx,QWORD PTR [rdx+0x108f0]
    b6bf:	mov    QWORD PTR [rcx+rax*8],r12
    b6c3:	mov    eax,DWORD PTR [rdx+0x108dc]
    b6c9:	jmp    b600 <shadow_fault_generic_postprocess+0x140>
    b6ce:	xchg   ax,ax

000000000000b6d0 <shadow_emulate_postprocess>:
    b6d0:	push   r15
    b6d2:	push   r14
    b6d4:	push   r13
    b6d6:	push   r12
    b6d8:	push   rbp
    b6d9:	push   rbx
    b6da:	mov    rbx,rdi
    b6dd:	sub    rsp,0x8
    b6e1:	mov    eax,DWORD PTR [rip+0x1f9bd]        # 2b0a4 <opt+0x4>
    b6e7:	test   eax,eax
    b6e9:	jne    b760 <shadow_emulate_postprocess+0x90>
    b6eb:	test   BYTE PTR [rip+0x1f9ae],0x2        # 2b0a0 <opt>
    b6f2:	je     b750 <shadow_emulate_postprocess+0x80>
    b6f4:	test   BYTE PTR [rbx+0x28351],0x20
    b6fb:	jne    b8e0 <shadow_emulate_postprocess+0x210>
    b701:	test   BYTE PTR [rbx+0x28408],0x2
    b708:	jne    b900 <shadow_emulate_postprocess+0x230>
    b70e:	test   BYTE PTR [rbx+0x28351],0x2
    b715:	je     b750 <shadow_emulate_postprocess+0x80>
    b717:	test   BYTE PTR [rip+0x1f984],0x20        # 2b0a2 <opt+0x2>
    b71e:	je     b9c0 <shadow_emulate_postprocess+0x2f0>
    b724:	mov    rax,QWORD PTR [rbx+0x10]
    b728:	mov    rax,QWORD PTR [rax+0x70]
    b72c:	test   rax,rax
    b72f:	je     b750 <shadow_emulate_postprocess+0x80>
    b731:	movsxd rsi,DWORD PTR [rax+0x18]
    b735:	mov    rdi,QWORD PTR [rbx+0x283e0]
    b73c:	add    rsp,0x8
    b740:	pop    rbx
    b741:	pop    rbp
    b742:	pop    r12
    b744:	pop    r13
    b746:	pop    r14
    b748:	pop    r15
    b74a:	jmp    8200 <scatterplot_vs_time>
    b74f:	nop
    b750:	add    rsp,0x8
    b754:	pop    rbx
    b755:	pop    rbp
    b756:	pop    r12
    b758:	pop    r13
    b75a:	pop    r14
    b75c:	pop    r15
    b75e:	ret    
    b75f:	nop
    b760:	mov    rax,QWORD PTR [rdi+0x10]
    b764:	mov    rdx,QWORD PTR [rdi+0x283e8]
    b76b:	xor    r8d,r8d
    b76e:	xor    ecx,ecx
    b770:	mov    rsi,QWORD PTR [rdi+0x283f8]
    b777:	mov    rdi,QWORD PTR [rax+0x8]
    b77b:	add    rdi,0x9e8
    b782:	call   9cb0 <update_eip>
    b787:	mov    rbp,QWORD PTR [rbx+0x283e8]
    b78e:	add    DWORD PTR [rbx+0x10a98],0x1
    b795:	test   rbp,rbp
    b798:	je     b9d8 <shadow_emulate_postprocess+0x308>
    b79e:	movsxd rcx,DWORD PTR [rbx+0x10a9c]
    b7a5:	mov    edx,DWORD PTR [rip+0x1f92d]        # 2b0d8 <opt+0x38>
    b7ab:	mov    eax,ecx
    b7ad:	test   edx,edx
    b7af:	jne    b918 <shadow_emulate_postprocess+0x248>
    b7b5:	mov    r13,rbp
    b7b8:	mov    r14,rbp
    b7bb:	movsxd r12,DWORD PTR [rbx+0x283a0]
    b7c2:	add    eax,0x1
    b7c5:	add    QWORD PTR [rbx+0x10aa8],rbp
    b7cc:	mov    DWORD PTR [rbx+0x10a9c],eax
    b7d2:	lea    rax,[r12*8+0x0]
    b7da:	add    DWORD PTR [rbx+0x10ab8],0x1
    b7e1:	sub    rax,r12
    b7e4:	add    QWORD PTR [rbx+0x10ac0],rbp
    b7eb:	lea    rdx,[rbx+rax*8]
    b7ef:	add    DWORD PTR [rdx+0x10be8],0x1
    b7f6:	test   r13,r13
    b7f9:	je     c10b <shadow_emulate_postprocess+0xa3b>
    b7ff:	mov    ecx,DWORD PTR [rip+0x1f8d3]        # 2b0d8 <opt+0x38>
    b805:	movsxd rax,DWORD PTR [rdx+0x10bec]
    b80c:	test   ecx,ecx
    b80e:	je     bdb0 <shadow_emulate_postprocess+0x6e0>
    b814:	mov    edx,DWORD PTR [rdx+0x10bf0]
    b81a:	cmp    edx,eax
    b81c:	jg     bf10 <shadow_emulate_postprocess+0x840>
    b822:	mov    ebp,DWORD PTR [rip+0x1f8b4]        # 2b0dc <opt+0x3c>
    b828:	test   eax,eax
    b82a:	jne    bf50 <shadow_emulate_postprocess+0x880>
    b830:	add    edx,edx
    b832:	cmove  edx,ecx
    b835:	cmp    edx,ebp
    b837:	jle    c0b0 <shadow_emulate_postprocess+0x9e0>
    b83d:	test   ebp,ebp
    b83f:	je     c0b0 <shadow_emulate_postprocess+0x9e0>
    b845:	lea    rax,[r12*8+0x0]
    b84d:	movsxd rsi,ebp
    b850:	sub    rax,r12
    b853:	shl    rsi,0x3
    b857:	lea    r15,[rbx+rax*8]
    b85b:	mov    rdi,QWORD PTR [r15+0x10c00]
    b862:	call   51d0 <realloc@plt>
    b867:	test   rax,rax
    b86a:	je     c030 <shadow_emulate_postprocess+0x960>
    b870:	mov    QWORD PTR [r15+0x10c00],rax
    b877:	mov    DWORD PTR [r15+0x10bf0],ebp
    b87e:	lea    rax,[r12*8+0x0]
    b886:	sub    rax,r12
    b889:	movsxd rax,DWORD PTR [rbx+rax*8+0x10bec]
    b891:	cmp    eax,ebp
    b893:	jl     bf10 <shadow_emulate_postprocess+0x840>
    b899:	cdq    
    b89a:	idiv   ebp
    b89c:	lea    ecx,[rax+0x1]
    b89f:	mov    esi,edx
    b8a1:	mov    edx,0x55555556
    b8a6:	mov    eax,ecx
    b8a8:	imul   edx
    b8aa:	mov    eax,ecx
    b8ac:	sar    eax,0x1f
    b8af:	sub    eax,edx
    b8b1:	add    eax,esi
    b8b3:	cdq    
    b8b4:	idiv   ecx
    b8b6:	lea    rax,[r12*8+0x0]
    b8be:	sub    rax,r12
    b8c1:	test   edx,edx
    b8c3:	je     bff0 <shadow_emulate_postprocess+0x920>
    b8c9:	mov    r15,QWORD PTR [rbx+0x283e8]
    b8d0:	mov    eax,DWORD PTR [rbx+rax*8+0x10bec]
    b8d7:	mov    rbp,r15
    b8da:	jmp    bdb6 <shadow_emulate_postprocess+0x6e6>
    b8df:	nop
    b8e0:	mov    rdi,QWORD PTR [rbx+0x283e0]
    b8e7:	mov    rsi,0xfffffffffffffff6
    b8ee:	call   8200 <scatterplot_vs_time>
    b8f3:	test   BYTE PTR [rbx+0x28408],0x2
    b8fa:	je     b70e <shadow_emulate_postprocess+0x3e>
    b900:	mov    rdi,QWORD PTR [rbx+0x283e0]
    b907:	xor    esi,esi
    b909:	call   8200 <scatterplot_vs_time>
    b90e:	jmp    b70e <shadow_emulate_postprocess+0x3e>
    b913:	nop    DWORD PTR [rax+rax*1+0x0]
    b918:	mov    eax,DWORD PTR [rbx+0x10aa0]
    b91e:	cmp    eax,ecx
    b920:	jg     bef0 <shadow_emulate_postprocess+0x820>
    b926:	mov    r12d,DWORD PTR [rip+0x1f7af]        # 2b0dc <opt+0x3c>
    b92d:	test   ecx,ecx
    b92f:	jne    bf90 <shadow_emulate_postprocess+0x8c0>
    b935:	add    eax,eax
    b937:	cmove  eax,edx
    b93a:	cmp    eax,r12d
    b93d:	jle    c0a0 <shadow_emulate_postprocess+0x9d0>
    b943:	test   r12d,r12d
    b946:	je     c0a0 <shadow_emulate_postprocess+0x9d0>
    b94c:	movsxd rsi,r12d
    b94f:	mov    rdi,QWORD PTR [rbx+0x10ab0]
    b956:	shl    rsi,0x3
    b95a:	call   51d0 <realloc@plt>
    b95f:	test   rax,rax
    b962:	je     c020 <shadow_emulate_postprocess+0x950>
    b968:	mov    QWORD PTR [rbx+0x10ab0],rax
    b96f:	mov    DWORD PTR [rbx+0x10aa0],r12d
    b976:	movsxd rcx,DWORD PTR [rbx+0x10a9c]
    b97d:	cmp    ecx,r12d
    b980:	jl     bef0 <shadow_emulate_postprocess+0x820>
    b986:	mov    eax,ecx
    b988:	cdq    
    b989:	idiv   r12d
    b98c:	lea    esi,[rax+0x1]
    b98f:	movsxd rdi,edx
    b992:	mov    edx,0x55555556
    b997:	mov    eax,esi
    b999:	imul   edx
    b99b:	mov    eax,esi
    b99d:	sar    eax,0x1f
    b9a0:	sub    eax,edx
    b9a2:	add    eax,edi
    b9a4:	cdq    
    b9a5:	idiv   esi
    b9a7:	test   edx,edx
    b9a9:	je     c000 <shadow_emulate_postprocess+0x930>
    b9af:	mov    r14,QWORD PTR [rbx+0x283e8]
    b9b6:	mov    eax,ecx
    b9b8:	mov    r13,r14
    b9bb:	jmp    b7bb <shadow_emulate_postprocess+0xeb>
    b9c0:	mov    rdi,QWORD PTR [rbx+0x283e0]
    b9c7:	mov    esi,0x2
    b9cc:	jmp    b73c <shadow_emulate_postprocess+0x6c>
    b9d1:	nop    DWORD PTR [rax+0x0]
    b9d8:	movsxd rdx,DWORD PTR [rbx+0x283a0]
    b9df:	xor    r15d,r15d
    b9e2:	lea    rax,[rdx*8+0x0]
    b9ea:	sub    rax,rdx
    b9ed:	add    DWORD PTR [rbx+rax*8+0x10be8],0x1
    b9f5:	xor    ebp,ebp
    b9f7:	test   BYTE PTR [rbx+0x28408],0x2
    b9fe:	je     bc1a <shadow_emulate_postprocess+0x54a>
    ba04:	add    DWORD PTR [rbx+0x10e88],0x1
    ba0b:	xor    ebp,ebp
    ba0d:	test   BYTE PTR [rbx+0x28352],0x2
    ba14:	jne    bd30 <shadow_emulate_postprocess+0x660>
    ba1a:	nop    WORD PTR [rax+rax*1+0x0]
    ba20:	test   BYTE PTR [rbx+0x28351],0x20
    ba27:	je     ba4f <shadow_emulate_postprocess+0x37f>
    ba29:	add    DWORD PTR [rbx+0x10d00],0x1
    ba30:	test   rbp,rbp
    ba33:	je     bed7 <shadow_emulate_postprocess+0x807>
    ba39:	mov    rsi,rbp
    ba3c:	lea    rdi,[rbx+0x10d00]
    ba43:	call   56e0 <update_cycles.part.5>
    ba48:	mov    rbp,QWORD PTR [rbx+0x283e8]
    ba4f:	movzx  eax,BYTE PTR [rbx+0x28350]
    ba56:	test   al,0x20
    ba58:	je     bd58 <shadow_emulate_postprocess+0x688>
    ba5e:	add    DWORD PTR [rbx+0x10d38],0x1
    ba65:	test   rbp,rbp
    ba68:	je     ba80 <shadow_emulate_postprocess+0x3b0>
    ba6a:	lea    rdi,[rbx+0x10d38]
    ba71:	mov    rsi,rbp
    ba74:	call   56e0 <update_cycles.part.5>
    ba79:	movzx  eax,BYTE PTR [rbx+0x28350]
    ba80:	test   al,0x40
    ba82:	je     baaa <shadow_emulate_postprocess+0x3da>
    ba84:	mov    rsi,QWORD PTR [rbx+0x283e8]
    ba8b:	add    DWORD PTR [rbx+0x10da8],0x1
    ba92:	test   rsi,rsi
    ba95:	je     baaa <shadow_emulate_postprocess+0x3da>
    ba97:	lea    rdi,[rbx+0x10da8]
    ba9e:	call   56e0 <update_cycles.part.5>
    baa3:	movzx  eax,BYTE PTR [rbx+0x28350]
    baaa:	test   al,al
    baac:	js     bd88 <shadow_emulate_postprocess+0x6b8>
    bab2:	movzx  eax,BYTE PTR [rbx+0x28351]
    bab9:	test   al,0x2
    babb:	je     bbbe <shadow_emulate_postprocess+0x4ee>
    bac1:	mov    rbp,QWORD PTR [rbx+0x283e8]
    bac8:	add    DWORD PTR [rbx+0x10e18],0x1
    bacf:	test   rbp,rbp
    bad2:	je     bbbe <shadow_emulate_postprocess+0x4ee>
    bad8:	movsxd rcx,DWORD PTR [rbx+0x10e1c]
    badf:	mov    esi,DWORD PTR [rip+0x1f5f3]        # 2b0d8 <opt+0x38>
    bae5:	mov    edx,ecx
    bae7:	test   esi,esi
    bae9:	je     bba0 <shadow_emulate_postprocess+0x4d0>
    baef:	mov    eax,DWORD PTR [rbx+0x10e20]
    baf5:	cmp    eax,ecx
    baf7:	jg     bfb0 <shadow_emulate_postprocess+0x8e0>
    bafd:	mov    r12d,DWORD PTR [rip+0x1f5d8]        # 2b0dc <opt+0x3c>
    bb04:	test   ecx,ecx
    bb06:	je     bb16 <shadow_emulate_postprocess+0x446>
    bb08:	cmp    eax,r12d
    bb0b:	jl     bb16 <shadow_emulate_postprocess+0x446>
    bb0d:	test   r12d,r12d
    bb10:	jne    c0f3 <shadow_emulate_postprocess+0xa23>
    bb16:	add    eax,eax
    bb18:	cmove  eax,esi
    bb1b:	test   r12d,r12d
    bb1e:	je     c0e3 <shadow_emulate_postprocess+0xa13>
    bb24:	cmp    eax,r12d
    bb27:	jle    c0e3 <shadow_emulate_postprocess+0xa13>
    bb2d:	movsxd rsi,r12d
    bb30:	mov    rdi,QWORD PTR [rbx+0x10e30]
    bb37:	shl    rsi,0x3
    bb3b:	call   51d0 <realloc@plt>
    bb40:	test   rax,rax
    bb43:	je     c0b7 <shadow_emulate_postprocess+0x9e7>
    bb49:	mov    QWORD PTR [rbx+0x10e30],rax
    bb50:	mov    DWORD PTR [rbx+0x10e20],r12d
    bb57:	movsxd rcx,DWORD PTR [rbx+0x10e1c]
    bb5e:	cmp    ecx,r12d
    bb61:	jl     bfb0 <shadow_emulate_postprocess+0x8e0>
    bb67:	mov    eax,ecx
    bb69:	cdq    
    bb6a:	idiv   r12d
    bb6d:	lea    esi,[rax+0x1]
    bb70:	movsxd rdi,edx
    bb73:	mov    edx,0x55555556
    bb78:	mov    eax,esi
    bb7a:	imul   edx
    bb7c:	mov    eax,esi
    bb7e:	sar    eax,0x1f
    bb81:	sub    eax,edx
    bb83:	add    eax,edi
    bb85:	cdq    
    bb86:	idiv   esi
    bb88:	test   edx,edx
    bb8a:	je     c040 <shadow_emulate_postprocess+0x970>
    bb90:	movzx  eax,BYTE PTR [rbx+0x28351]
    bb97:	mov    edx,ecx
    bb99:	nop    DWORD PTR [rax+0x0]
    bba0:	add    edx,0x1
    bba3:	add    QWORD PTR [rbx+0x10e28],rbp
    bbaa:	add    DWORD PTR [rbx+0x10e38],0x1
    bbb1:	add    QWORD PTR [rbx+0x10e40],rbp
    bbb8:	mov    DWORD PTR [rbx+0x10e1c],edx
    bbbe:	test   al,0x1
    bbc0:	je     bbe1 <shadow_emulate_postprocess+0x511>
    bbc2:	mov    rsi,QWORD PTR [rbx+0x283e8]
    bbc9:	add    DWORD PTR [rbx+0x10e50],0x1
    bbd0:	test   rsi,rsi
    bbd3:	je     bbe1 <shadow_emulate_postprocess+0x511>
    bbd5:	lea    rdi,[rbx+0x10e50]
    bbdc:	call   56e0 <update_cycles.part.5>
    bbe1:	xor    esi,esi
    bbe3:	mov    rdi,rbx
    bbe6:	call   a2a0 <hvm_update_short_summary>
    bbeb:	jmp    b6eb <shadow_emulate_postprocess+0x1b>
    bbf0:	mov    rcx,rbp
    bbf3:	mov    rdx,r15
    bbf6:	add    eax,0x1
    bbf9:	add    DWORD PTR [rbx+0x10ea8],0x1
    bc00:	mov    DWORD PTR [rbx+0x10e8c],eax
    bc06:	add    QWORD PTR [rbx+0x10e98],r15
    bc0d:	mov    r15,rdx
    bc10:	add    QWORD PTR [rbx+0x10eb0],rbp
    bc17:	mov    rbp,rcx
    bc1a:	test   BYTE PTR [rbx+0x28352],0x2
    bc21:	je     ba20 <shadow_emulate_postprocess+0x350>
    bc27:	add    DWORD PTR [rbx+0x10ec0],0x1
    bc2e:	test   rbp,rbp
    bc31:	je     bd37 <shadow_emulate_postprocess+0x667>
    bc37:	movsxd rcx,DWORD PTR [rbx+0x10ec4]
    bc3e:	mov    esi,DWORD PTR [rip+0x1f494]        # 2b0d8 <opt+0x38>
    bc44:	mov    rdx,rbp
    bc47:	mov    eax,ecx
    bc49:	test   esi,esi
    bc4b:	je     bd00 <shadow_emulate_postprocess+0x630>
    bc51:	mov    eax,DWORD PTR [rbx+0x10ec8]
    bc57:	cmp    eax,ecx
    bc59:	jg     bfd0 <shadow_emulate_postprocess+0x900>
    bc5f:	mov    r12d,DWORD PTR [rip+0x1f476]        # 2b0dc <opt+0x3c>
    bc66:	test   ecx,ecx
    bc68:	je     bc78 <shadow_emulate_postprocess+0x5a8>
    bc6a:	test   r12d,r12d
    bc6d:	je     bc78 <shadow_emulate_postprocess+0x5a8>
    bc6f:	cmp    eax,r12d
    bc72:	jge    c103 <shadow_emulate_postprocess+0xa33>
    bc78:	add    eax,eax
    bc7a:	cmove  eax,esi
    bc7d:	test   r12d,r12d
    bc80:	je     c0eb <shadow_emulate_postprocess+0xa1b>
    bc86:	cmp    eax,r12d
    bc89:	jle    c0eb <shadow_emulate_postprocess+0xa1b>
    bc8f:	movsxd rsi,r12d
    bc92:	mov    rdi,QWORD PTR [rbx+0x10ed8]
    bc99:	shl    rsi,0x3
    bc9d:	call   51d0 <realloc@plt>
    bca2:	test   rax,rax
    bca5:	je     c0c3 <shadow_emulate_postprocess+0x9f3>
    bcab:	mov    QWORD PTR [rbx+0x10ed8],rax
    bcb2:	mov    DWORD PTR [rbx+0x10ec8],r12d
    bcb9:	movsxd rcx,DWORD PTR [rbx+0x10ec4]
    bcc0:	cmp    ecx,r12d
    bcc3:	jl     bfd0 <shadow_emulate_postprocess+0x900>
    bcc9:	mov    eax,ecx
    bccb:	cdq    
    bccc:	idiv   r12d
    bccf:	lea    esi,[rax+0x1]
    bcd2:	movsxd rdi,edx
    bcd5:	mov    edx,0x55555556
    bcda:	mov    eax,esi
    bcdc:	imul   edx
    bcde:	mov    eax,esi
    bce0:	sar    eax,0x1f
    bce3:	sub    eax,edx
    bce5:	add    eax,edi
    bce7:	cdq    
    bce8:	idiv   esi
    bcea:	test   edx,edx
    bcec:	je     c080 <shadow_emulate_postprocess+0x9b0>
    bcf2:	mov    rdx,QWORD PTR [rbx+0x283e8]
    bcf9:	mov    eax,ecx
    bcfb:	nop    DWORD PTR [rax+rax*1+0x0]
    bd00:	add    eax,0x1
    bd03:	add    QWORD PTR [rbx+0x10ee8],rbp
    bd0a:	mov    rbp,rdx
    bd0d:	mov    DWORD PTR [rbx+0x10ec4],eax
    bd13:	add    QWORD PTR [rbx+0x10ed0],r15
    bd1a:	add    DWORD PTR [rbx+0x10ee0],0x1
    bd21:	jmp    ba20 <shadow_emulate_postprocess+0x350>
    bd26:	nop    WORD PTR cs:[rax+rax*1+0x0]
    bd30:	add    DWORD PTR [rbx+0x10ec0],0x1
    bd37:	test   BYTE PTR [rbx+0x28351],0x20
    bd3e:	jne    bed0 <shadow_emulate_postprocess+0x800>
    bd44:	movzx  eax,BYTE PTR [rbx+0x28350]
    bd4b:	xor    ebp,ebp
    bd4d:	test   al,0x20
    bd4f:	jne    bf40 <shadow_emulate_postprocess+0x870>
    bd55:	nop    DWORD PTR [rax]
    bd58:	add    DWORD PTR [rbx+0x10d70],0x1
    bd5f:	test   rbp,rbp
    bd62:	je     ba80 <shadow_emulate_postprocess+0x3b0>
    bd68:	lea    rdi,[rbx+0x10d70]
    bd6f:	mov    rsi,rbp
    bd72:	call   56e0 <update_cycles.part.5>
    bd77:	movzx  eax,BYTE PTR [rbx+0x28350]
    bd7e:	jmp    ba80 <shadow_emulate_postprocess+0x3b0>
    bd83:	nop    DWORD PTR [rax+rax*1+0x0]
    bd88:	mov    rsi,QWORD PTR [rbx+0x283e8]
    bd8f:	add    DWORD PTR [rbx+0x10de0],0x1
    bd96:	test   rsi,rsi
    bd99:	je     bab2 <shadow_emulate_postprocess+0x3e2>
    bd9f:	lea    rdi,[rbx+0x10de0]
    bda6:	call   56e0 <update_cycles.part.5>
    bdab:	jmp    bab2 <shadow_emulate_postprocess+0x3e2>
    bdb0:	mov    rbp,r13
    bdb3:	mov    r15,r14
    bdb6:	lea    rdx,[r12*8+0x0]
    bdbe:	add    eax,0x1
    bdc1:	sub    rdx,r12
    bdc4:	lea    rdx,[rbx+rdx*8]
    bdc8:	mov    DWORD PTR [rdx+0x10bec],eax
    bdce:	add    QWORD PTR [rdx+0x10bf8],r14
    bdd5:	add    DWORD PTR [rdx+0x10c08],0x1
    bddc:	add    QWORD PTR [rdx+0x10c10],r13
    bde3:	test   BYTE PTR [rbx+0x28408],0x2
    bdea:	je     bc1a <shadow_emulate_postprocess+0x54a>
    bdf0:	add    DWORD PTR [rbx+0x10e88],0x1
    bdf7:	test   rbp,rbp
    bdfa:	je     ba0b <shadow_emulate_postprocess+0x33b>
    be00:	movsxd rcx,DWORD PTR [rbx+0x10e8c]
    be07:	mov    edx,DWORD PTR [rip+0x1f2cb]        # 2b0d8 <opt+0x38>
    be0d:	mov    eax,ecx
    be0f:	test   edx,edx
    be11:	je     bbf0 <shadow_emulate_postprocess+0x520>
    be17:	mov    eax,DWORD PTR [rbx+0x10e90]
    be1d:	cmp    eax,ecx
    be1f:	jg     bf70 <shadow_emulate_postprocess+0x8a0>
    be25:	mov    r12d,DWORD PTR [rip+0x1f2b0]        # 2b0dc <opt+0x3c>
    be2c:	test   ecx,ecx
    be2e:	je     be3e <shadow_emulate_postprocess+0x76e>
    be30:	test   r12d,r12d
    be33:	je     be3e <shadow_emulate_postprocess+0x76e>
    be35:	cmp    eax,r12d
    be38:	jge    c0fb <shadow_emulate_postprocess+0xa2b>
    be3e:	add    eax,eax
    be40:	cmove  eax,edx
    be43:	cmp    eax,r12d
    be46:	jle    c0db <shadow_emulate_postprocess+0xa0b>
    be4c:	test   r12d,r12d
    be4f:	je     c0db <shadow_emulate_postprocess+0xa0b>
    be55:	movsxd rsi,r12d
    be58:	mov    rdi,QWORD PTR [rbx+0x10ea0]
    be5f:	shl    rsi,0x3
    be63:	call   51d0 <realloc@plt>
    be68:	test   rax,rax
    be6b:	je     c0cf <shadow_emulate_postprocess+0x9ff>
    be71:	mov    QWORD PTR [rbx+0x10ea0],rax
    be78:	mov    DWORD PTR [rbx+0x10e90],r12d
    be7f:	movsxd rcx,DWORD PTR [rbx+0x10e8c]
    be86:	cmp    ecx,r12d
    be89:	jl     bf70 <shadow_emulate_postprocess+0x8a0>
    be8f:	mov    eax,ecx
    be91:	cdq    
    be92:	idiv   r12d
    be95:	lea    esi,[rax+0x1]
    be98:	movsxd rdi,edx
    be9b:	mov    edx,0x55555556
    bea0:	mov    eax,esi
    bea2:	imul   edx
    bea4:	mov    eax,esi
    bea6:	sar    eax,0x1f
    bea9:	sub    eax,edx
    beab:	add    eax,edi
    bead:	cdq    
    beae:	idiv   esi
    beb0:	test   edx,edx
    beb2:	je     c060 <shadow_emulate_postprocess+0x990>
    beb8:	mov    rdx,QWORD PTR [rbx+0x283e8]
    bebf:	mov    eax,ecx
    bec1:	mov    rcx,rdx
    bec4:	jmp    bbf6 <shadow_emulate_postprocess+0x526>
    bec9:	nop    DWORD PTR [rax+0x0]
    bed0:	add    DWORD PTR [rbx+0x10d00],0x1
    bed7:	movzx  eax,BYTE PTR [rbx+0x28350]
    bede:	test   al,0x20
    bee0:	jne    bf40 <shadow_emulate_postprocess+0x870>
    bee2:	add    DWORD PTR [rbx+0x10d70],0x1
    bee9:	jmp    ba80 <shadow_emulate_postprocess+0x3b0>
    beee:	xchg   ax,ax
    bef0:	mov    rax,QWORD PTR [rbx+0x10ab0]
    bef7:	mov    QWORD PTR [rax+rcx*8],rbp
    befb:	mov    r14,QWORD PTR [rbx+0x283e8]
    bf02:	mov    eax,DWORD PTR [rbx+0x10a9c]
    bf08:	mov    r13,r14
    bf0b:	jmp    b7bb <shadow_emulate_postprocess+0xeb>
    bf10:	lea    rdx,[r12*8+0x0]
    bf18:	sub    rdx,r12
    bf1b:	lea    rdx,[rbx+rdx*8]
    bf1f:	mov    rcx,QWORD PTR [rdx+0x10c00]
    bf26:	mov    QWORD PTR [rcx+rax*8],r13
    bf2a:	mov    r15,QWORD PTR [rbx+0x283e8]
    bf31:	mov    eax,DWORD PTR [rdx+0x10bec]
    bf37:	mov    rbp,r15
    bf3a:	jmp    bdb6 <shadow_emulate_postprocess+0x6e6>
    bf3f:	nop
    bf40:	add    DWORD PTR [rbx+0x10d38],0x1
    bf47:	jmp    ba80 <shadow_emulate_postprocess+0x3b0>
    bf4c:	nop    DWORD PTR [rax+0x0]
    bf50:	test   ebp,ebp
    bf52:	je     b830 <shadow_emulate_postprocess+0x160>
    bf58:	cmp    edx,ebp
    bf5a:	jl     b830 <shadow_emulate_postprocess+0x160>
    bf60:	mov    ebp,edx
    bf62:	jmp    b899 <shadow_emulate_postprocess+0x1c9>
    bf67:	nop    WORD PTR [rax+rax*1+0x0]
    bf70:	mov    rax,QWORD PTR [rbx+0x10ea0]
    bf77:	mov    QWORD PTR [rax+rcx*8],rbp
    bf7b:	mov    rdx,QWORD PTR [rbx+0x283e8]
    bf82:	mov    eax,DWORD PTR [rbx+0x10e8c]
    bf88:	mov    rcx,rdx
    bf8b:	jmp    bbf6 <shadow_emulate_postprocess+0x526>
    bf90:	cmp    eax,r12d
    bf93:	jl     b935 <shadow_emulate_postprocess+0x265>
    bf99:	test   r12d,r12d
    bf9c:	je     b935 <shadow_emulate_postprocess+0x265>
    bfa2:	mov    r12d,eax
    bfa5:	jmp    b986 <shadow_emulate_postprocess+0x2b6>
    bfaa:	nop    WORD PTR [rax+rax*1+0x0]
    bfb0:	mov    rax,QWORD PTR [rbx+0x10e30]
    bfb7:	mov    QWORD PTR [rax+rcx*8],rbp
    bfbb:	mov    edx,DWORD PTR [rbx+0x10e1c]
    bfc1:	movzx  eax,BYTE PTR [rbx+0x28351]
    bfc8:	jmp    bba0 <shadow_emulate_postprocess+0x4d0>
    bfcd:	nop    DWORD PTR [rax]
    bfd0:	mov    rax,QWORD PTR [rbx+0x10ed8]
    bfd7:	mov    QWORD PTR [rax+rcx*8],rbp
    bfdb:	mov    eax,DWORD PTR [rbx+0x10ec4]
    bfe1:	mov    rdx,QWORD PTR [rbx+0x283e8]
    bfe8:	jmp    bd00 <shadow_emulate_postprocess+0x630>
    bfed:	nop    DWORD PTR [rax]
    bff0:	lea    rdx,[rbx+rax*8]
    bff4:	movsxd rax,esi
    bff7:	jmp    bf1f <shadow_emulate_postprocess+0x84f>
    bffc:	nop    DWORD PTR [rax+0x0]
    c000:	mov    rax,QWORD PTR [rbx+0x10ab0]
    c007:	mov    QWORD PTR [rax+rdi*8],rbp
    c00b:	mov    r14,QWORD PTR [rbx+0x283e8]
    c012:	mov    eax,DWORD PTR [rbx+0x10a9c]
    c018:	mov    r13,r14
    c01b:	jmp    b7bb <shadow_emulate_postprocess+0xeb>
    c020:	mov    r12d,DWORD PTR [rbx+0x10aa0]
    c027:	jmp    b976 <shadow_emulate_postprocess+0x2a6>
    c02c:	nop    DWORD PTR [rax+0x0]
    c030:	mov    ebp,DWORD PTR [r15+0x10bf0]
    c037:	jmp    b87e <shadow_emulate_postprocess+0x1ae>
    c03c:	nop    DWORD PTR [rax+0x0]
    c040:	mov    rax,QWORD PTR [rbx+0x10e30]
    c047:	mov    QWORD PTR [rax+rdi*8],rbp
    c04b:	mov    edx,DWORD PTR [rbx+0x10e1c]
    c051:	movzx  eax,BYTE PTR [rbx+0x28351]
    c058:	jmp    bba0 <shadow_emulate_postprocess+0x4d0>
    c05d:	nop    DWORD PTR [rax]
    c060:	mov    rax,QWORD PTR [rbx+0x10ea0]
    c067:	mov    QWORD PTR [rax+rdi*8],rbp
    c06b:	mov    rdx,QWORD PTR [rbx+0x283e8]
    c072:	mov    eax,DWORD PTR [rbx+0x10e8c]
    c078:	mov    rcx,rdx
    c07b:	jmp    bbf6 <shadow_emulate_postprocess+0x526>
    c080:	mov    rax,QWORD PTR [rbx+0x10ed8]
    c087:	mov    QWORD PTR [rax+rdi*8],rbp
    c08b:	mov    eax,DWORD PTR [rbx+0x10ec4]
    c091:	mov    rdx,QWORD PTR [rbx+0x283e8]
    c098:	jmp    bd00 <shadow_emulate_postprocess+0x630>
    c09d:	nop    DWORD PTR [rax]
    c0a0:	mov    r12d,eax
    c0a3:	jmp    b94c <shadow_emulate_postprocess+0x27c>
    c0a8:	nop    DWORD PTR [rax+rax*1+0x0]
    c0b0:	mov    ebp,edx
    c0b2:	jmp    b845 <shadow_emulate_postprocess+0x175>
    c0b7:	mov    r12d,DWORD PTR [rbx+0x10e20]
    c0be:	jmp    bb57 <shadow_emulate_postprocess+0x487>
    c0c3:	mov    r12d,DWORD PTR [rbx+0x10ec8]
    c0ca:	jmp    bcb9 <shadow_emulate_postprocess+0x5e9>
    c0cf:	mov    r12d,DWORD PTR [rbx+0x10e90]
    c0d6:	jmp    be7f <shadow_emulate_postprocess+0x7af>
    c0db:	mov    r12d,eax
    c0de:	jmp    be55 <shadow_emulate_postprocess+0x785>
    c0e3:	mov    r12d,eax
    c0e6:	jmp    bb2d <shadow_emulate_postprocess+0x45d>
    c0eb:	mov    r12d,eax
    c0ee:	jmp    bc8f <shadow_emulate_postprocess+0x5bf>
    c0f3:	mov    r12d,eax
    c0f6:	jmp    bb67 <shadow_emulate_postprocess+0x497>
    c0fb:	mov    r12d,eax
    c0fe:	jmp    be8f <shadow_emulate_postprocess+0x7bf>
    c103:	mov    r12d,eax
    c106:	jmp    bcc9 <shadow_emulate_postprocess+0x5f9>
    c10b:	mov    r15,r14
    c10e:	jmp    b9f5 <shadow_emulate_postprocess+0x325>
    c113:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    c11e:	xchg   ax,ax

000000000000c120 <hvm_short_summary>:
    c120:	push   r15
    c122:	lea    r15,[rdi+0x4]
    c126:	push   r14
    c128:	mov    r14,rdx
    c12b:	push   r13
    c12d:	lea    r13,[rip+0x1f3cc]        # 2b500 <hvm_short_summary_name>
    c134:	push   r12
    c136:	mov    r12,rsi
    c139:	push   rbp
    c13a:	push   rbx
    c13b:	sub    rsp,0x98
    c142:	mov    rax,QWORD PTR fs:0x28
    c14b:	mov    QWORD PTR [rsp+0x88],rax
    c153:	xor    eax,eax
    c155:	mov    rax,rsi
    c158:	lea    rbp,[rsp+0x30]
    c15d:	and    eax,0x1
    c160:	mov    QWORD PTR [rsp+0x28],rax
    c165:	jmp    c271 <hvm_short_summary+0x151>
    c16a:	nop    WORD PTR [rax+rax*1+0x0]
    c170:	pxor   xmm0,xmm0
    c174:	cvtsi2sd xmm0,rsi
    c179:	pxor   xmm1,xmm1
    c17d:	lea    rax,[rsi+rsi*4]
    c181:	cvtsi2sd xmm1,QWORD PTR [rip+0x1ef26]        # 2b0b0 <opt+0x10>
    c18a:	lea    rax,[rax+rax*4]
    c18e:	shl    rax,0x2
    c192:	divsd  xmm0,xmm1
    c196:	js     c330 <hvm_short_summary+0x210>
    c19c:	pxor   xmm1,xmm1
    c1a0:	cvtsi2sd xmm1,rax
    c1a5:	test   r12,r12
    c1a8:	js     c2e8 <hvm_short_summary+0x1c8>
    c1ae:	pxor   xmm2,xmm2
    c1b2:	mov    esi,DWORD PTR [rip+0x1ef20]        # 2b0d8 <opt+0x38>
    c1b8:	cvtsi2sd xmm2,r12
    c1bd:	divsd  xmm1,xmm2
    c1c1:	test   esi,esi
    c1c3:	je     c312 <hvm_short_summary+0x1f2>
    c1c9:	cmp    DWORD PTR [r15+0x4],ecx
    c1cd:	mov    ebx,ecx
    c1cf:	cmovle ebx,DWORD PTR [r15+0x4]
    c1d4:	mov    edx,0x32
    c1d9:	mov    rdi,QWORD PTR [r15+0x14]
    c1dd:	mov    QWORD PTR [rsp+0x20],r8
    c1e2:	mov    esi,ebx
    c1e4:	movsd  QWORD PTR [rsp+0x18],xmm1
    c1ea:	movsd  QWORD PTR [rsp+0x10],xmm0
    c1f0:	call   84c0 <self_weighted_percentile>
    c1f5:	mov    rdi,QWORD PTR [r15+0x14]
    c1f9:	mov    edx,0x5
    c1fe:	mov    esi,ebx
    c200:	mov    QWORD PTR [rsp+0x8],rax
    c205:	call   84c0 <self_weighted_percentile>
    c20a:	mov    rdi,QWORD PTR [r15+0x14]
    c20e:	mov    edx,0x5f
    c213:	mov    esi,ebx
    c215:	mov    QWORD PTR [rsp],rax
    c219:	call   84c0 <self_weighted_percentile>
    c21e:	mov    rdx,rbp
    c221:	mov    edi,0x1
    c226:	lea    rsi,[rip+0x1484b]        # 20a78 <_IO_stdin_used+0x2a78>
    c22d:	push   rax
    c22e:	mov    rcx,QWORD PTR [rsp+0x10]
    c233:	mov    eax,0x2
    c238:	push   rcx
    c239:	mov    r9,QWORD PTR [rsp+0x10]
    c23e:	mov    r8,QWORD PTR [rsp+0x30]
    c243:	movsd  xmm1,QWORD PTR [rsp+0x28]
    c249:	movsd  xmm0,QWORD PTR [rsp+0x20]
    c24f:	mov    ecx,DWORD PTR [r15]
    c252:	call   5200 <__printf_chk@plt>
    c257:	pop    rax
    c258:	pop    rdx
    c259:	add    r13,0x8
    c25d:	lea    rax,[rip+0x1f2ec]        # 2b550 <hvm_short_summary_name+0x50>
    c264:	add    r15,0x38
    c268:	cmp    r13,rax
    c26b:	je     c348 <hvm_short_summary+0x228>
    c271:	sub    rsp,0x8
    c275:	push   QWORD PTR [r13+0x0]
    c279:	mov    ecx,0x50
    c27e:	mov    rdi,rbp
    c281:	mov    r9,r14
    c284:	mov    edx,0x1
    c289:	mov    esi,0x50
    c28e:	xor    eax,eax
    c290:	lea    r8,[rip+0x120b4]        # 1e34b <_IO_stdin_used+0x34b>
    c297:	call   5030 <__snprintf_chk@plt>
    c29c:	mov    ecx,DWORD PTR [r15]
    c29f:	pop    rdi
    c2a0:	pop    r8
    c2a2:	test   ecx,ecx
    c2a4:	je     c259 <hvm_short_summary+0x139>
    c2a6:	mov    rsi,QWORD PTR [r15+0xc]
    c2aa:	movsxd rdi,ecx
    c2ad:	xor    edx,edx
    c2af:	mov    rax,rsi
    c2b2:	div    rdi
    c2b5:	mov    r8,rax
    c2b8:	test   rsi,rsi
    c2bb:	jns    c170 <hvm_short_summary+0x50>
    c2c1:	mov    rax,rsi
    c2c4:	mov    rdx,rsi
    c2c7:	pxor   xmm0,xmm0
    c2cb:	shr    rax,1
    c2ce:	and    edx,0x1
    c2d1:	or     rax,rdx
    c2d4:	cvtsi2sd xmm0,rax
    c2d9:	addsd  xmm0,xmm0
    c2dd:	jmp    c179 <hvm_short_summary+0x59>
    c2e2:	nop    WORD PTR [rax+rax*1+0x0]
    c2e8:	mov    rax,r12
    c2eb:	pxor   xmm2,xmm2
    c2ef:	mov    esi,DWORD PTR [rip+0x1ede3]        # 2b0d8 <opt+0x38>
    c2f5:	shr    rax,1
    c2f8:	or     rax,QWORD PTR [rsp+0x28]
    c2fd:	cvtsi2sd xmm2,rax
    c302:	addsd  xmm2,xmm2
    c306:	divsd  xmm1,xmm2
    c30a:	test   esi,esi
    c30c:	jne    c1c9 <hvm_short_summary+0xa9>
    c312:	mov    rdx,rbp
    c315:	mov    edi,0x1
    c31a:	mov    eax,0x2
    c31f:	lea    rsi,[rip+0x1478a]        # 20ab0 <_IO_stdin_used+0x2ab0>
    c326:	call   5200 <__printf_chk@plt>
    c32b:	jmp    c259 <hvm_short_summary+0x139>
    c330:	shr    rax,1
    c333:	pxor   xmm1,xmm1
    c337:	cvtsi2sd xmm1,rax
    c33c:	addsd  xmm1,xmm1
    c340:	jmp    c1a5 <hvm_short_summary+0x85>
    c345:	nop    DWORD PTR [rax]
    c348:	mov    rax,QWORD PTR [rsp+0x88]
    c350:	xor    rax,QWORD PTR fs:0x28
    c359:	jne    c36d <hvm_short_summary+0x24d>
    c35b:	add    rsp,0x98
    c362:	pop    rbx
    c363:	pop    rbp
    c364:	pop    r12
    c366:	pop    r13
    c368:	pop    r14
    c36a:	pop    r15
    c36c:	ret    
    c36d:	call   50d0 <__stack_chk_fail@plt>
    c372:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    c37d:	nop    DWORD PTR [rax]

000000000000c380 <cr3_dump_list.part.15>:
    c380:	push   r15
    c382:	push   r14
    c384:	push   r13
    c386:	push   r12
    c388:	push   rbp
    c389:	push   rbx
    c38a:	sub    rsp,0x78
    c38e:	mov    rax,QWORD PTR fs:0x28
    c397:	mov    QWORD PTR [rsp+0x68],rax
    c39c:	xor    eax,eax
    c39e:	test   rdi,rdi
    c3a1:	je     cad0 <cr3_dump_list.part.15+0x750>
    c3a7:	mov    rbx,rdi
    c3aa:	mov    rax,rdi
    c3ad:	xor    ebp,ebp
    c3af:	jmp    c3ba <cr3_dump_list.part.15+0x3a>
    c3b1:	nop    DWORD PTR [rax+0x0]
    c3b8:	mov    ebp,esi
    c3ba:	mov    rax,QWORD PTR [rax]
    c3bd:	lea    esi,[rbp+0x1]
    c3c0:	test   rax,rax
    c3c3:	jne    c3b8 <cr3_dump_list.part.15+0x38>
    c3c5:	movsxd r12,esi
    c3c8:	lea    rdi,[r12*8+0x0]
    c3d0:	call   51a0 <malloc@plt>
    c3d5:	mov    QWORD PTR [rsp+0x38],rax
    c3da:	nop    WORD PTR [rax+rax*1+0x0]
    c3e0:	mov    QWORD PTR [rax],rbx
    c3e3:	mov    rbx,QWORD PTR [rbx]
    c3e6:	add    rax,0x8
    c3ea:	test   rbx,rbx
    c3ed:	jne    c3e0 <cr3_dump_list.part.15+0x60>
    c3ef:	mov    rbx,QWORD PTR [rsp+0x38]
    c3f4:	mov    rsi,r12
    c3f7:	mov    edx,0x8
    c3fc:	lea    rcx,[rip+0xffffffffffff91cd]        # 55d0 <cr3_compare_start>
    c403:	lea    r12,[rsp+0x40]
    c408:	mov    rdi,rbx
    c40b:	mov    r14,rbx
    c40e:	call   50a0 <qsort@plt>
    c413:	lea    rdi,[rip+0x11f54]        # 1e36e <_IO_stdin_used+0x36e>
    c41a:	call   5090 <puts@plt>
    c41f:	lea    rax,[rbx+rbp*8+0x8]
    c424:	mov    QWORD PTR [rsp+0x8],rax
    c429:	jmp    c883 <cr3_dump_list.part.15+0x503>
    c42e:	xchg   ax,ax
    c430:	sub    rax,rsi
    c433:	xor    edx,edx
    c435:	shl    rax,0xa
    c439:	div    QWORD PTR [rip+0x1ec68]        # 2b0a8 <opt+0x8>
    c440:	mov    rdx,rax
    c443:	mov    rcx,rax
    c446:	movabs rax,0x44b82fa09b5a53
    c450:	shr    rdx,0x9
    c454:	mul    rdx
    c457:	mov    eax,ecx
    c459:	shr    rdx,0xb
    c45d:	mov    DWORD PTR [rsp],edx
    c460:	imul   edx,edx,0x3b9aca00
    c466:	sub    eax,edx
    c468:	mov    DWORD PTR [rsp+0x4],eax
    c46c:	mov    rax,QWORD PTR [r13+0x28]
    c470:	cmp    rsi,rax
    c473:	jae    c8b6 <cr3_dump_list.part.15+0x536>
    c479:	sub    rax,rsi
    c47c:	xor    edx,edx
    c47e:	mov    rbx,rax
    c481:	shl    rbx,0xa
    c485:	mov    rax,rbx
    c488:	div    QWORD PTR [rip+0x1ec19]        # 2b0a8 <opt+0x8>
    c48f:	mov    rdx,rax
    c492:	mov    rbx,rax
    c495:	movabs rax,0x44b82fa09b5a53
    c49f:	shr    rdx,0x9
    c4a3:	mul    rdx
    c4a6:	shr    rdx,0xb
    c4aa:	mov    r15d,edx
    c4ad:	imul   edx,edx,0x3b9aca00
    c4b3:	sub    ebx,edx
    c4b5:	mov    eax,DWORD PTR [r13+0x18]
    c4b9:	sub    rsp,0x8
    c4bd:	mov    r9,QWORD PTR [r13+0x10]
    c4c1:	mov    rdi,r12
    c4c4:	mov    ecx,0x1e
    c4c9:	mov    edx,0x1
    c4ce:	mov    esi,0x1e
    c4d3:	push   rax
    c4d4:	lea    r8,[rip+0x11e75]        # 1e350 <_IO_stdin_used+0x350>
    c4db:	xor    eax,eax
    c4dd:	call   5030 <__snprintf_chk@plt>
    c4e2:	mov    ecx,DWORD PTR [r13+0x3c]
    c4e6:	pop    r8
    c4e8:	pop    r9
    c4ea:	test   ecx,ecx
    c4ec:	je     c5b4 <cr3_dump_list.part.15+0x234>
    c4f2:	mov    rsi,QWORD PTR [r13+0x48]
    c4f6:	movsxd rdi,ecx
    c4f9:	xor    edx,edx
    c4fb:	mov    rax,rsi
    c4fe:	div    rdi
    c501:	mov    edi,DWORD PTR [rip+0x1ebd1]        # 2b0d8 <opt+0x38>
    c507:	mov    r8,rax
    c50a:	test   edi,edi
    c50c:	je     ca50 <cr3_dump_list.part.15+0x6d0>
    c512:	cmp    DWORD PTR [r13+0x40],ecx
    c516:	cmovle ecx,DWORD PTR [r13+0x40]
    c51b:	mov    edx,0x32
    c520:	mov    QWORD PTR [rsp+0x20],rax
    c525:	mov    rdi,QWORD PTR [r13+0x50]
    c529:	mov    esi,ecx
    c52b:	mov    ebp,ecx
    c52d:	call   84c0 <self_weighted_percentile>
    c532:	mov    rdi,QWORD PTR [r13+0x50]
    c536:	mov    edx,0x5
    c53b:	mov    esi,ebp
    c53d:	mov    QWORD PTR [rsp+0x18],rax
    c542:	call   84c0 <self_weighted_percentile>
    c547:	mov    rdi,QWORD PTR [r13+0x50]
    c54b:	mov    edx,0x5f
    c550:	mov    esi,ebp
    c552:	mov    QWORD PTR [rsp+0x10],rax
    c557:	call   84c0 <self_weighted_percentile>
    c55c:	mov    rdx,QWORD PTR [r13+0x48]
    c560:	mov    r9,QWORD PTR [rsp+0x10]
    c565:	mov    r11,QWORD PTR [rsp+0x18]
    c56a:	mov    r8,QWORD PTR [rsp+0x20]
    c56f:	test   rdx,rdx
    c572:	js     ca90 <cr3_dump_list.part.15+0x710>
    c578:	pxor   xmm0,xmm0
    c57c:	cvtsi2sd xmm0,rdx
    c581:	pxor   xmm1,xmm1
    c585:	mov    ecx,DWORD PTR [r13+0x3c]
    c589:	push   rax
    c58a:	mov    rdx,r12
    c58d:	cvtsi2sd xmm1,QWORD PTR [rip+0x1eb1a]        # 2b0b0 <opt+0x10>
    c596:	push   r11
    c598:	mov    edi,0x1
    c59d:	lea    rsi,[rip+0x143d4]        # 20978 <_IO_stdin_used+0x2978>
    c5a4:	mov    eax,0x1
    c5a9:	divsd  xmm0,xmm1
    c5ad:	call   5200 <__printf_chk@plt>
    c5b2:	pop    rax
    c5b3:	pop    rdx
    c5b4:	movdqa xmm0,XMMWORD PTR [rip+0x18334]        # 248f0 <__PRETTY_FUNCTION__.5821+0x20>
    c5bc:	mov    ecx,DWORD PTR [r13+0x74]
    c5c0:	movaps XMMWORD PTR [r12],xmm0
    c5c5:	test   ecx,ecx
    c5c7:	je     c6e6 <cr3_dump_list.part.15+0x366>
    c5cd:	mov    rsi,QWORD PTR [r13+0x80]
    c5d4:	movsxd rdi,ecx
    c5d7:	xor    edx,edx
    c5d9:	mov    rax,rsi
    c5dc:	div    rdi
    c5df:	mov    r8,rax
    c5e2:	test   rsi,rsi
    c5e5:	js     ca28 <cr3_dump_list.part.15+0x6a8>
    c5eb:	pxor   xmm0,xmm0
    c5ef:	cvtsi2sd xmm0,rsi
    c5f4:	pxor   xmm1,xmm1
    c5f8:	lea    rax,[rsi+rsi*4]
    c5fc:	cvtsi2sd xmm1,QWORD PTR [rip+0x1eaab]        # 2b0b0 <opt+0x10>
    c605:	lea    rax,[rax+rax*4]
    c609:	shl    rax,0x2
    c60d:	divsd  xmm0,xmm1
    c611:	js     ca10 <cr3_dump_list.part.15+0x690>
    c617:	pxor   xmm1,xmm1
    c61b:	cvtsi2sd xmm1,rax
    c620:	mov    rax,QWORD PTR [r13+0x30]
    c624:	test   rax,rax
    c627:	js     c9c0 <cr3_dump_list.part.15+0x640>
    c62d:	pxor   xmm2,xmm2
    c631:	mov    ebp,DWORD PTR [rip+0x1eaa1]        # 2b0d8 <opt+0x38>
    c637:	cvtsi2sd xmm2,rax
    c63c:	divsd  xmm1,xmm2
    c640:	test   ebp,ebp
    c642:	je     c9eb <cr3_dump_list.part.15+0x66b>
    c648:	cmp    DWORD PTR [r13+0x78],ecx
    c64c:	cmovle ecx,DWORD PTR [r13+0x78]
    c651:	mov    edx,0x32
    c656:	mov    QWORD PTR [rsp+0x30],r8
    c65b:	mov    rdi,QWORD PTR [r13+0x88]
    c662:	movsd  QWORD PTR [rsp+0x28],xmm1
    c668:	mov    esi,ecx
    c66a:	movsd  QWORD PTR [rsp+0x20],xmm0
    c670:	mov    ebp,ecx
    c672:	call   84c0 <self_weighted_percentile>
    c677:	mov    rdi,QWORD PTR [r13+0x88]
    c67e:	mov    edx,0x5
    c683:	mov    esi,ebp
    c685:	mov    QWORD PTR [rsp+0x18],rax
    c68a:	call   84c0 <self_weighted_percentile>
    c68f:	mov    rdi,QWORD PTR [r13+0x88]
    c696:	mov    edx,0x5f
    c69b:	mov    esi,ebp
    c69d:	mov    QWORD PTR [rsp+0x10],rax
    c6a2:	call   84c0 <self_weighted_percentile>
    c6a7:	mov    ecx,DWORD PTR [r13+0x74]
    c6ab:	mov    rdx,r12
    c6ae:	lea    rsi,[rip+0x143c3]        # 20a78 <_IO_stdin_used+0x2a78>
    c6b5:	push   rax
    c6b6:	mov    r11,QWORD PTR [rsp+0x20]
    c6bb:	mov    edi,0x1
    c6c0:	mov    eax,0x2
    c6c5:	push   r11
    c6c7:	mov    r9,QWORD PTR [rsp+0x20]
    c6cc:	mov    r8,QWORD PTR [rsp+0x40]
    c6d1:	movsd  xmm1,QWORD PTR [rsp+0x38]
    c6d7:	movsd  xmm0,QWORD PTR [rsp+0x30]
    c6dd:	call   5200 <__printf_chk@plt>
    c6e2:	pop    r10
    c6e4:	pop    r11
    c6e6:	movdqa xmm0,XMMWORD PTR [rip+0x18212]        # 24900 <__PRETTY_FUNCTION__.5821+0x30>
    c6ee:	mov    ecx,DWORD PTR [r13+0xac]
    c6f5:	mov    rsi,QWORD PTR [r13+0x30]
    c6f9:	movaps XMMWORD PTR [r12],xmm0
    c6fe:	test   ecx,ecx
    c700:	je     c828 <cr3_dump_list.part.15+0x4a8>
    c706:	mov    rdi,QWORD PTR [r13+0xb8]
    c70d:	movsxd r8,ecx
    c710:	xor    edx,edx
    c712:	mov    rax,rdi
    c715:	div    r8
    c718:	mov    r8,rax
    c71b:	test   rdi,rdi
    c71e:	js     c998 <cr3_dump_list.part.15+0x618>
    c724:	pxor   xmm0,xmm0
    c728:	cvtsi2sd xmm0,rdi
    c72d:	pxor   xmm1,xmm1
    c731:	lea    rax,[rdi+rdi*4]
    c735:	cvtsi2sd xmm1,QWORD PTR [rip+0x1e972]        # 2b0b0 <opt+0x10>
    c73e:	lea    rax,[rax+rax*4]
    c742:	shl    rax,0x2
    c746:	divsd  xmm0,xmm1
    c74a:	js     c980 <cr3_dump_list.part.15+0x600>
    c750:	pxor   xmm1,xmm1
    c754:	cvtsi2sd xmm1,rax
    c759:	test   rsi,rsi
    c75c:	js     c930 <cr3_dump_list.part.15+0x5b0>
    c762:	pxor   xmm2,xmm2
    c766:	mov    r9d,DWORD PTR [rip+0x1e96b]        # 2b0d8 <opt+0x38>
    c76d:	cvtsi2sd xmm2,rsi
    c772:	divsd  xmm1,xmm2
    c776:	test   r9d,r9d
    c779:	je     c95d <cr3_dump_list.part.15+0x5dd>
    c77f:	cmp    DWORD PTR [r13+0xb0],ecx
    c786:	mov    edx,0x32
    c78b:	mov    QWORD PTR [rsp+0x30],r8
    c790:	cmovle ecx,DWORD PTR [r13+0xb0]
    c798:	mov    rdi,QWORD PTR [r13+0xc0]
    c79f:	movsd  QWORD PTR [rsp+0x28],xmm1
    c7a5:	movsd  QWORD PTR [rsp+0x20],xmm0
    c7ab:	mov    esi,ecx
    c7ad:	mov    ebp,ecx
    c7af:	call   84c0 <self_weighted_percentile>
    c7b4:	mov    rdi,QWORD PTR [r13+0xc0]
    c7bb:	mov    edx,0x5
    c7c0:	mov    esi,ebp
    c7c2:	mov    QWORD PTR [rsp+0x18],rax
    c7c7:	call   84c0 <self_weighted_percentile>
    c7cc:	mov    rdi,QWORD PTR [r13+0xc0]
    c7d3:	mov    edx,0x5f
    c7d8:	mov    esi,ebp
    c7da:	mov    QWORD PTR [rsp+0x10],rax
    c7df:	call   84c0 <self_weighted_percentile>
    c7e4:	mov    ecx,DWORD PTR [r13+0xac]
    c7eb:	mov    edi,0x1
    c7f0:	mov    rdx,r12
    c7f3:	push   rax
    c7f4:	mov    r11,QWORD PTR [rsp+0x20]
    c7f9:	lea    rsi,[rip+0x14278]        # 20a78 <_IO_stdin_used+0x2a78>
    c800:	mov    eax,0x2
    c805:	push   r11
    c807:	mov    r9,QWORD PTR [rsp+0x20]
    c80c:	mov    r8,QWORD PTR [rsp+0x40]
    c811:	movsd  xmm1,QWORD PTR [rsp+0x38]
    c817:	movsd  xmm0,QWORD PTR [rsp+0x30]
    c81d:	call   5200 <__printf_chk@plt>
    c822:	mov    rsi,QWORD PTR [r13+0x30]
    c826:	pop    rcx
    c827:	pop    rdi
    c828:	lea    rdi,[r13+0xe8]
    c82f:	lea    rdx,[rip+0x11b2a]        # 1e360 <_IO_stdin_used+0x360>
    c836:	call   c120 <hvm_short_summary>
    c83b:	mov    r9d,ebx
    c83e:	mov    r8d,r15d
    c841:	mov    edi,0x1
    c846:	mov    eax,DWORD PTR [r13+0xe4]
    c84d:	lea    rsi,[rip+0x1427c]        # 20ad0 <_IO_stdin_used+0x2ad0>
    c854:	push   rax
    c855:	mov    eax,DWORD PTR [r13+0xe0]
    c85c:	push   rax
    c85d:	mov    ecx,DWORD PTR [rsp+0x14]
    c861:	xor    eax,eax
    c863:	mov    edx,DWORD PTR [rsp+0x10]
    c867:	call   5200 <__printf_chk@plt>
    c86c:	pop    rax
    c86d:	pop    rdx
    c86e:	test   BYTE PTR [r13+0x320],0x1
    c876:	jne    c8c0 <cr3_dump_list.part.15+0x540>
    c878:	add    r14,0x8
    c87c:	cmp    r14,QWORD PTR [rsp+0x8]
    c881:	je     c8fa <cr3_dump_list.part.15+0x57a>
    c883:	mov    r13,QWORD PTR [r14]
    c886:	mov    rsi,QWORD PTR [rip+0x22933]        # 2f1c0 <P+0x20>
    c88d:	mov    rax,QWORD PTR [r13+0x20]
    c891:	cmp    rax,rsi
    c894:	ja     c430 <cr3_dump_list.part.15+0xb0>
    c89a:	mov    rax,QWORD PTR [r13+0x28]
    c89e:	mov    DWORD PTR [rsp+0x4],0x0
    c8a6:	mov    DWORD PTR [rsp],0x0
    c8ad:	cmp    rsi,rax
    c8b0:	jb     c479 <cr3_dump_list.part.15+0xf9>
    c8b6:	xor    ebx,ebx
    c8b8:	xor    r15d,r15d
    c8bb:	jmp    c4b5 <cr3_dump_list.part.15+0x135>
    c8c0:	mov    ecx,DWORD PTR [r13+0x328]
    c8c7:	mov    edx,DWORD PTR [r13+0x324]
    c8ce:	xor    eax,eax
    c8d0:	lea    rsi,[rip+0x14231]        # 20b08 <_IO_stdin_used+0x2b08>
    c8d7:	mov    r9d,DWORD PTR [r13+0x330]
    c8de:	mov    r8d,DWORD PTR [r13+0x32c]
    c8e5:	mov    edi,0x1
    c8ea:	add    r14,0x8
    c8ee:	call   5200 <__printf_chk@plt>
    c8f3:	cmp    r14,QWORD PTR [rsp+0x8]
    c8f8:	jne    c883 <cr3_dump_list.part.15+0x503>
    c8fa:	mov    rax,QWORD PTR [rsp+0x68]
    c8ff:	xor    rax,QWORD PTR fs:0x28
    c908:	jne    cb03 <cr3_dump_list.part.15+0x783>
    c90e:	mov    rdi,QWORD PTR [rsp+0x38]
    c913:	add    rsp,0x78
    c917:	pop    rbx
    c918:	pop    rbp
    c919:	pop    r12
    c91b:	pop    r13
    c91d:	pop    r14
    c91f:	pop    r15
    c921:	jmp    5040 <free@plt>
    c926:	nop    WORD PTR cs:[rax+rax*1+0x0]
    c930:	mov    rax,rsi
    c933:	and    esi,0x1
    c936:	pxor   xmm2,xmm2
    c93a:	mov    r9d,DWORD PTR [rip+0x1e797]        # 2b0d8 <opt+0x38>
    c941:	shr    rax,1
    c944:	or     rax,rsi
    c947:	cvtsi2sd xmm2,rax
    c94c:	addsd  xmm2,xmm2
    c950:	divsd  xmm1,xmm2
    c954:	test   r9d,r9d
    c957:	jne    c77f <cr3_dump_list.part.15+0x3ff>
    c95d:	lea    rsi,[rip+0x1414c]        # 20ab0 <_IO_stdin_used+0x2ab0>
    c964:	mov    rdx,r12
    c967:	mov    edi,0x1
    c96c:	mov    eax,0x2
    c971:	call   5200 <__printf_chk@plt>
    c976:	mov    rsi,QWORD PTR [r13+0x30]
    c97a:	jmp    c828 <cr3_dump_list.part.15+0x4a8>
    c97f:	nop
    c980:	shr    rax,1
    c983:	pxor   xmm1,xmm1
    c987:	cvtsi2sd xmm1,rax
    c98c:	addsd  xmm1,xmm1
    c990:	jmp    c759 <cr3_dump_list.part.15+0x3d9>
    c995:	nop    DWORD PTR [rax]
    c998:	mov    rax,rdi
    c99b:	mov    rdx,rdi
    c99e:	pxor   xmm0,xmm0
    c9a2:	shr    rax,1
    c9a5:	and    edx,0x1
    c9a8:	or     rax,rdx
    c9ab:	cvtsi2sd xmm0,rax
    c9b0:	addsd  xmm0,xmm0
    c9b4:	jmp    c72d <cr3_dump_list.part.15+0x3ad>
    c9b9:	nop    DWORD PTR [rax+0x0]
    c9c0:	mov    rdx,rax
    c9c3:	and    eax,0x1
    c9c6:	pxor   xmm2,xmm2
    c9ca:	mov    ebp,DWORD PTR [rip+0x1e708]        # 2b0d8 <opt+0x38>
    c9d0:	shr    rdx,1
    c9d3:	or     rdx,rax
    c9d6:	cvtsi2sd xmm2,rdx
    c9db:	addsd  xmm2,xmm2
    c9df:	divsd  xmm1,xmm2
    c9e3:	test   ebp,ebp
    c9e5:	jne    c648 <cr3_dump_list.part.15+0x2c8>
    c9eb:	mov    rdx,r12
    c9ee:	mov    edi,0x1
    c9f3:	mov    eax,0x2
    c9f8:	lea    rsi,[rip+0x140b1]        # 20ab0 <_IO_stdin_used+0x2ab0>
    c9ff:	call   5200 <__printf_chk@plt>
    ca04:	jmp    c6e6 <cr3_dump_list.part.15+0x366>
    ca09:	nop    DWORD PTR [rax+0x0]
    ca10:	shr    rax,1
    ca13:	pxor   xmm1,xmm1
    ca17:	cvtsi2sd xmm1,rax
    ca1c:	addsd  xmm1,xmm1
    ca20:	jmp    c620 <cr3_dump_list.part.15+0x2a0>
    ca25:	nop    DWORD PTR [rax]
    ca28:	mov    rax,rsi
    ca2b:	mov    rdx,rsi
    ca2e:	pxor   xmm0,xmm0
    ca32:	shr    rax,1
    ca35:	and    edx,0x1
    ca38:	or     rax,rdx
    ca3b:	cvtsi2sd xmm0,rax
    ca40:	addsd  xmm0,xmm0
    ca44:	jmp    c5f4 <cr3_dump_list.part.15+0x274>
    ca49:	nop    DWORD PTR [rax+0x0]
    ca50:	test   rsi,rsi
    ca53:	js     cab0 <cr3_dump_list.part.15+0x730>
    ca55:	pxor   xmm0,xmm0
    ca59:	cvtsi2sd xmm0,rsi
    ca5e:	pxor   xmm1,xmm1
    ca62:	mov    rdx,r12
    ca65:	mov    edi,0x1
    ca6a:	mov    eax,0x1
    ca6f:	cvtsi2sd xmm1,QWORD PTR [rip+0x1e638]        # 2b0b0 <opt+0x10>
    ca78:	lea    rsi,[rip+0x11756]        # 1e1d5 <_IO_stdin_used+0x1d5>
    ca7f:	divsd  xmm0,xmm1
    ca83:	call   5200 <__printf_chk@plt>
    ca88:	jmp    c5b4 <cr3_dump_list.part.15+0x234>
    ca8d:	nop    DWORD PTR [rax]
    ca90:	mov    rcx,rdx
    ca93:	and    edx,0x1
    ca96:	pxor   xmm0,xmm0
    ca9a:	shr    rcx,1
    ca9d:	or     rcx,rdx
    caa0:	cvtsi2sd xmm0,rcx
    caa5:	addsd  xmm0,xmm0
    caa9:	jmp    c581 <cr3_dump_list.part.15+0x201>
    caae:	xchg   ax,ax
    cab0:	mov    rax,rsi
    cab3:	and    esi,0x1
    cab6:	pxor   xmm0,xmm0
    caba:	shr    rax,1
    cabd:	or     rax,rsi
    cac0:	cvtsi2sd xmm0,rax
    cac5:	addsd  xmm0,xmm0
    cac9:	jmp    ca5e <cr3_dump_list.part.15+0x6de>
    cacb:	nop    DWORD PTR [rax+rax*1+0x0]
    cad0:	xor    edi,edi
    cad2:	call   51a0 <malloc@plt>
    cad7:	lea    rcx,[rip+0xffffffffffff8af2]        # 55d0 <cr3_compare_start>
    cade:	mov    edx,0x8
    cae3:	xor    esi,esi
    cae5:	mov    rdi,rax
    cae8:	mov    QWORD PTR [rsp+0x38],rax
    caed:	call   50a0 <qsort@plt>
    caf2:	lea    rdi,[rip+0x11875]        # 1e36e <_IO_stdin_used+0x36e>
    caf9:	call   5090 <puts@plt>
    cafe:	jmp    c8fa <cr3_dump_list.part.15+0x57a>
    cb03:	call   50d0 <__stack_chk_fail@plt>
    cb08:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000cb10 <__hvm_set_summary_handler>:
    cb10:	mov    eax,DWORD PTR [rdi+0x28400]
    cb16:	cmp    eax,DWORD PTR [rdi+0x20]
    cb19:	jae    cc17 <__hvm_set_summary_handler+0x107>
    cb1f:	push   r13
    cb21:	push   r12
    cb23:	mov    r12,rdx
    cb26:	mov    edx,eax
    cb28:	push   rbp
    cb29:	mov    rbp,rsi
    cb2c:	push   rbx
    cb2d:	sub    rsp,0x8
    cb31:	mov    rax,QWORD PTR [rdi+rdx*8+0x28]
    cb36:	test   rax,rax
    cb39:	jne    cb4c <__hvm_set_summary_handler+0x3c>
    cb3b:	jmp    cc10 <__hvm_set_summary_handler+0x100>
    cb40:	mov    rcx,QWORD PTR [rax+0x10]
    cb44:	test   rcx,rcx
    cb47:	je     cba0 <__hvm_set_summary_handler+0x90>
    cb49:	mov    rax,rcx
    cb4c:	cmp    QWORD PTR [rax],rbp
    cb4f:	jne    cb40 <__hvm_set_summary_handler+0x30>
    cb51:	cmp    QWORD PTR [rax+0x8],r12
    cb55:	jne    cb40 <__hvm_set_summary_handler+0x30>
    cb57:	mov    rdi,QWORD PTR [rip+0x218e2]        # 2e440 <stderr@@GLIBC_2.2.5>
    cb5e:	mov    r9,r12
    cb61:	mov    r8,rbp
    cb64:	xor    eax,eax
    cb66:	lea    rcx,[rip+0x17cc3]        # 24830 <__func__.6171>
    cb6d:	lea    rdx,[rip+0x13fd4]        # 20b48 <_IO_stdin_used+0x2b48>
    cb74:	mov    esi,0x1
    cb79:	call   5270 <__fprintf_chk@plt>
    cb7e:	mov    eax,DWORD PTR [rip+0x1e55c]        # 2b0e0 <opt+0x40>
    cb84:	test   eax,eax
    cb86:	je     cc02 <__hvm_set_summary_handler+0xf2>
    cb88:	add    rsp,0x8
    cb8c:	mov    eax,0xfffffff0
    cb91:	pop    rbx
    cb92:	pop    rbp
    cb93:	pop    r12
    cb95:	pop    r13
    cb97:	ret    
    cb98:	nop    DWORD PTR [rax+rax*1+0x0]
    cba0:	lea    rbx,[rax+0x10]
    cba4:	mov    edi,0x18
    cba9:	call   51a0 <malloc@plt>
    cbae:	mov    r13,rax
    cbb1:	test   rax,rax
    cbb4:	je     cbd8 <__hvm_set_summary_handler+0xc8>
    cbb6:	mov    QWORD PTR [r13+0x0],rbp
    cbba:	mov    QWORD PTR [r13+0x8],r12
    cbbe:	mov    rax,QWORD PTR [rbx]
    cbc1:	mov    QWORD PTR [r13+0x10],rax
    cbc5:	xor    eax,eax
    cbc7:	mov    QWORD PTR [rbx],r13
    cbca:	add    rsp,0x8
    cbce:	pop    rbx
    cbcf:	pop    rbp
    cbd0:	pop    r12
    cbd2:	pop    r13
    cbd4:	ret    
    cbd5:	nop    DWORD PTR [rax]
    cbd8:	mov    rdi,QWORD PTR [rip+0x21861]        # 2e440 <stderr@@GLIBC_2.2.5>
    cbdf:	xor    eax,eax
    cbe1:	lea    rcx,[rip+0x17c48]        # 24830 <__func__.6171>
    cbe8:	lea    rdx,[rip+0x1178f]        # 1e37e <_IO_stdin_used+0x37e>
    cbef:	mov    esi,0x1
    cbf4:	call   5270 <__fprintf_chk@plt>
    cbf9:	cmp    DWORD PTR [rip+0x1e4e0],0x7        # 2b0e0 <opt+0x40>
    cc00:	ja     cbb6 <__hvm_set_summary_handler+0xa6>
    cc02:	mov    edi,0x1
    cc07:	call   5250 <exit@plt>
    cc0c:	nop    DWORD PTR [rax+0x0]
    cc10:	lea    rbx,[rdi+rdx*8+0x28]
    cc15:	jmp    cba4 <__hvm_set_summary_handler+0x94>
    cc17:	mov    eax,0xffffffea
    cc1c:	ret    
    cc1d:	nop    DWORD PTR [rax]

000000000000cc20 <hvm_pf_xen_postprocess>:
    cc20:	mov    edx,DWORD PTR [rip+0x1e47e]        # 2b0a4 <opt+0x4>
    cc26:	test   edx,edx
    cc28:	je     cdd8 <hvm_pf_xen_postprocess+0x1b8>
    cc2e:	push   r14
    cc30:	push   r13
    cc32:	push   r12
    cc34:	push   rbp
    cc35:	push   rbx
    cc36:	mov    ecx,DWORD PTR [rdi+0x28358]
    cc3c:	mov    rbx,rdi
    cc3f:	test   ecx,ecx
    cc41:	je     cf48 <hvm_pf_xen_postprocess+0x328>
    cc47:	movsxd rbp,ecx
    cc4a:	mov    r12,QWORD PTR [rdi+0x283e8]
    cc51:	lea    rax,[rbp*8+0x0]
    cc59:	sub    rax,rbp
    cc5c:	lea    rdx,[rdi+rax*8]
    cc60:	add    DWORD PTR [rdx+0x108d8],0x1
    cc67:	test   r12,r12
    cc6a:	je     ccae <hvm_pf_xen_postprocess+0x8e>
    cc6c:	mov    esi,DWORD PTR [rip+0x1e466]        # 2b0d8 <opt+0x38>
    cc72:	movsxd rax,DWORD PTR [rdx+0x108dc]
    cc79:	test   esi,esi
    cc7b:	jne    cfd8 <hvm_pf_xen_postprocess+0x3b8>
    cc81:	lea    rdx,[rbp*8+0x0]
    cc89:	add    eax,0x1
    cc8c:	sub    rdx,rbp
    cc8f:	lea    rdx,[rbx+rdx*8]
    cc93:	add    QWORD PTR [rdx+0x108e8],r12
    cc9a:	add    DWORD PTR [rdx+0x108f8],0x1
    cca1:	add    QWORD PTR [rdx+0x10900],r12
    cca8:	mov    DWORD PTR [rdx+0x108dc],eax
    ccae:	cmp    ecx,0x8
    ccb1:	je     cf74 <hvm_pf_xen_postprocess+0x354>
    ccb7:	cmp    ecx,0xc
    ccba:	jne    cf30 <hvm_pf_xen_postprocess+0x310>
    ccc0:	mov    rdx,QWORD PTR [rbx+0x10]
    ccc4:	mov    rcx,QWORD PTR [rbx+0x283f8]
    cccb:	mov    eax,DWORD PTR [rdx+0x14]
    ccce:	cmp    eax,0x2
    ccd1:	jl     ccf0 <hvm_pf_xen_postprocess+0xd0>
    ccd3:	cmp    eax,0x3
    ccd6:	jle    cde0 <hvm_pf_xen_postprocess+0x1c0>
    ccdc:	cmp    eax,0x4
    ccdf:	jne    ccf0 <hvm_pf_xen_postprocess+0xd0>
    cce1:	bt     rcx,0x2f
    cce6:	jb     cdec <hvm_pf_xen_postprocess+0x1cc>
    ccec:	nop    DWORD PTR [rax+0x0]
    ccf0:	mov    rbp,QWORD PTR [rbx+0x283e8]
    ccf7:	add    DWORD PTR [rbx+0x11080],0x1
    ccfe:	test   rbp,rbp
    cd01:	je     d0a8 <hvm_pf_xen_postprocess+0x488>
    cd07:	movsxd rcx,DWORD PTR [rbx+0x11084]
    cd0e:	mov    esi,DWORD PTR [rip+0x1e3c4]        # 2b0d8 <opt+0x38>
    cd14:	mov    eax,ecx
    cd16:	test   esi,esi
    cd18:	je     d168 <hvm_pf_xen_postprocess+0x548>
    cd1e:	mov    eax,DWORD PTR [rbx+0x11088]
    cd24:	cmp    eax,ecx
    cd26:	jg     d208 <hvm_pf_xen_postprocess+0x5e8>
    cd2c:	mov    r12d,DWORD PTR [rip+0x1e3a9]        # 2b0dc <opt+0x3c>
    cd33:	test   ecx,ecx
    cd35:	je     cd45 <hvm_pf_xen_postprocess+0x125>
    cd37:	test   r12d,r12d
    cd3a:	je     cd45 <hvm_pf_xen_postprocess+0x125>
    cd3c:	cmp    eax,r12d
    cd3f:	jge    d2b2 <hvm_pf_xen_postprocess+0x692>
    cd45:	add    eax,eax
    cd47:	cmove  eax,esi
    cd4a:	cmp    eax,r12d
    cd4d:	jle    d2aa <hvm_pf_xen_postprocess+0x68a>
    cd53:	test   r12d,r12d
    cd56:	je     d2aa <hvm_pf_xen_postprocess+0x68a>
    cd5c:	movsxd rsi,r12d
    cd5f:	mov    rdi,QWORD PTR [rbx+0x11098]
    cd66:	shl    rsi,0x3
    cd6a:	call   51d0 <realloc@plt>
    cd6f:	test   rax,rax
    cd72:	je     d297 <hvm_pf_xen_postprocess+0x677>
    cd78:	mov    QWORD PTR [rbx+0x11098],rax
    cd7f:	mov    DWORD PTR [rbx+0x11088],r12d
    cd86:	movsxd rcx,DWORD PTR [rbx+0x11084]
    cd8d:	cmp    ecx,r12d
    cd90:	jl     d208 <hvm_pf_xen_postprocess+0x5e8>
    cd96:	mov    eax,ecx
    cd98:	cdq    
    cd99:	idiv   r12d
    cd9c:	lea    esi,[rax+0x1]
    cd9f:	movsxd rdi,edx
    cda2:	mov    edx,0x55555556
    cda7:	mov    eax,esi
    cda9:	imul   edx
    cdab:	mov    eax,esi
    cdad:	sar    eax,0x1f
    cdb0:	sub    eax,edx
    cdb2:	add    eax,edi
    cdb4:	cdq    
    cdb5:	idiv   esi
    cdb7:	test   edx,edx
    cdb9:	je     d268 <hvm_pf_xen_postprocess+0x648>
    cdbf:	mov    r13,QWORD PTR [rbx+0x283e8]
    cdc6:	mov    eax,ecx
    cdc8:	mov    rdx,QWORD PTR [rbx+0x10]
    cdcc:	mov    r12,r13
    cdcf:	jmp    d16e <hvm_pf_xen_postprocess+0x54e>
    cdd4:	nop    DWORD PTR [rax+0x0]
    cdd8:	ret    
    cdd9:	nop    DWORD PTR [rax+0x0]
    cde0:	test   ecx,0x80000000
    cde6:	je     ccf0 <hvm_pf_xen_postprocess+0xd0>
    cdec:	mov    rbp,QWORD PTR [rbx+0x283e8]
    cdf3:	add    DWORD PTR [rbx+0x110b8],0x1
    cdfa:	test   rbp,rbp
    cdfd:	je     d0a8 <hvm_pf_xen_postprocess+0x488>
    ce03:	lea    rdi,[rbx+0x110b8]
    ce0a:	mov    rsi,rbp
    ce0d:	call   56e0 <update_cycles.part.5>
    ce12:	mov    r13,QWORD PTR [rbx+0x283e8]
    ce19:	mov    rdx,QWORD PTR [rbx+0x10]
    ce1d:	mov    r12,r13
    ce20:	mov    eax,DWORD PTR [rdx+0x14]
    ce23:	mov    rcx,QWORD PTR [rbx+0x28348]
    ce2a:	cmp    eax,0x2
    ce2d:	jl     ce41 <hvm_pf_xen_postprocess+0x221>
    ce2f:	cmp    eax,0x3
    ce32:	jle    d1be <hvm_pf_xen_postprocess+0x59e>
    ce38:	cmp    eax,0x4
    ce3b:	je     d0d3 <hvm_pf_xen_postprocess+0x4b3>
    ce41:	add    DWORD PTR [rbx+0x11010],0x1
    ce48:	test   r12,r12
    ce4b:	je     cf30 <hvm_pf_xen_postprocess+0x310>
    ce51:	movsxd rcx,DWORD PTR [rbx+0x11014]
    ce58:	mov    edx,DWORD PTR [rip+0x1e27a]        # 2b0d8 <opt+0x38>
    ce5e:	mov    eax,ecx
    ce60:	test   edx,edx
    ce62:	je     cf10 <hvm_pf_xen_postprocess+0x2f0>
    ce68:	mov    eax,DWORD PTR [rbx+0x11018]
    ce6e:	cmp    eax,ecx
    ce70:	jg     d230 <hvm_pf_xen_postprocess+0x610>
    ce76:	mov    ebp,DWORD PTR [rip+0x1e260]        # 2b0dc <opt+0x3c>
    ce7c:	test   ecx,ecx
    ce7e:	je     ce8c <hvm_pf_xen_postprocess+0x26c>
    ce80:	test   ebp,ebp
    ce82:	je     ce8c <hvm_pf_xen_postprocess+0x26c>
    ce84:	cmp    eax,ebp
    ce86:	jge    d2ba <hvm_pf_xen_postprocess+0x69a>
    ce8c:	add    eax,eax
    ce8e:	cmove  eax,edx
    ce91:	test   ebp,ebp
    ce93:	je     d2a3 <hvm_pf_xen_postprocess+0x683>
    ce99:	cmp    eax,ebp
    ce9b:	jle    d2a3 <hvm_pf_xen_postprocess+0x683>
    cea1:	movsxd rsi,ebp
    cea4:	mov    rdi,QWORD PTR [rbx+0x11028]
    ceab:	shl    rsi,0x3
    ceaf:	call   51d0 <realloc@plt>
    ceb4:	test   rax,rax
    ceb7:	je     d28c <hvm_pf_xen_postprocess+0x66c>
    cebd:	mov    QWORD PTR [rbx+0x11028],rax
    cec4:	mov    DWORD PTR [rbx+0x11018],ebp
    ceca:	movsxd rcx,DWORD PTR [rbx+0x11014]
    ced1:	cmp    ecx,ebp
    ced3:	jl     d230 <hvm_pf_xen_postprocess+0x610>
    ced9:	mov    eax,ecx
    cedb:	cdq    
    cedc:	idiv   ebp
    cede:	lea    esi,[rax+0x1]
    cee1:	movsxd rdi,edx
    cee4:	mov    edx,0x55555556
    cee9:	mov    eax,esi
    ceeb:	imul   edx
    ceed:	mov    eax,esi
    ceef:	sar    eax,0x1f
    cef2:	sub    eax,edx
    cef4:	add    eax,edi
    cef6:	cdq    
    cef7:	idiv   esi
    cef9:	mov    eax,ecx
    cefb:	test   edx,edx
    cefd:	jne    cf10 <hvm_pf_xen_postprocess+0x2f0>
    ceff:	mov    rax,QWORD PTR [rbx+0x11028]
    cf06:	mov    QWORD PTR [rax+rdi*8],r12
    cf0a:	mov    eax,DWORD PTR [rbx+0x11014]
    cf10:	add    eax,0x1
    cf13:	add    QWORD PTR [rbx+0x11020],r13
    cf1a:	add    DWORD PTR [rbx+0x11030],0x1
    cf21:	add    QWORD PTR [rbx+0x11038],r12
    cf28:	mov    DWORD PTR [rbx+0x11014],eax
    cf2e:	xchg   ax,ax
    cf30:	mov    eax,DWORD PTR [rip+0x5c4ce]        # 69404 <done.6286>
    cf36:	test   eax,eax
    cf38:	je     cfa5 <hvm_pf_xen_postprocess+0x385>
    cf3a:	pop    rbx
    cf3b:	pop    rbp
    cf3c:	pop    r12
    cf3e:	pop    r13
    cf40:	pop    r14
    cf42:	ret    
    cf43:	nop    DWORD PTR [rax+rax*1+0x0]
    cf48:	mov    rcx,QWORD PTR [rip+0x5a309]        # 67258 <warn>
    cf4f:	mov    edx,0x14
    cf54:	mov    esi,0x1
    cf59:	lea    rdi,[rip+0x113d6]        # 1e336 <_IO_stdin_used+0x336>
    cf60:	call   5260 <fwrite@plt>
    cf65:	mov    ecx,DWORD PTR [rbx+0x28358]
    cf6b:	cmp    ecx,0x8
    cf6e:	jne    ccb7 <hvm_pf_xen_postprocess+0x97>
    cf74:	mov    rax,QWORD PTR [rbx+0x10]
    cf78:	mov    rdx,QWORD PTR [rbx+0x283e8]
    cf7f:	xor    r8d,r8d
    cf82:	xor    ecx,ecx
    cf84:	mov    rsi,QWORD PTR [rbx+0x283f8]
    cf8b:	mov    rdi,QWORD PTR [rax+0x8]
    cf8f:	add    rdi,0x9e8
    cf96:	call   9cb0 <update_eip>
    cf9b:	mov    eax,DWORD PTR [rip+0x5c463]        # 69404 <done.6286>
    cfa1:	test   eax,eax
    cfa3:	jne    cf3a <hvm_pf_xen_postprocess+0x31a>
    cfa5:	xor    edx,edx
    cfa7:	lea    rsi,[rip+0xffffffffffff8912]        # 58c0 <hvm_pf_xen_summary>
    cfae:	mov    rdi,rbx
    cfb1:	call   cb10 <__hvm_set_summary_handler>
    cfb6:	test   eax,eax
    cfb8:	jne    d138 <hvm_pf_xen_postprocess+0x518>
    cfbe:	mov    DWORD PTR [rip+0x5c43c],0x1        # 69404 <done.6286>
    cfc8:	pop    rbx
    cfc9:	pop    rbp
    cfca:	pop    r12
    cfcc:	pop    r13
    cfce:	pop    r14
    cfd0:	ret    
    cfd1:	nop    DWORD PTR [rax+0x0]
    cfd8:	mov    edx,DWORD PTR [rdx+0x108e0]
    cfde:	cmp    edx,eax
    cfe0:	jg     d108 <hvm_pf_xen_postprocess+0x4e8>
    cfe6:	mov    r13d,DWORD PTR [rip+0x1e0ef]        # 2b0dc <opt+0x3c>
    cfed:	test   eax,eax
    cfef:	jne    d198 <hvm_pf_xen_postprocess+0x578>
    cff5:	add    edx,edx
    cff7:	cmove  edx,esi
    cffa:	test   r13d,r13d
    cffd:	je     d260 <hvm_pf_xen_postprocess+0x640>
    d003:	cmp    edx,r13d
    d006:	jle    d260 <hvm_pf_xen_postprocess+0x640>
    d00c:	lea    rax,[rbp*8+0x0]
    d014:	movsxd rsi,r13d
    d017:	sub    rax,rbp
    d01a:	shl    rsi,0x3
    d01e:	lea    r14,[rbx+rax*8]
    d022:	mov    rdi,QWORD PTR [r14+0x108f0]
    d029:	call   51d0 <realloc@plt>
    d02e:	test   rax,rax
    d031:	je     d250 <hvm_pf_xen_postprocess+0x630>
    d037:	mov    QWORD PTR [r14+0x108f0],rax
    d03e:	mov    DWORD PTR [r14+0x108e0],r13d
    d045:	lea    rax,[rbp*8+0x0]
    d04d:	sub    rax,rbp
    d050:	movsxd rax,DWORD PTR [rbx+rax*8+0x108dc]
    d058:	cmp    eax,r13d
    d05b:	jl     d108 <hvm_pf_xen_postprocess+0x4e8>
    d061:	cdq    
    d062:	idiv   r13d
    d065:	lea    ecx,[rax+0x1]
    d068:	mov    esi,edx
    d06a:	mov    edx,0x55555556
    d06f:	mov    eax,ecx
    d071:	imul   edx
    d073:	mov    eax,ecx
    d075:	sar    eax,0x1f
    d078:	sub    eax,edx
    d07a:	add    eax,esi
    d07c:	cdq    
    d07d:	idiv   ecx
    d07f:	lea    rax,[rbp*8+0x0]
    d087:	sub    rax,rbp
    d08a:	test   edx,edx
    d08c:	je     d1e0 <hvm_pf_xen_postprocess+0x5c0>
    d092:	mov    eax,DWORD PTR [rbx+rax*8+0x108dc]
    d099:	mov    ecx,DWORD PTR [rbx+0x28358]
    d09f:	jmp    cc81 <hvm_pf_xen_postprocess+0x61>
    d0a4:	nop    DWORD PTR [rax+0x0]
    d0a8:	mov    eax,DWORD PTR [rdx+0x14]
    d0ab:	mov    rcx,QWORD PTR [rbx+0x28348]
    d0b2:	cmp    eax,0x2
    d0b5:	jl     d1d0 <hvm_pf_xen_postprocess+0x5b0>
    d0bb:	cmp    eax,0x3
    d0be:	jle    d1b8 <hvm_pf_xen_postprocess+0x598>
    d0c4:	cmp    eax,0x4
    d0c7:	jne    d1d0 <hvm_pf_xen_postprocess+0x5b0>
    d0cd:	xor    r13d,r13d
    d0d0:	xor    r12d,r12d
    d0d3:	bt     rcx,0x2f
    d0d8:	jae    ce41 <hvm_pf_xen_postprocess+0x221>
    d0de:	add    DWORD PTR [rbx+0x11048],0x1
    d0e5:	test   r12,r12
    d0e8:	je     cf30 <hvm_pf_xen_postprocess+0x310>
    d0ee:	lea    rdi,[rbx+0x11048]
    d0f5:	mov    rsi,r12
    d0f8:	call   56e0 <update_cycles.part.5>
    d0fd:	jmp    cf30 <hvm_pf_xen_postprocess+0x310>
    d102:	nop    WORD PTR [rax+rax*1+0x0]
    d108:	lea    rdx,[rbp*8+0x0]
    d110:	sub    rdx,rbp
    d113:	lea    rdx,[rbx+rdx*8]
    d117:	mov    rcx,QWORD PTR [rdx+0x108f0]
    d11e:	mov    QWORD PTR [rcx+rax*8],r12
    d122:	mov    eax,DWORD PTR [rdx+0x108dc]
    d128:	mov    ecx,DWORD PTR [rbx+0x28358]
    d12e:	jmp    cc81 <hvm_pf_xen_postprocess+0x61>
    d133:	nop    DWORD PTR [rax+rax*1+0x0]
    d138:	mov    rdi,QWORD PTR [rip+0x21301]        # 2e440 <stderr@@GLIBC_2.2.5>
    d13f:	mov    r8d,eax
    d142:	xor    eax,eax
    d144:	lea    rcx,[rip+0x176a5]        # 247f0 <__func__.6288>
    d14b:	lea    rdx,[rip+0x13a1e]        # 20b70 <_IO_stdin_used+0x2b70>
    d152:	mov    esi,0x1
    d157:	call   5270 <__fprintf_chk@plt>
    d15c:	jmp    cfbe <hvm_pf_xen_postprocess+0x39e>
    d161:	nop    DWORD PTR [rax+0x0]
    d168:	mov    r12,rbp
    d16b:	mov    r13,rbp
    d16e:	add    eax,0x1
    d171:	add    QWORD PTR [rbx+0x11090],rbp
    d178:	mov    DWORD PTR [rbx+0x11084],eax
    d17e:	add    DWORD PTR [rbx+0x110a0],0x1
    d185:	add    QWORD PTR [rbx+0x110a8],rbp
    d18c:	jmp    ce20 <hvm_pf_xen_postprocess+0x200>
    d191:	nop    DWORD PTR [rax+0x0]
    d198:	cmp    edx,r13d
    d19b:	jl     cff5 <hvm_pf_xen_postprocess+0x3d5>
    d1a1:	test   r13d,r13d
    d1a4:	je     cff5 <hvm_pf_xen_postprocess+0x3d5>
    d1aa:	mov    r13d,edx
    d1ad:	jmp    d061 <hvm_pf_xen_postprocess+0x441>
    d1b2:	nop    WORD PTR [rax+rax*1+0x0]
    d1b8:	xor    r13d,r13d
    d1bb:	xor    r12d,r12d
    d1be:	test   ecx,0x80000000
    d1c4:	jne    d0de <hvm_pf_xen_postprocess+0x4be>
    d1ca:	jmp    ce41 <hvm_pf_xen_postprocess+0x221>
    d1cf:	nop
    d1d0:	add    DWORD PTR [rbx+0x11010],0x1
    d1d7:	jmp    cf30 <hvm_pf_xen_postprocess+0x310>
    d1dc:	nop    DWORD PTR [rax+0x0]
    d1e0:	lea    rdx,[rbx+rax*8]
    d1e4:	movsxd rax,esi
    d1e7:	mov    rcx,QWORD PTR [rdx+0x108f0]
    d1ee:	mov    QWORD PTR [rcx+rax*8],r12
    d1f2:	mov    eax,DWORD PTR [rdx+0x108dc]
    d1f8:	mov    ecx,DWORD PTR [rbx+0x28358]
    d1fe:	jmp    cc81 <hvm_pf_xen_postprocess+0x61>
    d203:	nop    DWORD PTR [rax+rax*1+0x0]
    d208:	mov    rax,QWORD PTR [rbx+0x11098]
    d20f:	mov    QWORD PTR [rax+rcx*8],rbp
    d213:	mov    r13,QWORD PTR [rbx+0x283e8]
    d21a:	mov    eax,DWORD PTR [rbx+0x11084]
    d220:	mov    rdx,QWORD PTR [rbx+0x10]
    d224:	mov    r12,r13
    d227:	jmp    d16e <hvm_pf_xen_postprocess+0x54e>
    d22c:	nop    DWORD PTR [rax+0x0]
    d230:	mov    rax,QWORD PTR [rbx+0x11028]
    d237:	mov    QWORD PTR [rax+rcx*8],r12
    d23b:	mov    eax,DWORD PTR [rbx+0x11014]
    d241:	jmp    cf10 <hvm_pf_xen_postprocess+0x2f0>
    d246:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d250:	mov    r13d,DWORD PTR [r14+0x108e0]
    d257:	jmp    d045 <hvm_pf_xen_postprocess+0x425>
    d25c:	nop    DWORD PTR [rax+0x0]
    d260:	mov    r13d,edx
    d263:	jmp    d00c <hvm_pf_xen_postprocess+0x3ec>
    d268:	mov    rax,QWORD PTR [rbx+0x11098]
    d26f:	mov    QWORD PTR [rax+rdi*8],rbp
    d273:	mov    r13,QWORD PTR [rbx+0x283e8]
    d27a:	mov    eax,DWORD PTR [rbx+0x11084]
    d280:	mov    rdx,QWORD PTR [rbx+0x10]
    d284:	mov    r12,r13
    d287:	jmp    d16e <hvm_pf_xen_postprocess+0x54e>
    d28c:	mov    ebp,DWORD PTR [rbx+0x11018]
    d292:	jmp    ceca <hvm_pf_xen_postprocess+0x2aa>
    d297:	mov    r12d,DWORD PTR [rbx+0x11088]
    d29e:	jmp    cd86 <hvm_pf_xen_postprocess+0x166>
    d2a3:	mov    ebp,eax
    d2a5:	jmp    cea1 <hvm_pf_xen_postprocess+0x281>
    d2aa:	mov    r12d,eax
    d2ad:	jmp    cd5c <hvm_pf_xen_postprocess+0x13c>
    d2b2:	mov    r12d,eax
    d2b5:	jmp    cd96 <hvm_pf_xen_postprocess+0x176>
    d2ba:	mov    ebp,eax
    d2bc:	jmp    ced9 <hvm_pf_xen_postprocess+0x2b9>
    d2c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d2cc:	nop    DWORD PTR [rax+0x0]

000000000000d2d0 <hvm_msr_write_postprocess>:
    d2d0:	mov    eax,DWORD PTR [rip+0x5c0da]        # 693b0 <done.6656>
    d2d6:	test   eax,eax
    d2d8:	je     d2e0 <hvm_msr_write_postprocess+0x10>
    d2da:	ret    
    d2db:	nop    DWORD PTR [rax+rax*1+0x0]
    d2e0:	sub    rsp,0x8
    d2e4:	xor    edx,edx
    d2e6:	lea    rsi,[rip+0xffffffffffff8303]        # 55f0 <hvm_msr_write_summary>
    d2ed:	call   cb10 <__hvm_set_summary_handler>
    d2f2:	test   eax,eax
    d2f4:	jne    d308 <hvm_msr_write_postprocess+0x38>
    d2f6:	mov    DWORD PTR [rip+0x5c0b0],0x1        # 693b0 <done.6656>
    d300:	add    rsp,0x8
    d304:	ret    
    d305:	nop    DWORD PTR [rax]
    d308:	mov    rdi,QWORD PTR [rip+0x21131]        # 2e440 <stderr@@GLIBC_2.2.5>
    d30f:	mov    r8d,eax
    d312:	xor    eax,eax
    d314:	lea    rcx,[rip+0x173e5]        # 24700 <__func__.6658>
    d31b:	lea    rdx,[rip+0x1384e]        # 20b70 <_IO_stdin_used+0x2b70>
    d322:	mov    esi,0x1
    d327:	call   5270 <__fprintf_chk@plt>
    d32c:	mov    DWORD PTR [rip+0x5c07a],0x1        # 693b0 <done.6656>
    d336:	add    rsp,0x8
    d33a:	ret    
    d33b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d340 <hvm_msr_read_postprocess>:
    d340:	mov    eax,DWORD PTR [rip+0x5c066]        # 693ac <done.6675>
    d346:	test   eax,eax
    d348:	je     d350 <hvm_msr_read_postprocess+0x10>
    d34a:	ret    
    d34b:	nop    DWORD PTR [rax+rax*1+0x0]
    d350:	sub    rsp,0x8
    d354:	xor    edx,edx
    d356:	lea    rsi,[rip+0xffffffffffffa893]        # 7bf0 <hvm_msr_read_summary>
    d35d:	call   cb10 <__hvm_set_summary_handler>
    d362:	test   eax,eax
    d364:	jne    d378 <hvm_msr_read_postprocess+0x38>
    d366:	mov    DWORD PTR [rip+0x5c03c],0x1        # 693ac <done.6675>
    d370:	add    rsp,0x8
    d374:	ret    
    d375:	nop    DWORD PTR [rax]
    d378:	mov    rdi,QWORD PTR [rip+0x210c1]        # 2e440 <stderr@@GLIBC_2.2.5>
    d37f:	mov    r8d,eax
    d382:	xor    eax,eax
    d384:	lea    rcx,[rip+0x17335]        # 246c0 <__func__.6677>
    d38b:	lea    rdx,[rip+0x137de]        # 20b70 <_IO_stdin_used+0x2b70>
    d392:	mov    esi,0x1
    d397:	call   5270 <__fprintf_chk@plt>
    d39c:	mov    DWORD PTR [rip+0x5c006],0x1        # 693ac <done.6675>
    d3a6:	add    rsp,0x8
    d3aa:	ret    
    d3ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000d3b0 <hvm_vmcall_postprocess>:
    d3b0:	test   BYTE PTR [rip+0x1dcec],0x20        # 2b0a3 <opt+0x3>
    d3b7:	je     d650 <hvm_vmcall_postprocess+0x2a0>
    d3bd:	push   r14
    d3bf:	push   r13
    d3c1:	push   r12
    d3c3:	push   rbp
    d3c4:	push   rbx
    d3c5:	mov    ebp,DWORD PTR [rdi+0x28348]
    d3cb:	mov    rbx,rdi
    d3ce:	mov    r12,QWORD PTR [rdi+0x283e8]
    d3d5:	cmp    ebp,0x25
    d3d8:	ja     d528 <hvm_vmcall_postprocess+0x178>
    d3de:	lea    rax,[rbp*8+0x0]
    d3e6:	sub    rax,rbp
    d3e9:	lea    rdx,[rdi+rax*8]
    d3ed:	add    DWORD PTR [rdx+0x11978],0x1
    d3f4:	test   r12,r12
    d3f7:	je     d50d <hvm_vmcall_postprocess+0x15d>
    d3fd:	mov    ecx,DWORD PTR [rip+0x1dcd5]        # 2b0d8 <opt+0x38>
    d403:	movsxd rax,DWORD PTR [rdx+0x1197c]
    d40a:	test   ecx,ecx
    d40c:	je     d4e0 <hvm_vmcall_postprocess+0x130>
    d412:	mov    edx,DWORD PTR [rdx+0x11980]
    d418:	cmp    edx,eax
    d41a:	jg     d6a0 <hvm_vmcall_postprocess+0x2f0>
    d420:	mov    r13d,DWORD PTR [rip+0x1dcb5]        # 2b0dc <opt+0x3c>
    d427:	test   eax,eax
    d429:	je     d439 <hvm_vmcall_postprocess+0x89>
    d42b:	test   r13d,r13d
    d42e:	je     d439 <hvm_vmcall_postprocess+0x89>
    d430:	cmp    edx,r13d
    d433:	jge    d719 <hvm_vmcall_postprocess+0x369>
    d439:	add    edx,edx
    d43b:	cmove  edx,ecx
    d43e:	cmp    edx,r13d
    d441:	jle    d703 <hvm_vmcall_postprocess+0x353>
    d447:	test   r13d,r13d
    d44a:	je     d703 <hvm_vmcall_postprocess+0x353>
    d450:	lea    rax,[rbp*8+0x0]
    d458:	movsxd rsi,r13d
    d45b:	sub    rax,rbp
    d45e:	shl    rsi,0x3
    d462:	lea    r14,[rbx+rax*8]
    d466:	mov    rdi,QWORD PTR [r14+0x11990]
    d46d:	call   51d0 <realloc@plt>
    d472:	test   rax,rax
    d475:	je     d6e8 <hvm_vmcall_postprocess+0x338>
    d47b:	mov    QWORD PTR [r14+0x11990],rax
    d482:	mov    DWORD PTR [r14+0x11980],r13d
    d489:	lea    rax,[rbp*8+0x0]
    d491:	sub    rax,rbp
    d494:	movsxd rax,DWORD PTR [rbx+rax*8+0x1197c]
    d49c:	cmp    eax,r13d
    d49f:	jl     d6a0 <hvm_vmcall_postprocess+0x2f0>
    d4a5:	cdq    
    d4a6:	idiv   r13d
    d4a9:	lea    ecx,[rax+0x1]
    d4ac:	mov    esi,edx
    d4ae:	mov    edx,0x55555556
    d4b3:	mov    eax,ecx
    d4b5:	imul   edx
    d4b7:	mov    eax,ecx
    d4b9:	sar    eax,0x1f
    d4bc:	sub    eax,edx
    d4be:	add    eax,esi
    d4c0:	cdq    
    d4c1:	idiv   ecx
    d4c3:	lea    rax,[rbp*8+0x0]
    d4cb:	sub    rax,rbp
    d4ce:	test   edx,edx
    d4d0:	je     d6c8 <hvm_vmcall_postprocess+0x318>
    d4d6:	mov    eax,DWORD PTR [rbx+rax*8+0x1197c]
    d4dd:	nop    DWORD PTR [rax]
    d4e0:	lea    rdx,[rbp*8+0x0]
    d4e8:	add    eax,0x1
    d4eb:	sub    rdx,rbp
    d4ee:	lea    rdx,[rbx+rdx*8]
    d4f2:	add    QWORD PTR [rdx+0x11988],r12
    d4f9:	add    DWORD PTR [rdx+0x11998],0x1
    d500:	add    QWORD PTR [rdx+0x119a0],r12
    d507:	mov    DWORD PTR [rdx+0x1197c],eax
    d50d:	mov    eax,DWORD PTR [rip+0x5be95]        # 693a8 <done.6707>
    d513:	test   eax,eax
    d515:	je     d624 <hvm_vmcall_postprocess+0x274>
    d51b:	pop    rbx
    d51c:	pop    rbp
    d51d:	pop    r12
    d51f:	pop    r13
    d521:	pop    r14
    d523:	ret    
    d524:	nop    DWORD PTR [rax+0x0]
    d528:	add    DWORD PTR [rdi+0x121c8],0x1
    d52f:	test   r12,r12
    d532:	je     d50d <hvm_vmcall_postprocess+0x15d>
    d534:	movsxd rcx,DWORD PTR [rdi+0x121cc]
    d53b:	mov    edx,DWORD PTR [rip+0x1db97]        # 2b0d8 <opt+0x38>
    d541:	mov    eax,ecx
    d543:	test   edx,edx
    d545:	je     d5f8 <hvm_vmcall_postprocess+0x248>
    d54b:	mov    eax,DWORD PTR [rdi+0x121d0]
    d551:	cmp    eax,ecx
    d553:	jg     d680 <hvm_vmcall_postprocess+0x2d0>
    d559:	mov    ebp,DWORD PTR [rip+0x1db7d]        # 2b0dc <opt+0x3c>
    d55f:	test   ecx,ecx
    d561:	je     d56f <hvm_vmcall_postprocess+0x1bf>
    d563:	test   ebp,ebp
    d565:	je     d56f <hvm_vmcall_postprocess+0x1bf>
    d567:	cmp    eax,ebp
    d569:	jge    d712 <hvm_vmcall_postprocess+0x362>
    d56f:	add    eax,eax
    d571:	cmove  eax,edx
    d574:	test   ebp,ebp
    d576:	je     d70b <hvm_vmcall_postprocess+0x35b>
    d57c:	cmp    eax,ebp
    d57e:	jle    d70b <hvm_vmcall_postprocess+0x35b>
    d584:	movsxd rsi,ebp
    d587:	mov    rdi,QWORD PTR [rbx+0x121e0]
    d58e:	shl    rsi,0x3
    d592:	call   51d0 <realloc@plt>
    d597:	test   rax,rax
    d59a:	je     d6f8 <hvm_vmcall_postprocess+0x348>
    d5a0:	mov    QWORD PTR [rbx+0x121e0],rax
    d5a7:	mov    DWORD PTR [rbx+0x121d0],ebp
    d5ad:	movsxd rcx,DWORD PTR [rbx+0x121cc]
    d5b4:	cmp    ecx,ebp
    d5b6:	jl     d680 <hvm_vmcall_postprocess+0x2d0>
    d5bc:	mov    eax,ecx
    d5be:	cdq    
    d5bf:	idiv   ebp
    d5c1:	lea    esi,[rax+0x1]
    d5c4:	movsxd rdi,edx
    d5c7:	mov    edx,0x55555556
    d5cc:	mov    eax,esi
    d5ce:	imul   edx
    d5d0:	mov    eax,esi
    d5d2:	sar    eax,0x1f
    d5d5:	sub    eax,edx
    d5d7:	add    eax,edi
    d5d9:	cdq    
    d5da:	idiv   esi
    d5dc:	mov    eax,ecx
    d5de:	test   edx,edx
    d5e0:	jne    d5f8 <hvm_vmcall_postprocess+0x248>
    d5e2:	mov    rax,QWORD PTR [rbx+0x121e0]
    d5e9:	mov    QWORD PTR [rax+rdi*8],r12
    d5ed:	mov    eax,DWORD PTR [rbx+0x121cc]
    d5f3:	nop    DWORD PTR [rax+rax*1+0x0]
    d5f8:	add    eax,0x1
    d5fb:	add    QWORD PTR [rbx+0x121d8],r12
    d602:	mov    DWORD PTR [rbx+0x121cc],eax
    d608:	mov    eax,DWORD PTR [rip+0x5bd9a]        # 693a8 <done.6707>
    d60e:	add    DWORD PTR [rbx+0x121e8],0x1
    d615:	add    QWORD PTR [rbx+0x121f0],r12
    d61c:	test   eax,eax
    d61e:	jne    d51b <hvm_vmcall_postprocess+0x16b>
    d624:	xor    edx,edx
    d626:	lea    rsi,[rip+0xffffffffffff9633]        # 6c60 <hvm_vmcall_summary>
    d62d:	mov    rdi,rbx
    d630:	call   cb10 <__hvm_set_summary_handler>
    d635:	test   eax,eax
    d637:	jne    d658 <hvm_vmcall_postprocess+0x2a8>
    d639:	mov    DWORD PTR [rip+0x5bd65],0x1        # 693a8 <done.6707>
    d643:	pop    rbx
    d644:	pop    rbp
    d645:	pop    r12
    d647:	pop    r13
    d649:	pop    r14
    d64b:	ret    
    d64c:	nop    DWORD PTR [rax+0x0]
    d650:	ret    
    d651:	nop    DWORD PTR [rax+0x0]
    d658:	mov    rdi,QWORD PTR [rip+0x20de1]        # 2e440 <stderr@@GLIBC_2.2.5>
    d65f:	mov    r8d,eax
    d662:	xor    eax,eax
    d664:	lea    rcx,[rip+0x17015]        # 24680 <__func__.6709>
    d66b:	lea    rdx,[rip+0x134fe]        # 20b70 <_IO_stdin_used+0x2b70>
    d672:	mov    esi,0x1
    d677:	call   5270 <__fprintf_chk@plt>
    d67c:	jmp    d639 <hvm_vmcall_postprocess+0x289>
    d67e:	xchg   ax,ax
    d680:	mov    rax,QWORD PTR [rbx+0x121e0]
    d687:	mov    QWORD PTR [rax+rcx*8],r12
    d68b:	mov    eax,DWORD PTR [rbx+0x121cc]
    d691:	jmp    d5f8 <hvm_vmcall_postprocess+0x248>
    d696:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d6a0:	lea    rdx,[rbp*8+0x0]
    d6a8:	sub    rdx,rbp
    d6ab:	lea    rdx,[rbx+rdx*8]
    d6af:	mov    rcx,QWORD PTR [rdx+0x11990]
    d6b6:	mov    QWORD PTR [rcx+rax*8],r12
    d6ba:	mov    eax,DWORD PTR [rdx+0x1197c]
    d6c0:	jmp    d4e0 <hvm_vmcall_postprocess+0x130>
    d6c5:	nop    DWORD PTR [rax]
    d6c8:	lea    rdx,[rbx+rax*8]
    d6cc:	movsxd rax,esi
    d6cf:	mov    rcx,QWORD PTR [rdx+0x11990]
    d6d6:	mov    QWORD PTR [rcx+rax*8],r12
    d6da:	mov    eax,DWORD PTR [rdx+0x1197c]
    d6e0:	jmp    d4e0 <hvm_vmcall_postprocess+0x130>
    d6e5:	nop    DWORD PTR [rax]
    d6e8:	mov    r13d,DWORD PTR [r14+0x11980]
    d6ef:	jmp    d489 <hvm_vmcall_postprocess+0xd9>
    d6f4:	nop    DWORD PTR [rax+0x0]
    d6f8:	mov    ebp,DWORD PTR [rbx+0x121d0]
    d6fe:	jmp    d5ad <hvm_vmcall_postprocess+0x1fd>
    d703:	mov    r13d,edx
    d706:	jmp    d450 <hvm_vmcall_postprocess+0xa0>
    d70b:	mov    ebp,eax
    d70d:	jmp    d584 <hvm_vmcall_postprocess+0x1d4>
    d712:	mov    ebp,eax
    d714:	jmp    d5bc <hvm_vmcall_postprocess+0x20c>
    d719:	mov    r13d,edx
    d71c:	jmp    d4a5 <hvm_vmcall_postprocess+0xf5>
    d721:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    d72c:	nop    DWORD PTR [rax+0x0]

000000000000d730 <hvm_generic_postprocess>:
    d730:	push   r14
    d732:	push   r13
    d734:	push   r12
    d736:	push   rbp
    d737:	push   rbx
    d738:	mov    r9d,DWORD PTR [rdi+0x28348]
    d73f:	mov    rbx,rdi
    d742:	test   r9d,r9d
    d745:	je     d7a0 <hvm_generic_postprocess+0x70>
    d747:	lea    eax,[r9-0x82000]
    d74e:	and    ah,0xfc
    d751:	mov    ebp,eax
    d753:	cmp    eax,0x25
    d756:	jbe    d82a <hvm_generic_postprocess+0xfa>
    d75c:	mov    rdi,QWORD PTR [rip+0x59af5]        # 67258 <warn>
    d763:	xor    eax,eax
    d765:	mov    r8,rbp
    d768:	lea    rcx,[rip+0x16e71]        # 245e0 <__func__.6821>
    d76f:	lea    rdx,[rip+0x1345a]        # 20bd0 <_IO_stdin_used+0x2bd0>
    d776:	mov    esi,0x1
    d77b:	call   5270 <__fprintf_chk@plt>
    d780:	cmp    DWORD PTR [rip+0x1d959],0x3        # 2b0e0 <opt+0x40>
    d787:	jbe    da5a <hvm_generic_postprocess+0x32a>
    d78d:	pop    rbx
    d78e:	pop    rbp
    d78f:	pop    r12
    d791:	pop    r13
    d793:	pop    r14
    d795:	ret    
    d796:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d7a0:	mov    r8d,DWORD PTR [rdi+0x28400]
    d7a7:	test   BYTE PTR [rip+0x1d8f5],0x10        # 2b0a3 <opt+0x3>
    d7ae:	jne    d7d0 <hvm_generic_postprocess+0xa0>
    d7b0:	cmp    r8d,0x36
    d7b4:	ja     d7d0 <hvm_generic_postprocess+0xa0>
    d7b6:	movabs rax,0x40080000000080
    d7c0:	bt     rax,r8
    d7c4:	jb     d78d <hvm_generic_postprocess+0x5d>
    d7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    d7d0:	lea    r12,[rip+0x5abc9]        # 683a0 <warned.6815>
    d7d7:	mov    eax,r8d
    d7da:	xor    ebp,ebp
    d7dc:	mov    edi,DWORD PTR [r12+rax*4]
    d7e0:	test   edi,edi
    d7e2:	jne    d82a <hvm_generic_postprocess+0xfa>
    d7e4:	lea    r9,[rip+0x10ba7]        # 1e392 <_IO_stdin_used+0x392>
    d7eb:	cmp    DWORD PTR [rbx+0x20],r8d
    d7ef:	jb     d7f9 <hvm_generic_postprocess+0xc9>
    d7f1:	mov    rdx,QWORD PTR [rbx+0x18]
    d7f5:	mov    r9,QWORD PTR [rdx+rax*8]
    d7f9:	mov    rdi,QWORD PTR [rip+0x59a58]        # 67258 <warn>
    d800:	mov    esi,0x1
    d805:	xor    eax,eax
    d807:	xor    ebp,ebp
    d809:	lea    rcx,[rip+0x16dd0]        # 245e0 <__func__.6821>
    d810:	lea    rdx,[rip+0x13389]        # 20ba0 <_IO_stdin_used+0x2ba0>
    d817:	call   5270 <__fprintf_chk@plt>
    d81c:	mov    eax,DWORD PTR [rbx+0x28400]
    d822:	mov    DWORD PTR [r12+rax*4],0x1
    d82a:	mov    esi,DWORD PTR [rip+0x1d874]        # 2b0a4 <opt+0x4>
    d830:	test   esi,esi
    d832:	je     d78d <hvm_generic_postprocess+0x5d>
    d838:	lea    rax,[rbp*8+0x0]
    d840:	mov    r12,QWORD PTR [rbx+0x283e8]
    d847:	sub    rax,rbp
    d84a:	lea    rdx,[rbx+rax*8]
    d84e:	add    DWORD PTR [rdx+0x12200],0x1
    d855:	test   r12,r12
    d858:	je     d89c <hvm_generic_postprocess+0x16c>
    d85a:	mov    ecx,DWORD PTR [rip+0x1d878]        # 2b0d8 <opt+0x38>
    d860:	movsxd rax,DWORD PTR [rdx+0x12204]
    d867:	test   ecx,ecx
    d869:	jne    d920 <hvm_generic_postprocess+0x1f0>
    d86f:	lea    rdx,[rbp*8+0x0]
    d877:	add    eax,0x1
    d87a:	sub    rdx,rbp
    d87d:	lea    rdx,[rbx+rdx*8]
    d881:	add    QWORD PTR [rdx+0x12210],r12
    d888:	add    DWORD PTR [rdx+0x12220],0x1
    d88f:	add    QWORD PTR [rdx+0x12228],r12
    d896:	mov    DWORD PTR [rdx+0x12204],eax
    d89c:	lea    r12,[rip+0x5aa5d]        # 68300 <registered.6814>
    d8a3:	mov    eax,DWORD PTR [r12+rbp*4]
    d8a7:	test   eax,eax
    d8a9:	je     d9e8 <hvm_generic_postprocess+0x2b8>
    d8af:	mov    edx,DWORD PTR [rbx+0x28400]
    d8b5:	lea    ecx,[rdx+0x1]
    d8b8:	cmp    eax,ecx
    d8ba:	je     d78d <hvm_generic_postprocess+0x5d>
    d8c0:	lea    r12,[rip+0x59a19]        # 672e0 <warned.6822>
    d8c7:	mov    ecx,edx
    d8c9:	mov    ecx,DWORD PTR [r12+rcx*4]
    d8cd:	test   ecx,ecx
    d8cf:	jne    d78d <hvm_generic_postprocess+0x5d>
    d8d5:	sub    rsp,0x8
    d8d9:	lea    r9d,[rax-0x1]
    d8dd:	mov    r8,rbp
    d8e0:	mov    esi,0x1
    d8e5:	push   rdx
    d8e6:	mov    rdi,QWORD PTR [rip+0x5996b]        # 67258 <warn>
    d8ed:	lea    rdx,[rip+0x132fc]        # 20bf0 <_IO_stdin_used+0x2bf0>
    d8f4:	xor    eax,eax
    d8f6:	lea    rcx,[rip+0x16ce3]        # 245e0 <__func__.6821>
    d8fd:	call   5270 <__fprintf_chk@plt>
    d902:	mov    eax,DWORD PTR [rbx+0x28400]
    d908:	mov    DWORD PTR [r12+rax*4],0x1
    d910:	pop    rax
    d911:	pop    rdx
    d912:	jmp    d78d <hvm_generic_postprocess+0x5d>
    d917:	nop    WORD PTR [rax+rax*1+0x0]
    d920:	mov    edx,DWORD PTR [rdx+0x12208]
    d926:	cmp    edx,eax
    d928:	jg     da18 <hvm_generic_postprocess+0x2e8>
    d92e:	mov    r13d,DWORD PTR [rip+0x1d7a7]        # 2b0dc <opt+0x3c>
    d935:	test   eax,eax
    d937:	jne    da40 <hvm_generic_postprocess+0x310>
    d93d:	add    edx,edx
    d93f:	cmove  edx,ecx
    d942:	test   r13d,r13d
    d945:	je     dac8 <hvm_generic_postprocess+0x398>
    d94b:	cmp    edx,r13d
    d94e:	jle    dac8 <hvm_generic_postprocess+0x398>
    d954:	lea    rax,[rbp*8+0x0]
    d95c:	movsxd rsi,r13d
    d95f:	sub    rax,rbp
    d962:	shl    rsi,0x3
    d966:	lea    r14,[rbx+rax*8]
    d96a:	mov    rdi,QWORD PTR [r14+0x12218]
    d971:	call   51d0 <realloc@plt>
    d976:	test   rax,rax
    d979:	je     dab8 <hvm_generic_postprocess+0x388>
    d97f:	mov    QWORD PTR [r14+0x12218],rax
    d986:	mov    DWORD PTR [r14+0x12208],r13d
    d98d:	lea    rax,[rbp*8+0x0]
    d995:	sub    rax,rbp
    d998:	movsxd rax,DWORD PTR [rbx+rax*8+0x12204]
    d9a0:	cmp    eax,r13d
    d9a3:	jl     da18 <hvm_generic_postprocess+0x2e8>
    d9a5:	cdq    
    d9a6:	idiv   r13d
    d9a9:	lea    ecx,[rax+0x1]
    d9ac:	mov    esi,edx
    d9ae:	mov    edx,0x55555556
    d9b3:	mov    eax,ecx
    d9b5:	imul   edx
    d9b7:	mov    eax,ecx
    d9b9:	sar    eax,0x1f
    d9bc:	sub    eax,edx
    d9be:	add    eax,esi
    d9c0:	cdq    
    d9c1:	idiv   ecx
    d9c3:	lea    rax,[rbp*8+0x0]
    d9cb:	sub    rax,rbp
    d9ce:	test   edx,edx
    d9d0:	je     da98 <hvm_generic_postprocess+0x368>
    d9d6:	mov    eax,DWORD PTR [rbx+rax*8+0x12204]
    d9dd:	jmp    d86f <hvm_generic_postprocess+0x13f>
    d9e2:	nop    WORD PTR [rax+rax*1+0x0]
    d9e8:	mov    rdx,rbp
    d9eb:	lea    rsi,[rip+0xffffffffffff973e]        # 7130 <hvm_generic_summary>
    d9f2:	mov    rdi,rbx
    d9f5:	call   cb10 <__hvm_set_summary_handler>
    d9fa:	test   eax,eax
    d9fc:	jne    da68 <hvm_generic_postprocess+0x338>
    d9fe:	mov    eax,DWORD PTR [rbx+0x28400]
    da04:	add    eax,0x1
    da07:	mov    DWORD PTR [r12+rbp*4],eax
    da0b:	pop    rbx
    da0c:	pop    rbp
    da0d:	pop    r12
    da0f:	pop    r13
    da11:	pop    r14
    da13:	ret    
    da14:	nop    DWORD PTR [rax+0x0]
    da18:	lea    rdx,[rbp*8+0x0]
    da20:	sub    rdx,rbp
    da23:	lea    rdx,[rbx+rdx*8]
    da27:	mov    rcx,QWORD PTR [rdx+0x12218]
    da2e:	mov    QWORD PTR [rcx+rax*8],r12
    da32:	mov    eax,DWORD PTR [rdx+0x12204]
    da38:	jmp    d86f <hvm_generic_postprocess+0x13f>
    da3d:	nop    DWORD PTR [rax]
    da40:	test   r13d,r13d
    da43:	je     d93d <hvm_generic_postprocess+0x20d>
    da49:	cmp    edx,r13d
    da4c:	jl     d93d <hvm_generic_postprocess+0x20d>
    da52:	mov    r13d,edx
    da55:	jmp    d9a5 <hvm_generic_postprocess+0x275>
    da5a:	mov    edi,0x1
    da5f:	call   5250 <exit@plt>
    da64:	nop    DWORD PTR [rax+0x0]
    da68:	mov    rdi,QWORD PTR [rip+0x209d1]        # 2e440 <stderr@@GLIBC_2.2.5>
    da6f:	mov    r8d,eax
    da72:	xor    eax,eax
    da74:	lea    rcx,[rip+0x16b65]        # 245e0 <__func__.6821>
    da7b:	lea    rdx,[rip+0x130ee]        # 20b70 <_IO_stdin_used+0x2b70>
    da82:	mov    esi,0x1
    da87:	call   5270 <__fprintf_chk@plt>
    da8c:	jmp    d9fe <hvm_generic_postprocess+0x2ce>
    da91:	nop    DWORD PTR [rax+0x0]
    da98:	lea    rdx,[rbx+rax*8]
    da9c:	movsxd rax,esi
    da9f:	mov    rcx,QWORD PTR [rdx+0x12218]
    daa6:	mov    QWORD PTR [rcx+rax*8],r12
    daaa:	mov    eax,DWORD PTR [rdx+0x12204]
    dab0:	jmp    d86f <hvm_generic_postprocess+0x13f>
    dab5:	nop    DWORD PTR [rax]
    dab8:	mov    r13d,DWORD PTR [r14+0x12208]
    dabf:	jmp    d98d <hvm_generic_postprocess+0x25d>
    dac4:	nop    DWORD PTR [rax+0x0]
    dac8:	mov    r13d,edx
    dacb:	jmp    d954 <hvm_generic_postprocess+0x224>

000000000000dad0 <pf_preprocess>:
    dad0:	cmp    esi,0x2
    dad3:	je     dc20 <pf_preprocess+0x150>
    dad9:	push   rbx
    dada:	mov    rbx,rdi
    dadd:	jle    dc00 <pf_preprocess+0x130>
    dae3:	cmp    esi,0x3
    dae6:	je     dc98 <pf_preprocess+0x1c8>
    daec:	cmp    esi,0x4
    daef:	jne    dd30 <pf_preprocess+0x260>
    daf5:	movabs rax,0xffff000000000000
    daff:	mov    rcx,QWORD PTR [rdi]
    db02:	mov    rdx,rcx
    db05:	and    rdx,rax
    db08:	bt     rcx,0x2f
    db0d:	jae    dc60 <pf_preprocess+0x190>
    db13:	cmp    rdx,rax
    db16:	je     db35 <pf_preprocess+0x65>
    db18:	mov    rdi,QWORD PTR [rip+0x59739]        # 67258 <warn>
    db1f:	lea    rdx,[rip+0x130ea]        # 20c10 <_IO_stdin_used+0x2c10>
    db26:	mov    esi,0x1
    db2b:	xor    eax,eax
    db2d:	call   5270 <__fprintf_chk@plt>
    db32:	mov    rcx,QWORD PTR [rbx]
    db35:	mov    rdi,rcx
    db38:	mov    rsi,rcx
    db3b:	mov    r8,rcx
    db3e:	mov    rdx,rcx
    db41:	shr    rdi,0x27
    db45:	mov    rax,rcx
    db48:	shr    rsi,0x1e
    db4c:	shr    r8,0x15
    db50:	shr    rdx,0xc
    db54:	and    edi,0x1ff
    db5a:	and    esi,0x1ff
    db60:	shr    rax,0x3
    db64:	and    r8d,0x1ff
    db6b:	and    edx,0x1ff
    db71:	mov    DWORD PTR [rbx+0x50],edi
    db74:	and    eax,0x1ff
    db79:	and    ecx,0x4
    db7c:	mov    DWORD PTR [rbx+0x4c],esi
    db7f:	mov    DWORD PTR [rbx+0x48],r8d
    db83:	mov    DWORD PTR [rbx+0x44],edx
    db86:	mov    DWORD PTR [rbx+0x40],eax
    db89:	je     db92 <pf_preprocess+0xc2>
    db8b:	mov    DWORD PTR [rbx+0x54],0x0
    db92:	mov    QWORD PTR [rbx+0x38],0xffffffffffffffff
    db9a:	cmp    edi,0x1ed
    dba0:	jne    dc10 <pf_preprocess+0x140>
    dba2:	cmp    esi,0x1ed
    dba8:	je     dd70 <pf_preprocess+0x2a0>
    dbae:	shl    rax,0xc
    dbb2:	shl    rsi,0x27
    dbb6:	mov    DWORD PTR [rbx+0x58],0x1
    dbbd:	shl    rdx,0x15
    dbc1:	or     rax,rsi
    dbc4:	shl    r8,0x1e
    dbc8:	or     rax,rdx
    dbcb:	or     rax,r8
    dbce:	or     rax,0xfff
    dbd4:	mov    QWORD PTR [rbx+0x38],rax
    dbd8:	movabs rdx,0x800000000000
    dbe2:	test   rax,rdx
    dbe5:	je     dbf8 <pf_preprocess+0x128>
    dbe7:	movabs rdx,0xffff000000000000
    dbf1:	or     rax,rdx
    dbf4:	mov    QWORD PTR [rbx+0x38],rax
    dbf8:	pop    rbx
    dbf9:	ret    
    dbfa:	nop    WORD PTR [rax+rax*1+0x0]
    dc00:	test   esi,esi
    dc02:	jne    dd30 <pf_preprocess+0x260>
    dc08:	mov    QWORD PTR [rbx+0x38],0xffffffffffffffff
    dc10:	mov    DWORD PTR [rbx+0x58],0x0
    dc17:	pop    rbx
    dc18:	ret    
    dc19:	nop    DWORD PTR [rax+0x0]
    dc20:	mov    rax,QWORD PTR [rdi]
    dc23:	mov    QWORD PTR [rdi+0x38],0xffffffffffffffff
    dc2b:	mov    rdx,rax
    dc2e:	mov    ecx,eax
    dc30:	shr    rax,0x2
    dc34:	shr    rdx,0xc
    dc38:	shr    ecx,0x16
    dc3b:	and    eax,0x3ff
    dc40:	and    edx,0x3ff
    dc46:	mov    DWORD PTR [rdi+0x48],ecx
    dc49:	mov    DWORD PTR [rdi+0x44],edx
    dc4c:	mov    DWORD PTR [rdi+0x40],eax
    dc4f:	cmp    ecx,0x300
    dc55:	je     dc70 <pf_preprocess+0x1a0>
    dc57:	mov    DWORD PTR [rdi+0x58],0x0
    dc5e:	ret    
    dc5f:	nop
    dc60:	test   rdx,rdx
    dc63:	je     db35 <pf_preprocess+0x65>
    dc69:	jmp    db18 <pf_preprocess+0x48>
    dc6e:	xchg   ax,ax
    dc70:	cmp    edx,0x300
    dc76:	je     dd58 <pf_preprocess+0x288>
    dc7c:	shl    edx,0x16
    dc7f:	shl    eax,0xc
    dc82:	mov    DWORD PTR [rdi+0x58],0x1
    dc89:	or     eax,edx
    dc8b:	or     eax,0xfff
    dc90:	mov    QWORD PTR [rdi+0x38],rax
    dc94:	ret    
    dc95:	nop    DWORD PTR [rax]
    dc98:	mov    rax,QWORD PTR [rdi]
    dc9b:	mov    rcx,rax
    dc9e:	mov    rsi,rax
    dca1:	mov    rdx,rax
    dca4:	mov    edi,eax
    dca6:	shr    rcx,0x15
    dcaa:	shr    rsi,0xc
    dcae:	shr    rdx,0x3
    dcb2:	shr    edi,0x1e
    dcb5:	and    ecx,0x1ff
    dcbb:	and    esi,0x1ff
    dcc1:	and    edx,0x1ff
    dcc7:	mov    DWORD PTR [rbx+0x4c],edi
    dcca:	mov    DWORD PTR [rbx+0x48],ecx
    dccd:	mov    DWORD PTR [rbx+0x44],esi
    dcd0:	mov    DWORD PTR [rbx+0x40],edx
    dcd3:	test   al,0x4
    dcd5:	je     dcde <pf_preprocess+0x20e>
    dcd7:	mov    DWORD PTR [rbx+0x54],0x0
    dcde:	mov    QWORD PTR [rbx+0x38],0xffffffffffffffff
    dce6:	mov    DWORD PTR [rbx+0x58],0x0
    dced:	cmp    edi,0x3
    dcf0:	jne    dbf8 <pf_preprocess+0x128>
    dcf6:	mov    eax,ecx
    dcf8:	shr    eax,0x2
    dcfb:	jne    dbf8 <pf_preprocess+0x128>
    dd01:	cmp    ecx,0x3
    dd04:	je     dda8 <pf_preprocess+0x2d8>
    dd0a:	shl    edx,0xc
    dd0d:	shl    ecx,0x1e
    dd10:	mov    DWORD PTR [rbx+0x58],0x1
    dd17:	or     edx,ecx
    dd19:	shl    esi,0x15
    dd1c:	or     edx,esi
    dd1e:	or     edx,0xfff
    dd24:	mov    eax,edx
    dd26:	mov    QWORD PTR [rbx+0x38],rax
    dd2a:	pop    rbx
    dd2b:	ret    
    dd2c:	nop    DWORD PTR [rax+0x0]
    dd30:	mov    rdi,QWORD PTR [rip+0x59521]        # 67258 <warn>
    dd37:	mov    ecx,esi
    dd39:	lea    rdx,[rip+0x12f18]        # 20c58 <_IO_stdin_used+0x2c58>
    dd40:	mov    esi,0x1
    dd45:	xor    eax,eax
    dd47:	call   5270 <__fprintf_chk@plt>
    dd4c:	jmp    dc08 <pf_preprocess+0x138>
    dd51:	nop    DWORD PTR [rax+0x0]
    dd58:	shl    eax,0x16
    dd5b:	mov    DWORD PTR [rdi+0x58],0x2
    dd62:	or     eax,0x3fffff
    dd67:	mov    QWORD PTR [rdi+0x38],rax
    dd6b:	ret    
    dd6c:	nop    DWORD PTR [rax+0x0]
    dd70:	cmp    r8d,0x1ed
    dd77:	je     ddd0 <pf_preprocess+0x300>
    dd79:	shl    rax,0x15
    dd7d:	shl    r8,0x27
    dd81:	mov    DWORD PTR [rbx+0x58],0x2
    dd88:	or     rax,r8
    dd8b:	shl    rdx,0x1e
    dd8f:	or     rax,rdx
    dd92:	or     rax,0x1fffff
    dd98:	mov    QWORD PTR [rbx+0x38],rax
    dd9c:	jmp    dbd8 <pf_preprocess+0x108>
    dda1:	nop    DWORD PTR [rax+0x0]
    dda8:	mov    eax,esi
    ddaa:	shr    eax,0x2
    ddad:	jne    dd0a <pf_preprocess+0x23a>
    ddb3:	cmp    esi,0x3
    ddb6:	je     de1a <pf_preprocess+0x34a>
    ddb8:	shl    esi,0x1e
    ddbb:	mov    DWORD PTR [rbx+0x58],0x2
    ddc2:	or     esi,0x7fffff
    ddc8:	mov    eax,esi
    ddca:	mov    QWORD PTR [rbx+0x38],rax
    ddce:	pop    rbx
    ddcf:	ret    
    ddd0:	cmp    edx,0x1ed
    ddd6:	je     ddf9 <pf_preprocess+0x329>
    ddd8:	shl    rax,0x1e
    dddc:	shl    rdx,0x27
    dde0:	mov    DWORD PTR [rbx+0x58],0x3
    dde7:	or     rax,rdx
    ddea:	or     rax,0x3fffffff
    ddf0:	mov    QWORD PTR [rbx+0x38],rax
    ddf4:	jmp    dbd8 <pf_preprocess+0x108>
    ddf9:	shl    rax,0x27
    ddfd:	mov    DWORD PTR [rbx+0x58],0x4
    de04:	movabs rdx,0x7fffffffff
    de0e:	or     rax,rdx
    de11:	mov    QWORD PTR [rbx+0x38],rax
    de15:	jmp    dbd8 <pf_preprocess+0x108>
    de1a:	mov    eax,edx
    de1c:	shr    eax,0x2
    de1f:	jne    ddb8 <pf_preprocess+0x2e8>
    de21:	mov    eax,edx
    de23:	mov    DWORD PTR [rbx+0x58],0x3
    de2a:	shl    eax,0x1e
    de2d:	or     eax,0x3fffffff
    de32:	mov    QWORD PTR [rbx+0x38],rax
    de36:	pop    rbx
    de37:	ret    
    de38:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000de40 <hvm_pf_xen_preprocess>:
    de40:	push   rbp
    de41:	push   rbx
    de42:	mov    rbx,rsi
    de45:	sub    rsp,0x8
    de49:	mov    rbp,QWORD PTR [rsi+0x28410]
    de50:	cmp    edi,0x82101
    de56:	je     de88 <hvm_pf_xen_preprocess+0x48>
    de58:	mov    eax,DWORD PTR [rbp+0x0]
    de5b:	mov    QWORD PTR [rsi+0x28348],rax
    de62:	mov    eax,DWORD PTR [rbp+0x4]
    de65:	mov    DWORD PTR [rsi+0x28354],eax
    de6b:	test   BYTE PTR [rbx+0x283cc],0x1
    de72:	je     dec8 <hvm_pf_xen_preprocess+0x88>
    de74:	mov    DWORD PTR [rbx+0x28358],0x5
    de7e:	add    rsp,0x8
    de82:	pop    rbx
    de83:	pop    rbp
    de84:	ret    
    de85:	nop    DWORD PTR [rax]
    de88:	movabs rax,0xffff000000000000
    de92:	mov    r8,QWORD PTR [rbp+0x0]
    de96:	mov    rdx,r8
    de99:	and    rdx,rax
    de9c:	bt     r8,0x2f
    dea1:	jb     df00 <hvm_pf_xen_preprocess+0xc0>
    dea3:	xor    eax,eax
    dea5:	test   rdx,rdx
    dea8:	sete   al
    deab:	test   eax,eax
    dead:	je     df0d <hvm_pf_xen_preprocess+0xcd>
    deaf:	mov    QWORD PTR [rbx+0x28348],r8
    deb6:	mov    eax,DWORD PTR [rbp+0x8]
    deb9:	mov    DWORD PTR [rbx+0x28354],eax
    debf:	test   BYTE PTR [rbx+0x283cc],0x1
    dec6:	jne    de74 <hvm_pf_xen_preprocess+0x34>
    dec8:	mov    rax,QWORD PTR [rbx+0x10]
    decc:	lea    rdi,[rbx+0x28348]
    ded3:	mov    esi,DWORD PTR [rax+0x14]
    ded6:	call   dad0 <pf_preprocess>
    dedb:	mov    eax,DWORD PTR [rbx+0x283a0]
    dee1:	test   eax,eax
    dee3:	jle    df38 <hvm_pf_xen_preprocess+0xf8>
    dee5:	mov    DWORD PTR [rbx+0x28358],0x8
    deef:	add    rsp,0x8
    def3:	pop    rbx
    def4:	pop    rbp
    def5:	ret    
    def6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    df00:	cmp    rdx,rax
    df03:	sete   al
    df06:	movzx  eax,al
    df09:	test   eax,eax
    df0b:	jne    deaf <hvm_pf_xen_preprocess+0x6f>
    df0d:	mov    rdi,QWORD PTR [rip+0x59344]        # 67258 <warn>
    df14:	lea    rcx,[rip+0x168f5]        # 24810 <__func__.6270>
    df1b:	mov    esi,0x1
    df20:	lea    rdx,[rip+0x10475]        # 1e39c <_IO_stdin_used+0x39c>
    df27:	call   5270 <__fprintf_chk@plt>
    df2c:	mov    r8,QWORD PTR [rbp+0x0]
    df30:	jmp    deaf <hvm_pf_xen_preprocess+0x6f>
    df35:	nop    DWORD PTR [rax]
    df38:	mov    DWORD PTR [rbx+0x28358],0xc
    df42:	add    rsp,0x8
    df46:	pop    rbx
    df47:	pop    rbp
    df48:	ret    
    df49:	nop    DWORD PTR [rax+0x0]

000000000000df50 <hvm_pf_xen_process>:
    df50:	push   rbp
    df51:	mov    rbp,rdi
    df54:	push   rbx
    df55:	mov    rbx,rsi
    df58:	sub    rsp,0x8
    df5c:	mov    edi,DWORD PTR [rdi+0x10]
    df5f:	cmp    edi,0x82101
    df65:	je     e088 <hvm_pf_xen_process+0x138>
    df6b:	cmp    edi,0x82001
    df71:	je     e050 <hvm_pf_xen_process+0x100>
    df77:	mov    rsi,rbx
    df7a:	call   de40 <hvm_pf_xen_preprocess>
    df7f:	test   BYTE PTR [rip+0x1d11b],0x40        # 2b0a1 <opt+0x1>
    df86:	jne    dfd0 <hvm_pf_xen_process+0x80>
    df88:	mov    rax,QWORD PTR [rbx+0x283d8]
    df8f:	test   rax,rax
    df92:	je     e03b <hvm_pf_xen_process+0xeb>
    df98:	lea    rdx,[rip+0xfffffffffffff791]        # d730 <hvm_generic_postprocess>
    df9f:	cmp    rax,rdx
    dfa2:	je     e03b <hvm_pf_xen_process+0xeb>
    dfa8:	mov    rdi,QWORD PTR [rip+0x592a9]        # 67258 <warn>
    dfaf:	add    rsp,0x8
    dfb3:	mov    esi,0x1
    dfb8:	xor    eax,eax
    dfba:	pop    rbx
    dfbb:	lea    rcx,[rip+0x1680e]        # 247d0 <__func__.6294>
    dfc2:	lea    rdx,[rip+0x12daf]        # 20d78 <_IO_stdin_used+0x2d78>
    dfc9:	pop    rbp
    dfca:	jmp    5270 <__fprintf_chk@plt>
    dfcf:	nop
    dfd0:	mov    edi,DWORD PTR [rbx+0x28394]
    dfd6:	mov    esi,DWORD PTR [rbx+0x28390]
    dfdc:	lea    rdx,[rbp+0x28]
    dfe0:	cmp    DWORD PTR [rbx+0x28358],0x8
    dfe7:	mov    r10d,DWORD PTR [rbx+0x28398]
    dfee:	mov    eax,DWORD PTR [rbx+0x2838c]
    dff4:	mov    r9d,DWORD PTR [rbx+0x28388]
    dffb:	mov    r8d,DWORD PTR [rbx+0x28354]
    e002:	mov    rcx,QWORD PTR [rbx+0x28348]
    e009:	je     e0a8 <hvm_pf_xen_process+0x158>
    e00f:	push   r10
    e011:	push   rdi
    e012:	mov    edi,0x1
    e017:	push   rsi
    e018:	lea    rsi,[rip+0x12d21]        # 20d40 <_IO_stdin_used+0x2d40>
    e01f:	push   rax
    e020:	xor    eax,eax
    e022:	call   5200 <__printf_chk@plt>
    e027:	mov    rax,QWORD PTR [rbx+0x283d8]
    e02e:	add    rsp,0x20
    e032:	test   rax,rax
    e035:	jne    df98 <hvm_pf_xen_process+0x48>
    e03b:	lea    rax,[rip+0xffffffffffffebde]        # cc20 <hvm_pf_xen_postprocess>
    e042:	mov    QWORD PTR [rbx+0x283d8],rax
    e049:	add    rsp,0x8
    e04d:	pop    rbx
    e04e:	pop    rbp
    e04f:	ret    
    e050:	mov    rax,QWORD PTR [rsi+0x10]
    e054:	cmp    DWORD PTR [rax+0x14],0x4
    e058:	jne    df77 <hvm_pf_xen_process+0x27>
    e05e:	mov    ecx,0x4
    e063:	lea    rdx,[rip+0x12c4e]        # 20cb8 <_IO_stdin_used+0x2cb8>
    e06a:	mov    rdi,QWORD PTR [rip+0x591e7]        # 67258 <warn>
    e071:	mov    esi,0x1
    e076:	xor    eax,eax
    e078:	call   5270 <__fprintf_chk@plt>
    e07d:	mov    edi,DWORD PTR [rbp+0x10]
    e080:	jmp    df77 <hvm_pf_xen_process+0x27>
    e085:	nop    DWORD PTR [rax]
    e088:	mov    rax,QWORD PTR [rsi+0x10]
    e08c:	lea    rdx,[rip+0x12bf5]        # 20c88 <_IO_stdin_used+0x2c88>
    e093:	mov    ecx,DWORD PTR [rax+0x14]
    e096:	cmp    ecx,0x4
    e099:	je     df77 <hvm_pf_xen_process+0x27>
    e09f:	jmp    e06a <hvm_pf_xen_process+0x11a>
    e0a1:	nop    DWORD PTR [rax+0x0]
    e0a8:	push   r10
    e0aa:	push   rdi
    e0ab:	mov    edi,0x1
    e0b0:	push   rsi
    e0b1:	lea    rsi,[rip+0x12c30]        # 20ce8 <_IO_stdin_used+0x2ce8>
    e0b8:	push   rax
    e0b9:	xor    eax,eax
    e0bb:	push   r9
    e0bd:	mov    r9d,DWORD PTR [rbx+0x283a0]
    e0c4:	push   QWORD PTR [rbx+0x28380]
    e0ca:	call   5200 <__printf_chk@plt>
    e0cf:	add    rsp,0x30
    e0d3:	jmp    df88 <hvm_pf_xen_process+0x38>
    e0d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000000e0e0 <hvm_vlapic_vmentry_cleanup>:
    e0e0:	push   r14
    e0e2:	mov    r14,rdi
    e0e5:	push   r13
    e0e7:	mov    r13,rsi
    e0ea:	push   r12
    e0ec:	movabs r12,0x44b82fa09b5a53
    e0f6:	push   rbp
    e0f7:	lea    rbp,[rdi+0x138]
    e0fe:	push   rbx
    e0ff:	lea    rbx,[rdi+0x78]
    e103:	jmp    e1c4 <hvm_vlapic_vmentry_cleanup+0xe4>
    e108:	nop    DWORD PTR [rax+rax*1+0x0]
    e110:	mov    rsi,r13
    e113:	sub    rsi,r8
    e116:	test   BYTE PTR [rip+0x1cf85],0x4        # 2b0a2 <opt+0x2>
    e11d:	jne    e20d <hvm_vlapic_vmentry_cleanup+0x12d>
    e123:	test   BYTE PTR [rip+0x1cf77],0x40        # 2b0a1 <opt+0x1>
    e12a:	je     e198 <hvm_vlapic_vmentry_cleanup+0xb8>
    e12c:	mov    r9d,DWORD PTR [rbx+0xc]
    e130:	cmp    r9d,0x1
    e134:	jle    e198 <hvm_vlapic_vmentry_cleanup+0xb8>
    e136:	mov    rax,rsi
    e139:	sub    rax,QWORD PTR [rip+0x21080]        # 2f1c0 <P+0x20>
    e140:	xor    edx,edx
    e142:	sub    rsp,0x8
    e146:	shl    rax,0xa
    e14a:	mov    r8d,DWORD PTR [rbx+0x8]
    e14e:	div    QWORD PTR [rip+0x1cf53]        # 2b0a8 <opt+0x8>
    e155:	mov    rcx,rax
    e158:	mov    rdi,rax
    e15b:	shr    rcx,0x9
    e15f:	mov    rax,rcx
    e162:	mul    r12
    e165:	mov    rax,QWORD PTR [r14+0x8]
    e169:	mov    rcx,rdx
    e16c:	mov    edx,DWORD PTR [rax+0x8]
    e16f:	shr    rcx,0xb
    e173:	imul   eax,ecx,0x3b9aca00
    e179:	sub    edi,eax
    e17b:	xor    eax,eax
    e17d:	push   rdi
    e17e:	mov    edi,0x1
    e183:	push   rcx
    e184:	mov    ecx,DWORD PTR [r14]
    e187:	push   rsi
    e188:	lea    rsi,[rip+0x12c41]        # 20dd0 <_IO_stdin_used+0x2dd0>
    e18f:	call   5200 <__printf_chk@plt>
    e194:	add    rsp,0x20
    e198:	mov    QWORD PTR [rbx],0x0
    e19f:	mov    DWORD PTR [rbx+0x14],0x0
    e1a6:	mov    DWORD PTR [rbx+0x10],0x0
    e1ad:	mov    DWORD PTR [rbx+0xc],0x0
    e1b4:	mov    DWORD PTR [rbx+0x8],0x0
    e1bb:	add    rbx,0x18
    e1bf:	cmp    rbx,rbp
    e1c2:	je     e220 <hvm_vlapic_vmentry_cleanup+0x140>
    e1c4:	mov    edx,DWORD PTR [rbx+0x14]
    e1c7:	test   edx,edx
    e1c9:	je     e1bb <hvm_vlapic_vmentry_cleanup+0xdb>
    e1cb:	mov    eax,DWORD PTR [rbx+0x10]
    e1ce:	test   eax,eax
    e1d0:	je     e1bb <hvm_vlapic_vmentry_cleanup+0xdb>
    e1d2:	mov    r8,QWORD PTR [rbx]
    e1d5:	cmp    r8,r13
    e1d8:	jbe    e110 <hvm_vlapic_vmentry_cleanup+0x30>
    e1de:	mov    ecx,DWORD PTR [rbx+0x8]
    e1e1:	mov    rdi,QWORD PTR [rip+0x59070]        # 67258 <warn>
    e1e8:	mov    r9,r13
    e1eb:	xor    eax,eax
    e1ed:	mov    esi,0x1
    e1f2:	lea    rdx,[rip+0x12ba7]        # 20da0 <_IO_stdin_used+0x2da0>
    e1f9:	call   5270 <__fprintf_chk@plt>
    e1fe:	xor    esi,esi
    e200:	test   BYTE PTR [rip+0x1ce9b],0x4        # 2b0a2 <opt+0x2>
    e207:	je     e123 <hvm_vlapic_vmentry_cleanup+0x43>
    e20d:	mov    r9d,DWORD PTR [rbx+0xc]
    e211:	jmp    e136 <hvm_vlapic_vmentry_cleanup+0x56>
    e216:	nop    WORD PTR cs:[rax+rax*1+0x0]
    e220:	pop    rbx
    e221:	pop    rbp
    e222:	pop    r12
    e224:	pop    r13
    e226:	pop    r14
    e228:	ret    
    e229:	nop    DWORD PTR [rax+0x0]

000000000000e230 <hvm_vlapic_clear>:
    e230:	mov    QWORD PTR [rdi],0x0
    e237:	mov    rcx,rdi
    e23a:	lea    rdi,[rdi+0x8]
    e23e:	xor    eax,eax
    e240:	mov    QWORD PTR [rdi+0xb0],0x0
    e24b:	and    rdi,0xfffffffffffffff8
    e24f:	sub    rcx,rdi
    e252:	add    ecx,0xc0
    e258:	shr    ecx,0x3
    e25b:	rep stos QWORD PTR es:[rdi],rax
    e25e:	ret    
    e25f:	nop

000000000000e260 <find_vec>:
    e260:	lea    rdx,[rdi+0x8]
    e264:	xor    ecx,ecx
    e266:	xor    eax,eax
    e268:	jmp    e280 <find_vec+0x20>
    e26a:	nop    WORD PTR [rax+rax*1+0x0]
    e270:	cmp    DWORD PTR [rdx],esi
    e272:	je     e2c0 <find_vec+0x60>
    e274:	add    ecx,0x1
    e277:	add    rdx,0x18
    e27b:	cmp    ecx,0x8
    e27e:	je     e2a0 <find_vec+0x40>
    e280:	mov    r8d,DWORD PTR [rdx+0xc]
    e284:	test   r8d,r8d
    e287:	jne    e270 <find_vec+0x10>
    e289:	test   rax,rax
    e28c:	lea    r8,[rdx-0x8]
    e290:	cmove  rax,r8
    e294:	add    ecx,0x1
    e297:	add    rdx,0x18
    e29b:	cmp    ecx,0x8
    e29e:	jne    e280 <find_vec+0x20>
    e2a0:	test   rax,rax
    e2a3:	je     e2b6 <find_vec+0x56>
    e2a5:	mov    edx,DWORD PTR [rax+0x14]
    e2a8:	test   edx,edx
    e2aa:	jne    e2b6 <find_vec+0x56>
    e2ac:	mov    DWORD PTR [rax+0x8],esi
    e2af:	mov    DWORD PTR [rax+0x14],0x1
    e2b6:	ret    
    e2b7:	nop    WORD PTR [rax+rax*1+0x0]
    e2c0:	movsxd rcx,ecx
    e2c3:	lea    rax,[rcx+rcx*2]
    e2c7:	lea    rax,[rdi+rax*8]
    e2cb:	jmp    e2a0 <find_vec+0x40>
    e2cd:	nop    DWORD PTR [rax]

000000000000e2d0 <ipi_send>:
    e2d0:	cmp    DWORD PTR [rdi+0x18],0x4
    e2d4:	je     e370 <ipi_send+0xa0>
    e2da:	push   rbp
    e2db:	mov    rbp,rdi
    e2de:	lea    rdi,[rdi+0x78]
    e2e2:	push   rbx
    e2e3:	sub    rsp,0x8
    e2e7:	call   e260 <find_vec>
    e2ec:	mov    rbx,rax
    e2ef:	test   rax,rax
    e2f2:	je     e3e0 <ipi_send+0x110>
    e2f8:	cmp    QWORD PTR [rax],0x0
    e2fc:	jne    e308 <ipi_send+0x38>
    e2fe:	mov    rax,QWORD PTR [rip+0x20eb3]        # 2f1b8 <P+0x18>
    e305:	mov    QWORD PTR [rbx],rax
    e308:	mov    eax,DWORD PTR [rbx+0xc]
    e30b:	test   BYTE PTR [rip+0x1cd8f],0x40        # 2b0a1 <opt+0x1>
    e312:	jne    e328 <ipi_send+0x58>
    e314:	add    eax,0x1
    e317:	mov    DWORD PTR [rbx+0xc],eax
    e31a:	add    rsp,0x8
    e31e:	pop    rbx
    e31f:	pop    rbp
    e320:	ret    
    e321:	nop    DWORD PTR [rax+0x0]
    e328:	test   eax,eax
    e32a:	je     e380 <ipi_send+0xb0>
    e32c:	add    eax,0x1
    e32f:	mov    DWORD PTR [rbx+0xc],eax
    e332:	mov    rdx,QWORD PTR [rbp+0x8]
    e336:	movsxd rcx,DWORD PTR [rbp+0x18]
    e33a:	sub    rsp,0x8
    e33e:	lea    rsi,[rip+0x12b23]        # 20e68 <_IO_stdin_used+0x2e68>
    e345:	mov    r8d,DWORD PTR [rbx+0x8]
    e349:	mov    edi,0x1
    e34e:	mov    edx,DWORD PTR [rdx+0x8]
    e351:	push   rax
    e352:	lea    rax,[rip+0x1d0e7]        # 2b440 <runstate_name>
    e359:	mov    r9,QWORD PTR [rax+rcx*8]
    e35d:	mov    ecx,DWORD PTR [rbp+0x0]
    e360:	xor    eax,eax
    e362:	call   5200 <__printf_chk@plt>
    e367:	pop    rax
    e368:	pop    rdx
    e369:	add    rsp,0x8
    e36d:	pop    rbx
    e36e:	pop    rbp
    e36f:	ret    
    e370:	test   BYTE PTR [rip+0x1cd2a],0x40        # 2b0a1 <opt+0x1>
    e377:	jne    e3b8 <ipi_send+0xe8>
    e379:	ret    
    e37a:	nop    WORD PTR [rax+rax*1+0x0]
    e380:	mov    eax,DWORD PTR [rbx+0x10]
    e383:	test   eax,eax
    e385:	je     e32c <ipi_send+0x5c>
    e387:	lea    rdi,[rip+0x10022]        # 1e3b0 <_IO_stdin_used+0x3b0>
    e38e:	call   5090 <puts@plt>
    e393:	movzx  edx,BYTE PTR [rip+0x1cd07]        # 2b0a1 <opt+0x1>
    e39a:	mov    eax,DWORD PTR [rbx+0xc]
    e39d:	add    eax,0x1
    e3a0:	and    edx,0x40
    e3a3:	mov    DWORD PTR [rbx+0xc],eax
    e3a6:	je     e31a <ipi_send+0x4a>
    e3ac:	jmp    e332 <ipi_send+0x62>
    e3b1:	nop    DWORD PTR [rax+0x0]
    e3b8:	mov    r8d,DWORD PTR [rdi]
    e3bb:	mov    rdi,QWORD PTR [rip+0x58e96]        # 67258 <warn>
    e3c2:	mov    esi,0x1
    e3c7:	xor    eax,eax
    e3c9:	lea    rcx,[rip+0x163e8]        # 247b8 <__func__.6327>
    e3d0:	lea    rdx,[rip+0x12a31]        # 20e08 <_IO_stdin_used+0x2e08>
    e3d7:	jmp    5270 <__fprintf_chk@plt>
    e3dc:	nop    DWORD PTR [rax+0x0]
    e3e0:	mov    rdi,QWORD PTR [rip+0x58e71]        # 67258 <warn>
    e3e7:	add    rsp,0x8
    e3eb:	mov    esi,0x1
    e3f0:	xor    eax,eax
    e3f2:	pop    rbx
    e3f3:	lea    rcx,[rip+0x163be]        # 247b8 <__func__.6327>
    e3fa:	lea    rdx,[rip+0x12a3f]        # 20e40 <_IO_stdin_used+0x2e40>
    e401:	pop    rbp
    e402:	jmp    5270 <__fprintf_chk@plt>
    e407:	nop    WORD PTR [rax+rax*1+0x0]

000000000000e410 <hvm_vlapic_icr_handler>:
    e410:	push   r13
    e412:	push   r12
    e414:	push   rbp
    e415:	push   rbx
    e416:	sub    rsp,0x8
    e41a:	movzx  eax,BYTE PTR [rip+0x1cc80]        # 2b0a1 <opt+0x1>
    e421:	mov    r13d,DWORD PTR [rdi+0x283c8]
    e428:	and    eax,0x40
    e42b:	test   BYTE PTR [rdi+0x283cc],0x2
    e432:	je     e460 <hvm_vlapic_icr_handler+0x50>
    e434:	mov    rbx,rdi
    e437:	test   al,al
    e439:	jne    e4e9 <hvm_vlapic_icr_handler+0xd9>
    e43f:	mov    eax,r13d
    e442:	shr    eax,0x10
    e445:	and    eax,0xc
    e448:	cmp    al,0xc
    e44a:	je     e4a6 <hvm_vlapic_icr_handler+0x96>
    e44c:	add    rsp,0x8
    e450:	pop    rbx
    e451:	pop    rbp
    e452:	pop    r12
    e454:	pop    r13
    e456:	ret    
    e457:	nop    WORD PTR [rax+rax*1+0x0]
    e460:	test   al,al
    e462:	je     e44c <hvm_vlapic_icr_handler+0x3c>
    e464:	mov    rax,QWORD PTR [rdi+0x10]
    e468:	test   r13w,0x1000
    e46e:	lea    rcx,[rip+0x10b5f]        # 1efd4 <_IO_stdin_used+0xfd4>
    e475:	lea    r8,[rip+0xff49]        # 1e3c5 <_IO_stdin_used+0x3c5>
    e47c:	cmove  r8,rcx
    e480:	lea    rsi,[rip+0x12a49]        # 20ed0 <_IO_stdin_used+0x2ed0>
    e487:	mov    edi,0x1
    e48c:	mov    rdx,QWORD PTR [rax+0x8]
    e490:	mov    ecx,DWORD PTR [rax]
    e492:	xor    eax,eax
    e494:	mov    edx,DWORD PTR [rdx+0x8]
    e497:	add    rsp,0x8
    e49b:	pop    rbx
    e49c:	pop    rbp
    e49d:	pop    r12
    e49f:	pop    r13
    e4a1:	jmp    5200 <__printf_chk@plt>
    e4a6:	mov    r12,QWORD PTR [rbx+0x10]
    e4aa:	movzx  r13d,r13b
    e4ae:	mov    rbp,QWORD PTR [r12+0x8]
    e4b3:	lea    rbx,[rbp+0x10]
    e4b7:	add    rbp,0x810
    e4be:	xchg   ax,ax
    e4c0:	mov    rdi,QWORD PTR [rbx]
    e4c3:	test   rdi,rdi
    e4c6:	je     e4d5 <hvm_vlapic_icr_handler+0xc5>
    e4c8:	cmp    r12,rdi
    e4cb:	je     e4d5 <hvm_vlapic_icr_handler+0xc5>
    e4cd:	mov    esi,r13d
    e4d0:	call   e2d0 <ipi_send>
    e4d5:	add    rbx,0x8
    e4d9:	cmp    rbp,rbx
    e4dc:	jne    e4c0 <hvm_vlapic_icr_handler+0xb0>
    e4de:	add    rsp,0x8
    e4e2:	pop    rbx
    e4e3:	pop    rbp
    e4e4:	pop    r12
    e4e6:	pop    r13
    e4e8:	ret    
    e4e9:	mov    rcx,QWORD PTR [rdi+0x10]
    e4ed:	mov    eax,r13d
    e4f0:	movzx  r8d,r13b
    e4f4:	mov    edi,0x1
    e4f9:	shr    eax,0x12
    e4fc:	lea    rsi,[rip+0x1cdbd]        # 2b2c0 <hvm_vlapic_icr_dest_shorthand_name>
    e503:	mov    rdx,QWORD PTR [rcx+0x8]
    e507:	and    eax,0x3
    e50a:	mov    ecx,DWORD PTR [rcx]
    e50c:	mov    r9,QWORD PTR [rsi+rax*8]
    e510:	lea    rsi,[rip+0x12989]        # 20ea0 <_IO_stdin_used+0x2ea0>
    e517:	xor    eax,eax
    e519:	mov    edx,DWORD PTR [rdx+0x8]
    e51c:	call   5200 <__printf_chk@plt>
    e521:	mov    eax,r13d
    e524:	shr    eax,0x10
    e527:	and    eax,0xc
    e52a:	cmp    al,0xc
    e52c:	jne    e44c <hvm_vlapic_icr_handler+0x3c>
    e532:	jmp    e4a6 <hvm_vlapic_icr_handler+0x96>
    e537:	nop    WORD PTR [rax+rax*1+0x0]

000000000000e540 <hvm_vlapic_inject>:
    e540:	push   rbx
    e541:	mov    r9,rdi
    e544:	add    rdi,0x78
    e548:	call   e260 <find_vec>
    e54d:	test   rax,rax
    e550:	je     e5a0 <hvm_vlapic_inject+0x60>
    e552:	mov    rbx,rax
    e555:	test   BYTE PTR [rip+0x1cb45],0x40        # 2b0a1 <opt+0x1>
    e55c:	jne    e570 <hvm_vlapic_inject+0x30>
    e55e:	mov    DWORD PTR [rbx+0x10],0x1
    e565:	pop    rbx
    e566:	ret    
    e567:	nop    WORD PTR [rax+rax*1+0x0]
    e570:	mov    rax,QWORD PTR [r9+0x8]
    e574:	mov    ecx,DWORD PTR [r9]
    e577:	mov    r8d,esi
    e57a:	mov    edi,0x1
    e57f:	lea    rsi,[rip+0x1297a]        # 20f00 <_IO_stdin_used+0x2f00>
    e586:	mov    edx,DWORD PTR [rax+0x8]
    e589:	xor    eax,eax
    e58b:	call   5200 <__printf_chk@plt>
    e590:	mov    DWORD PTR [rbx+0x10],0x1
    e597:	pop    rbx
    e598:	ret    
    e599:	nop    DWORD PTR [rax+0x0]
    e5a0:	mov    rdi,QWORD PTR [rip+0x1fe99]        # 2e440 <stderr@@GLIBC_2.2.5>
    e5a7:	mov    esi,0x1
    e5ac:	xor    eax,eax
    e5ae:	pop    rbx
    e5af:	lea    rcx,[rip+0x161ea]        # 247a0 <__func__.6361>
    e5b6:	lea    rdx,[rip+0x1296b]        # 20f28 <_IO_stdin_used+0x2f28>
    e5bd:	jmp    5270 <__fprintf_chk@plt>
    e5c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    e5cd:	nop    DWORD PTR [rax]

000000000000e5d0 <hvm_vlapic_eoi_handler>:
    e5d0:	test   BYTE PTR [rip+0x1caca],0x40        # 2b0a1 <opt+0x1>
    e5d7:	jne    e5e0 <hvm_vlapic_eoi_handler+0x10>
    e5d9:	ret    
    e5da:	nop    WORD PTR [rax+rax*1+0x0]
    e5e0:	jmp    7420 <hvm_vlapic_eoi_handler.part.12>
    e5e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000e5f0 <hvm_vlapic_handler>:
    e5f0:	mov    rax,QWORD PTR [rdi+0x283b8]
    e5f7:	mov    edx,0xfee000b0
    e5fc:	cmp    rax,rdx
    e5ff:	je     e618 <hvm_vlapic_handler+0x28>
    e601:	add    rdx,0x250
    e608:	cmp    rax,rdx
    e60b:	jne    e621 <hvm_vlapic_handler+0x31>
    e60d:	jmp    e410 <hvm_vlapic_icr_handler>
    e612:	nop    WORD PTR [rax+rax*1+0x0]
    e618:	test   BYTE PTR [rip+0x1ca82],0x40        # 2b0a1 <opt+0x1>
    e61f:	jne    e628 <hvm_vlapic_handler+0x38>
    e621:	ret    
    e622:	nop    WORD PTR [rax+rax*1+0x0]
    e628:	jmp    7420 <hvm_vlapic_eoi_handler.part.12>
    e62d:	nop    DWORD PTR [rax]

000000000000e630 <hvm_mmio_assist_process>:
    e630:	push   rbx
    e631:	mov    eax,DWORD PTR [rdi+0x10]
    e634:	mov    rbx,rsi
    e637:	mov    rcx,QWORD PTR [rsi+0x28410]
    e63e:	movzx  edx,ah
    e641:	test   dl,0x1
    e644:	je     e730 <hvm_mmio_assist_process+0x100>
    e64a:	mov    r8,QWORD PTR [rcx]
    e64d:	mov    QWORD PTR [rsi+0x283b8],r8
    e654:	mov    ecx,DWORD PTR [rcx+0x8]
    e657:	mov    DWORD PTR [rsi+0x283c8],ecx
    e65d:	movsxd rcx,DWORD PTR [rdi+0x14]
    e661:	shl    rcx,0x2
    e665:	cmp    rcx,0x10
    e669:	je     e755 <hvm_mmio_assist_process+0x125>
    e66f:	movzx  ecx,BYTE PTR [rbx+0x283cc]
    e676:	shr    eax,0x9
    e679:	and    eax,0x1
    e67c:	add    eax,eax
    e67e:	and    ecx,0xfffffffd
    e681:	or     eax,ecx
    e683:	mov    BYTE PTR [rbx+0x283cc],al
    e689:	test   BYTE PTR [rip+0x1ca11],0x40        # 2b0a1 <opt+0x1>
    e690:	je     e6c9 <hvm_mmio_assist_process+0x99>
    e692:	and    edx,0x6
    e695:	cmp    dl,0x1
    e698:	lea    rdx,[rdi+0x28]
    e69c:	sbb    ecx,ecx
    e69e:	and    ecx,0xfffffffb
    e6a1:	add    ecx,0x77
    e6a4:	test   al,0x1
    e6a6:	je     e700 <hvm_mmio_assist_process+0xd0>
    e6a8:	mov    r9d,DWORD PTR [rbx+0x283c8]
    e6af:	lea    rsi,[rip+0x1289a]        # 20f50 <_IO_stdin_used+0x2f50>
    e6b6:	mov    edi,0x1
    e6bb:	xor    eax,eax
    e6bd:	call   5200 <__printf_chk@plt>
    e6c2:	mov    r8,QWORD PTR [rbx+0x283b8]
    e6c9:	and    r8d,0xfffff000
    e6d0:	mov    eax,0xfee00000
    e6d5:	cmp    r8,rax
    e6d8:	je     e768 <hvm_mmio_assist_process+0x138>
    e6de:	mov    rax,QWORD PTR [rbx+0x283d8]
    e6e5:	test   rax,rax
    e6e8:	je     e720 <hvm_mmio_assist_process+0xf0>
    e6ea:	lea    rdx,[rip+0xfffffffffffff03f]        # d730 <hvm_generic_postprocess>
    e6f1:	cmp    rax,rdx
    e6f4:	je     e720 <hvm_mmio_assist_process+0xf0>
    e6f6:	pop    rbx
    e6f7:	ret    
    e6f8:	nop    DWORD PTR [rax+rax*1+0x0]
    e700:	lea    rsi,[rip+0x12871]        # 20f78 <_IO_stdin_used+0x2f78>
    e707:	mov    edi,0x1
    e70c:	xor    eax,eax
    e70e:	call   5200 <__printf_chk@plt>
    e713:	mov    r8,QWORD PTR [rbx+0x283b8]
    e71a:	jmp    e6c9 <hvm_mmio_assist_process+0x99>
    e71c:	nop    DWORD PTR [rax+0x0]
    e720:	lea    rax,[rip+0x6e9]        # ee10 <hvm_mmio_assist_postprocess>
    e727:	mov    QWORD PTR [rbx+0x283d8],rax
    e72e:	pop    rbx
    e72f:	ret    
    e730:	mov    r8d,DWORD PTR [rcx]
    e733:	mov    QWORD PTR [rsi+0x283b8],r8
    e73a:	mov    ecx,DWORD PTR [rcx+0x4]
    e73d:	mov    DWORD PTR [rsi+0x283c8],ecx
    e743:	movsxd rcx,DWORD PTR [rdi+0x14]
    e747:	shl    rcx,0x2
    e74b:	cmp    rcx,0x8
    e74f:	jne    e66f <hvm_mmio_assist_process+0x3f>
    e755:	or     BYTE PTR [rbx+0x283cc],0x1
    e75c:	jmp    e66f <hvm_mmio_assist_process+0x3f>
    e761:	nop    DWORD PTR [rax+0x0]
    e768:	mov    rdi,rbx
    e76b:	call   e5f0 <hvm_vlapic_handler>
    e770:	jmp    e6de <hvm_mmio_assist_process+0xae>
    e775:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000e780 <hvm_inj_virq_process>:
    e780:	push   r13
    e782:	push   r12
    e784:	push   rbp
    e785:	push   rbx
    e786:	mov    rbx,rsi
    e789:	sub    rsp,0x8
    e78d:	mov    r12,QWORD PTR [rsi+0x28410]
    e794:	test   BYTE PTR [rip+0x1c906],0x40        # 2b0a1 <opt+0x1>
    e79b:	je     e7d2 <hvm_inj_virq_process+0x52>
    e79d:	mov    r8d,DWORD PTR [r12+0x4]
    e7a2:	lea    rax,[rip+0xfc29]        # 1e3d2 <_IO_stdin_used+0x3d2>
    e7a9:	mov    ecx,DWORD PTR [r12]
    e7ad:	lea    rdx,[rdi+0x28]
    e7b1:	lea    rsi,[rip+0xfc1f]        # 1e3d7 <_IO_stdin_used+0x3d7>
    e7b8:	mov    edi,0x1
    e7bd:	test   r8d,r8d
    e7c0:	lea    r8,[rip+0xfc06]        # 1e3cd <_IO_stdin_used+0x3cd>
    e7c7:	cmove  r8,rax
    e7cb:	xor    eax,eax
    e7cd:	call   5200 <__printf_chk@plt>
    e7d2:	mov    esi,DWORD PTR [rip+0x1c8cc]        # 2b0a4 <opt+0x4>
    e7d8:	mov    ebp,DWORD PTR [r12]
    e7dc:	test   esi,esi
    e7de:	je     e814 <hvm_inj_virq_process+0x94>
    e7e0:	cmp    ebp,0x15e
    e7e6:	mov    esi,0x15e
    e7eb:	cmovle esi,ebp
    e7ee:	movsxd rdx,esi
    e7f1:	mov    rax,rdx
    e7f4:	shl    rax,0x5
    e7f8:	sub    rax,rdx
    e7fb:	add    DWORD PTR [rbx+rax*8+0x12af8],0x1
    e803:	cmp    DWORD PTR [rip+0x1c8ea],0x5        # 2b0f4 <opt+0x54>
    e80a:	je     e940 <hvm_inj_virq_process+0x1c0>
    e810:	mov    ebp,DWORD PTR [r12]
    e814:	cmp    ebp,0x15d
    e81a:	jg     e933 <hvm_inj_virq_process+0x1b3>
    e820:	movsxd r13,ebp
    e823:	mov    rax,r13
    e826:	shl    rax,0x5
    e82a:	sub    rax,r13
    e82d:	mov    rdx,QWORD PTR [rbx+rax*8+0x12be8]
    e835:	movabs rax,0xffffffff00000001
    e83f:	and    rax,QWORD PTR [rbx+0x28418]
    e846:	cmp    rax,0x1
    e84a:	je     e8a0 <hvm_inj_virq_process+0x120>
    e84c:	mov    rdi,QWORD PTR [rbx+0x10]
    e850:	test   rdx,rdx
    e853:	jne    e886 <hvm_inj_virq_process+0x106>
    e855:	mov    rax,r13
    e858:	shl    rax,0x5
    e85c:	sub    rax,r13
    e85f:	mov    QWORD PTR [rbx+rax*8+0x12be8],0x1
    e86b:	add    DWORD PTR [rbx+0x28424],0x1
    e872:	add    DWORD PTR [rbx+0x28420],0x1
    e879:	test   BYTE PTR [rip+0x1c821],0x40        # 2b0a1 <opt+0x1>
    e880:	jne    e910 <hvm_inj_virq_process+0x190>
    e886:	mov    ebp,DWORD PTR [r12]
    e88a:	add    rsp,0x8
    e88e:	mov    esi,ebp
    e890:	pop    rbx
    e891:	pop    rbp
    e892:	pop    r12
    e894:	pop    r13
    e896:	jmp    e540 <hvm_vlapic_inject>
    e89b:	nop    DWORD PTR [rax+rax*1+0x0]
    e8a0:	test   rdx,rdx
    e8a3:	jne    e9a0 <hvm_inj_virq_process+0x220>
    e8a9:	mov    ecx,DWORD PTR [rbx+0x28420]
    e8af:	test   ecx,ecx
    e8b1:	jne    e980 <hvm_inj_virq_process+0x200>
    e8b7:	mov    rdi,QWORD PTR [rbx+0x10]
    e8bb:	test   BYTE PTR [rip+0x1c7df],0x40        # 2b0a1 <opt+0x1>
    e8c2:	jne    e950 <hvm_inj_virq_process+0x1d0>
    e8c8:	mov    eax,ebp
    e8ca:	test   BYTE PTR [rip+0x1c7d2],0x10        # 2b0a3 <opt+0x3>
    e8d1:	je     e8e2 <hvm_inj_virq_process+0x162>
    e8d3:	mov    eax,DWORD PTR [r12+0x4]
    e8d8:	test   eax,eax
    e8da:	mov    eax,0x15d
    e8df:	cmove  eax,ebp
    e8e2:	mov    DWORD PTR [rbx+0x2841c],eax
    e8e8:	mov    rax,r13
    e8eb:	shl    rax,0x5
    e8ef:	sub    rax,r13
    e8f2:	lea    rax,[rbx+rax*8]
    e8f6:	mov    DWORD PTR [rax+0x12be0],0x1
    e900:	mov    rdx,QWORD PTR [rax+0x12be8]
    e907:	jmp    e850 <hvm_inj_virq_process+0xd0>
    e90c:	nop    DWORD PTR [rax+0x0]
    e910:	mov    rax,QWORD PTR [rdi+0x8]
    e914:	mov    ecx,DWORD PTR [rdi]
    e916:	mov    r8d,ebp
    e919:	lea    rsi,[rip+0x12738]        # 21058 <_IO_stdin_used+0x3058>
    e920:	mov    edi,0x1
    e925:	mov    edx,DWORD PTR [rax+0x8]
    e928:	xor    eax,eax
    e92a:	call   5200 <__printf_chk@plt>
    e92f:	mov    ebp,DWORD PTR [r12]
    e933:	mov    rdi,QWORD PTR [rbx+0x10]
    e937:	jmp    e88a <hvm_inj_virq_process+0x10a>
    e93c:	nop    DWORD PTR [rax+0x0]
    e940:	mov    rdi,rbx
    e943:	call   9a10 <interval_domain_guest_interrupt>
    e948:	jmp    e810 <hvm_inj_virq_process+0x90>
    e94d:	nop    DWORD PTR [rax]
    e950:	mov    rax,QWORD PTR [rdi+0x8]
    e954:	mov    ecx,DWORD PTR [rdi]
    e956:	mov    r8d,ebp
    e959:	mov    edi,0x1
    e95e:	lea    rsi,[rip+0x126cb]        # 21030 <_IO_stdin_used+0x3030>
    e965:	mov    edx,DWORD PTR [rax+0x8]
    e968:	xor    eax,eax
    e96a:	call   5200 <__printf_chk@plt>
    e96f:	mov    rdi,QWORD PTR [rbx+0x10]
    e973:	jmp    e8c8 <hvm_inj_virq_process+0x148>
    e978:	nop    DWORD PTR [rax+rax*1+0x0]
    e980:	mov    rdi,QWORD PTR [rip+0x588d1]        # 67258 <warn>
    e987:	lea    rdx,[rip+0x1265a]        # 20fe8 <_IO_stdin_used+0x2fe8>
    e98e:	mov    esi,0x1
    e993:	xor    eax,eax
    e995:	call   5270 <__fprintf_chk@plt>
    e99a:	jmp    e8b7 <hvm_inj_virq_process+0x137>
    e99f:	nop
    e9a0:	mov    rax,QWORD PTR [rbx+0x10]
    e9a4:	sub    rsp,0x8
    e9a8:	mov    r9d,ebp
    e9ab:	mov    esi,0x1
    e9b0:	mov    rdi,QWORD PTR [rip+0x588a1]        # 67258 <warn>
    e9b7:	mov    rcx,QWORD PTR [rax+0x8]
    e9bb:	mov    ecx,DWORD PTR [rcx+0x8]
    e9be:	push   rdx
    e9bf:	lea    rdx,[rip+0x125da]        # 20fa0 <_IO_stdin_used+0x2fa0>
    e9c6:	mov    r8d,DWORD PTR [rax]
    e9c9:	xor    eax,eax
    e9cb:	call   5270 <__fprintf_chk@plt>
    e9d0:	cmp    DWORD PTR [rip+0x1c709],0x1        # 2b0e0 <opt+0x40>
    e9d7:	pop    rdx
    e9d8:	pop    rcx
    e9d9:	ja     e8a9 <hvm_inj_virq_process+0x129>
    e9df:	mov    edi,0x1
    e9e4:	call   5250 <exit@plt>
    e9e9:	nop    DWORD PTR [rax+0x0]

000000000000e9f0 <update_io_address>:
    e9f0:	push   r15
    e9f2:	mov    r9,rdi
    e9f5:	mov    r15d,r8d
    e9f8:	push   r14
    e9fa:	mov    r14d,edx
    e9fd:	push   r13
    e9ff:	mov    r13,rcx
    ea02:	push   r12
    ea04:	mov    r12d,esi
    ea07:	push   rbp
    ea08:	push   rbx
    ea09:	sub    rsp,0x18
    ea0d:	mov    rbp,QWORD PTR [rdi]
    ea10:	test   rbp,rbp
    ea13:	je     ed2b <update_io_address+0x33b>
    ea19:	mov    eax,DWORD PTR [rbp+0x8]
    ea1c:	cmp    eax,esi
    ea1e:	jb     ea2b <update_io_address+0x3b>
    ea20:	jmp    ed10 <update_io_address+0x320>
    ea25:	nop    DWORD PTR [rax]
    ea28:	mov    rbp,rbx
    ea2b:	mov    rbx,QWORD PTR [rbp+0x0]
    ea2f:	test   rbx,rbx
    ea32:	je     ebb0 <update_io_address+0x1c0>
    ea38:	mov    eax,DWORD PTR [rbx+0x8]
    ea3b:	cmp    eax,r12d
    ea3e:	jb     ea28 <update_io_address+0x38>
    ea40:	cmp    r12d,eax
    ea43:	je     ea8e <update_io_address+0x9e>
    ea45:	mov    edi,0x80
    ea4a:	mov    QWORD PTR [rsp+0x8],r9
    ea4f:	call   51a0 <malloc@plt>
    ea54:	mov    r9,QWORD PTR [rsp+0x8]
    ea59:	test   rax,rax
    ea5c:	mov    rbx,rax
    ea5f:	je     ec70 <update_io_address+0x280>
    ea65:	mov    ecx,0x10
    ea6a:	xor    eax,eax
    ea6c:	mov    rdi,rbx
    ea6f:	rep stos QWORD PTR es:[rdi],rax
    ea72:	mov    DWORD PTR [rbx+0x8],r12d
    ea76:	mov    DWORD PTR [rbx+0xc],r15d
    ea7a:	test   rbp,rbp
    ea7d:	je     ec40 <update_io_address+0x250>
    ea83:	mov    rax,QWORD PTR [rbp+0x0]
    ea87:	mov    QWORD PTR [rbx],rax
    ea8a:	mov    QWORD PTR [rbp+0x0],rbx
    ea8e:	movsxd rbp,r14d
    ea91:	lea    rax,[rbp*8+0x0]
    ea99:	sub    rax,rbp
    ea9c:	lea    rdx,[rbx+rax*8]
    eaa0:	add    DWORD PTR [rdx+0x10],0x1
    eaa4:	test   r13,r13
    eaa7:	je     ead8 <update_io_address+0xe8>
    eaa9:	mov    ecx,DWORD PTR [rip+0x1c629]        # 2b0d8 <opt+0x38>
    eaaf:	movsxd rax,DWORD PTR [rdx+0x14]
    eab3:	test   ecx,ecx
    eab5:	jne    eaf0 <update_io_address+0x100>
    eab7:	lea    rdx,[rbp*8+0x0]
    eabf:	add    eax,0x1
    eac2:	sub    rdx,rbp
    eac5:	lea    rdx,[rbx+rdx*8]
    eac9:	add    QWORD PTR [rdx+0x20],r13
    eacd:	add    DWORD PTR [rdx+0x30],0x1
    ead1:	add    QWORD PTR [rdx+0x38],r13
    ead5:	mov    DWORD PTR [rdx+0x14],eax
    ead8:	add    rsp,0x18
    eadc:	pop    rbx
    eadd:	pop    rbp
    eade:	pop    r12
    eae0:	pop    r13
    eae2:	pop    r14
    eae4:	pop    r15
    eae6:	ret    
    eae7:	nop    WORD PTR [rax+rax*1+0x0]
    eaf0:	mov    edx,DWORD PTR [rdx+0x18]
    eaf3:	cmp    edx,eax
    eaf5:	jg     ec50 <update_io_address+0x260>
    eafb:	mov    r12d,DWORD PTR [rip+0x1c5da]        # 2b0dc <opt+0x3c>
    eb02:	test   eax,eax
    eb04:	je     eb14 <update_io_address+0x124>
    eb06:	test   r12d,r12d
    eb09:	je     eb14 <update_io_address+0x124>
    eb0b:	cmp    edx,r12d
    eb0e:	jge    ed1a <update_io_address+0x32a>
    eb14:	add    edx,edx
    eb16:	cmove  edx,ecx
    eb19:	test   r12d,r12d
    eb1c:	je     ed5d <update_io_address+0x36d>
    eb22:	cmp    edx,r12d
    eb25:	jle    ed5d <update_io_address+0x36d>
    eb2b:	lea    rax,[rbp*8+0x0]
    eb33:	movsxd rsi,r12d
    eb36:	sub    rax,rbp
    eb39:	shl    rsi,0x3
    eb3d:	lea    r14,[rbx+rax*8]
    eb41:	mov    rdi,QWORD PTR [r14+0x28]
    eb45:	call   51d0 <realloc@plt>
    eb4a:	test   rax,rax
    eb4d:	je     ed22 <update_io_address+0x332>
    eb53:	mov    QWORD PTR [r14+0x28],rax
    eb57:	mov    DWORD PTR [r14+0x18],r12d
    eb5b:	lea    rax,[rbp*8+0x0]
    eb63:	sub    rax,rbp
    eb66:	movsxd rax,DWORD PTR [rbx+rax*8+0x14]
    eb6b:	cmp    eax,r12d
    eb6e:	jl     ec50 <update_io_address+0x260>
    eb74:	cdq    
    eb75:	idiv   r12d
    eb78:	lea    ecx,[rax+0x1]
    eb7b:	mov    esi,edx
    eb7d:	mov    edx,0x55555556
    eb82:	mov    eax,ecx
    eb84:	imul   edx
    eb86:	mov    eax,ecx
    eb88:	sar    eax,0x1f
    eb8b:	sub    eax,edx
    eb8d:	add    eax,esi
    eb8f:	cdq    
    eb90:	idiv   ecx
    eb92:	lea    rax,[rbp*8+0x0]
    eb9a:	sub    rax,rbp
    eb9d:	test   edx,edx
    eb9f:	je     ecf9 <update_io_address+0x309>
    eba5:	mov    eax,DWORD PTR [rbx+rax*8+0x14]
    eba9:	jmp    eab7 <update_io_address+0xc7>
    ebae:	xchg   ax,ax
    ebb0:	mov    esi,0x1
    ebb5:	mov    edi,0x80
    ebba:	call   5170 <calloc@plt>
    ebbf:	mov    rbx,rax
    ebc2:	test   rax,rax
    ebc5:	je     ecb0 <update_io_address+0x2c0>
    ebcb:	mov    DWORD PTR [rbx+0x8],r12d
    ebcf:	mov    DWORD PTR [rbx+0xc],r15d
    ebd3:	mov    rax,QWORD PTR [rbp+0x0]
    ebd7:	mov    QWORD PTR [rbx],rax
    ebda:	mov    QWORD PTR [rbp+0x0],rbx
    ebde:	jmp    ea8e <update_io_address+0x9e>
    ebe3:	mov    edx,0x11
    ebe8:	mov    rcx,QWORD PTR [rip+0x1f851]        # 2e440 <stderr@@GLIBC_2.2.5>
    ebef:	mov    esi,0x1
    ebf4:	lea    rdi,[rip+0xf688]        # 1e283 <_IO_stdin_used+0x283>
    ebfb:	mov    QWORD PTR [rsp+0x8],r9
    ec00:	call   5260 <fwrite@plt>
    ec05:	cmp    DWORD PTR [rip+0x1c4d4],0x7        # 2b0e0 <opt+0x40>
    ec0c:	mov    r9,QWORD PTR [rsp+0x8]
    ec11:	jbe    ec9f <update_io_address+0x2af>
    ec17:	mov    edx,0x80
    ec1c:	xor    esi,esi
    ec1e:	xor    edi,edi
    ec20:	mov    QWORD PTR [rsp+0x8],r9
    ec25:	call   5130 <memset@plt>
    ec2a:	mov    DWORD PTR ds:0x8,r12d
    ec32:	mov    DWORD PTR ds:0xc,r15d
    ec3a:	mov    r9,QWORD PTR [rsp+0x8]
    ec3f:	nop
    ec40:	mov    rbp,QWORD PTR [r9]
    ec43:	mov    QWORD PTR [rbx],rbp
    ec46:	mov    QWORD PTR [r9],rbx
    ec49:	jmp    ea8e <update_io_address+0x9e>
    ec4e:	xchg   ax,ax
    ec50:	lea    rdx,[rbp*8+0x0]
    ec58:	sub    rdx,rbp
    ec5b:	lea    rdx,[rbx+rdx*8]
    ec5f:	mov    rcx,QWORD PTR [rdx+0x28]
    ec63:	mov    QWORD PTR [rcx+rax*8],r13
    ec67:	mov    eax,DWORD PTR [rdx+0x14]
    ec6a:	jmp    eab7 <update_io_address+0xc7>
    ec6f:	nop
    ec70:	mov    rcx,QWORD PTR [rip+0x1f7c9]        # 2e440 <stderr@@GLIBC_2.2.5>
    ec77:	mov    edx,0x11
    ec7c:	mov    esi,0x1
    ec81:	lea    rdi,[rip+0xf5fb]        # 1e283 <_IO_stdin_used+0x283>
    ec88:	call   5260 <fwrite@plt>
    ec8d:	cmp    DWORD PTR [rip+0x1c44c],0x7        # 2b0e0 <opt+0x40>
    ec94:	mov    r9,QWORD PTR [rsp+0x8]
    ec99:	ja     ea65 <update_io_address+0x75>
    ec9f:	mov    edi,0x1
    eca4:	call   5250 <exit@plt>
    eca9:	nop    DWORD PTR [rax+0x0]
    ecb0:	mov    rcx,QWORD PTR [rip+0x1f789]        # 2e440 <stderr@@GLIBC_2.2.5>
    ecb7:	mov    edx,0x11
    ecbc:	mov    esi,0x1
    ecc1:	lea    rdi,[rip+0xf5bb]        # 1e283 <_IO_stdin_used+0x283>
    ecc8:	call   5260 <fwrite@plt>
    eccd:	cmp    DWORD PTR [rip+0x1c40c],0x7        # 2b0e0 <opt+0x40>
    ecd4:	jbe    ec9f <update_io_address+0x2af>
    ecd6:	mov    edx,0x80
    ecdb:	xor    esi,esi
    ecdd:	xor    edi,edi
    ecdf:	call   5130 <memset@plt>
    ece4:	mov    DWORD PTR ds:0x8,r12d
    ecec:	mov    DWORD PTR ds:0xc,r15d
    ecf4:	jmp    ea83 <update_io_address+0x93>
    ecf9:	lea    rdx,[rbx+rax*8]
    ecfd:	movsxd rax,esi
    ed00:	mov    rcx,QWORD PTR [rdx+0x28]
    ed04:	mov    QWORD PTR [rcx+rax*8],r13
    ed08:	mov    eax,DWORD PTR [rdx+0x14]
    ed0b:	jmp    eab7 <update_io_address+0xc7>
    ed10:	mov    rbx,rbp
    ed13:	xor    ebp,ebp
    ed15:	jmp    ea40 <update_io_address+0x50>
    ed1a:	mov    r12d,edx
    ed1d:	jmp    eb74 <update_io_address+0x184>
    ed22:	mov    r12d,DWORD PTR [r14+0x18]
    ed26:	jmp    eb5b <update_io_address+0x16b>
    ed2b:	mov    QWORD PTR [rsp+0x8],rdi
    ed30:	mov    esi,0x1
    ed35:	mov    edi,0x80
    ed3a:	call   5170 <calloc@plt>
    ed3f:	mov    r9,QWORD PTR [rsp+0x8]
    ed44:	test   rax,rax
    ed47:	mov    rbx,rax
    ed4a:	je     ebe3 <update_io_address+0x1f3>
    ed50:	mov    DWORD PTR [rbx+0x8],r12d
    ed54:	mov    DWORD PTR [rbx+0xc],r15d
    ed58:	jmp    ec43 <update_io_address+0x253>
    ed5d:	mov    r12d,edx
    ed60:	jmp    eb2b <update_io_address+0x13b>
    ed65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000000ed70 <enumerate_mmio>:
    ed70:	test   BYTE PTR [rip+0x1c32c],0x4        # 2b0a3 <opt+0x3>
    ed77:	je     ed8e <enumerate_mmio+0x1e>
    ed79:	mov    rax,QWORD PTR [rdi+0x283b8]
    ed80:	sub    rax,0xa0000
    ed86:	cmp    rax,0x1fffe
    ed8c:	jbe    edd0 <enumerate_mmio+0x60>
    ed8e:	movzx  edx,BYTE PTR [rdi+0x283cc]
    ed95:	test   dl,0x1
    ed98:	jne    eda0 <enumerate_mmio+0x30>
    ed9a:	ret    
    ed9b:	nop    DWORD PTR [rax+rax*1+0x0]
    eda0:	mov    rcx,QWORD PTR [rdi+0x283e8]
    eda7:	shr    dl,1
    eda9:	mov    rsi,QWORD PTR [rdi+0x283b8]
    edb0:	lea    rax,[rdi+0x28338]
    edb7:	mov    r8d,DWORD PTR [rdi+0x283c0]
    edbe:	and    edx,0x1
    edc1:	mov    rdi,rax
    edc4:	jmp    e9f0 <update_io_address>
    edc9:	nop    DWORD PTR [rax+0x0]
    edd0:	mov    eax,DWORD PTR [rip+0x1c256]        # 2b02c <_w.6376>
    edd6:	test   eax,eax
    edd8:	je     ed9a <enumerate_mmio+0x2a>
    edda:	mov    rcx,QWORD PTR [rip+0x58477]        # 67258 <warn>
    ede1:	mov    edx,0x5d
    ede6:	mov    esi,0x1
    edeb:	lea    rdi,[rip+0x12286]        # 21078 <_IO_stdin_used+0x3078>
    edf2:	mov    DWORD PTR [rip+0x1c230],0x0        # 2b02c <_w.6376>
    edfc:	jmp    5260 <fwrite@plt>
    ee01:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    ee0c:	nop    DWORD PTR [rax+0x0]

000000000000ee10 <hvm_mmio_assist_postprocess>:
    ee10:	push   r14
    ee12:	push   r13
    ee14:	push   r12
    ee16:	push   rbp
    ee17:	push   rbx
    ee18:	mov    r8d,DWORD PTR [rdi+0x28400]
    ee1f:	mov    rbx,rdi
    ee22:	cmp    r8d,0x30
    ee26:	je     ef30 <hvm_mmio_assist_postprocess+0x120>
    ee2c:	cmp    r8d,0x400
    ee33:	je     ef30 <hvm_mmio_assist_postprocess+0x120>
    ee39:	cmp    r8d,0x2c
    ee3d:	je     eef0 <hvm_mmio_assist_postprocess+0xe0>
    ee43:	mov    ecx,DWORD PTR [rip+0x5a5af]        # 693f8 <warned.6400>
    ee49:	test   ecx,ecx
    ee4b:	je     f070 <hvm_mmio_assist_postprocess+0x260>
    ee51:	mov    edx,DWORD PTR [rip+0x5a59d]        # 693f4 <done.6401>
    ee57:	mov    ebp,0x2
    ee5c:	test   edx,edx
    ee5e:	je     f0ae <hvm_mmio_assist_postprocess+0x29e>
    ee64:	nop    DWORD PTR [rax+0x0]
    ee68:	mov    eax,DWORD PTR [rip+0x1c236]        # 2b0a4 <opt+0x4>
    ee6e:	test   eax,eax
    ee70:	je     eed6 <hvm_mmio_assist_postprocess+0xc6>
    ee72:	lea    rax,[rbp*8+0x0]
    ee7a:	mov    r12,QWORD PTR [rbx+0x283e8]
    ee81:	sub    rax,rbp
    ee84:	lea    rdx,[rbx+rax*8]
    ee88:	add    DWORD PTR [rdx+0x12a50],0x1
    ee8f:	test   r12,r12
    ee92:	je     eed6 <hvm_mmio_assist_postprocess+0xc6>
    ee94:	mov    ecx,DWORD PTR [rip+0x1c23e]        # 2b0d8 <opt+0x38>
    ee9a:	movsxd rax,DWORD PTR [rdx+0x12a54]
    eea1:	test   ecx,ecx
    eea3:	jne    ef90 <hvm_mmio_assist_postprocess+0x180>
    eea9:	lea    rdx,[rbp*8+0x0]
    eeb1:	add    eax,0x1
    eeb4:	sub    rdx,rbp
    eeb7:	lea    rdx,[rbx+rdx*8]
    eebb:	add    QWORD PTR [rdx+0x12a60],r12
    eec2:	add    DWORD PTR [rdx+0x12a70],0x1
    eec9:	add    QWORD PTR [rdx+0x12a78],r12
    eed0:	mov    DWORD PTR [rdx+0x12a54],eax
    eed6:	cmp    BYTE PTR [rip+0x1c1c5],0x0        # 2b0a2 <opt+0x2>
    eedd:	js     ef78 <hvm_mmio_assist_postprocess+0x168>
    eee3:	pop    rbx
    eee4:	pop    rbp
    eee5:	pop    r12
    eee7:	pop    r13
    eee9:	pop    r14
    eeeb:	ret    
    eeec:	nop    DWORD PTR [rax+0x0]
    eef0:	mov    esi,DWORD PTR [rip+0x5a506]        # 693fc <done.6397>
    eef6:	xor    ebp,ebp
    eef8:	test   esi,esi
    eefa:	jne    ee68 <hvm_mmio_assist_postprocess+0x58>
    ef00:	xor    edx,edx
    ef02:	lea    rsi,[rip+0xffffffffffff7aa7]        # 69b0 <hvm_mmio_summary>
    ef09:	call   cb10 <__hvm_set_summary_handler>
    ef0e:	test   eax,eax
    ef10:	jne    f168 <hvm_mmio_assist_postprocess+0x358>
    ef16:	mov    DWORD PTR [rip+0x5a4dc],0x1        # 693fc <done.6397>
    ef20:	xor    ebp,ebp
    ef22:	jmp    ee68 <hvm_mmio_assist_postprocess+0x58>
    ef27:	nop    WORD PTR [rax+rax*1+0x0]
    ef30:	mov    edi,DWORD PTR [rip+0x5a4ca]        # 69400 <done.6392>
    ef36:	mov    ebp,0x1
    ef3b:	test   edi,edi
    ef3d:	jne    ee68 <hvm_mmio_assist_postprocess+0x58>
    ef43:	mov    edx,0x1
    ef48:	lea    rsi,[rip+0xffffffffffff7a61]        # 69b0 <hvm_mmio_summary>
    ef4f:	mov    rdi,rbx
    ef52:	call   cb10 <__hvm_set_summary_handler>
    ef57:	test   eax,eax
    ef59:	jne    f198 <hvm_mmio_assist_postprocess+0x388>
    ef5f:	mov    DWORD PTR [rip+0x5a497],0x1        # 69400 <done.6392>
    ef69:	mov    ebp,0x1
    ef6e:	jmp    ee68 <hvm_mmio_assist_postprocess+0x58>
    ef73:	nop    DWORD PTR [rax+rax*1+0x0]
    ef78:	mov    rdi,rbx
    ef7b:	pop    rbx
    ef7c:	pop    rbp
    ef7d:	pop    r12
    ef7f:	pop    r13
    ef81:	pop    r14
    ef83:	jmp    ed70 <enumerate_mmio>
    ef88:	nop    DWORD PTR [rax+rax*1+0x0]
    ef90:	mov    edx,DWORD PTR [rdx+0x12a58]
    ef96:	cmp    edx,eax
    ef98:	jg     f0e0 <hvm_mmio_assist_postprocess+0x2d0>
    ef9e:	mov    r13d,DWORD PTR [rip+0x1c137]        # 2b0dc <opt+0x3c>
    efa5:	test   eax,eax
    efa7:	jne    f118 <hvm_mmio_assist_postprocess+0x308>
    efad:	add    edx,edx
    efaf:	cmove  edx,ecx
    efb2:	test   r13d,r13d
    efb5:	je     f1d8 <hvm_mmio_assist_postprocess+0x3c8>
    efbb:	cmp    edx,r13d
    efbe:	jle    f1d8 <hvm_mmio_assist_postprocess+0x3c8>
    efc4:	lea    rax,[rbp*8+0x0]
    efcc:	movsxd rsi,r13d
    efcf:	sub    rax,rbp
    efd2:	shl    rsi,0x3
    efd6:	lea    r14,[rbx+rax*8]
    efda:	mov    rdi,QWORD PTR [r14+0x12a68]
    efe1:	call   51d0 <realloc@plt>
    efe6:	test   rax,rax
    efe9:	je     f1c8 <hvm_mmio_assist_postprocess+0x3b8>
    efef:	mov    QWORD PTR [r14+0x12a68],rax
    eff6:	mov    DWORD PTR [r14+0x12a58],r13d
    effd:	lea    rax,[rbp*8+0x0]
    f005:	sub    rax,rbp
    f008:	movsxd rax,DWORD PTR [rbx+rax*8+0x12a54]
    f010:	cmp    eax,r13d
    f013:	jl     f0e0 <hvm_mmio_assist_postprocess+0x2d0>
    f019:	cdq    
    f01a:	idiv   r13d
    f01d:	lea    ecx,[rax+0x1]
    f020:	mov    esi,edx
    f022:	mov    edx,0x55555556
    f027:	mov    eax,ecx
    f029:	imul   edx
    f02b:	mov    eax,ecx
    f02d:	sar    eax,0x1f
    f030:	sub    eax,edx
    f032:	add    eax,esi
    f034:	cdq    
    f035:	idiv   ecx
    f037:	lea    rax,[rbp*8+0x0]
    f03f:	sub    rax,rbp
    f042:	test   edx,edx
    f044:	jne    f108 <hvm_mmio_assist_postprocess+0x2f8>
    f04a:	lea    rdx,[rbx+rax*8]
    f04e:	movsxd rax,esi
    f051:	mov    rcx,QWORD PTR [rdx+0x12a68]
    f058:	mov    QWORD PTR [rcx+rax*8],r12
    f05c:	mov    eax,DWORD PTR [rdx+0x12a54]
    f062:	jmp    eea9 <hvm_mmio_assist_postprocess+0x99>
    f067:	nop    WORD PTR [rax+rax*1+0x0]
    f070:	mov    rdi,QWORD PTR [rip+0x581e1]        # 67258 <warn>
    f077:	lea    rdx,[rip+0x1205a]        # 210d8 <_IO_stdin_used+0x30d8>
    f07e:	lea    rcx,[rip+0x156fb]        # 24780 <__func__.6394>
    f085:	xor    eax,eax
    f087:	mov    esi,0x1
    f08c:	mov    ebp,0x2
    f091:	call   5270 <__fprintf_chk@plt>
    f096:	mov    edx,DWORD PTR [rip+0x5a358]        # 693f4 <done.6401>
    f09c:	mov    DWORD PTR [rip+0x5a352],0x1        # 693f8 <warned.6400>
    f0a6:	test   edx,edx
    f0a8:	jne    ee68 <hvm_mmio_assist_postprocess+0x58>
    f0ae:	mov    edx,0x2
    f0b3:	lea    rsi,[rip+0xffffffffffff78f6]        # 69b0 <hvm_mmio_summary>
    f0ba:	mov    rdi,rbx
    f0bd:	call   cb10 <__hvm_set_summary_handler>
    f0c2:	test   eax,eax
    f0c4:	jne    f138 <hvm_mmio_assist_postprocess+0x328>
    f0c6:	mov    DWORD PTR [rip+0x5a324],0x1        # 693f4 <done.6401>
    f0d0:	mov    ebp,0x2
    f0d5:	jmp    ee68 <hvm_mmio_assist_postprocess+0x58>
    f0da:	nop    WORD PTR [rax+rax*1+0x0]
    f0e0:	lea    rdx,[rbp*8+0x0]
    f0e8:	sub    rdx,rbp
    f0eb:	lea    rdx,[rbx+rdx*8]
    f0ef:	mov    rcx,QWORD PTR [rdx+0x12a68]
    f0f6:	mov    QWORD PTR [rcx+rax*8],r12
    f0fa:	mov    eax,DWORD PTR [rdx+0x12a54]
    f100:	jmp    eea9 <hvm_mmio_assist_postprocess+0x99>
    f105:	nop    DWORD PTR [rax]
    f108:	mov    eax,DWORD PTR [rbx+rax*8+0x12a54]
    f10f:	jmp    eea9 <hvm_mmio_assist_postprocess+0x99>
    f114:	nop    DWORD PTR [rax+0x0]
    f118:	cmp    edx,r13d
    f11b:	jl     efad <hvm_mmio_assist_postprocess+0x19d>
    f121:	test   r13d,r13d
    f124:	je     efad <hvm_mmio_assist_postprocess+0x19d>
    f12a:	mov    r13d,edx
    f12d:	jmp    f019 <hvm_mmio_assist_postprocess+0x209>
    f132:	nop    WORD PTR [rax+rax*1+0x0]
    f138:	mov    rdi,QWORD PTR [rip+0x1f301]        # 2e440 <stderr@@GLIBC_2.2.5>
    f13f:	mov    r8d,eax
    f142:	xor    eax,eax
    f144:	lea    rcx,[rip+0x15635]        # 24780 <__func__.6394>
    f14b:	lea    rdx,[rip+0x11a1e]        # 20b70 <_IO_stdin_used+0x2b70>
    f152:	mov    esi,0x1
    f157:	call   5270 <__fprintf_chk@plt>
    f15c:	jmp    f0c6 <hvm_mmio_assist_postprocess+0x2b6>
    f161:	nop    DWORD PTR [rax+0x0]
    f168:	mov    rdi,QWORD PTR [rip+0x1f2d1]        # 2e440 <stderr@@GLIBC_2.2.5>
    f16f:	mov    r8d,eax
    f172:	xor    eax,eax
    f174:	lea    rcx,[rip+0x15605]        # 24780 <__func__.6394>
    f17b:	lea    rdx,[rip+0x119ee]        # 20b70 <_IO_stdin_used+0x2b70>
    f182:	mov    esi,0x1
    f187:	call   5270 <__fprintf_chk@plt>
    f18c:	jmp    ef16 <hvm_mmio_assist_postprocess+0x106>
    f191:	nop    DWORD PTR [rax+0x0]
    f198:	mov    rdi,QWORD PTR [rip+0x1f2a1]        # 2e440 <stderr@@GLIBC_2.2.5>
    f19f:	mov    r8d,eax
    f1a2:	xor    eax,eax
    f1a4:	lea    rcx,[rip+0x155d5]        # 24780 <__func__.6394>
    f1ab:	lea    rdx,[rip+0x119be]        # 20b70 <_IO_stdin_used+0x2b70>
    f1b2:	mov    esi,0x1
    f1b7:	call   5270 <__fprintf_chk@plt>
    f1bc:	jmp    ef5f <hvm_mmio_assist_postprocess+0x14f>
    f1c1:	nop    DWORD PTR [rax+0x0]
    f1c8:	mov    r13d,DWORD PTR [r14+0x12a58]
    f1cf:	jmp    effd <hvm_mmio_assist_postprocess+0x1ed>
    f1d4:	nop    DWORD PTR [rax+0x0]
    f1d8:	mov    r13d,edx
    f1db:	jmp    efc4 <hvm_mmio_assist_postprocess+0x1b4>

000000000000f1e0 <shadow_mmio_postprocess>:
    f1e0:	mov    eax,DWORD PTR [rip+0x1bebe]        # 2b0a4 <opt+0x4>
    f1e6:	push   r14
    f1e8:	push   r13
    f1ea:	push   r12
    f1ec:	push   rbp
    f1ed:	push   rbx
    f1ee:	mov    rbx,rdi
    f1f1:	test   eax,eax
    f1f3:	je     f342 <shadow_mmio_postprocess+0x162>
    f1f9:	movsxd rbp,DWORD PTR [rdi+0x28358]
    f200:	test   ebp,ebp
    f202:	je     f370 <shadow_mmio_postprocess+0x190>
    f208:	lea    rax,[rbp*8+0x0]
    f210:	mov    r12,QWORD PTR [rdi+0x283e8]
    f217:	sub    rax,rbp
    f21a:	lea    rdx,[rdi+rax*8]
    f21e:	add    DWORD PTR [rdx+0x108d8],0x1
    f225:	test   r12,r12
    f228:	je     f335 <shadow_mmio_postprocess+0x155>
    f22e:	mov    ecx,DWORD PTR [rip+0x1bea4]        # 2b0d8 <opt+0x38>
    f234:	movsxd rax,DWORD PTR [rdx+0x108dc]
    f23b:	test   ecx,ecx
    f23d:	je     f308 <shadow_mmio_postprocess+0x128>
    f243:	mov    edx,DWORD PTR [rdx+0x108e0]
    f249:	cmp    edx,eax
    f24b:	jg     f390 <shadow_mmio_postprocess+0x1b0>
    f251:	mov    r13d,DWORD PTR [rip+0x1be84]        # 2b0dc <opt+0x3c>
    f258:	test   eax,eax
    f25a:	jne    f3b8 <shadow_mmio_postprocess+0x1d8>
    f260:	add    edx,edx
    f262:	cmove  edx,ecx
    f265:	test   r13d,r13d
    f268:	je     f408 <shadow_mmio_postprocess+0x228>
    f26e:	cmp    edx,r13d
    f271:	jle    f408 <shadow_mmio_postprocess+0x228>
    f277:	lea    rax,[rbp*8+0x0]
    f27f:	movsxd rsi,r13d
    f282:	sub    rax,rbp
    f285:	shl    rsi,0x3
    f289:	lea    r14,[rbx+rax*8]
    f28d:	mov    rdi,QWORD PTR [r14+0x108f0]
    f294:	call   51d0 <realloc@plt>
    f299:	test   rax,rax
    f29c:	je     f3f8 <shadow_mmio_postprocess+0x218>
    f2a2:	mov    QWORD PTR [r14+0x108f0],rax
    f2a9:	mov    DWORD PTR [r14+0x108e0],r13d
    f2b0:	lea    rax,[rbp*8+0x0]
    f2b8:	sub    rax,rbp
    f2bb:	movsxd rax,DWORD PTR [rbx+rax*8+0x108dc]
    f2c3:	cmp    eax,r13d
    f2c6:	jl     f390 <shadow_mmio_postprocess+0x1b0>
    f2cc:	cdq    
    f2cd:	idiv   r13d
    f2d0:	lea    ecx,[rax+0x1]
    f2d3:	mov    esi,edx
    f2d5:	mov    edx,0x55555556
    f2da:	mov    eax,ecx
    f2dc:	imul   edx
    f2de:	mov    eax,ecx
    f2e0:	sar    eax,0x1f
    f2e3:	sub    eax,edx
    f2e5:	add    eax,esi
    f2e7:	cdq    
    f2e8:	idiv   ecx
    f2ea:	lea    rax,[rbp*8+0x0]
    f2f2:	sub    rax,rbp
    f2f5:	test   edx,edx
    f2f7:	je     f3d8 <shadow_mmio_postprocess+0x1f8>
    f2fd:	mov    eax,DWORD PTR [rbx+rax*8+0x108dc]
    f304:	nop    DWORD PTR [rax+0x0]
    f308:	lea    rdx,[rbp*8+0x0]
    f310:	add    eax,0x1
    f313:	sub    rdx,rbp
    f316:	lea    rdx,[rbx+rdx*8]
    f31a:	add    QWORD PTR [rdx+0x108e8],r12
    f321:	add    DWORD PTR [rdx+0x108f8],0x1
    f328:	add    QWORD PTR [rdx+0x10900],r12
    f32f:	mov    DWORD PTR [rdx+0x108dc],eax
    f335:	mov    esi,0x3
    f33a:	mov    rdi,rbx
    f33d:	call   a2a0 <hvm_update_short_summary>
    f342:	cmp    BYTE PTR [rip+0x1bd59],0x0        # 2b0a2 <opt+0x2>
    f349:	js     f358 <shadow_mmio_postprocess+0x178>
    f34b:	pop    rbx
    f34c:	pop    rbp
    f34d:	pop    r12
    f34f:	pop    r13
    f351:	pop    r14
    f353:	ret    
    f354:	nop    DWORD PTR [rax+0x0]
    f358:	mov    rdi,rbx
    f35b:	pop    rbx
    f35c:	pop    rbp
    f35d:	pop    r12
    f35f:	pop    r13
    f361:	pop    r14
    f363:	jmp    ed70 <enumerate_mmio>
    f368:	nop    DWORD PTR [rax+rax*1+0x0]
    f370:	mov    rcx,QWORD PTR [rip+0x57ee1]        # 67258 <warn>
    f377:	mov    edx,0x14
    f37c:	mov    esi,0x1
    f381:	lea    rdi,[rip+0xefae]        # 1e336 <_IO_stdin_used+0x336>
    f388:	call   5260 <fwrite@plt>
    f38d:	jmp    f335 <shadow_mmio_postprocess+0x155>
    f38f:	nop
    f390:	lea    rdx,[rbp*8+0x0]
    f398:	sub    rdx,rbp
    f39b:	lea    rdx,[rbx+rdx*8]
    f39f:	mov    rcx,QWORD PTR [rdx+0x108f0]
    f3a6:	mov    QWORD PTR [rcx+rax*8],r12
    f3aa:	mov    eax,DWORD PTR [rdx+0x108dc]
    f3b0:	jmp    f308 <shadow_mmio_postprocess+0x128>
    f3b5:	nop    DWORD PTR [rax]
    f3b8:	cmp    edx,r13d
    f3bb:	jl     f260 <shadow_mmio_postprocess+0x80>
    f3c1:	test   r13d,r13d
    f3c4:	je     f260 <shadow_mmio_postprocess+0x80>
    f3ca:	mov    r13d,edx
    f3cd:	jmp    f2cc <shadow_mmio_postprocess+0xec>
    f3d2:	nop    WORD PTR [rax+rax*1+0x0]
    f3d8:	lea    rdx,[rbx+rax*8]
    f3dc:	movsxd rax,esi
    f3df:	mov    rcx,QWORD PTR [rdx+0x108f0]
    f3e6:	mov    QWORD PTR [rcx+rax*8],r12
    f3ea:	mov    eax,DWORD PTR [rdx+0x108dc]
    f3f0:	jmp    f308 <shadow_mmio_postprocess+0x128>
    f3f5:	nop    DWORD PTR [rax]
    f3f8:	mov    r13d,DWORD PTR [r14+0x108e0]
    f3ff:	jmp    f2b0 <shadow_mmio_postprocess+0xd0>
    f404:	nop    DWORD PTR [rax+0x0]
    f408:	mov    r13d,edx
    f40b:	jmp    f277 <shadow_mmio_postprocess+0x97>

000000000000f410 <hvm_io_write_postprocess>:
    f410:	test   BYTE PTR [rip+0x1bc8b],0x40        # 2b0a2 <opt+0x2>
    f417:	jne    f420 <hvm_io_write_postprocess+0x10>
    f419:	ret    
    f41a:	nop    WORD PTR [rax+rax*1+0x0]
    f420:	mov    esi,DWORD PTR [rdi+0x28348]
    f426:	mov    rcx,QWORD PTR [rdi+0x283e8]
    f42d:	xor    r8d,r8d
    f430:	add    rdi,0x28340
    f437:	mov    edx,0x1
    f43c:	and    esi,0x7fffffff
    f442:	jmp    e9f0 <update_io_address>
    f447:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f450 <hvm_io_read_postprocess>:
    f450:	push   rbx
    f451:	mov    rbx,rdi
    f454:	test   BYTE PTR [rip+0x1bc47],0x40        # 2b0a2 <opt+0x2>
    f45b:	jne    f480 <hvm_io_read_postprocess+0x30>
    f45d:	test   BYTE PTR [rip+0x1bc3c],0x10        # 2b0a0 <opt>
    f464:	je     f479 <hvm_io_read_postprocess+0x29>
    f466:	mov    eax,DWORD PTR [rbx+0x28348]
    f46c:	and    eax,0x7fffffff
    f471:	cmp    eax,DWORD PTR [rip+0x1bc49]        # 2b0c0 <opt+0x20>
    f477:	je     f4b0 <hvm_io_read_postprocess+0x60>
    f479:	pop    rbx
    f47a:	ret    
    f47b:	nop    DWORD PTR [rax+rax*1+0x0]
    f480:	mov    esi,DWORD PTR [rdi+0x28348]
    f486:	mov    rcx,QWORD PTR [rdi+0x283e8]
    f48d:	xor    r8d,r8d
    f490:	xor    edx,edx
    f492:	lea    rdi,[rdi+0x28340]
    f499:	and    esi,0x7fffffff
    f49f:	call   e9f0 <update_io_address>
    f4a4:	jmp    f45d <hvm_io_read_postprocess+0xd>
    f4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    f4b0:	mov    rdi,QWORD PTR [rbx+0x283e0]
    f4b7:	mov    rsi,QWORD PTR [rip+0x1fcfa]        # 2f1b8 <P+0x18>
    f4be:	pop    rbx
    f4bf:	sub    rsi,rdi
    f4c2:	jmp    8200 <scatterplot_vs_time>
    f4c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000f4d0 <hvm_io_address_summary>:
    f4d0:	test   rdi,rdi
    f4d3:	je     f4e0 <hvm_io_address_summary+0x10>
    f4d5:	jmp    7440 <hvm_io_address_summary.part.14>
    f4da:	nop    WORD PTR [rax+rax*1+0x0]
    f4e0:	ret    
    f4e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    f4ec:	nop    DWORD PTR [rax+0x0]

000000000000f4f0 <cr3_switch>:
    f4f0:	mov    ecx,DWORD PTR [rsi]
    f4f2:	test   ecx,ecx
    f4f4:	je     f790 <cr3_switch+0x2a0>
    f4fa:	push   r15
    f4fc:	mov    r15,rdi
    f4ff:	push   r14
    f501:	shr    r15,0xc
    f505:	push   r13
    f507:	mov    r13,rsi
    f50a:	push   r12
    f50c:	push   rbp
    f50d:	mov    rbp,rdi
    f510:	push   rbx
    f511:	sub    rsp,0x18
    f515:	mov    r14,QWORD PTR [rsi+0x10]
    f519:	test   BYTE PTR [rip+0x1bb82],0x20        # 2b0a2 <opt+0x2>
    f520:	je     f770 <cr3_switch+0x280>
    f526:	mov    rbx,QWORD PTR [r14+0x70]
    f52a:	mov    r8,QWORD PTR [rip+0x1fc87]        # 2f1b8 <P+0x18>
    f531:	test   rbx,rbx
    f534:	je     f636 <cr3_switch+0x146>
    f53a:	mov    edx,DWORD PTR [rip+0x1bb64]        # 2b0a4 <opt+0x4>
    f540:	test   edx,edx
    f542:	je     f632 <cr3_switch+0x142>
    f548:	mov    r12,r8
    f54b:	sub    r12,QWORD PTR [r14+0x68]
    f54f:	add    DWORD PTR [rbx+0x38],0x1
    f553:	test   r12,r12
    f556:	je     f632 <cr3_switch+0x142>
    f55c:	movsxd rcx,DWORD PTR [rbx+0x3c]
    f560:	mov    edx,DWORD PTR [rip+0x1bb72]        # 2b0d8 <opt+0x38>
    f566:	mov    eax,ecx
    f568:	test   edx,edx
    f56a:	je     f620 <cr3_switch+0x130>
    f570:	mov    eax,DWORD PTR [rbx+0x40]
    f573:	cmp    eax,ecx
    f575:	jg     f850 <cr3_switch+0x360>
    f57b:	mov    r9d,DWORD PTR [rip+0x1bb5a]        # 2b0dc <opt+0x3c>
    f582:	test   ecx,ecx
    f584:	je     f594 <cr3_switch+0xa4>
    f586:	cmp    eax,r9d
    f589:	jl     f594 <cr3_switch+0xa4>
    f58b:	test   r9d,r9d
    f58e:	jne    f891 <cr3_switch+0x3a1>
    f594:	add    eax,eax
    f596:	cmove  eax,edx
    f599:	test   r9d,r9d
    f59c:	je     f889 <cr3_switch+0x399>
    f5a2:	cmp    eax,r9d
    f5a5:	jle    f889 <cr3_switch+0x399>
    f5ab:	movsxd rsi,r9d
    f5ae:	mov    rdi,QWORD PTR [rbx+0x50]
    f5b2:	mov    QWORD PTR [rsp+0x8],r8
    f5b7:	shl    rsi,0x3
    f5bb:	mov    DWORD PTR [rsp],r9d
    f5bf:	call   51d0 <realloc@plt>
    f5c4:	mov    r9d,DWORD PTR [rsp]
    f5c8:	mov    r8,QWORD PTR [rsp+0x8]
    f5cd:	test   rax,rax
    f5d0:	je     f880 <cr3_switch+0x390>
    f5d6:	mov    QWORD PTR [rbx+0x50],rax
    f5da:	mov    DWORD PTR [rbx+0x40],r9d
    f5de:	movsxd rcx,DWORD PTR [rbx+0x3c]
    f5e2:	cmp    ecx,r9d
    f5e5:	jl     f850 <cr3_switch+0x360>
    f5eb:	mov    eax,ecx
    f5ed:	cdq    
    f5ee:	idiv   r9d
    f5f1:	lea    edi,[rax+0x1]
    f5f4:	movsxd rsi,edx
    f5f7:	mov    edx,0x55555556
    f5fc:	mov    eax,edi
    f5fe:	imul   edx
    f600:	mov    eax,edi
    f602:	sar    eax,0x1f
    f605:	sub    eax,edx
    f607:	add    eax,esi
    f609:	cdq    
    f60a:	idiv   edi
    f60c:	mov    eax,ecx
    f60e:	test   edx,edx
    f610:	jne    f620 <cr3_switch+0x130>
    f612:	mov    rax,QWORD PTR [rbx+0x50]
    f616:	mov    QWORD PTR [rax+rsi*8],r12
    f61a:	mov    eax,DWORD PTR [rbx+0x3c]
    f61d:	nop    DWORD PTR [rax]
    f620:	add    eax,0x1
    f623:	add    QWORD PTR [rbx+0x48],r12
    f627:	add    DWORD PTR [rbx+0x58],0x1
    f62b:	add    QWORD PTR [rbx+0x60],r12
    f62f:	mov    DWORD PTR [rbx+0x3c],eax
    f632:	mov    QWORD PTR [rbx+0x28],r8
    f636:	test   r15,r15
    f639:	je     f798 <cr3_switch+0x2a8>
    f63f:	mov    r12,QWORD PTR [r14+0x8]
    f643:	mov    rax,QWORD PTR [r12+0x9e0]
    f64b:	test   rax,rax
    f64e:	je     f860 <cr3_switch+0x370>
    f654:	cmp    r15,QWORD PTR [rax+0x10]
    f658:	jne    f66d <cr3_switch+0x17d>
    f65a:	jmp    f86c <cr3_switch+0x37c>
    f65f:	nop
    f660:	mov    rax,rbx
    f663:	cmp    QWORD PTR [rbx+0x10],r15
    f667:	je     f720 <cr3_switch+0x230>
    f66d:	mov    rbx,QWORD PTR [rax]
    f670:	test   rbx,rbx
    f673:	jne    f660 <cr3_switch+0x170>
    f675:	mov    r12,rax
    f678:	mov    edi,0x338
    f67d:	mov    QWORD PTR [rsp],r8
    f681:	call   51a0 <malloc@plt>
    f686:	mov    r8,QWORD PTR [rsp]
    f68a:	test   rax,rax
    f68d:	mov    r9,rax
    f690:	mov    rbx,rax
    f693:	je     f808 <cr3_switch+0x318>
    f699:	xor    eax,eax
    f69b:	mov    ecx,0x67
    f6a0:	mov    rdi,r9
    f6a3:	rep stos QWORD PTR es:[rdi],rax
    f6a6:	mov    eax,DWORD PTR [rip+0x57b34]        # 671e0 <P+0x38040>
    f6ac:	mov    QWORD PTR [r9+0x10],r15
    f6b0:	mov    QWORD PTR [r9+0x20],r8
    f6b4:	mov    DWORD PTR [r9+0x18],eax
    f6b8:	mov    rax,QWORD PTR [r12]
    f6bc:	mov    QWORD PTR [r9],rax
    f6bf:	mov    QWORD PTR [r12],r9
    f6c3:	cmp    QWORD PTR [rip+0x57b1d],0x0        # 671e8 <P+0x38048>
    f6cb:	mov    QWORD PTR [r9+0x8],0x0
    f6d3:	je     f874 <cr3_switch+0x384>
    f6d9:	mov    rax,QWORD PTR [rip+0x57b10]        # 671f0 <P+0x38050>
    f6e0:	mov    QWORD PTR [rax],r9
    f6e3:	lea    rax,[r9+0x8]
    f6e7:	add    DWORD PTR [rip+0x57af2],0x1        # 671e0 <P+0x38040>
    f6ee:	cmp    DWORD PTR [rip+0x1ba07],0x1        # 2b0fc <opt+0x5c>
    f6f5:	mov    QWORD PTR [rip+0x57af4],rax        # 671f0 <P+0x38050>
    f6fc:	jne    f720 <cr3_switch+0x230>
    f6fe:	mov    rax,QWORD PTR [r14+0x8]
    f702:	cmp    DWORD PTR [rax+0x8],0x8000
    f709:	je     f720 <cr3_switch+0x230>
    f70b:	mov    rdi,r9
    f70e:	mov    QWORD PTR [rsp],r8
    f712:	call   93f0 <interval_cr3_value_check>
    f717:	mov    r8,QWORD PTR [rsp]
    f71b:	nop    DWORD PTR [rax+rax*1+0x0]
    f720:	mov    eax,DWORD PTR [rbx+0x318]
    f726:	test   eax,eax
    f728:	jne    f7c8 <cr3_switch+0x2d8>
    f72e:	mov    QWORD PTR [r14+0x68],r8
    f732:	add    DWORD PTR [rbx+0xe0],0x1
    f739:	test   BYTE PTR [rbx+0x320],0x1
    f740:	je     f749 <cr3_switch+0x259>
    f742:	add    DWORD PTR [rbx+0x328],0x1
    f749:	mov    QWORD PTR [r14+0x70],rbx
    f74d:	test   BYTE PTR [rip+0x1b94c],0x4        # 2b0a0 <opt>
    f754:	je     f779 <cr3_switch+0x289>
    f756:	movsxd rsi,DWORD PTR [rbx+0x18]
    f75a:	mov    rdi,QWORD PTR [r13+0x283e0]
    f761:	call   8200 <scatterplot_vs_time>
    f766:	jmp    f779 <cr3_switch+0x289>
    f768:	nop    DWORD PTR [rax+rax*1+0x0]
    f770:	test   BYTE PTR [rip+0x1b929],0x4        # 2b0a0 <opt>
    f777:	jne    f7b0 <cr3_switch+0x2c0>
    f779:	mov    QWORD PTR [r14+0x60],rbp
    f77d:	add    rsp,0x18
    f781:	pop    rbx
    f782:	pop    rbp
    f783:	pop    r12
    f785:	pop    r13
    f787:	pop    r14
    f789:	pop    r15
    f78b:	ret    
    f78c:	nop    DWORD PTR [rax+0x0]
    f790:	ret    
    f791:	nop    DWORD PTR [rax+0x0]
    f798:	mov    QWORD PTR [r14+0x70],0x0
    f7a0:	test   BYTE PTR [rip+0x1b8f9],0x4        # 2b0a0 <opt>
    f7a7:	je     f779 <cr3_switch+0x289>
    f7a9:	xor    esi,esi
    f7ab:	jmp    f75a <cr3_switch+0x26a>
    f7ad:	nop    DWORD PTR [rax]
    f7b0:	mov    rdi,QWORD PTR [rsi+0x283e0]
    f7b7:	mov    rsi,r15
    f7ba:	call   8200 <scatterplot_vs_time>
    f7bf:	jmp    f779 <cr3_switch+0x289>
    f7c1:	nop    DWORD PTR [rax+0x0]
    f7c8:	mov    rcx,QWORD PTR [rbx+0x10]
    f7cc:	mov    esi,0x1
    f7d1:	xor    eax,eax
    f7d3:	mov    QWORD PTR [rsp],r8
    f7d7:	mov    rdi,QWORD PTR [rip+0x57a7a]        # 67258 <warn>
    f7de:	lea    rdx,[rip+0x1192b]        # 21110 <_IO_stdin_used+0x3110>
    f7e5:	call   5270 <__fprintf_chk@plt>
    f7ea:	mov    r8,QWORD PTR [rsp]
    f7ee:	mov    DWORD PTR [rbx+0x318],0x0
    f7f8:	mov    DWORD PTR [r13+0x28358],0x1
    f803:	jmp    f72e <cr3_switch+0x23e>
    f808:	mov    rcx,QWORD PTR [rip+0x1ec31]        # 2e440 <stderr@@GLIBC_2.2.5>
    f80f:	mov    edx,0x11
    f814:	mov    QWORD PTR [rsp],r8
    f818:	mov    esi,0x1
    f81d:	lea    rdi,[rip+0xea5f]        # 1e283 <_IO_stdin_used+0x283>
    f824:	mov    QWORD PTR [rsp+0x8],r9
    f829:	call   5260 <fwrite@plt>
    f82e:	cmp    DWORD PTR [rip+0x1b8ab],0x7        # 2b0e0 <opt+0x40>
    f835:	mov    r8,QWORD PTR [rsp]
    f839:	mov    r9,QWORD PTR [rsp+0x8]
    f83e:	ja     f699 <cr3_switch+0x1a9>
    f844:	mov    edi,0x1
    f849:	call   5250 <exit@plt>
    f84e:	xchg   ax,ax
    f850:	mov    rax,QWORD PTR [rbx+0x50]
    f854:	mov    QWORD PTR [rax+rcx*8],r12
    f858:	mov    eax,DWORD PTR [rbx+0x3c]
    f85b:	jmp    f620 <cr3_switch+0x130>
    f860:	add    r12,0x9e0
    f867:	jmp    f678 <cr3_switch+0x188>
    f86c:	mov    rbx,rax
    f86f:	jmp    f720 <cr3_switch+0x230>
    f874:	mov    QWORD PTR [rip+0x5796d],r9        # 671e8 <P+0x38048>
    f87b:	jmp    f6e3 <cr3_switch+0x1f3>
    f880:	mov    r9d,DWORD PTR [rbx+0x40]
    f884:	jmp    f5de <cr3_switch+0xee>
    f889:	mov    r9d,eax
    f88c:	jmp    f5ab <cr3_switch+0xbb>
    f891:	mov    r9d,eax
    f894:	jmp    f5eb <cr3_switch+0xfb>
    f899:	nop    DWORD PTR [rax+0x0]

000000000000f8a0 <hvm_cr_write_postprocess>:
    f8a0:	push   r12
    f8a2:	mov    edx,DWORD PTR [rip+0x1b7fc]        # 2b0a4 <opt+0x4>
    f8a8:	push   rbp
    f8a9:	push   rbx
    f8aa:	mov    eax,DWORD PTR [rdi+0x28348]
    f8b0:	mov    rbx,rdi
    f8b3:	cmp    eax,0x3
    f8b6:	je     f928 <hvm_cr_write_postprocess+0x88>
    f8b8:	cmp    eax,0x8
    f8bb:	ja     f8c5 <hvm_cr_write_postprocess+0x25>
    f8bd:	test   edx,edx
    f8bf:	jne    fa30 <hvm_cr_write_postprocess+0x190>
    f8c5:	mov    eax,DWORD PTR [rbx+0x20]
    f8c8:	cmp    DWORD PTR [rbx+0x28400],eax
    f8ce:	jae    f920 <hvm_cr_write_postprocess+0x80>
    f8d0:	mov    ecx,DWORD PTR [rbx+0x28348]
    f8d6:	cmp    ecx,0xf
    f8d9:	ja     fb80 <hvm_cr_write_postprocess+0x2e0>
    f8df:	lea    rdx,[rip+0x146b6]        # 23f9c <_IO_stdin_used+0x5f9c>
    f8e6:	movsxd rax,DWORD PTR [rdx+rcx*4]
    f8ea:	add    rax,rdx
    f8ed:	jmp    rax
    f8ef:	nop
    f8f0:	mov    edx,DWORD PTR [rip+0x59ac2]        # 693b8 <done.6626>
    f8f6:	test   edx,edx
    f8f8:	jne    f920 <hvm_cr_write_postprocess+0x80>
    f8fa:	mov    edx,0xe
    f8ff:	lea    rsi,[rip+0xd3a]        # 10640 <hvm_cr_write_summary>
    f906:	mov    rdi,rbx
    f909:	call   cb10 <__hvm_set_summary_handler>
    f90e:	test   eax,eax
    f910:	jne    ffb1 <hvm_cr_write_postprocess+0x711>
    f916:	mov    DWORD PTR [rip+0x59a98],0x1        # 693b8 <done.6626>
    f920:	pop    rbx
    f921:	pop    rbp
    f922:	pop    r12
    f924:	ret    
    f925:	nop    DWORD PTR [rax]
    f928:	mov    rcx,QWORD PTR [rdi+0x10]
    f92c:	mov    rbp,QWORD PTR [rdi+0x28350]
    f933:	mov    rax,QWORD PTR [rcx+0x60]
    f937:	test   rax,rax
    f93a:	je     fa10 <hvm_cr_write_postprocess+0x170>
    f940:	cmp    rbp,rax
    f943:	jne    fa10 <hvm_cr_write_postprocess+0x170>
    f949:	mov    rax,QWORD PTR [rcx+0x70]
    f94d:	test   rax,rax
    f950:	je     f96d <hvm_cr_write_postprocess+0xcd>
    f952:	add    DWORD PTR [rax+0xe4],0x1
    f959:	mov    rax,QWORD PTR [rcx+0x70]
    f95d:	test   BYTE PTR [rax+0x320],0x1
    f964:	je     f96d <hvm_cr_write_postprocess+0xcd>
    f966:	add    DWORD PTR [rax+0x324],0x1
    f96d:	test   edx,edx
    f96f:	je     f8c5 <hvm_cr_write_postprocess+0x25>
    f975:	mov    r12d,0x1
    f97b:	nop    DWORD PTR [rax+rax*1+0x0]
    f980:	movsxd rax,DWORD PTR [rbx+0x283d0]
    f987:	mov    edx,0x11
    f98c:	mov    rsi,QWORD PTR [rbx+0x283e8]
    f993:	cmp    eax,0x11
    f996:	cmovg  rax,rdx
    f99a:	lea    rdx,[rax*8+0x0]
    f9a2:	sub    rdx,rax
    f9a5:	mov    rax,rdx
    f9a8:	shl    rax,0x3
    f9ac:	add    DWORD PTR [rbx+rax*1+0x11588],0x1
    f9b4:	test   rsi,rsi
    f9b7:	je     fa70 <hvm_cr_write_postprocess+0x1d0>
    f9bd:	lea    rdi,[rbx+rax*1+0x11588]
    f9c5:	call   56e0 <update_cycles.part.5>
    f9ca:	mov    rsi,QWORD PTR [rbx+0x283e8]
    f9d1:	lea    rdi,[rbx+0x11438]
    f9d8:	add    DWORD PTR [rbx+0x11438],0x1
    f9df:	test   rsi,rsi
    f9e2:	je     f9e9 <hvm_cr_write_postprocess+0x149>
    f9e4:	call   56e0 <update_cycles.part.5>
    f9e9:	mov    esi,0x5
    f9ee:	mov    rdi,rbx
    f9f1:	call   a2a0 <hvm_update_short_summary>
    f9f6:	test   r12d,r12d
    f9f9:	jne    f8c5 <hvm_cr_write_postprocess+0x25>
    f9ff:	mov    rsi,rbx
    fa02:	mov    rdi,rbp
    fa05:	call   f4f0 <cr3_switch>
    fa0a:	jmp    f8c5 <hvm_cr_write_postprocess+0x25>
    fa0f:	nop
    fa10:	xor    r12d,r12d
    fa13:	test   edx,edx
    fa15:	jne    f980 <hvm_cr_write_postprocess+0xe0>
    fa1b:	mov    rsi,rbx
    fa1e:	mov    rdi,rbp
    fa21:	call   f4f0 <cr3_switch>
    fa26:	jmp    f8c5 <hvm_cr_write_postprocess+0x25>
    fa2b:	nop    DWORD PTR [rax+rax*1+0x0]
    fa30:	lea    rdx,[rax*8+0x0]
    fa38:	mov    rsi,QWORD PTR [rdi+0x283e8]
    fa3f:	sub    rdx,rax
    fa42:	mov    rax,rdx
    fa45:	shl    rax,0x3
    fa49:	add    DWORD PTR [rdi+rax*1+0x11390],0x1
    fa51:	test   rsi,rsi
    fa54:	je     f8c5 <hvm_cr_write_postprocess+0x25>
    fa5a:	lea    rdi,[rdi+rax*1+0x11390]
    fa62:	call   56e0 <update_cycles.part.5>
    fa67:	jmp    f8c5 <hvm_cr_write_postprocess+0x25>
    fa6c:	nop    DWORD PTR [rax+0x0]
    fa70:	add    DWORD PTR [rbx+0x11438],0x1
    fa77:	jmp    f9e9 <hvm_cr_write_postprocess+0x149>
    fa7c:	nop    DWORD PTR [rax+0x0]
    fa80:	mov    ebp,DWORD PTR [rip+0x59952]        # 693d8 <done.6602>
    fa86:	test   ebp,ebp
    fa88:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fa8e:	mov    edx,0x6
    fa93:	lea    rsi,[rip+0xba6]        # 10640 <hvm_cr_write_summary>
    fa9a:	mov    rdi,rbx
    fa9d:	call   cb10 <__hvm_set_summary_handler>
    faa2:	test   eax,eax
    faa4:	jne    1007e <hvm_cr_write_postprocess+0x7de>
    faaa:	mov    DWORD PTR [rip+0x59924],0x1        # 693d8 <done.6602>
    fab4:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fab9:	nop    DWORD PTR [rax+0x0]
    fac0:	mov    r11d,DWORD PTR [rip+0x5990d]        # 693d4 <done.6605>
    fac7:	test   r11d,r11d
    faca:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fad0:	mov    edx,0x7
    fad5:	lea    rsi,[rip+0xb64]        # 10640 <hvm_cr_write_summary>
    fadc:	mov    rdi,rbx
    fadf:	call   cb10 <__hvm_set_summary_handler>
    fae4:	test   eax,eax
    fae6:	jne    fe92 <hvm_cr_write_postprocess+0x5f2>
    faec:	mov    DWORD PTR [rip+0x598de],0x1        # 693d4 <done.6605>
    faf6:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fafb:	nop    DWORD PTR [rax+rax*1+0x0]
    fb00:	mov    eax,DWORD PTR [rip+0x598de]        # 693e4 <done.6593>
    fb06:	test   eax,eax
    fb08:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fb0e:	mov    edx,0x3
    fb13:	lea    rsi,[rip+0xb26]        # 10640 <hvm_cr_write_summary>
    fb1a:	mov    rdi,rbx
    fb1d:	call   cb10 <__hvm_set_summary_handler>
    fb22:	test   eax,eax
    fb24:	jne    ffda <hvm_cr_write_postprocess+0x73a>
    fb2a:	mov    DWORD PTR [rip+0x598b0],0x1        # 693e4 <done.6593>
    fb34:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fb39:	nop    DWORD PTR [rax+0x0]
    fb40:	mov    edi,DWORD PTR [rip+0x5987e]        # 693c4 <done.6617>
    fb46:	test   edi,edi
    fb48:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fb4e:	mov    edx,0xb
    fb53:	lea    rsi,[rip+0xae6]        # 10640 <hvm_cr_write_summary>
    fb5a:	mov    rdi,rbx
    fb5d:	call   cb10 <__hvm_set_summary_handler>
    fb62:	test   eax,eax
    fb64:	jne    ff36 <hvm_cr_write_postprocess+0x696>
    fb6a:	mov    DWORD PTR [rip+0x59850],0x1        # 693c4 <done.6617>
    fb74:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fb79:	nop    DWORD PTR [rax+0x0]
    fb80:	mov    rdi,QWORD PTR [rip+0x1e8b9]        # 2e440 <stderr@@GLIBC_2.2.5>
    fb87:	xor    eax,eax
    fb89:	mov    esi,0x1
    fb8e:	lea    rdx,[rip+0xe85b]        # 1e3f0 <_IO_stdin_used+0x3f0>
    fb95:	call   5270 <__fprintf_chk@plt>
    fb9a:	cmp    DWORD PTR [rip+0x1b53f],0x2        # 2b0e0 <opt+0x40>
    fba1:	ja     f920 <hvm_cr_write_postprocess+0x80>
    fba7:	mov    edi,0x1
    fbac:	call   5250 <exit@plt>
    fbb1:	nop    DWORD PTR [rax+0x0]
    fbb8:	mov    r9d,DWORD PTR [rip+0x5980d]        # 693cc <done.6611>
    fbbf:	test   r9d,r9d
    fbc2:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fbc8:	mov    edx,0x9
    fbcd:	lea    rsi,[rip+0xa6c]        # 10640 <hvm_cr_write_summary>
    fbd4:	mov    rdi,rbx
    fbd7:	call   cb10 <__hvm_set_summary_handler>
    fbdc:	test   eax,eax
    fbde:	jne    fe69 <hvm_cr_write_postprocess+0x5c9>
    fbe4:	mov    DWORD PTR [rip+0x597de],0x1        # 693cc <done.6611>
    fbee:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fbf3:	nop    DWORD PTR [rax+rax*1+0x0]
    fbf8:	mov    r8d,DWORD PTR [rip+0x597c9]        # 693c8 <done.6614>
    fbff:	test   r8d,r8d
    fc02:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fc08:	mov    edx,0xa
    fc0d:	lea    rsi,[rip+0xa2c]        # 10640 <hvm_cr_write_summary>
    fc14:	mov    rdi,rbx
    fc17:	call   cb10 <__hvm_set_summary_handler>
    fc1c:	test   eax,eax
    fc1e:	jne    fee4 <hvm_cr_write_postprocess+0x644>
    fc24:	mov    DWORD PTR [rip+0x5979a],0x1        # 693c8 <done.6614>
    fc2e:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fc33:	nop    DWORD PTR [rax+rax*1+0x0]
    fc38:	mov    r12d,DWORD PTR [rip+0x5979d]        # 693dc <done.6599>
    fc3f:	test   r12d,r12d
    fc42:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fc48:	mov    edx,0x5
    fc4d:	lea    rsi,[rip+0x9ec]        # 10640 <hvm_cr_write_summary>
    fc54:	mov    rdi,rbx
    fc57:	call   cb10 <__hvm_set_summary_handler>
    fc5c:	test   eax,eax
    fc5e:	jne    1002c <hvm_cr_write_postprocess+0x78c>
    fc64:	mov    DWORD PTR [rip+0x5976e],0x1        # 693dc <done.6599>
    fc6e:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fc73:	nop    DWORD PTR [rax+rax*1+0x0]
    fc78:	mov    ecx,DWORD PTR [rip+0x5973e]        # 693bc <done.6623>
    fc7e:	test   ecx,ecx
    fc80:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fc86:	mov    edx,0xd
    fc8b:	lea    rsi,[rip+0x9ae]        # 10640 <hvm_cr_write_summary>
    fc92:	mov    rdi,rbx
    fc95:	call   cb10 <__hvm_set_summary_handler>
    fc9a:	test   eax,eax
    fc9c:	jne    ff88 <hvm_cr_write_postprocess+0x6e8>
    fca2:	mov    DWORD PTR [rip+0x59710],0x1        # 693bc <done.6623>
    fcac:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fcb1:	nop    DWORD PTR [rax+0x0]
    fcb8:	mov    eax,DWORD PTR [rip+0x5972e]        # 693ec <done.6587>
    fcbe:	test   eax,eax
    fcc0:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fcc6:	mov    edx,0x1
    fccb:	lea    rsi,[rip+0x96e]        # 10640 <hvm_cr_write_summary>
    fcd2:	mov    rdi,rbx
    fcd5:	call   cb10 <__hvm_set_summary_handler>
    fcda:	test   eax,eax
    fcdc:	jne    100a7 <hvm_cr_write_postprocess+0x807>
    fce2:	mov    DWORD PTR [rip+0x59700],0x1        # 693ec <done.6587>
    fcec:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fcf1:	nop    DWORD PTR [rax+0x0]
    fcf8:	mov    r10d,DWORD PTR [rip+0x596d1]        # 693d0 <done.6608>
    fcff:	test   r10d,r10d
    fd02:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fd08:	mov    edx,0x8
    fd0d:	lea    rsi,[rip+0x92c]        # 10640 <hvm_cr_write_summary>
    fd14:	mov    rdi,rbx
    fd17:	call   cb10 <__hvm_set_summary_handler>
    fd1c:	test   eax,eax
    fd1e:	jne    febb <hvm_cr_write_postprocess+0x61b>
    fd24:	mov    DWORD PTR [rip+0x596a2],0x1        # 693d0 <done.6608>
    fd2e:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fd33:	nop    DWORD PTR [rax+rax*1+0x0]
    fd38:	mov    eax,DWORD PTR [rip+0x596a2]        # 693e0 <done.6596>
    fd3e:	test   eax,eax
    fd40:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fd46:	mov    edx,0x4
    fd4b:	lea    rsi,[rip+0x8ee]        # 10640 <hvm_cr_write_summary>
    fd52:	mov    rdi,rbx
    fd55:	call   cb10 <__hvm_set_summary_handler>
    fd5a:	test   eax,eax
    fd5c:	jne    10003 <hvm_cr_write_postprocess+0x763>
    fd62:	mov    DWORD PTR [rip+0x59674],0x1        # 693e0 <done.6596>
    fd6c:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fd71:	nop    DWORD PTR [rax+0x0]
    fd78:	mov    esi,DWORD PTR [rip+0x59642]        # 693c0 <done.6620>
    fd7e:	test   esi,esi
    fd80:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fd86:	mov    edx,0xc
    fd8b:	lea    rsi,[rip+0x8ae]        # 10640 <hvm_cr_write_summary>
    fd92:	mov    rdi,rbx
    fd95:	call   cb10 <__hvm_set_summary_handler>
    fd9a:	test   eax,eax
    fd9c:	jne    ff5f <hvm_cr_write_postprocess+0x6bf>
    fda2:	mov    DWORD PTR [rip+0x59614],0x1        # 693c0 <done.6620>
    fdac:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fdb1:	nop    DWORD PTR [rax+0x0]
    fdb8:	mov    eax,DWORD PTR [rip+0x59632]        # 693f0 <done.6582>
    fdbe:	test   eax,eax
    fdc0:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fdc6:	xor    edx,edx
    fdc8:	lea    rsi,[rip+0x871]        # 10640 <hvm_cr_write_summary>
    fdcf:	mov    rdi,rbx
    fdd2:	call   cb10 <__hvm_set_summary_handler>
    fdd7:	test   eax,eax
    fdd9:	jne    10055 <hvm_cr_write_postprocess+0x7b5>
    fddf:	mov    DWORD PTR [rip+0x59607],0x1        # 693f0 <done.6582>
    fde9:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fdee:	xchg   ax,ax
    fdf0:	mov    eax,DWORD PTR [rip+0x595f2]        # 693e8 <done.6590>
    fdf6:	test   eax,eax
    fdf8:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fdfe:	mov    edx,0x2
    fe03:	lea    rsi,[rip+0x836]        # 10640 <hvm_cr_write_summary>
    fe0a:	mov    rdi,rbx
    fe0d:	call   cb10 <__hvm_set_summary_handler>
    fe12:	test   eax,eax
    fe14:	jne    ff0d <hvm_cr_write_postprocess+0x66d>
    fe1a:	mov    DWORD PTR [rip+0x595c4],0x1        # 693e8 <done.6590>
    fe24:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fe29:	nop    DWORD PTR [rax+0x0]
    fe30:	mov    eax,DWORD PTR [rip+0x5957e]        # 693b4 <done.6629>
    fe36:	test   eax,eax
    fe38:	jne    f920 <hvm_cr_write_postprocess+0x80>
    fe3e:	mov    edx,0xf
    fe43:	lea    rsi,[rip+0x7f6]        # 10640 <hvm_cr_write_summary>
    fe4a:	mov    rdi,rbx
    fe4d:	call   cb10 <__hvm_set_summary_handler>
    fe52:	test   eax,eax
    fe54:	jne    100d0 <hvm_cr_write_postprocess+0x830>
    fe5a:	mov    DWORD PTR [rip+0x59550],0x1        # 693b4 <done.6629>
    fe64:	jmp    f920 <hvm_cr_write_postprocess+0x80>
    fe69:	mov    rdi,QWORD PTR [rip+0x1e5d0]        # 2e440 <stderr@@GLIBC_2.2.5>
    fe70:	mov    r8d,eax
    fe73:	xor    eax,eax
    fe75:	lea    rcx,[rip+0x148c4]        # 24740 <__func__.6584>
    fe7c:	lea    rdx,[rip+0x10ced]        # 20b70 <_IO_stdin_used+0x2b70>
    fe83:	mov    esi,0x1
    fe88:	call   5270 <__fprintf_chk@plt>
    fe8d:	jmp    fbe4 <hvm_cr_write_postprocess+0x344>
    fe92:	mov    rdi,QWORD PTR [rip+0x1e5a7]        # 2e440 <stderr@@GLIBC_2.2.5>
    fe99:	mov    r8d,eax
    fe9c:	xor    eax,eax
    fe9e:	lea    rcx,[rip+0x1489b]        # 24740 <__func__.6584>
    fea5:	lea    rdx,[rip+0x10cc4]        # 20b70 <_IO_stdin_used+0x2b70>
    feac:	mov    esi,0x1
    feb1:	call   5270 <__fprintf_chk@plt>
    feb6:	jmp    faec <hvm_cr_write_postprocess+0x24c>
    febb:	mov    rdi,QWORD PTR [rip+0x1e57e]        # 2e440 <stderr@@GLIBC_2.2.5>
    fec2:	mov    r8d,eax
    fec5:	xor    eax,eax
    fec7:	lea    rcx,[rip+0x14872]        # 24740 <__func__.6584>
    fece:	lea    rdx,[rip+0x10c9b]        # 20b70 <_IO_stdin_used+0x2b70>
    fed5:	mov    esi,0x1
    feda:	call   5270 <__fprintf_chk@plt>
    fedf:	jmp    fd24 <hvm_cr_write_postprocess+0x484>
    fee4:	mov    rdi,QWORD PTR [rip+0x1e555]        # 2e440 <stderr@@GLIBC_2.2.5>
    feeb:	mov    r8d,eax
    feee:	xor    eax,eax
    fef0:	lea    rcx,[rip+0x14849]        # 24740 <__func__.6584>
    fef7:	lea    rdx,[rip+0x10c72]        # 20b70 <_IO_stdin_used+0x2b70>
    fefe:	mov    esi,0x1
    ff03:	call   5270 <__fprintf_chk@plt>
    ff08:	jmp    fc24 <hvm_cr_write_postprocess+0x384>
    ff0d:	mov    rdi,QWORD PTR [rip+0x1e52c]        # 2e440 <stderr@@GLIBC_2.2.5>
    ff14:	mov    r8d,eax
    ff17:	xor    eax,eax
    ff19:	lea    rcx,[rip+0x14820]        # 24740 <__func__.6584>
    ff20:	lea    rdx,[rip+0x10c49]        # 20b70 <_IO_stdin_used+0x2b70>
    ff27:	mov    esi,0x1
    ff2c:	call   5270 <__fprintf_chk@plt>
    ff31:	jmp    fe1a <hvm_cr_write_postprocess+0x57a>
    ff36:	mov    rdi,QWORD PTR [rip+0x1e503]        # 2e440 <stderr@@GLIBC_2.2.5>
    ff3d:	mov    r8d,eax
    ff40:	xor    eax,eax
    ff42:	lea    rcx,[rip+0x147f7]        # 24740 <__func__.6584>
    ff49:	lea    rdx,[rip+0x10c20]        # 20b70 <_IO_stdin_used+0x2b70>
    ff50:	mov    esi,0x1
    ff55:	call   5270 <__fprintf_chk@plt>
    ff5a:	jmp    fb6a <hvm_cr_write_postprocess+0x2ca>
    ff5f:	mov    rdi,QWORD PTR [rip+0x1e4da]        # 2e440 <stderr@@GLIBC_2.2.5>
    ff66:	mov    r8d,eax
    ff69:	xor    eax,eax
    ff6b:	lea    rcx,[rip+0x147ce]        # 24740 <__func__.6584>
    ff72:	lea    rdx,[rip+0x10bf7]        # 20b70 <_IO_stdin_used+0x2b70>
    ff79:	mov    esi,0x1
    ff7e:	call   5270 <__fprintf_chk@plt>
    ff83:	jmp    fda2 <hvm_cr_write_postprocess+0x502>
    ff88:	mov    rdi,QWORD PTR [rip+0x1e4b1]        # 2e440 <stderr@@GLIBC_2.2.5>
    ff8f:	mov    r8d,eax
    ff92:	xor    eax,eax
    ff94:	lea    rcx,[rip+0x147a5]        # 24740 <__func__.6584>
    ff9b:	lea    rdx,[rip+0x10bce]        # 20b70 <_IO_stdin_used+0x2b70>
    ffa2:	mov    esi,0x1
    ffa7:	call   5270 <__fprintf_chk@plt>
    ffac:	jmp    fca2 <hvm_cr_write_postprocess+0x402>
    ffb1:	mov    rdi,QWORD PTR [rip+0x1e488]        # 2e440 <stderr@@GLIBC_2.2.5>
    ffb8:	mov    r8d,eax
    ffbb:	xor    eax,eax
    ffbd:	lea    rcx,[rip+0x1477c]        # 24740 <__func__.6584>
    ffc4:	lea    rdx,[rip+0x10ba5]        # 20b70 <_IO_stdin_used+0x2b70>
    ffcb:	mov    esi,0x1
    ffd0:	call   5270 <__fprintf_chk@plt>
    ffd5:	jmp    f916 <hvm_cr_write_postprocess+0x76>
    ffda:	mov    rdi,QWORD PTR [rip+0x1e45f]        # 2e440 <stderr@@GLIBC_2.2.5>
    ffe1:	mov    r8d,eax
    ffe4:	xor    eax,eax
    ffe6:	lea    rcx,[rip+0x14753]        # 24740 <__func__.6584>
    ffed:	lea    rdx,[rip+0x10b7c]        # 20b70 <_IO_stdin_used+0x2b70>
    fff4:	mov    esi,0x1
    fff9:	call   5270 <__fprintf_chk@plt>
    fffe:	jmp    fb2a <hvm_cr_write_postprocess+0x28a>
   10003:	mov    rdi,QWORD PTR [rip+0x1e436]        # 2e440 <stderr@@GLIBC_2.2.5>
   1000a:	mov    r8d,eax
   1000d:	xor    eax,eax
   1000f:	lea    rcx,[rip+0x1472a]        # 24740 <__func__.6584>
   10016:	lea    rdx,[rip+0x10b53]        # 20b70 <_IO_stdin_used+0x2b70>
   1001d:	mov    esi,0x1
   10022:	call   5270 <__fprintf_chk@plt>
   10027:	jmp    fd62 <hvm_cr_write_postprocess+0x4c2>
   1002c:	mov    rdi,QWORD PTR [rip+0x1e40d]        # 2e440 <stderr@@GLIBC_2.2.5>
   10033:	mov    r8d,eax
   10036:	xor    eax,eax
   10038:	lea    rcx,[rip+0x14701]        # 24740 <__func__.6584>
   1003f:	lea    rdx,[rip+0x10b2a]        # 20b70 <_IO_stdin_used+0x2b70>
   10046:	mov    esi,0x1
   1004b:	call   5270 <__fprintf_chk@plt>
   10050:	jmp    fc64 <hvm_cr_write_postprocess+0x3c4>
   10055:	mov    rdi,QWORD PTR [rip+0x1e3e4]        # 2e440 <stderr@@GLIBC_2.2.5>
   1005c:	mov    r8d,eax
   1005f:	xor    eax,eax
   10061:	lea    rcx,[rip+0x146d8]        # 24740 <__func__.6584>
   10068:	lea    rdx,[rip+0x10b01]        # 20b70 <_IO_stdin_used+0x2b70>
   1006f:	mov    esi,0x1
   10074:	call   5270 <__fprintf_chk@plt>
   10079:	jmp    fddf <hvm_cr_write_postprocess+0x53f>
   1007e:	mov    rdi,QWORD PTR [rip+0x1e3bb]        # 2e440 <stderr@@GLIBC_2.2.5>
   10085:	mov    r8d,eax
   10088:	xor    eax,eax
   1008a:	lea    rcx,[rip+0x146af]        # 24740 <__func__.6584>
   10091:	lea    rdx,[rip+0x10ad8]        # 20b70 <_IO_stdin_used+0x2b70>
   10098:	mov    esi,0x1
   1009d:	call   5270 <__fprintf_chk@plt>
   100a2:	jmp    faaa <hvm_cr_write_postprocess+0x20a>
   100a7:	mov    rdi,QWORD PTR [rip+0x1e392]        # 2e440 <stderr@@GLIBC_2.2.5>
   100ae:	mov    r8d,eax
   100b1:	xor    eax,eax
   100b3:	lea    rcx,[rip+0x14686]        # 24740 <__func__.6584>
   100ba:	lea    rdx,[rip+0x10aaf]        # 20b70 <_IO_stdin_used+0x2b70>
   100c1:	mov    esi,0x1
   100c6:	call   5270 <__fprintf_chk@plt>
   100cb:	jmp    fce2 <hvm_cr_write_postprocess+0x442>
   100d0:	mov    rdi,QWORD PTR [rip+0x1e369]        # 2e440 <stderr@@GLIBC_2.2.5>
   100d7:	mov    r8d,eax
   100da:	xor    eax,eax
   100dc:	lea    rcx,[rip+0x1465d]        # 24740 <__func__.6584>
   100e3:	lea    rdx,[rip+0x10a86]        # 20b70 <_IO_stdin_used+0x2b70>
   100ea:	mov    esi,0x1
   100ef:	call   5270 <__fprintf_chk@plt>
   100f4:	jmp    fe5a <hvm_cr_write_postprocess+0x5ba>
   100f9:	nop    DWORD PTR [rax+0x0]

0000000000010100 <cr3_prealloc_unpin>:
   10100:	push   rbp
   10101:	push   rbx
   10102:	sub    rsp,0x8
   10106:	mov    rax,QWORD PTR [rdi+0x8]
   1010a:	mov    rbx,QWORD PTR [rax+0x9e0]
   10111:	test   rbx,rbx
   10114:	je     1012e <cr3_prealloc_unpin+0x2e>
   10116:	cmp    rsi,QWORD PTR [rbx+0x10]
   1011a:	jne    10126 <cr3_prealloc_unpin+0x26>
   1011c:	jmp    10138 <cr3_prealloc_unpin+0x38>
   1011e:	xchg   ax,ax
   10120:	cmp    QWORD PTR [rbx+0x10],rsi
   10124:	je     10138 <cr3_prealloc_unpin+0x38>
   10126:	mov    rbx,QWORD PTR [rbx]
   10129:	test   rbx,rbx
   1012c:	jne    10120 <cr3_prealloc_unpin+0x20>
   1012e:	add    rsp,0x8
   10132:	pop    rbx
   10133:	pop    rbp
   10134:	ret    
   10135:	nop    DWORD PTR [rax]
   10138:	mov    eax,DWORD PTR [rbx+0x318]
   1013e:	mov    rbp,rsi
   10141:	test   eax,eax
   10143:	jne    10188 <cr3_prealloc_unpin+0x88>
   10145:	mov    DWORD PTR [rbx+0x318],0x1
   1014f:	mov    eax,DWORD PTR [rbx+0x31c]
   10155:	lea    ecx,[rax+0x1]
   10158:	mov    DWORD PTR [rbx+0x31c],ecx
   1015e:	test   BYTE PTR [rip+0x1af3c],0x40        # 2b0a1 <opt+0x1>
   10165:	je     1012e <cr3_prealloc_unpin+0x2e>
   10167:	add    rsp,0x8
   1016b:	mov    rdx,rbp
   1016e:	lea    rsi,[rip+0xe28e]        # 1e403 <_IO_stdin_used+0x403>
   10175:	xor    eax,eax
   10177:	pop    rbx
   10178:	mov    edi,0x1
   1017d:	pop    rbp
   1017e:	jmp    5200 <__printf_chk@plt>
   10183:	nop    DWORD PTR [rax+rax*1+0x0]
   10188:	mov    rdi,QWORD PTR [rip+0x570c9]        # 67258 <warn>
   1018f:	mov    rcx,rbp
   10192:	mov    esi,0x1
   10197:	xor    eax,eax
   10199:	lea    rdx,[rip+0x10fa0]        # 21140 <_IO_stdin_used+0x3140>
   101a0:	call   5270 <__fprintf_chk@plt>
   101a5:	jmp    10145 <cr3_prealloc_unpin+0x45>
   101a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000101b0 <cr3_dump_list>:
   101b0:	test   rdi,rdi
   101b3:	je     101c0 <cr3_dump_list+0x10>
   101b5:	jmp    c380 <cr3_dump_list.part.15>
   101ba:	nop    WORD PTR [rax+rax*1+0x0]
   101c0:	ret    
   101c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   101cc:	nop    DWORD PTR [rax+0x0]

00000000000101d0 <hvm_cr3_write_summary>:
   101d0:	push   r15
   101d2:	xor    r15d,r15d
   101d5:	push   r14
   101d7:	push   r13
   101d9:	mov    r13,rdi
   101dc:	push   r12
   101de:	push   rbp
   101df:	push   rbx
   101e0:	lea    rbx,[rdi+0x11588]
   101e7:	sub    rsp,0x8
   101eb:	jmp    102f5 <hvm_cr3_write_summary+0x125>
   101f0:	mov    r14d,DWORD PTR [rbx+0x4]
   101f4:	cmp    DWORD PTR [rbx+0x8],r14d
   101f8:	cmovle r14d,DWORD PTR [rbx+0x8]
   101fd:	test   r14d,r14d
   10200:	je     10510 <hvm_cr3_write_summary+0x340>
   10206:	mov    rdi,QWORD PTR [rbx+0x18]
   1020a:	mov    esi,r14d
   1020d:	mov    edx,0x32
   10212:	call   57f0 <percentile.part.6>
   10217:	mov    rdi,QWORD PTR [rbx+0x18]
   1021b:	mov    esi,r14d
   1021e:	mov    edx,0x5
   10223:	mov    r12,rax
   10226:	call   57f0 <percentile.part.6>
   1022b:	mov    rdi,QWORD PTR [rbx+0x18]
   1022f:	mov    esi,r14d
   10232:	mov    edx,0x5f
   10237:	mov    rbp,rax
   1023a:	call   57f0 <percentile.part.6>
   1023f:	mov    r14,rax
   10242:	lea    rsi,[rip+0xe1d7]        # 1e420 <_IO_stdin_used+0x420>
   10249:	mov    edx,r15d
   1024c:	mov    edi,0x1
   10251:	xor    eax,eax
   10253:	call   5200 <__printf_chk@plt>
   10258:	mov    eax,DWORD PTR [rbx+0x4]
   1025b:	mov    rsi,QWORD PTR [rbx+0x10]
   1025f:	xor    ecx,ecx
   10261:	test   eax,eax
   10263:	je     10273 <hvm_cr3_write_summary+0xa3>
   10265:	movsxd rcx,eax
   10268:	xor    edx,edx
   1026a:	mov    rax,rsi
   1026d:	div    rcx
   10270:	mov    rcx,rax
   10273:	lea    rdx,[rsi+rsi*4]
   10277:	pxor   xmm1,xmm1
   1027b:	pxor   xmm0,xmm0
   1027f:	cvtsi2sd xmm0,QWORD PTR [rip+0x1ef48]        # 2f1d0 <P+0x30>
   10288:	lea    rdx,[rdx+rdx*4]
   1028c:	shl    rdx,0x2
   10290:	cvtsi2sd xmm1,rdx
   10295:	divsd  xmm1,xmm0
   10299:	test   rsi,rsi
   1029c:	js     104f0 <hvm_cr3_write_summary+0x320>
   102a2:	pxor   xmm0,xmm0
   102a6:	cvtsi2sd xmm0,rsi
   102ab:	pxor   xmm2,xmm2
   102af:	sub    rsp,0x8
   102b3:	mov    r8,rbp
   102b6:	mov    edi,0x1
   102bb:	cvtsi2sd xmm2,QWORD PTR [rip+0x1adec]        # 2b0b0 <opt+0x10>
   102c4:	push   r14
   102c6:	mov    edx,DWORD PTR [rbx]
   102c8:	mov    r9,r12
   102cb:	lea    rsi,[rip+0x10546]        # 20818 <_IO_stdin_used+0x2818>
   102d2:	mov    eax,0x2
   102d7:	divsd  xmm0,xmm2
   102db:	call   5200 <__printf_chk@plt>
   102e0:	pop    rdi
   102e1:	pop    r8
   102e3:	add    r15d,0x1
   102e7:	add    rbx,0x38
   102eb:	cmp    r15d,0x11
   102ef:	je     103b8 <hvm_cr3_write_summary+0x1e8>
   102f5:	mov    r10d,DWORD PTR [rbx]
   102f8:	test   r10d,r10d
   102fb:	je     102e3 <hvm_cr3_write_summary+0x113>
   102fd:	mov    r9d,DWORD PTR [rip+0x1add4]        # 2b0d8 <opt+0x38>
   10304:	test   r9d,r9d
   10307:	jne    101f0 <hvm_cr3_write_summary+0x20>
   1030d:	lea    rsi,[rip+0xe10c]        # 1e420 <_IO_stdin_used+0x420>
   10314:	mov    edx,r15d
   10317:	mov    edi,0x1
   1031c:	xor    eax,eax
   1031e:	call   5200 <__printf_chk@plt>
   10323:	mov    eax,DWORD PTR [rbx+0x4]
   10326:	mov    rsi,QWORD PTR [rbx+0x10]
   1032a:	xor    ecx,ecx
   1032c:	test   eax,eax
   1032e:	je     1033e <hvm_cr3_write_summary+0x16e>
   10330:	movsxd rcx,eax
   10333:	xor    edx,edx
   10335:	mov    rax,rsi
   10338:	div    rcx
   1033b:	mov    rcx,rax
   1033e:	lea    rdx,[rsi+rsi*4]
   10342:	pxor   xmm1,xmm1
   10346:	pxor   xmm0,xmm0
   1034a:	cvtsi2sd xmm0,QWORD PTR [rip+0x1ee7d]        # 2f1d0 <P+0x30>
   10353:	lea    rdx,[rdx+rdx*4]
   10357:	shl    rdx,0x2
   1035b:	cvtsi2sd xmm1,rdx
   10360:	divsd  xmm1,xmm0
   10364:	test   rsi,rsi
   10367:	js     10520 <hvm_cr3_write_summary+0x350>
   1036d:	pxor   xmm0,xmm0
   10371:	cvtsi2sd xmm0,rsi
   10376:	pxor   xmm2,xmm2
   1037a:	mov    edx,DWORD PTR [rbx]
   1037c:	mov    edi,0x1
   10381:	mov    eax,0x2
   10386:	lea    rsi,[rip+0x104c3]        # 20850 <_IO_stdin_used+0x2850>
   1038d:	add    r15d,0x1
   10391:	add    rbx,0x38
   10395:	cvtsi2sd xmm2,QWORD PTR [rip+0x1ad12]        # 2b0b0 <opt+0x10>
   1039e:	divsd  xmm0,xmm2
   103a2:	call   5200 <__printf_chk@plt>
   103a7:	cmp    r15d,0x11
   103ab:	jne    102f5 <hvm_cr3_write_summary+0x125>
   103b1:	nop    DWORD PTR [rax+0x0]
   103b8:	mov    esi,DWORD PTR [r13+0x11940]
   103bf:	test   esi,esi
   103c1:	je     104d8 <hvm_cr3_write_summary+0x308>
   103c7:	mov    ecx,DWORD PTR [rip+0x1ad0b]        # 2b0d8 <opt+0x38>
   103cd:	test   ecx,ecx
   103cf:	je     10551 <hvm_cr3_write_summary+0x381>
   103d5:	mov    r12d,DWORD PTR [r13+0x11944]
   103dc:	cmp    DWORD PTR [r13+0x11948],r12d
   103e3:	cmovle r12d,DWORD PTR [r13+0x11948]
   103eb:	test   r12d,r12d
   103ee:	je     10614 <hvm_cr3_write_summary+0x444>
   103f4:	mov    rdi,QWORD PTR [r13+0x11958]
   103fb:	mov    esi,r12d
   103fe:	mov    edx,0x32
   10403:	call   57f0 <percentile.part.6>
   10408:	mov    rdi,QWORD PTR [r13+0x11958]
   1040f:	mov    esi,r12d
   10412:	mov    edx,0x5
   10417:	mov    rbp,rax
   1041a:	call   57f0 <percentile.part.6>
   1041f:	mov    rdi,QWORD PTR [r13+0x11958]
   10426:	mov    esi,r12d
   10429:	mov    edx,0x5f
   1042e:	mov    rbx,rax
   10431:	call   57f0 <percentile.part.6>
   10436:	mov    r12,rax
   10439:	lea    rsi,[rip+0xdfed]        # 1e42d <_IO_stdin_used+0x42d>
   10440:	mov    edi,0x1
   10445:	xor    eax,eax
   10447:	call   5200 <__printf_chk@plt>
   1044c:	mov    eax,DWORD PTR [r13+0x11944]
   10453:	mov    rsi,QWORD PTR [r13+0x11950]
   1045a:	xor    ecx,ecx
   1045c:	test   eax,eax
   1045e:	jne    1053e <hvm_cr3_write_summary+0x36e>
   10464:	lea    rdx,[rsi+rsi*4]
   10468:	pxor   xmm1,xmm1
   1046c:	pxor   xmm0,xmm0
   10470:	cvtsi2sd xmm0,QWORD PTR [rip+0x1ed57]        # 2f1d0 <P+0x30>
   10479:	lea    rdx,[rdx+rdx*4]
   1047d:	shl    rdx,0x2
   10481:	cvtsi2sd xmm1,rdx
   10486:	divsd  xmm1,xmm0
   1048a:	test   rsi,rsi
   1048d:	js     105f6 <hvm_cr3_write_summary+0x426>
   10493:	pxor   xmm0,xmm0
   10497:	cvtsi2sd xmm0,rsi
   1049c:	pxor   xmm2,xmm2
   104a0:	sub    rsp,0x8
   104a4:	mov    r9,rbp
   104a7:	mov    r8,rbx
   104aa:	cvtsi2sd xmm2,QWORD PTR [rip+0x1abfd]        # 2b0b0 <opt+0x10>
   104b3:	push   r12
   104b5:	mov    edx,DWORD PTR [r13+0x11940]
   104bc:	lea    rsi,[rip+0x10355]        # 20818 <_IO_stdin_used+0x2818>
   104c3:	mov    edi,0x1
   104c8:	mov    eax,0x2
   104cd:	divsd  xmm0,xmm2
   104d1:	call   5200 <__printf_chk@plt>
   104d6:	pop    rax
   104d7:	pop    rdx
   104d8:	add    rsp,0x8
   104dc:	pop    rbx
   104dd:	pop    rbp
   104de:	pop    r12
   104e0:	pop    r13
   104e2:	pop    r14
   104e4:	pop    r15
   104e6:	ret    
   104e7:	nop    WORD PTR [rax+rax*1+0x0]
   104f0:	mov    rdx,rsi
   104f3:	and    esi,0x1
   104f6:	pxor   xmm0,xmm0
   104fa:	shr    rdx,1
   104fd:	or     rdx,rsi
   10500:	cvtsi2sd xmm0,rdx
   10505:	addsd  xmm0,xmm0
   10509:	jmp    102ab <hvm_cr3_write_summary+0xdb>
   1050e:	xchg   ax,ax
   10510:	xor    r14d,r14d
   10513:	xor    ebp,ebp
   10515:	xor    r12d,r12d
   10518:	jmp    10242 <hvm_cr3_write_summary+0x72>
   1051d:	nop    DWORD PTR [rax]
   10520:	mov    rax,rsi
   10523:	and    esi,0x1
   10526:	pxor   xmm0,xmm0
   1052a:	shr    rax,1
   1052d:	or     rax,rsi
   10530:	cvtsi2sd xmm0,rax
   10535:	addsd  xmm0,xmm0
   10539:	jmp    10376 <hvm_cr3_write_summary+0x1a6>
   1053e:	movsxd rcx,eax
   10541:	xor    edx,edx
   10543:	mov    rax,rsi
   10546:	div    rcx
   10549:	mov    rcx,rax
   1054c:	jmp    10464 <hvm_cr3_write_summary+0x294>
   10551:	lea    rsi,[rip+0xded5]        # 1e42d <_IO_stdin_used+0x42d>
   10558:	mov    edi,0x1
   1055d:	xor    eax,eax
   1055f:	call   5200 <__printf_chk@plt>
   10564:	mov    eax,DWORD PTR [r13+0x11944]
   1056b:	mov    rsi,QWORD PTR [r13+0x11950]
   10572:	xor    ecx,ecx
   10574:	test   eax,eax
   10576:	je     10586 <hvm_cr3_write_summary+0x3b6>
   10578:	movsxd rcx,eax
   1057b:	xor    edx,edx
   1057d:	mov    rax,rsi
   10580:	div    rcx
   10583:	mov    rcx,rax
   10586:	lea    rdx,[rsi+rsi*4]
   1058a:	pxor   xmm1,xmm1
   1058e:	pxor   xmm0,xmm0
   10592:	cvtsi2sd xmm0,QWORD PTR [rip+0x1ec35]        # 2f1d0 <P+0x30>
   1059b:	lea    rdx,[rdx+rdx*4]
   1059f:	shl    rdx,0x2
   105a3:	cvtsi2sd xmm1,rdx
   105a8:	divsd  xmm1,xmm0
   105ac:	test   rsi,rsi
   105af:	js     10620 <hvm_cr3_write_summary+0x450>
   105b1:	pxor   xmm0,xmm0
   105b5:	cvtsi2sd xmm0,rsi
   105ba:	pxor   xmm2,xmm2
   105be:	mov    edi,0x1
   105c3:	mov    eax,0x2
   105c8:	mov    edx,DWORD PTR [r13+0x11940]
   105cf:	cvtsi2sd xmm2,QWORD PTR [rip+0x1aad8]        # 2b0b0 <opt+0x10>
   105d8:	add    rsp,0x8
   105dc:	lea    rsi,[rip+0x1026d]        # 20850 <_IO_stdin_used+0x2850>
   105e3:	pop    rbx
   105e4:	pop    rbp
   105e5:	pop    r12
   105e7:	pop    r13
   105e9:	pop    r14
   105eb:	pop    r15
   105ed:	divsd  xmm0,xmm2
   105f1:	jmp    5200 <__printf_chk@plt>
   105f6:	mov    rdx,rsi
   105f9:	and    esi,0x1
   105fc:	pxor   xmm0,xmm0
   10600:	shr    rdx,1
   10603:	or     rdx,rsi
   10606:	cvtsi2sd xmm0,rdx
   1060b:	addsd  xmm0,xmm0
   1060f:	jmp    1049c <hvm_cr3_write_summary+0x2cc>
   10614:	xor    r12d,r12d
   10617:	xor    ebx,ebx
   10619:	xor    ebp,ebp
   1061b:	jmp    10439 <hvm_cr3_write_summary+0x269>
   10620:	mov    rdx,rsi
   10623:	and    esi,0x1
   10626:	pxor   xmm0,xmm0
   1062a:	shr    rdx,1
   1062d:	or     rdx,rsi
   10630:	cvtsi2sd xmm0,rdx
   10635:	addsd  xmm0,xmm0
   10639:	jmp    105ba <hvm_cr3_write_summary+0x3ea>
   1063e:	xchg   ax,ax

0000000000010640 <hvm_cr_write_summary>:
   10640:	push   r15
   10642:	lea    rax,[rsi*8+0x0]
   1064a:	push   r14
   1064c:	sub    rax,rsi
   1064f:	push   r13
   10651:	push   r12
   10653:	mov    r12,rdi
   10656:	push   rbp
   10657:	lea    rbp,[rdi+rax*8]
   1065b:	push   rbx
   1065c:	mov    rbx,rsi
   1065f:	sub    rsp,0x8
   10663:	mov    esi,DWORD PTR [rbp+0x11390]
   10669:	test   esi,esi
   1066b:	je     107b1 <hvm_cr_write_summary+0x171>
   10671:	mov    ecx,DWORD PTR [rip+0x1aa61]        # 2b0d8 <opt+0x38>
   10677:	test   ecx,ecx
   10679:	je     107e8 <hvm_cr_write_summary+0x1a8>
   1067f:	mov    r15d,DWORD PTR [rbp+0x11394]
   10686:	cmp    DWORD PTR [rbp+0x11398],r15d
   1068d:	cmovle r15d,DWORD PTR [rbp+0x11398]
   10695:	test   r15d,r15d
   10698:	je     108f0 <hvm_cr_write_summary+0x2b0>
   1069e:	mov    rdi,QWORD PTR [rbp+0x113a8]
   106a5:	mov    edx,0x32
   106aa:	mov    esi,r15d
   106ad:	call   57f0 <percentile.part.6>
   106b2:	mov    rdi,QWORD PTR [rbp+0x113a8]
   106b9:	mov    edx,0x5
   106be:	mov    esi,r15d
   106c1:	mov    r14,rax
   106c4:	call   57f0 <percentile.part.6>
   106c9:	mov    rdi,QWORD PTR [rbp+0x113a8]
   106d0:	mov    edx,0x5f
   106d5:	mov    esi,r15d
   106d8:	mov    r13,rax
   106db:	call   57f0 <percentile.part.6>
   106e0:	mov    rbp,rax
   106e3:	mov    rdx,rbx
   106e6:	lea    rsi,[rip+0xdd4d]        # 1e43a <_IO_stdin_used+0x43a>
   106ed:	mov    edi,0x1
   106f2:	xor    eax,eax
   106f4:	call   5200 <__printf_chk@plt>
   106f9:	lea    rax,[rbx*8+0x0]
   10701:	xor    ecx,ecx
   10703:	sub    rax,rbx
   10706:	lea    rdx,[r12+rax*8]
   1070a:	mov    eax,DWORD PTR [rdx+0x11394]
   10710:	mov    rsi,QWORD PTR [rdx+0x113a0]
   10717:	test   eax,eax
   10719:	jne    107d0 <hvm_cr_write_summary+0x190>
   1071f:	lea    rax,[rbx*8+0x0]
   10727:	pxor   xmm1,xmm1
   1072b:	pxor   xmm0,xmm0
   1072f:	cvtsi2sd xmm0,QWORD PTR [rip+0x1ea98]        # 2f1d0 <P+0x30>
   10738:	sub    rax,rbx
   1073b:	mov    rax,QWORD PTR [r12+rax*8+0x113a0]
   10743:	lea    rax,[rax+rax*4]
   10747:	lea    rdx,[rax+rax*4]
   1074b:	shl    rdx,0x2
   1074f:	cvtsi2sd xmm1,rdx
   10754:	divsd  xmm1,xmm0
   10758:	test   rsi,rsi
   1075b:	js     108c8 <hvm_cr_write_summary+0x288>
   10761:	pxor   xmm0,xmm0
   10765:	cvtsi2sd xmm0,rsi
   1076a:	pxor   xmm2,xmm2
   1076e:	sub    rsp,0x8
   10772:	mov    r9,r14
   10775:	mov    r8,r13
   10778:	cvtsi2sd xmm2,QWORD PTR [rip+0x1a92f]        # 2b0b0 <opt+0x10>
   10781:	lea    rdx,[rbx*8+0x0]
   10789:	push   rbp
   1078a:	mov    edi,0x1
   1078f:	sub    rdx,rbx
   10792:	lea    rsi,[rip+0x1007f]        # 20818 <_IO_stdin_used+0x2818>
   10799:	mov    eax,0x2
   1079e:	mov    edx,DWORD PTR [r12+rdx*8+0x11390]
   107a6:	divsd  xmm0,xmm2
   107aa:	call   5200 <__printf_chk@plt>
   107af:	pop    rax
   107b0:	pop    rdx
   107b1:	cmp    rbx,0x3
   107b5:	je     108ae <hvm_cr_write_summary+0x26e>
   107bb:	add    rsp,0x8
   107bf:	pop    rbx
   107c0:	pop    rbp
   107c1:	pop    r12
   107c3:	pop    r13
   107c5:	pop    r14
   107c7:	pop    r15
   107c9:	ret    
   107ca:	nop    WORD PTR [rax+rax*1+0x0]
   107d0:	movsxd rcx,eax
   107d3:	xor    edx,edx
   107d5:	mov    rax,rsi
   107d8:	div    rcx
   107db:	mov    rcx,rax
   107de:	jmp    1071f <hvm_cr_write_summary+0xdf>
   107e3:	nop    DWORD PTR [rax+rax*1+0x0]
   107e8:	lea    rsi,[rip+0xdc4b]        # 1e43a <_IO_stdin_used+0x43a>
   107ef:	mov    rdx,rbx
   107f2:	mov    edi,0x1
   107f7:	xor    eax,eax
   107f9:	call   5200 <__printf_chk@plt>
   107fe:	mov    eax,DWORD PTR [rbp+0x11394]
   10804:	mov    rsi,QWORD PTR [rbp+0x113a0]
   1080b:	xor    ecx,ecx
   1080d:	test   eax,eax
   1080f:	je     1081f <hvm_cr_write_summary+0x1df>
   10811:	movsxd rcx,eax
   10814:	xor    edx,edx
   10816:	mov    rax,rsi
   10819:	div    rcx
   1081c:	mov    rcx,rax
   1081f:	lea    rdx,[rbx*8+0x0]
   10827:	pxor   xmm1,xmm1
   1082b:	pxor   xmm0,xmm0
   1082f:	cvtsi2sd xmm0,QWORD PTR [rip+0x1e998]        # 2f1d0 <P+0x30>
   10838:	sub    rdx,rbx
   1083b:	mov    rdx,QWORD PTR [r12+rdx*8+0x113a0]
   10843:	lea    rdx,[rdx+rdx*4]
   10847:	lea    rdx,[rdx+rdx*4]
   1084b:	shl    rdx,0x2
   1084f:	cvtsi2sd xmm1,rdx
   10854:	divsd  xmm1,xmm0
   10858:	test   rsi,rsi
   1085b:	js     10900 <hvm_cr_write_summary+0x2c0>
   10861:	pxor   xmm0,xmm0
   10865:	cvtsi2sd xmm0,rsi
   1086a:	pxor   xmm2,xmm2
   1086e:	mov    edi,0x1
   10873:	mov    eax,0x2
   10878:	cvtsi2sd xmm2,QWORD PTR [rip+0x1a82f]        # 2b0b0 <opt+0x10>
   10881:	lea    rdx,[rbx*8+0x0]
   10889:	sub    rdx,rbx
   1088c:	lea    rsi,[rip+0xffbd]        # 20850 <_IO_stdin_used+0x2850>
   10893:	mov    edx,DWORD PTR [r12+rdx*8+0x11390]
   1089b:	divsd  xmm0,xmm2
   1089f:	call   5200 <__printf_chk@plt>
   108a4:	cmp    rbx,0x3
   108a8:	jne    107bb <hvm_cr_write_summary+0x17b>
   108ae:	add    rsp,0x8
   108b2:	mov    rdi,r12
   108b5:	pop    rbx
   108b6:	pop    rbp
   108b7:	pop    r12
   108b9:	pop    r13
   108bb:	pop    r14
   108bd:	pop    r15
   108bf:	jmp    101d0 <hvm_cr3_write_summary>
   108c4:	nop    DWORD PTR [rax+0x0]
   108c8:	mov    rax,rsi
   108cb:	and    esi,0x1
   108ce:	pxor   xmm0,xmm0
   108d2:	shr    rax,1
   108d5:	or     rax,rsi
   108d8:	cvtsi2sd xmm0,rax
   108dd:	addsd  xmm0,xmm0
   108e1:	jmp    1076a <hvm_cr_write_summary+0x12a>
   108e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   108f0:	xor    ebp,ebp
   108f2:	xor    r13d,r13d
   108f5:	xor    r14d,r14d
   108f8:	jmp    106e3 <hvm_cr_write_summary+0xa3>
   108fd:	nop    DWORD PTR [rax]
   10900:	mov    rax,rsi
   10903:	and    esi,0x1
   10906:	pxor   xmm0,xmm0
   1090a:	shr    rax,1
   1090d:	or     rax,rsi
   10910:	cvtsi2sd xmm0,rax
   10915:	addsd  xmm0,xmm0
   10919:	jmp    1086a <hvm_cr_write_summary+0x22a>
   1091e:	xchg   ax,ax

0000000000010920 <hvm_cr_write_process>:
   10920:	push   r13
   10922:	push   r12
   10924:	push   rbp
   10925:	mov    rbp,rdi
   10928:	push   rbx
   10929:	mov    rbx,rsi
   1092c:	sub    rsp,0x8
   10930:	mov    rax,QWORD PTR [rsi+0x28410]
   10937:	test   BYTE PTR [rdi+0x11],0x1
   1093b:	mov    r12d,DWORD PTR [rax]
   1093e:	mov    DWORD PTR [rsi+0x28348],r12d
   10945:	je     10a30 <hvm_cr_write_process+0x110>
   1094b:	mov    r13,QWORD PTR [rax+0x4]
   1094f:	mov    QWORD PTR [rsi+0x28350],r13
   10956:	mov    rax,QWORD PTR [rbx+0x283d8]
   1095d:	lea    rdx,[rip+0xffffffffffffcdcc]        # d730 <hvm_generic_postprocess>
   10964:	cmp    rax,rdx
   10967:	je     10a40 <hvm_cr_write_process+0x120>
   1096d:	test   rax,rax
   10970:	je     10a40 <hvm_cr_write_process+0x120>
   10976:	mov    rdi,QWORD PTR [rip+0x568db]        # 67258 <warn>
   1097d:	lea    rcx,[rip+0x13d9c]        # 24720 <__func__.6648>
   10984:	lea    rdx,[rip+0x107e5]        # 21170 <_IO_stdin_used+0x3170>
   1098b:	xor    eax,eax
   1098d:	mov    esi,0x1
   10992:	call   5270 <__fprintf_chk@plt>
   10997:	test   BYTE PTR [rip+0x1a703],0x40        # 2b0a1 <opt+0x1>
   1099e:	je     109f0 <hvm_cr_write_process+0xd0>
   109a0:	cmp    r12d,0x3
   109a4:	jne    10a00 <hvm_cr_write_process+0xe0>
   109a6:	mov    rax,QWORD PTR [rbx+0x10]
   109aa:	mov    r8,QWORD PTR [rax+0x60]
   109ae:	test   r8,r8
   109b1:	je     10a00 <hvm_cr_write_process+0xe0>
   109b3:	cmp    r8,r13
   109b6:	lea    rdx,[rbp+0x28]
   109ba:	mov    rcx,r13
   109bd:	mov    edi,0x1
   109c2:	lea    rax,[rip+0xe7eb]        # 1f1b4 <_IO_stdin_used+0x11b4>
   109c9:	lea    r9,[rip+0xda74]        # 1e444 <_IO_stdin_used+0x444>
   109d0:	cmovne r9,rax
   109d4:	add    rsp,0x8
   109d8:	lea    rsi,[rip+0x107c1]        # 211a0 <_IO_stdin_used+0x31a0>
   109df:	xor    eax,eax
   109e1:	pop    rbx
   109e2:	pop    rbp
   109e3:	pop    r12
   109e5:	pop    r13
   109e7:	jmp    5200 <__printf_chk@plt>
   109ec:	nop    DWORD PTR [rax+0x0]
   109f0:	add    rsp,0x8
   109f4:	pop    rbx
   109f5:	pop    rbp
   109f6:	pop    r12
   109f8:	pop    r13
   109fa:	ret    
   109fb:	nop    DWORD PTR [rax+rax*1+0x0]
   10a00:	add    rsp,0x8
   10a04:	lea    rdx,[rbp+0x28]
   10a08:	mov    r8,r13
   10a0b:	mov    ecx,r12d
   10a0e:	pop    rbx
   10a0f:	lea    rsi,[rip+0xda34]        # 1e44a <_IO_stdin_used+0x44a>
   10a16:	pop    rbp
   10a17:	mov    edi,0x1
   10a1c:	pop    r12
   10a1e:	xor    eax,eax
   10a20:	pop    r13
   10a22:	jmp    5200 <__printf_chk@plt>
   10a27:	nop    WORD PTR [rax+rax*1+0x0]
   10a30:	mov    r13d,DWORD PTR [rax+0x4]
   10a34:	mov    QWORD PTR [rsi+0x28350],r13
   10a3b:	jmp    10956 <hvm_cr_write_process+0x36>
   10a40:	lea    rax,[rip+0xffffffffffffee59]        # f8a0 <hvm_cr_write_postprocess>
   10a47:	mov    QWORD PTR [rbx+0x283d8],rax
   10a4e:	jmp    10997 <hvm_cr_write_process+0x77>
   10a53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   10a5e:	xchg   ax,ax

0000000000010a60 <hvm_vmcall_process>:
   10a60:	push   rbp
   10a61:	push   rbx
   10a62:	mov    rbx,rsi
   10a65:	sub    rsp,0x8
   10a69:	mov    rbp,QWORD PTR [rsi+0x28410]
   10a70:	mov    ecx,DWORD PTR [rbp+0x0]
   10a73:	test   BYTE PTR [rip+0x1a627],0x40        # 2b0a1 <opt+0x1>
   10a7a:	je     10aa8 <hvm_vmcall_process+0x48>
   10a7c:	lea    rdx,[rdi+0x28]
   10a80:	cmp    ecx,0x25
   10a83:	ja     10af0 <hvm_vmcall_process+0x90>
   10a85:	mov    esi,ecx
   10a87:	lea    rax,[rip+0x1ac52]        # 2b6e0 <hypercall_name>
   10a8e:	mov    edi,0x1
   10a93:	mov    r8,QWORD PTR [rax+rsi*8]
   10a97:	lea    rsi,[rip+0xd9c8]        # 1e466 <_IO_stdin_used+0x466>
   10a9e:	xor    eax,eax
   10aa0:	call   5200 <__printf_chk@plt>
   10aa5:	mov    ecx,DWORD PTR [rbp+0x0]
   10aa8:	mov    rax,QWORD PTR [rbx+0x283d8]
   10aaf:	mov    DWORD PTR [rbx+0x28348],ecx
   10ab5:	test   rax,rax
   10ab8:	je     10b10 <hvm_vmcall_process+0xb0>
   10aba:	lea    rdx,[rip+0xffffffffffffcc6f]        # d730 <hvm_generic_postprocess>
   10ac1:	cmp    rax,rdx
   10ac4:	je     10b10 <hvm_vmcall_process+0xb0>
   10ac6:	mov    rdi,QWORD PTR [rip+0x5678b]        # 67258 <warn>
   10acd:	add    rsp,0x8
   10ad1:	mov    esi,0x1
   10ad6:	xor    eax,eax
   10ad8:	pop    rbx
   10ad9:	lea    rcx,[rip+0x13b80]        # 24660 <__func__.6717>
   10ae0:	lea    rdx,[rip+0x10291]        # 20d78 <_IO_stdin_used+0x2d78>
   10ae7:	pop    rbp
   10ae8:	jmp    5270 <__fprintf_chk@plt>
   10aed:	nop    DWORD PTR [rax]
   10af0:	lea    rsi,[rip+0xd984]        # 1e47b <_IO_stdin_used+0x47b>
   10af7:	mov    edi,0x1
   10afc:	xor    eax,eax
   10afe:	call   5200 <__printf_chk@plt>
   10b03:	mov    ecx,DWORD PTR [rbp+0x0]
   10b06:	jmp    10aa8 <hvm_vmcall_process+0x48>
   10b08:	nop    DWORD PTR [rax+rax*1+0x0]
   10b10:	lea    rax,[rip+0xffffffffffffc899]        # d3b0 <hvm_vmcall_postprocess>
   10b17:	mov    QWORD PTR [rbx+0x283d8],rax
   10b1e:	add    rsp,0x8
   10b22:	pop    rbx
   10b23:	pop    rbp
   10b24:	ret    
   10b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000010b30 <hvm_intr_process>:
   10b30:	push   r12
   10b32:	test   BYTE PTR [rip+0x1a56a],0x10        # 2b0a3 <opt+0x3>
   10b39:	mov    r12,rdi
   10b3c:	push   rbp
   10b3d:	mov    rbp,rsi
   10b40:	push   rbx
   10b41:	mov    rax,QWORD PTR [rsi+0x28410]
   10b48:	mov    rcx,QWORD PTR [rsi+0x283f8]
   10b4f:	mov    ebx,DWORD PTR [rax]
   10b51:	mov    eax,0x0
   10b56:	mov    r8,rcx
   10b59:	cmovne rbx,rax
   10b5d:	shr    r8,0x30
   10b61:	je     10b70 <hvm_intr_process+0x40>
   10b63:	cmp    r8,0xffff
   10b6a:	jne    10c40 <hvm_intr_process+0x110>
   10b70:	mov    DWORD PTR [rbp+0x28348],ebx
   10b76:	test   BYTE PTR [rip+0x1a524],0x40        # 2b0a1 <opt+0x1>
   10b7d:	je     10bbc <hvm_intr_process+0x8c>
   10b7f:	lea    rdx,[r12+0x28]
   10b84:	cmp    ebx,0xff
   10b8a:	ja     10c70 <hvm_intr_process+0x140>
   10b90:	mov    eax,ebx
   10b92:	lea    rcx,[rip+0x1aea7]        # 2ba40 <hvm_extint_vector_name>
   10b99:	mov    rcx,QWORD PTR [rcx+rax*8]
   10b9d:	test   rcx,rcx
   10ba0:	je     10c70 <hvm_intr_process+0x140>
   10ba6:	mov    r8d,ebx
   10ba9:	lea    rsi,[rip+0xd8db]        # 1e48b <_IO_stdin_used+0x48b>
   10bb0:	mov    edi,0x1
   10bb5:	xor    eax,eax
   10bb7:	call   5200 <__printf_chk@plt>
   10bbc:	test   BYTE PTR [rip+0x1a4dd],0x1        # 2b0a0 <opt>
   10bc3:	je     10bd1 <hvm_intr_process+0xa1>
   10bc5:	cmp    DWORD PTR [rip+0x1a4ed],ebx        # 2b0b8 <opt+0x18>
   10bcb:	je     10cb0 <hvm_intr_process+0x180>
   10bd1:	test   BYTE PTR [rip+0x1a4c9],0x10        # 2b0a1 <opt+0x1>
   10bd8:	je     10be6 <hvm_intr_process+0xb6>
   10bda:	cmp    DWORD PTR [rip+0x1a4e4],ebx        # 2b0c4 <opt+0x24>
   10be0:	je     10d58 <hvm_intr_process+0x228>
   10be6:	test   BYTE PTR [rip+0x1a4b6],0x1        # 2b0a3 <opt+0x3>
   10bed:	je     10bfb <hvm_intr_process+0xcb>
   10bef:	cmp    DWORD PTR [rip+0x1a4db],ebx        # 2b0d0 <opt+0x30>
   10bf5:	je     10d98 <hvm_intr_process+0x268>
   10bfb:	mov    edx,DWORD PTR [rip+0x1a4a3]        # 2b0a4 <opt+0x4>
   10c01:	mov    QWORD PTR [rbp+0x283d8],0x0
   10c0c:	test   edx,edx
   10c0e:	je     10c37 <hvm_intr_process+0x107>
   10c10:	test   BYTE PTR [rip+0x1a48c],0x20        # 2b0a3 <opt+0x3>
   10c17:	je     10c27 <hvm_intr_process+0xf7>
   10c19:	mov    eax,DWORD PTR [rip+0x58785]        # 693a4 <done.6744>
   10c1f:	test   eax,eax
   10c21:	je     10dd0 <hvm_intr_process+0x2a0>
   10c27:	cmp    ebx,0xff
   10c2d:	ja     10ca0 <hvm_intr_process+0x170>
   10c2f:	add    DWORD PTR [rbp+rbx*4+0x10068],0x1
   10c37:	pop    rbx
   10c38:	pop    rbp
   10c39:	pop    r12
   10c3b:	ret    
   10c3c:	nop    DWORD PTR [rax+0x0]
   10c40:	mov    rdi,QWORD PTR [rip+0x1d7f9]        # 2e440 <stderr@@GLIBC_2.2.5>
   10c47:	lea    rdx,[rip+0x1057a]        # 211c8 <_IO_stdin_used+0x31c8>
   10c4e:	mov    esi,0x1
   10c53:	call   5270 <__fprintf_chk@plt>
   10c58:	cmp    DWORD PTR [rip+0x1a481],0x3        # 2b0e0 <opt+0x40>
   10c5f:	ja     10b70 <hvm_intr_process+0x40>
   10c65:	mov    edi,0x1
   10c6a:	call   5250 <exit@plt>
   10c6f:	nop
   10c70:	xor    eax,eax
   10c72:	mov    ecx,ebx
   10c74:	lea    rsi,[rip+0xd825]        # 1e4a0 <_IO_stdin_used+0x4a0>
   10c7b:	mov    edi,0x1
   10c80:	call   5200 <__printf_chk@plt>
   10c85:	test   BYTE PTR [rip+0x1a414],0x1        # 2b0a0 <opt>
   10c8c:	je     10bd1 <hvm_intr_process+0xa1>
   10c92:	jmp    10bc5 <hvm_intr_process+0x95>
   10c97:	nop    WORD PTR [rax+rax*1+0x0]
   10ca0:	pop    rbx
   10ca1:	add    DWORD PTR [rbp+0x10468],0x1
   10ca8:	pop    rbp
   10ca9:	pop    r12
   10cab:	ret    
   10cac:	nop    DWORD PTR [rax+0x0]
   10cb0:	mov    rax,QWORD PTR [rbp+0x283e0]
   10cb7:	mov    rdx,QWORD PTR [rip+0x1e502]        # 2f1c0 <P+0x20>
   10cbe:	movabs rcx,0xffffffffffff
   10cc8:	and    rcx,QWORD PTR [rbp+0x283f8]
   10ccf:	cmp    rax,rdx
   10cd2:	jbe    10df8 <hvm_intr_process+0x2c8>
   10cd8:	movabs rsi,0x44b82fa09b5a53
   10ce2:	sub    rax,rdx
   10ce5:	xor    edx,edx
   10ce7:	mov    r9,rax
   10cea:	shl    r9,0xa
   10cee:	mov    rax,r9
   10cf1:	div    QWORD PTR [rip+0x1a3b0]        # 2b0a8 <opt+0x8>
   10cf8:	mov    rdx,rax
   10cfb:	mov    r9,rax
   10cfe:	shr    rdx,0x9
   10d02:	mov    rax,rdx
   10d05:	mul    rsi
   10d08:	shr    rdx,0xb
   10d0c:	mov    r8d,edx
   10d0f:	imul   edx,edx,0x3b9aca00
   10d15:	sub    r9d,edx
   10d18:	mov    rax,QWORD PTR [rbp+0x10]
   10d1c:	sub    rsp,0x8
   10d20:	mov    edi,0x1
   10d25:	lea    rsi,[rip+0xd785]        # 1e4b1 <_IO_stdin_used+0x4b1>
   10d2c:	mov    rdx,QWORD PTR [rax+0x8]
   10d30:	mov    edx,DWORD PTR [rdx+0x8]
   10d33:	push   rcx
   10d34:	mov    ecx,DWORD PTR [rax]
   10d36:	xor    eax,eax
   10d38:	call   5200 <__printf_chk@plt>
   10d3d:	pop    rcx
   10d3e:	pop    rsi
   10d3f:	test   BYTE PTR [rip+0x1a35b],0x10        # 2b0a1 <opt+0x1>
   10d46:	je     10be6 <hvm_intr_process+0xb6>
   10d4c:	jmp    10bda <hvm_intr_process+0xaa>
   10d51:	nop    DWORD PTR [rax+0x0]
   10d58:	movabs rax,0xffffffffffff
   10d62:	xor    edx,edx
   10d64:	and    rax,QWORD PTR [rbp+0x283f8]
   10d6b:	div    QWORD PTR [rip+0x1a356]        # 2b0c8 <opt+0x28>
   10d72:	mov    rdx,QWORD PTR [rbp+0x10470]
   10d79:	mov    eax,eax
   10d7b:	add    DWORD PTR [rdx+rax*4],0x1
   10d7f:	test   BYTE PTR [rip+0x1a31d],0x1        # 2b0a3 <opt+0x3>
   10d86:	je     10bfb <hvm_intr_process+0xcb>
   10d8c:	jmp    10bef <hvm_intr_process+0xbf>
   10d91:	nop    DWORD PTR [rax+0x0]
   10d98:	mov    rax,QWORD PTR [rbp+0x10]
   10d9c:	xor    r8d,r8d
   10d9f:	xor    ecx,ecx
   10da1:	xor    edx,edx
   10da3:	movabs rsi,0xffffffffffff
   10dad:	and    rsi,QWORD PTR [rbp+0x283f8]
   10db4:	mov    rdi,QWORD PTR [rax+0x8]
   10db8:	add    rdi,0x9f0
   10dbf:	call   9cb0 <update_eip>
   10dc4:	jmp    10bfb <hvm_intr_process+0xcb>
   10dc9:	nop    DWORD PTR [rax+0x0]
   10dd0:	xor    edx,edx
   10dd2:	lea    rsi,[rip+0xffffffffffff4827]        # 5600 <hvm_intr_summary>
   10dd9:	mov    rdi,rbp
   10ddc:	call   cb10 <__hvm_set_summary_handler>
   10de1:	test   eax,eax
   10de3:	jne    10e08 <hvm_intr_process+0x2d8>
   10de5:	mov    DWORD PTR [rip+0x585b5],0x1        # 693a4 <done.6744>
   10def:	jmp    10c27 <hvm_intr_process+0xf7>
   10df4:	nop    DWORD PTR [rax+0x0]
   10df8:	xor    r9d,r9d
   10dfb:	xor    r8d,r8d
   10dfe:	jmp    10d18 <hvm_intr_process+0x1e8>
   10e03:	nop    DWORD PTR [rax+rax*1+0x0]
   10e08:	mov    rdi,QWORD PTR [rip+0x1d631]        # 2e440 <stderr@@GLIBC_2.2.5>
   10e0f:	mov    r8d,eax
   10e12:	xor    eax,eax
   10e14:	lea    rcx,[rip+0x13825]        # 24640 <__func__.6746>
   10e1b:	lea    rdx,[rip+0xfd4e]        # 20b70 <_IO_stdin_used+0x2b70>
   10e22:	mov    esi,0x1
   10e27:	call   5270 <__fprintf_chk@plt>
   10e2c:	jmp    10de5 <hvm_intr_process+0x2b5>
   10e2e:	xchg   ax,ax

0000000000010e30 <hvm_intr_window_process>:
   10e30:	push   rbx
   10e31:	sub    rsp,0x40
   10e35:	mov    rbx,QWORD PTR [rsi+0x28410]
   10e3c:	mov    rax,QWORD PTR fs:0x28
   10e45:	mov    QWORD PTR [rsp+0x38],rax
   10e4a:	xor    eax,eax
   10e4c:	lea    rax,[rip+0xd673]        # 1e4c6 <_IO_stdin_used+0x4c6>
   10e53:	mov    QWORD PTR [rsp],rax
   10e57:	lea    rax,[rip+0xed71]        # 1fbcf <_IO_stdin_used+0x1bcf>
   10e5e:	mov    QWORD PTR [rsp+0x8],rax
   10e63:	lea    rax,[rip+0xed63]        # 1fbcd <_IO_stdin_used+0x1bcd>
   10e6a:	mov    QWORD PTR [rsp+0x10],rax
   10e6f:	lea    rax,[rip+0xe6d3]        # 1f549 <_IO_stdin_used+0x1549>
   10e76:	mov    QWORD PTR [rsp+0x18],rax
   10e7b:	lea    rax,[rip+0xd649]        # 1e4cb <_IO_stdin_used+0x4cb>
   10e82:	mov    QWORD PTR [rsp+0x20],rax
   10e87:	lea    rax,[rip+0xd641]        # 1e4cf <_IO_stdin_used+0x4cf>
   10e8e:	mov    QWORD PTR [rsp+0x28],rax
   10e93:	test   BYTE PTR [rip+0x1a207],0x40        # 2b0a1 <opt+0x1>
   10e9a:	je     10f08 <hvm_intr_window_process+0xd8>
   10e9c:	mov    r8d,DWORD PTR [rbx+0x4]
   10ea0:	lea    r9,[rip+0xd882]        # 1e729 <_IO_stdin_used+0x729>
   10ea7:	cmp    r8d,0x5
   10eab:	jbe    10ef8 <hvm_intr_window_process+0xc8>
   10ead:	mov    ecx,DWORD PTR [rbx]
   10eaf:	lea    rdx,[rdi+0x28]
   10eb3:	lea    rsi,[rip+0x10336]        # 211f0 <_IO_stdin_used+0x31f0>
   10eba:	xor    eax,eax
   10ebc:	mov    edi,0x1
   10ec1:	call   5200 <__printf_chk@plt>
   10ec6:	mov    edx,DWORD PTR [rbx+0x8]
   10ec9:	test   edx,edx
   10ecb:	jle    10f20 <hvm_intr_window_process+0xf0>
   10ecd:	mov    rax,QWORD PTR [rsp+0x38]
   10ed2:	xor    rax,QWORD PTR fs:0x28
   10edb:	jne    10f41 <hvm_intr_window_process+0x111>
   10edd:	add    rsp,0x40
   10ee1:	lea    rsi,[rip+0xd5ee]        # 1e4d6 <_IO_stdin_used+0x4d6>
   10ee8:	mov    edi,0x1
   10eed:	xor    eax,eax
   10eef:	pop    rbx
   10ef0:	jmp    5200 <__printf_chk@plt>
   10ef5:	nop    DWORD PTR [rax]
   10ef8:	mov    eax,r8d
   10efb:	mov    r9,QWORD PTR [rsp+rax*8]
   10eff:	jmp    10ead <hvm_intr_window_process+0x7d>
   10f01:	nop    DWORD PTR [rax+0x0]
   10f08:	mov    rax,QWORD PTR [rsp+0x38]
   10f0d:	xor    rax,QWORD PTR fs:0x28
   10f16:	jne    10f41 <hvm_intr_window_process+0x111>
   10f18:	add    rsp,0x40
   10f1c:	pop    rbx
   10f1d:	ret    
   10f1e:	xchg   ax,ax
   10f20:	mov    rax,QWORD PTR [rsp+0x38]
   10f25:	xor    rax,QWORD PTR fs:0x28
   10f2e:	jne    10f41 <hvm_intr_window_process+0x111>
   10f30:	add    rsp,0x40
   10f34:	lea    rdi,[rip+0xd5a4]        # 1e4df <_IO_stdin_used+0x4df>
   10f3b:	pop    rbx
   10f3c:	jmp    5090 <puts@plt>
   10f41:	call   50d0 <__stack_chk_fail@plt>
   10f46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000010f50 <hvm_rdtsc_process>:
   10f50:	push   r12
   10f52:	movzx  eax,BYTE PTR [rip+0x1a148]        # 2b0a1 <opt+0x1>
   10f59:	mov    r12,rdi
   10f5c:	push   rbp
   10f5d:	push   rbx
   10f5e:	mov    rbp,QWORD PTR [rsi+0x28410]
   10f65:	mov    rbx,rsi
   10f68:	mov    rcx,QWORD PTR [rbp+0x0]
   10f6c:	test   al,0x40
   10f6e:	je     10fae <hvm_rdtsc_process+0x5e>
   10f70:	cmp    QWORD PTR [rsi+0x28428],rcx
   10f77:	lea    rax,[rip+0xdb47]        # 1eac5 <_IO_stdin_used+0xac5>
   10f7e:	lea    rdx,[rdi+0x28]
   10f82:	mov    r8,rcx
   10f85:	lea    r9,[rip+0xd55a]        # 1e4e6 <_IO_stdin_used+0x4e6>
   10f8c:	lea    rsi,[rip+0xd55d]        # 1e4f0 <_IO_stdin_used+0x4f0>
   10f93:	mov    edi,0x1
   10f98:	cmovbe r9,rax
   10f9c:	xor    eax,eax
   10f9e:	call   5200 <__printf_chk@plt>
   10fa3:	movzx  eax,BYTE PTR [rip+0x1a0f7]        # 2b0a1 <opt+0x1>
   10faa:	mov    rcx,QWORD PTR [rbp+0x0]
   10fae:	test   al,0x4
   10fb0:	je     10ff4 <hvm_rdtsc_process+0xa4>
   10fb2:	mov    rax,QWORD PTR [r12+0x8]
   10fb7:	mov    rdx,QWORD PTR [rip+0x1e202]        # 2f1c0 <P+0x20>
   10fbe:	cmp    rax,rdx
   10fc1:	ja     11000 <hvm_rdtsc_process+0xb0>
   10fc3:	xor    r9d,r9d
   10fc6:	xor    r8d,r8d
   10fc9:	mov    rax,QWORD PTR [rbx+0x10]
   10fcd:	sub    rsp,0x8
   10fd1:	mov    edi,0x1
   10fd6:	lea    rsi,[rip+0xd52b]        # 1e508 <_IO_stdin_used+0x508>
   10fdd:	mov    rdx,QWORD PTR [rax+0x8]
   10fe1:	mov    edx,DWORD PTR [rdx+0x8]
   10fe4:	push   rcx
   10fe5:	mov    ecx,DWORD PTR [rax]
   10fe7:	xor    eax,eax
   10fe9:	call   5200 <__printf_chk@plt>
   10fee:	mov    rcx,QWORD PTR [rbp+0x0]
   10ff2:	pop    rax
   10ff3:	pop    rdx
   10ff4:	mov    QWORD PTR [rbx+0x28428],rcx
   10ffb:	pop    rbx
   10ffc:	pop    rbp
   10ffd:	pop    r12
   10fff:	ret    
   11000:	movabs rsi,0x44b82fa09b5a53
   1100a:	sub    rax,rdx
   1100d:	xor    edx,edx
   1100f:	mov    r9,rax
   11012:	shl    r9,0xa
   11016:	mov    rax,r9
   11019:	div    QWORD PTR [rip+0x1a088]        # 2b0a8 <opt+0x8>
   11020:	mov    rdx,rax
   11023:	mov    r9,rax
   11026:	shr    rdx,0x9
   1102a:	mov    rax,rdx
   1102d:	mul    rsi
   11030:	shr    rdx,0xb
   11034:	mov    r8d,edx
   11037:	imul   edx,edx,0x3b9aca00
   1103d:	sub    r9d,edx
   11040:	jmp    10fc9 <hvm_rdtsc_process+0x79>
   11042:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1104d:	nop    DWORD PTR [rax]

0000000000011050 <hvm_generic_postprocess_init>:
   11050:	push   rbp
   11051:	lea    rax,[rip+0xffffffffffffc6d8]        # d730 <hvm_generic_postprocess>
   11058:	mov    rbp,rdi
   1105b:	push   rbx
   1105c:	mov    rbx,rsi
   1105f:	sub    rsp,0x8
   11063:	cmp    QWORD PTR [rsi+0x283d8],rax
   1106a:	je     1108d <hvm_generic_postprocess_init+0x3d>
   1106c:	mov    rdi,QWORD PTR [rip+0x561e5]        # 67258 <warn>
   11073:	lea    rcx,[rip+0x13586]        # 24600 <__func__.6809>
   1107a:	lea    rdx,[rip+0x10197]        # 21218 <_IO_stdin_used+0x3218>
   11081:	xor    eax,eax
   11083:	mov    esi,0x1
   11088:	call   5270 <__fprintf_chk@plt>
   1108d:	mov    eax,DWORD PTR [rbp+0x10]
   11090:	mov    DWORD PTR [rbx+0x28348],eax
   11096:	mov    rax,QWORD PTR [rbx+0x28410]
   1109d:	movdqu xmm0,XMMWORD PTR [rax]
   110a1:	movups XMMWORD PTR [rbx+0x2834c],xmm0
   110a8:	add    rsp,0x8
   110ac:	pop    rbx
   110ad:	pop    rbp
   110ae:	ret    
   110af:	nop

00000000000110b0 <hvm_npf_process>:
   110b0:	push   rbp
   110b1:	mov    rbp,rsi
   110b4:	push   rbx
   110b5:	mov    rbx,rdi
   110b8:	sub    rsp,0x8
   110bc:	test   BYTE PTR [rip+0x19fde],0x40        # 2b0a1 <opt+0x1>
   110c3:	jne    110e0 <hvm_npf_process+0x30>
   110c5:	mov    eax,DWORD PTR [rip+0x19fd9]        # 2b0a4 <opt+0x4>
   110cb:	test   eax,eax
   110cd:	jne    1111d <hvm_npf_process+0x6d>
   110cf:	add    rsp,0x8
   110d3:	pop    rbx
   110d4:	pop    rbp
   110d5:	ret    
   110d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   110e0:	mov    rax,QWORD PTR [rsi+0x28410]
   110e7:	sub    rsp,0x8
   110eb:	lea    rdx,[rdi+0x28]
   110ef:	lea    rsi,[rip+0x1014a]        # 21240 <_IO_stdin_used+0x3240>
   110f6:	mov    edi,0x1
   110fb:	mov    ecx,DWORD PTR [rax+0x14]
   110fe:	mov    r9,QWORD PTR [rax+0x8]
   11102:	mov    r8d,DWORD PTR [rax+0x10]
   11106:	push   rcx
   11107:	mov    rcx,QWORD PTR [rax]
   1110a:	xor    eax,eax
   1110c:	call   5200 <__printf_chk@plt>
   11111:	mov    eax,DWORD PTR [rip+0x19f8d]        # 2b0a4 <opt+0x4>
   11117:	pop    rdx
   11118:	pop    rcx
   11119:	test   eax,eax
   1111b:	je     110cf <hvm_npf_process+0x1f>
   1111d:	add    rsp,0x8
   11121:	mov    rsi,rbp
   11124:	mov    rdi,rbx
   11127:	pop    rbx
   11128:	pop    rbp
   11129:	jmp    11050 <hvm_generic_postprocess_init>
   1112e:	xchg   ax,ax

0000000000011130 <hvm_generic_dump>:
   11130:	push   r13
   11132:	push   r12
   11134:	mov    r12,rsi
   11137:	push   rbp
   11138:	mov    rbp,rdi
   1113b:	push   rbx
   1113c:	sub    rsp,0x118
   11143:	mov    rax,QWORD PTR fs:0x28
   1114c:	mov    QWORD PTR [rsp+0x108],rax
   11154:	xor    eax,eax
   11156:	mov    eax,DWORD PTR [rdi+0x10]
   11159:	lea    r9d,[rax-0x82000]
   11160:	mov    r13d,r9d
   11163:	and    r13d,0x100
   1116a:	je     11179 <hvm_generic_dump+0x49>
   1116c:	and    r9d,0xfffffeff
   11173:	mov    r13d,0x1
   11179:	cmp    r9d,0x25
   1117d:	jg     11220 <hvm_generic_dump+0xf0>
   11183:	movsxd r9,r9d
   11186:	lea    rax,[rip+0x1a6d3]        # 2b860 <hvm_event_handler_name>
   1118d:	mov    r8,QWORD PTR [rax+r9*8]
   11191:	test   r13d,r13d
   11194:	lea    rcx,[rbp+0x28]
   11198:	mov    rdx,r12
   1119b:	mov    edi,0x1
   111a0:	lea    rax,[rip+0xd91e]        # 1eac5 <_IO_stdin_used+0xac5>
   111a7:	lea    r9,[rip+0xd36e]        # 1e51c <_IO_stdin_used+0x51c>
   111ae:	cmove  r9,rax
   111b2:	lea    rsi,[rip+0xd375]        # 1e52e <_IO_stdin_used+0x52e>
   111b9:	xor    eax,eax
   111bb:	call   5200 <__printf_chk@plt>
   111c0:	mov    eax,DWORD PTR [rbp+0x14]
   111c3:	test   eax,eax
   111c5:	jle    111ef <hvm_generic_dump+0xbf>
   111c7:	xor    ebx,ebx
   111c9:	lea    r12,[rip+0xd36a]        # 1e53a <_IO_stdin_used+0x53a>
   111d0:	mov    rax,QWORD PTR [rbp+0x20]
   111d4:	mov    rsi,r12
   111d7:	mov    edi,0x1
   111dc:	mov    edx,DWORD PTR [rax+rbx*4]
   111df:	xor    eax,eax
   111e1:	add    rbx,0x1
   111e5:	call   5200 <__printf_chk@plt>
   111ea:	cmp    DWORD PTR [rbp+0x14],ebx
   111ed:	jg     111d0 <hvm_generic_dump+0xa0>
   111ef:	lea    rdi,[rip+0xd348]        # 1e53e <_IO_stdin_used+0x53e>
   111f6:	call   5090 <puts@plt>
   111fb:	mov    rax,QWORD PTR [rsp+0x108]
   11203:	xor    rax,QWORD PTR fs:0x28
   1120c:	jne    1124b <hvm_generic_dump+0x11b>
   1120e:	add    rsp,0x118
   11215:	pop    rbx
   11216:	pop    rbp
   11217:	pop    r12
   11219:	pop    r13
   1121b:	ret    
   1121c:	nop    DWORD PTR [rax+0x0]
   11220:	mov    rbx,rsp
   11223:	mov    ecx,0x100
   11228:	mov    edx,0x1
   1122d:	xor    eax,eax
   1122f:	lea    r8,[rip+0xd2e9]        # 1e51f <_IO_stdin_used+0x51f>
   11236:	mov    esi,0x100
   1123b:	mov    rdi,rbx
   1123e:	call   5030 <__snprintf_chk@plt>
   11243:	mov    r8,rbx
   11246:	jmp    11191 <hvm_generic_dump+0x61>
   1124b:	call   50d0 <__stack_chk_fail@plt>

0000000000011250 <domain_runstate>:
   11250:	push   r14
   11252:	push   r13
   11254:	push   r12
   11256:	push   rbp
   11257:	push   rbx
   11258:	sub    rsp,0x30
   1125c:	mov    ecx,DWORD PTR [rdi+0x8]
   1125f:	mov    rax,QWORD PTR fs:0x28
   11268:	mov    QWORD PTR [rsp+0x28],rax
   1126d:	xor    eax,eax
   1126f:	cmp    ecx,0x8000
   11275:	je     11352 <domain_runstate+0x102>
   1127b:	movsxd rdx,DWORD PTR [rdi+0x810]
   11282:	mov    rbp,rdi
   11285:	mov    QWORD PTR [rsp],0x0
   1128d:	mov    QWORD PTR [rsp+0x8],0x0
   11296:	mov    QWORD PTR [rsp+0x10],0x0
   1129f:	mov    DWORD PTR [rsp+0x18],0x0
   112a7:	test   edx,edx
   112a9:	js     11360 <domain_runstate+0x110>
   112af:	lea    rax,[rdi+0x10]
   112b3:	lea    rsi,[rdi+rdx*8+0x18]
   112b8:	xor    ebx,ebx
   112ba:	nop    WORD PTR [rax+rax*1+0x0]
   112c0:	mov    rdx,QWORD PTR [rax]
   112c3:	test   rdx,rdx
   112c6:	je     112d8 <domain_runstate+0x88>
   112c8:	movsxd rdx,DWORD PTR [rdx+0x18]
   112cc:	cmp    edx,0x6
   112cf:	je     112d8 <domain_runstate+0x88>
   112d1:	add    DWORD PTR [rsp+rdx*4],0x1
   112d5:	add    ebx,0x1
   112d8:	add    rax,0x8
   112dc:	cmp    rax,rsi
   112df:	jne    112c0 <domain_runstate+0x70>
   112e1:	cmp    DWORD PTR [rsp+0x10],ebx
   112e5:	je     11360 <domain_runstate+0x110>
   112e7:	mov    esi,DWORD PTR [rsp]
   112ea:	mov    edx,DWORD PTR [rsp+0x4]
   112ee:	test   esi,esi
   112f0:	je     11328 <domain_runstate+0xd8>
   112f2:	mov    eax,0x4
   112f7:	test   edx,edx
   112f9:	je     11370 <domain_runstate+0x120>
   112fb:	nop    DWORD PTR [rax+rax*1+0x0]
   11300:	mov    rdi,QWORD PTR [rsp+0x28]
   11305:	xor    rdi,QWORD PTR fs:0x28
   1130e:	jne    11470 <domain_runstate+0x220>
   11314:	add    rsp,0x30
   11318:	pop    rbx
   11319:	pop    rbp
   1131a:	pop    r12
   1131c:	pop    r13
   1131e:	pop    r14
   11320:	ret    
   11321:	nop    DWORD PTR [rax+0x0]
   11328:	mov    r8d,DWORD PTR [rsp+0x8]
   1132d:	test   edx,edx
   1132f:	je     11348 <domain_runstate+0xf8>
   11331:	or     r8d,DWORD PTR [rsp+0xc]
   11336:	cmp    r8d,0x1
   1133a:	sbb    eax,eax
   1133c:	and    eax,0x2
   1133f:	add    eax,0x3
   11342:	jmp    11300 <domain_runstate+0xb0>
   11344:	nop    DWORD PTR [rax+0x0]
   11348:	or     r8d,DWORD PTR [rsp+0xc]
   1134d:	mov    r12d,r8d
   11350:	je     11386 <domain_runstate+0x136>
   11352:	xor    eax,eax
   11354:	jmp    11300 <domain_runstate+0xb0>
   11356:	nop    WORD PTR cs:[rax+rax*1+0x0]
   11360:	mov    eax,0x6
   11365:	jmp    11300 <domain_runstate+0xb0>
   11367:	nop    WORD PTR [rax+rax*1+0x0]
   11370:	mov    eax,DWORD PTR [rsp+0x8]
   11374:	or     eax,DWORD PTR [rsp+0xc]
   11378:	sete   al
   1137b:	movzx  eax,al
   1137e:	add    eax,0x1
   11381:	jmp    11300 <domain_runstate+0xb0>
   11386:	mov    rdi,QWORD PTR [rip+0x55ecb]        # 67258 <warn>
   1138d:	lea    rdx,[rip+0xfed4]        # 21268 <_IO_stdin_used+0x3268>
   11394:	mov    esi,0x1
   11399:	xor    eax,eax
   1139b:	call   5270 <__fprintf_chk@plt>
   113a0:	mov    edx,DWORD PTR [rbp+0x810]
   113a6:	mov    ecx,ebx
   113a8:	xor    eax,eax
   113aa:	mov    edi,0x1
   113af:	lea    rsi,[rip+0xd18b]        # 1e541 <_IO_stdin_used+0x541>
   113b6:	call   5200 <__printf_chk@plt>
   113bb:	mov    eax,DWORD PTR [rbp+0x810]
   113c1:	mov    rdi,QWORD PTR [rip+0x55e90]        # 67258 <warn>
   113c8:	test   eax,eax
   113ca:	js     11416 <domain_runstate+0x1c6>
   113cc:	xor    ebx,ebx
   113ce:	lea    r14,[rip+0x1a06b]        # 2b440 <runstate_name>
   113d5:	lea    r13,[rip+0xd182]        # 1e55e <_IO_stdin_used+0x55e>
   113dc:	nop    DWORD PTR [rax+0x0]
   113e0:	mov    rax,QWORD PTR [rbp+rbx*8+0x10]
   113e5:	test   rax,rax
   113e8:	je     1140a <domain_runstate+0x1ba>
   113ea:	movsxd rax,DWORD PTR [rax+0x18]
   113ee:	mov    ecx,ebx
   113f0:	mov    rdx,r13
   113f3:	mov    esi,0x1
   113f8:	mov    r8,QWORD PTR [r14+rax*8]
   113fc:	xor    eax,eax
   113fe:	call   5270 <__fprintf_chk@plt>
   11403:	mov    rdi,QWORD PTR [rip+0x55e4e]        # 67258 <warn>
   1140a:	add    rbx,0x1
   1140e:	cmp    DWORD PTR [rbp+0x810],ebx
   11414:	jge    113e0 <domain_runstate+0x190>
   11416:	lea    rbx,[rip+0x1a023]        # 2b440 <runstate_name>
   1141d:	mov    rbp,rsp
   11420:	lea    r13,[rip+0xd141]        # 1e568 <_IO_stdin_used+0x568>
   11427:	lea    r14,[rbx+0x38]
   1142b:	jmp    1143b <domain_runstate+0x1eb>
   1142d:	nop    DWORD PTR [rax]
   11430:	mov    r12d,DWORD PTR [rbp+0x0]
   11434:	mov    rdi,QWORD PTR [rip+0x55e1d]        # 67258 <warn>
   1143b:	mov    rcx,QWORD PTR [rbx]
   1143e:	mov    r8d,r12d
   11441:	mov    rdx,r13
   11444:	mov    esi,0x1
   11449:	xor    eax,eax
   1144b:	add    rbx,0x8
   1144f:	add    rbp,0x4
   11453:	call   5270 <__fprintf_chk@plt>
   11458:	cmp    r14,rbx
   1145b:	jne    11430 <domain_runstate+0x1e0>
   1145d:	cmp    DWORD PTR [rip+0x19c7c],0x6        # 2b0e0 <opt+0x40>
   11464:	jbe    11475 <domain_runstate+0x225>
   11466:	mov    eax,0xffffffff
   1146b:	jmp    11300 <domain_runstate+0xb0>
   11470:	call   50d0 <__stack_chk_fail@plt>
   11475:	mov    edi,0x1
   1147a:	call   5250 <exit@plt>
   1147f:	nop

0000000000011480 <runstate_update>:
   11480:	push   r15
   11482:	push   r14
   11484:	push   r13
   11486:	push   r12
   11488:	mov    r12d,esi
   1148b:	push   rbp
   1148c:	mov    rbp,rdx
   1148f:	push   rbx
   11490:	mov    rbx,rdi
   11493:	sub    rsp,0x18
   11497:	mov    r13,QWORD PTR [rdi+0x8]
   1149b:	test   BYTE PTR [rip+0x19bfe],0x40        # 2b0a0 <opt>
   114a2:	je     1151f <runstate_update+0x9f>
   114a4:	mov    rax,QWORD PTR [rip+0x1dd15]        # 2f1c0 <P+0x20>
   114ab:	cmp    rdx,rax
   114ae:	ja     11588 <runstate_update+0x108>
   114b4:	xor    r14d,r14d
   114b7:	xor    r15d,r15d
   114ba:	movsxd rax,DWORD PTR [rbx+0x18]
   114be:	sub    rsp,0x8
   114c2:	mov    edx,DWORD PTR [r13+0x8]
   114c6:	mov    r9d,r14d
   114c9:	lea    r10,[rip+0x19bb0]        # 2b080 <runstate_graph>
   114d0:	mov    r8d,r15d
   114d3:	mov    edi,0x1
   114d8:	mov    eax,DWORD PTR [r10+rax*4]
   114dc:	lea    rsi,[rip+0xd08e]        # 1e571 <_IO_stdin_used+0x571>
   114e3:	push   rax
   114e4:	mov    ecx,DWORD PTR [rbx]
   114e6:	xor    eax,eax
   114e8:	call   5200 <__printf_chk@plt>
   114ed:	movsxd rax,r12d
   114f0:	mov    edx,DWORD PTR [r13+0x8]
   114f4:	mov    r9d,r14d
   114f7:	lea    r10,[rip+0x19b82]        # 2b080 <runstate_graph>
   114fe:	lea    rsi,[rip+0xd06c]        # 1e571 <_IO_stdin_used+0x571>
   11505:	mov    edi,0x1
   1150a:	mov    r8d,r15d
   1150d:	mov    eax,DWORD PTR [r10+rax*4]
   11511:	mov    DWORD PTR [rsp],eax
   11514:	mov    ecx,DWORD PTR [rbx]
   11516:	xor    eax,eax
   11518:	call   5200 <__printf_chk@plt>
   1151d:	pop    rsi
   1151e:	pop    rdi
   1151f:	mov    rax,QWORD PTR [rbx+0x20]
   11523:	test   rax,rax
   11526:	je     11531 <runstate_update+0xb1>
   11528:	cmp    rax,rbp
   1152b:	jb     116f0 <runstate_update+0x270>
   11531:	cmp    r12d,0x1
   11535:	je     115d0 <runstate_update+0x150>
   1153b:	mov    DWORD PTR [rbx+0x1c],0x0
   11542:	mov    DWORD PTR [rbx+0x18],r12d
   11546:	mov    QWORD PTR [rbx+0x20],rbp
   1154a:	mov    rax,QWORD PTR [r13+0x818]
   11551:	cmp    rax,rbp
   11554:	jae    1155f <runstate_update+0xdf>
   11556:	test   rax,rax
   11559:	jne    11600 <runstate_update+0x180>
   1155f:	mov    rdi,r13
   11562:	call   11250 <domain_runstate>
   11567:	mov    QWORD PTR [r13+0x818],rbp
   1156e:	mov    DWORD PTR [r13+0x814],eax
   11575:	add    rsp,0x18
   11579:	pop    rbx
   1157a:	pop    rbp
   1157b:	pop    r12
   1157d:	pop    r13
   1157f:	pop    r14
   11581:	pop    r15
   11583:	ret    
   11584:	nop    DWORD PTR [rax+0x0]
   11588:	movabs rcx,0x44b82fa09b5a53
   11592:	mov    r14,rdx
   11595:	xor    edx,edx
   11597:	sub    r14,rax
   1159a:	shl    r14,0xa
   1159e:	mov    rax,r14
   115a1:	div    QWORD PTR [rip+0x19b00]        # 2b0a8 <opt+0x8>
   115a8:	mov    rdx,rax
   115ab:	mov    r14,rax
   115ae:	shr    rdx,0x9
   115b2:	mov    rax,rdx
   115b5:	mul    rcx
   115b8:	shr    rdx,0xb
   115bc:	mov    r15d,edx
   115bf:	imul   edx,edx,0x3b9aca00
   115c5:	sub    r14d,edx
   115c8:	jmp    114ba <runstate_update+0x3a>
   115cd:	nop    DWORD PTR [rax]
   115d0:	mov    eax,DWORD PTR [rbx+0x18]
   115d3:	test   eax,eax
   115d5:	je     118a0 <runstate_update+0x420>
   115db:	js     11890 <runstate_update+0x410>
   115e1:	sub    eax,0x2
   115e4:	cmp    eax,0x1
   115e7:	ja     11890 <runstate_update+0x410>
   115ed:	mov    DWORD PTR [rbx+0x1c],0x1
   115f4:	jmp    11542 <runstate_update+0xc2>
   115f9:	nop    DWORD PTR [rax+0x0]
   11600:	movsxd rdx,DWORD PTR [r13+0x814]
   11607:	mov    r12,rbp
   1160a:	sub    r12,rax
   1160d:	lea    rax,[rdx*8+0x0]
   11615:	sub    rax,rdx
   11618:	lea    rbx,[r13+rax*8+0x858]
   11620:	add    DWORD PTR [rbx],0x1
   11623:	movsxd rcx,DWORD PTR [rbx+0x4]
   11627:	mov    edx,DWORD PTR [rip+0x19aab]        # 2b0d8 <opt+0x38>
   1162d:	mov    eax,ecx
   1162f:	test   edx,edx
   11631:	je     116d8 <runstate_update+0x258>
   11637:	mov    eax,DWORD PTR [rbx+0x8]
   1163a:	cmp    eax,ecx
   1163c:	jg     1196f <runstate_update+0x4ef>
   11642:	mov    r14d,DWORD PTR [rip+0x19a93]        # 2b0dc <opt+0x3c>
   11649:	test   ecx,ecx
   1164b:	je     1165b <runstate_update+0x1db>
   1164d:	test   r14d,r14d
   11650:	je     1165b <runstate_update+0x1db>
   11652:	cmp    eax,r14d
   11655:	jge    119dc <runstate_update+0x55c>
   1165b:	add    eax,eax
   1165d:	cmove  eax,edx
   11660:	test   r14d,r14d
   11663:	je     119cc <runstate_update+0x54c>
   11669:	cmp    eax,r14d
   1166c:	jle    119cc <runstate_update+0x54c>
   11672:	movsxd rsi,r14d
   11675:	mov    rdi,QWORD PTR [rbx+0x18]
   11679:	shl    rsi,0x3
   1167d:	call   51d0 <realloc@plt>
   11682:	test   rax,rax
   11685:	je     119ba <runstate_update+0x53a>
   1168b:	mov    QWORD PTR [rbx+0x18],rax
   1168f:	mov    DWORD PTR [rbx+0x8],r14d
   11693:	movsxd rcx,DWORD PTR [rbx+0x4]
   11697:	cmp    ecx,r14d
   1169a:	jl     1196f <runstate_update+0x4ef>
   116a0:	mov    eax,ecx
   116a2:	cdq    
   116a3:	idiv   r14d
   116a6:	lea    esi,[rax+0x1]
   116a9:	movsxd rdi,edx
   116ac:	mov    edx,0x55555556
   116b1:	mov    eax,esi
   116b3:	imul   edx
   116b5:	mov    eax,esi
   116b7:	sar    eax,0x1f
   116ba:	sub    eax,edx
   116bc:	add    eax,edi
   116be:	cdq    
   116bf:	idiv   esi
   116c1:	mov    eax,ecx
   116c3:	test   edx,edx
   116c5:	jne    116d8 <runstate_update+0x258>
   116c7:	mov    rax,QWORD PTR [rbx+0x18]
   116cb:	mov    QWORD PTR [rax+rdi*8],r12
   116cf:	mov    eax,DWORD PTR [rbx+0x4]
   116d2:	nop    WORD PTR [rax+rax*1+0x0]
   116d8:	add    eax,0x1
   116db:	add    QWORD PTR [rbx+0x10],r12
   116df:	mov    DWORD PTR [rbx+0x4],eax
   116e2:	add    DWORD PTR [rbx+0x20],0x1
   116e6:	add    QWORD PTR [rbx+0x28],r12
   116ea:	jmp    1155f <runstate_update+0xdf>
   116ef:	nop
   116f0:	movsxd rdx,DWORD PTR [rbx+0x18]
   116f4:	mov    r15,rbp
   116f7:	sub    r15,rax
   116fa:	lea    rax,[rdx*8+0x0]
   11702:	sub    rax,rdx
   11705:	lea    r14,[rbx+rax*8+0x150]
   1170d:	add    DWORD PTR [r14],0x1
   11711:	movsxd rcx,DWORD PTR [r14+0x4]
   11715:	mov    edx,DWORD PTR [rip+0x199bd]        # 2b0d8 <opt+0x38>
   1171b:	mov    eax,ecx
   1171d:	test   edx,edx
   1171f:	je     117d0 <runstate_update+0x350>
   11725:	mov    eax,DWORD PTR [r14+0x8]
   11729:	cmp    eax,ecx
   1172b:	jg     1195e <runstate_update+0x4de>
   11731:	mov    r8d,DWORD PTR [rip+0x199a4]        # 2b0dc <opt+0x3c>
   11738:	test   ecx,ecx
   1173a:	je     1174a <runstate_update+0x2ca>
   1173c:	cmp    eax,r8d
   1173f:	jl     1174a <runstate_update+0x2ca>
   11741:	test   r8d,r8d
   11744:	jne    119e4 <runstate_update+0x564>
   1174a:	add    eax,eax
   1174c:	cmove  eax,edx
   1174f:	test   r8d,r8d
   11752:	je     119d4 <runstate_update+0x554>
   11758:	cmp    eax,r8d
   1175b:	jle    119d4 <runstate_update+0x554>
   11761:	movsxd rsi,r8d
   11764:	mov    rdi,QWORD PTR [r14+0x18]
   11768:	mov    DWORD PTR [rsp+0xc],r8d
   1176d:	shl    rsi,0x3
   11771:	call   51d0 <realloc@plt>
   11776:	mov    r8d,DWORD PTR [rsp+0xc]
   1177b:	test   rax,rax
   1177e:	je     119c3 <runstate_update+0x543>
   11784:	mov    QWORD PTR [r14+0x18],rax
   11788:	mov    DWORD PTR [r14+0x8],r8d
   1178c:	movsxd rcx,DWORD PTR [r14+0x4]
   11790:	cmp    ecx,r8d
   11793:	jl     1195e <runstate_update+0x4de>
   11799:	mov    eax,ecx
   1179b:	cdq    
   1179c:	idiv   r8d
   1179f:	lea    edi,[rax+0x1]
   117a2:	movsxd rsi,edx
   117a5:	mov    edx,0x55555556
   117aa:	mov    eax,edi
   117ac:	imul   edx
   117ae:	mov    eax,edi
   117b0:	sar    eax,0x1f
   117b3:	sub    eax,edx
   117b5:	add    eax,esi
   117b7:	cdq    
   117b8:	idiv   edi
   117ba:	mov    eax,ecx
   117bc:	test   edx,edx
   117be:	jne    117d0 <runstate_update+0x350>
   117c0:	mov    rax,QWORD PTR [r14+0x18]
   117c4:	mov    QWORD PTR [rax+rsi*8],r15
   117c8:	mov    eax,DWORD PTR [r14+0x4]
   117cc:	nop    DWORD PTR [rax+0x0]
   117d0:	add    eax,0x1
   117d3:	add    QWORD PTR [r14+0x10],r15
   117d7:	mov    DWORD PTR [r14+0x4],eax
   117db:	add    DWORD PTR [r14+0x20],0x1
   117e0:	add    QWORD PTR [r14+0x28],r15
   117e4:	cmp    BYTE PTR [rip+0x198b5],0x0        # 2b0a0 <opt>
   117eb:	js     118ac <runstate_update+0x42c>
   117f1:	mov    eax,DWORD PTR [rbx+0x18]
   117f4:	test   eax,eax
   117f6:	jne    1181e <runstate_update+0x39e>
   117f8:	mov    rax,QWORD PTR [rbx+0x8]
   117fc:	mov    rsi,rbp
   117ff:	sub    rsi,QWORD PTR [rbx+0x20]
   11803:	add    DWORD PTR [rax+0x820],0x1
   1180a:	test   rsi,rsi
   1180d:	je     1181b <runstate_update+0x39b>
   1180f:	lea    rdi,[rax+0x820]
   11816:	call   56e0 <update_cycles.part.5>
   1181b:	mov    eax,DWORD PTR [rbx+0x18]
   1181e:	cmp    eax,0x1
   11821:	je     1192a <runstate_update+0x4aa>
   11827:	mov    rax,QWORD PTR [rbx+0x8]
   1182b:	mov    eax,DWORD PTR [rax+0x8]
   1182e:	test   eax,eax
   11830:	jne    11531 <runstate_update+0xb1>
   11836:	lea    rax,[rip+0x1d9a3]        # 2f1e0 <P+0x40>
   1183d:	lea    rsi,[rax+0x38000]
   11844:	nop    DWORD PTR [rax+0x0]
   11848:	test   BYTE PTR [rax],0x1
   1184b:	je     1187d <runstate_update+0x3fd>
   1184d:	movsxd rcx,DWORD PTR [rbx+0x18]
   11851:	mov    rdx,QWORD PTR [rax+0x1c0]
   11858:	mov    rdi,rbp
   1185b:	cmp    QWORD PTR [rbx+0x20],rdx
   1185f:	cmovae rdx,QWORD PTR [rbx+0x20]
   11864:	sub    rdi,rdx
   11867:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   1186f:	mov    DWORD PTR [rax+0x208],r12d
   11876:	mov    QWORD PTR [rax+0x1c8],rbp
   1187d:	add    rax,0x380
   11883:	cmp    rsi,rax
   11886:	jne    11848 <runstate_update+0x3c8>
   11888:	jmp    11531 <runstate_update+0xb1>
   1188d:	nop    DWORD PTR [rax]
   11890:	mov    DWORD PTR [rbx+0x1c],0x3
   11897:	jmp    11542 <runstate_update+0xc2>
   1189c:	nop    DWORD PTR [rax+0x0]
   118a0:	mov    DWORD PTR [rbx+0x1c],0x2
   118a7:	jmp    11542 <runstate_update+0xc2>
   118ac:	mov    rax,QWORD PTR [rip+0x1d90d]        # 2f1c0 <P+0x20>
   118b3:	mov    rcx,rbp
   118b6:	mov    rsi,QWORD PTR [rip+0x197eb]        # 2b0a8 <opt+0x8>
   118bd:	sub    rcx,rax
   118c0:	cmp    rbp,rax
   118c3:	ja     1197f <runstate_update+0x4ff>
   118c9:	xor    r9d,r9d
   118cc:	xor    r8d,r8d
   118cf:	mov    rax,rcx
   118d2:	sub    rax,QWORD PTR [rbx+0x20]
   118d6:	xor    edx,edx
   118d8:	mov    edi,0x1
   118dd:	movabs rcx,0x44b82fa09b5a53
   118e7:	shl    rax,0xa
   118eb:	div    rsi
   118ee:	mov    rdx,rax
   118f1:	mov    rsi,rax
   118f4:	shr    rdx,0x9
   118f8:	mov    rax,rdx
   118fb:	mul    rcx
   118fe:	mov    rcx,rdx
   11901:	mov    edx,DWORD PTR [r13+0x8]
   11905:	shr    rcx,0xb
   11909:	imul   eax,ecx,0x3b9aca00
   1190f:	sub    esi,eax
   11911:	xor    eax,eax
   11913:	push   rsi
   11914:	lea    rsi,[rip+0xcc68]        # 1e583 <_IO_stdin_used+0x583>
   1191b:	push   rcx
   1191c:	mov    ecx,DWORD PTR [rbx]
   1191e:	call   5200 <__printf_chk@plt>
   11923:	pop    rdx
   11924:	pop    rcx
   11925:	jmp    117f1 <runstate_update+0x371>
   1192a:	movsxd rdx,DWORD PTR [rbx+0x1c]
   1192e:	mov    rsi,rbp
   11931:	sub    rsi,QWORD PTR [rbx+0x20]
   11935:	lea    rax,[rdx*8+0x0]
   1193d:	sub    rax,rdx
   11940:	lea    rdi,[rbx+rax*8+0x2d8]
   11948:	add    DWORD PTR [rdi],0x1
   1194b:	test   rsi,rsi
   1194e:	je     11827 <runstate_update+0x3a7>
   11954:	call   56e0 <update_cycles.part.5>
   11959:	jmp    11827 <runstate_update+0x3a7>
   1195e:	mov    rax,QWORD PTR [r14+0x18]
   11962:	mov    QWORD PTR [rax+rcx*8],r15
   11966:	mov    eax,DWORD PTR [r14+0x4]
   1196a:	jmp    117d0 <runstate_update+0x350>
   1196f:	mov    rax,QWORD PTR [rbx+0x18]
   11973:	mov    QWORD PTR [rax+rcx*8],r12
   11977:	mov    eax,DWORD PTR [rbx+0x4]
   1197a:	jmp    116d8 <runstate_update+0x258>
   1197f:	movabs rdi,0x44b82fa09b5a53
   11989:	mov    rax,rcx
   1198c:	xor    edx,edx
   1198e:	shl    rax,0xa
   11992:	div    rsi
   11995:	mov    rdx,rax
   11998:	mov    r9,rax
   1199b:	shr    rdx,0x9
   1199f:	mov    rax,rdx
   119a2:	mul    rdi
   119a5:	shr    rdx,0xb
   119a9:	mov    r8d,edx
   119ac:	imul   edx,edx,0x3b9aca00
   119b2:	sub    r9d,edx
   119b5:	jmp    118cf <runstate_update+0x44f>
   119ba:	mov    r14d,DWORD PTR [rbx+0x8]
   119be:	jmp    11693 <runstate_update+0x213>
   119c3:	mov    r8d,DWORD PTR [r14+0x8]
   119c7:	jmp    1178c <runstate_update+0x30c>
   119cc:	mov    r14d,eax
   119cf:	jmp    11672 <runstate_update+0x1f2>
   119d4:	mov    r8d,eax
   119d7:	jmp    11761 <runstate_update+0x2e1>
   119dc:	mov    r14d,eax
   119df:	jmp    116a0 <runstate_update+0x220>
   119e4:	mov    r8d,eax
   119e7:	jmp    11799 <runstate_update+0x319>
   119ec:	nop    DWORD PTR [rax+0x0]

00000000000119f0 <hvm_close_vmexit>:
   119f0:	push   r15
   119f2:	push   r14
   119f4:	push   r13
   119f6:	push   r12
   119f8:	push   rbp
   119f9:	push   rbx
   119fa:	mov    rbx,rdi
   119fd:	sub    rsp,0x8
   11a01:	mov    rax,QWORD PTR [rdi+0x283e0]
   11a08:	test   rax,rax
   11a0b:	je     11c60 <hvm_close_vmexit+0x270>
   11a11:	mov    rbp,rsi
   11a14:	cmp    rax,rsi
   11a17:	jbe    11a60 <hvm_close_vmexit+0x70>
   11a19:	mov    rax,QWORD PTR [rdi+0x283d8]
   11a20:	mov    QWORD PTR [rdi+0x283e8],0x0
   11a2b:	test   rax,rax
   11a2e:	jne    11c6c <hvm_close_vmexit+0x27c>
   11a34:	mov    QWORD PTR [rbx+0x283e0],0x0
   11a3f:	mov    DWORD PTR [rbx+0x4],0x0
   11a46:	mov    QWORD PTR [rbx+0x283d8],0x0
   11a51:	add    rsp,0x8
   11a55:	pop    rbx
   11a56:	pop    rbp
   11a57:	pop    r12
   11a59:	pop    r13
   11a5b:	pop    r14
   11a5d:	pop    r15
   11a5f:	ret    
   11a60:	mov    r12,rsi
   11a63:	sub    r12,rax
   11a66:	mov    QWORD PTR [rdi+0x283e8],r12
   11a6d:	mov    edi,DWORD PTR [rip+0x19631]        # 2b0a4 <opt+0x4>
   11a73:	test   edi,edi
   11a75:	je     11bbc <hvm_close_vmexit+0x1cc>
   11a7b:	mov    r13d,DWORD PTR [rbx+0x28400]
   11a82:	lea    rax,[r13*8+0x0]
   11a8a:	sub    rax,r13
   11a8d:	lea    rdx,[rbx+rax*8]
   11a91:	add    DWORD PTR [rdx+0x2030],0x1
   11a98:	test   r12,r12
   11a9b:	je     11bb5 <hvm_close_vmexit+0x1c5>
   11aa1:	mov    ecx,DWORD PTR [rip+0x19631]        # 2b0d8 <opt+0x38>
   11aa7:	movsxd rax,DWORD PTR [rdx+0x2034]
   11aae:	test   ecx,ecx
   11ab0:	je     11b88 <hvm_close_vmexit+0x198>
   11ab6:	mov    edx,DWORD PTR [rdx+0x2038]
   11abc:	cmp    edx,eax
   11abe:	jg     11e58 <hvm_close_vmexit+0x468>
   11ac4:	mov    r14d,DWORD PTR [rip+0x19611]        # 2b0dc <opt+0x3c>
   11acb:	test   eax,eax
   11acd:	je     11add <hvm_close_vmexit+0xed>
   11acf:	cmp    edx,r14d
   11ad2:	jl     11add <hvm_close_vmexit+0xed>
   11ad4:	test   r14d,r14d
   11ad7:	jne    11ed8 <hvm_close_vmexit+0x4e8>
   11add:	add    edx,edx
   11adf:	cmove  edx,ecx
   11ae2:	test   r14d,r14d
   11ae5:	je     11ec8 <hvm_close_vmexit+0x4d8>
   11aeb:	cmp    edx,r14d
   11aee:	jle    11ec8 <hvm_close_vmexit+0x4d8>
   11af4:	lea    rax,[r13*8+0x0]
   11afc:	movsxd rsi,r14d
   11aff:	sub    rax,r13
   11b02:	shl    rsi,0x3
   11b06:	lea    r15,[rbx+rax*8]
   11b0a:	mov    rdi,QWORD PTR [r15+0x2048]
   11b11:	call   51d0 <realloc@plt>
   11b16:	test   rax,rax
   11b19:	je     11ebc <hvm_close_vmexit+0x4cc>
   11b1f:	mov    QWORD PTR [r15+0x2048],rax
   11b26:	mov    DWORD PTR [r15+0x2038],r14d
   11b2d:	lea    rax,[r13*8+0x0]
   11b35:	sub    rax,r13
   11b38:	movsxd rax,DWORD PTR [rbx+rax*8+0x2034]
   11b40:	cmp    eax,r14d
   11b43:	jl     11e58 <hvm_close_vmexit+0x468>
   11b49:	cdq    
   11b4a:	idiv   r14d
   11b4d:	lea    ecx,[rax+0x1]
   11b50:	mov    esi,edx
   11b52:	mov    edx,0x55555556
   11b57:	mov    eax,ecx
   11b59:	imul   edx
   11b5b:	mov    eax,ecx
   11b5d:	sar    eax,0x1f
   11b60:	sub    eax,edx
   11b62:	add    eax,esi
   11b64:	cdq    
   11b65:	idiv   ecx
   11b67:	lea    rax,[r13*8+0x0]
   11b6f:	sub    rax,r13
   11b72:	test   edx,edx
   11b74:	je     11e80 <hvm_close_vmexit+0x490>
   11b7a:	mov    eax,DWORD PTR [rbx+rax*8+0x2034]
   11b81:	nop    DWORD PTR [rax+0x0]
   11b88:	lea    rdx,[r13*8+0x0]
   11b90:	add    eax,0x1
   11b93:	sub    rdx,r13
   11b96:	lea    rdx,[rbx+rdx*8]
   11b9a:	add    QWORD PTR [rdx+0x2040],r12
   11ba1:	add    DWORD PTR [rdx+0x2050],0x1
   11ba8:	add    QWORD PTR [rdx+0x2058],r12
   11baf:	mov    DWORD PTR [rdx+0x2034],eax
   11bb5:	mov    DWORD PTR [rbx+0x8],0x1
   11bbc:	test   BYTE PTR [rip+0x194de],0x2        # 2b0a1 <opt+0x1>
   11bc3:	je     11c60 <hvm_close_vmexit+0x270>
   11bc9:	cmp    DWORD PTR [rbx+0x28400],0x1
   11bd0:	jne    11c60 <hvm_close_vmexit+0x270>
   11bd6:	mov    eax,DWORD PTR [rip+0x194e0]        # 2b0bc <opt+0x1c>
   11bdc:	cmp    DWORD PTR [rbx+0x28348],eax
   11be2:	jne    11c60 <hvm_close_vmexit+0x270>
   11be4:	mov    rax,QWORD PTR [rip+0x1d5d5]        # 2f1c0 <P+0x20>
   11beb:	cmp    rbp,rax
   11bee:	jbe    11ea9 <hvm_close_vmexit+0x4b9>
   11bf4:	movabs rcx,0x44b82fa09b5a53
   11bfe:	mov    r9,rbp
   11c01:	xor    edx,edx
   11c03:	sub    r9,rax
   11c06:	shl    r9,0xa
   11c0a:	mov    rax,r9
   11c0d:	div    QWORD PTR [rip+0x19494]        # 2b0a8 <opt+0x8>
   11c14:	mov    rdx,rax
   11c17:	mov    r9,rax
   11c1a:	shr    rdx,0x9
   11c1e:	mov    rax,rdx
   11c21:	mul    rcx
   11c24:	shr    rdx,0xb
   11c28:	mov    r8d,edx
   11c2b:	imul   edx,edx,0x3b9aca00
   11c31:	sub    r9d,edx
   11c34:	mov    rax,QWORD PTR [rbx+0x10]
   11c38:	sub    rsp,0x8
   11c3c:	mov    edi,0x1
   11c41:	lea    rsi,[rip+0xc869]        # 1e4b1 <_IO_stdin_used+0x4b1>
   11c48:	mov    rdx,QWORD PTR [rax+0x8]
   11c4c:	mov    edx,DWORD PTR [rdx+0x8]
   11c4f:	push   QWORD PTR [rbx+0x283e8]
   11c55:	mov    ecx,DWORD PTR [rax]
   11c57:	xor    eax,eax
   11c59:	call   5200 <__printf_chk@plt>
   11c5e:	pop    rcx
   11c5f:	pop    rsi
   11c60:	mov    rax,QWORD PTR [rbx+0x283d8]
   11c67:	test   rax,rax
   11c6a:	je     11c71 <hvm_close_vmexit+0x281>
   11c6c:	mov    rdi,rbx
   11c6f:	call   rax
   11c71:	cmp    QWORD PTR [rbx+0x283e8],0x0
   11c79:	je     11a34 <hvm_close_vmexit+0x44>
   11c7f:	mov    edx,DWORD PTR [rip+0x1941f]        # 2b0a4 <opt+0x4>
   11c85:	test   edx,edx
   11c87:	je     11cc0 <hvm_close_vmexit+0x2d0>
   11c89:	test   BYTE PTR [rbx+0x28408],0x1
   11c90:	jne    11cc0 <hvm_close_vmexit+0x2d0>
   11c92:	mov    eax,DWORD PTR [rbx+0x28404]
   11c98:	cmp    eax,0x12
   11c9b:	je     11e10 <hvm_close_vmexit+0x420>
   11ca1:	cmp    eax,0x13
   11ca4:	je     11e40 <hvm_close_vmexit+0x450>
   11caa:	cmp    eax,0xf
   11cad:	je     11e28 <hvm_close_vmexit+0x438>
   11cb3:	mov    esi,0x9
   11cb8:	mov    rdi,rbx
   11cbb:	call   a2a0 <hvm_update_short_summary>
   11cc0:	mov    rax,QWORD PTR [rbx+0x10]
   11cc4:	mov    rax,QWORD PTR [rax+0x70]
   11cc8:	test   rax,rax
   11ccb:	je     11a34 <hvm_close_vmexit+0x44>
   11cd1:	mov    rdx,QWORD PTR [rbx+0x283e8]
   11cd8:	add    QWORD PTR [rax+0x30],rdx
   11cdc:	mov    eax,DWORD PTR [rip+0x193c2]        # 2b0a4 <opt+0x4>
   11ce2:	test   eax,eax
   11ce4:	je     11a34 <hvm_close_vmexit+0x44>
   11cea:	mov    rax,QWORD PTR [rbx+0x10]
   11cee:	mov    r12,QWORD PTR [rbx+0x283e8]
   11cf5:	mov    rbp,QWORD PTR [rax+0x70]
   11cf9:	add    DWORD PTR [rbp+0xa8],0x1
   11d00:	test   r12,r12
   11d03:	je     11a34 <hvm_close_vmexit+0x44>
   11d09:	movsxd rcx,DWORD PTR [rbp+0xac]
   11d10:	mov    edx,DWORD PTR [rip+0x193c2]        # 2b0d8 <opt+0x38>
   11d16:	mov    eax,ecx
   11d18:	test   edx,edx
   11d1a:	je     11dd0 <hvm_close_vmexit+0x3e0>
   11d20:	mov    eax,DWORD PTR [rbp+0xb0]
   11d26:	cmp    eax,ecx
   11d28:	jg     11df8 <hvm_close_vmexit+0x408>
   11d2e:	mov    r13d,DWORD PTR [rip+0x193a7]        # 2b0dc <opt+0x3c>
   11d35:	test   ecx,ecx
   11d37:	je     11d47 <hvm_close_vmexit+0x357>
   11d39:	test   r13d,r13d
   11d3c:	je     11d47 <hvm_close_vmexit+0x357>
   11d3e:	cmp    eax,r13d
   11d41:	jge    11ed0 <hvm_close_vmexit+0x4e0>
   11d47:	add    eax,eax
   11d49:	cmove  eax,edx
   11d4c:	cmp    eax,r13d
   11d4f:	jle    11eb4 <hvm_close_vmexit+0x4c4>
   11d55:	test   r13d,r13d
   11d58:	je     11eb4 <hvm_close_vmexit+0x4c4>
   11d5e:	movsxd rsi,r13d
   11d61:	mov    rdi,QWORD PTR [rbp+0xc0]
   11d68:	shl    rsi,0x3
   11d6c:	call   51d0 <realloc@plt>
   11d71:	test   rax,rax
   11d74:	je     11e9d <hvm_close_vmexit+0x4ad>
   11d7a:	mov    QWORD PTR [rbp+0xc0],rax
   11d81:	mov    DWORD PTR [rbp+0xb0],r13d
   11d88:	movsxd rcx,DWORD PTR [rbp+0xac]
   11d8f:	cmp    ecx,r13d
   11d92:	jl     11df8 <hvm_close_vmexit+0x408>
   11d94:	mov    eax,ecx
   11d96:	cdq    
   11d97:	idiv   r13d
   11d9a:	lea    esi,[rax+0x1]
   11d9d:	movsxd rdi,edx
   11da0:	mov    edx,0x55555556
   11da5:	mov    eax,esi
   11da7:	imul   edx
   11da9:	mov    eax,esi
   11dab:	sar    eax,0x1f
   11dae:	sub    eax,edx
   11db0:	add    eax,edi
   11db2:	cdq    
   11db3:	idiv   esi
   11db5:	mov    eax,ecx
   11db7:	test   edx,edx
   11db9:	jne    11dd0 <hvm_close_vmexit+0x3e0>
   11dbb:	mov    rax,QWORD PTR [rbp+0xc0]
   11dc2:	mov    QWORD PTR [rax+rdi*8],r12
   11dc6:	mov    eax,DWORD PTR [rbp+0xac]
   11dcc:	nop    DWORD PTR [rax+0x0]
   11dd0:	add    eax,0x1
   11dd3:	add    QWORD PTR [rbp+0xb8],r12
   11dda:	mov    DWORD PTR [rbp+0xac],eax
   11de0:	add    DWORD PTR [rbp+0xc8],0x1
   11de7:	add    QWORD PTR [rbp+0xd0],r12
   11dee:	jmp    11a34 <hvm_close_vmexit+0x44>
   11df3:	nop    DWORD PTR [rax+rax*1+0x0]
   11df8:	mov    rax,QWORD PTR [rbp+0xc0]
   11dff:	mov    QWORD PTR [rax+rcx*8],r12
   11e03:	mov    eax,DWORD PTR [rbp+0xac]
   11e09:	jmp    11dd0 <hvm_close_vmexit+0x3e0>
   11e0b:	nop    DWORD PTR [rax+rax*1+0x0]
   11e10:	mov    esi,0x6
   11e15:	mov    rdi,rbx
   11e18:	call   a2a0 <hvm_update_short_summary>
   11e1d:	jmp    11cc0 <hvm_close_vmexit+0x2d0>
   11e22:	nop    WORD PTR [rax+rax*1+0x0]
   11e28:	mov    esi,0x7
   11e2d:	mov    rdi,rbx
   11e30:	call   a2a0 <hvm_update_short_summary>
   11e35:	jmp    11cc0 <hvm_close_vmexit+0x2d0>
   11e3a:	nop    WORD PTR [rax+rax*1+0x0]
   11e40:	mov    esi,0x8
   11e45:	mov    rdi,rbx
   11e48:	call   a2a0 <hvm_update_short_summary>
   11e4d:	jmp    11cc0 <hvm_close_vmexit+0x2d0>
   11e52:	nop    WORD PTR [rax+rax*1+0x0]
   11e58:	lea    rdx,[r13*8+0x0]
   11e60:	sub    rdx,r13
   11e63:	lea    rdx,[rbx+rdx*8]
   11e67:	mov    rcx,QWORD PTR [rdx+0x2048]
   11e6e:	mov    QWORD PTR [rcx+rax*8],r12
   11e72:	mov    eax,DWORD PTR [rdx+0x2034]
   11e78:	jmp    11b88 <hvm_close_vmexit+0x198>
   11e7d:	nop    DWORD PTR [rax]
   11e80:	lea    rdx,[rbx+rax*8]
   11e84:	movsxd rax,esi
   11e87:	mov    rcx,QWORD PTR [rdx+0x2048]
   11e8e:	mov    QWORD PTR [rcx+rax*8],r12
   11e92:	mov    eax,DWORD PTR [rdx+0x2034]
   11e98:	jmp    11b88 <hvm_close_vmexit+0x198>
   11e9d:	mov    r13d,DWORD PTR [rbp+0xb0]
   11ea4:	jmp    11d88 <hvm_close_vmexit+0x398>
   11ea9:	xor    r9d,r9d
   11eac:	xor    r8d,r8d
   11eaf:	jmp    11c34 <hvm_close_vmexit+0x244>
   11eb4:	mov    r13d,eax
   11eb7:	jmp    11d5e <hvm_close_vmexit+0x36e>
   11ebc:	mov    r14d,DWORD PTR [r15+0x2038]
   11ec3:	jmp    11b2d <hvm_close_vmexit+0x13d>
   11ec8:	mov    r14d,edx
   11ecb:	jmp    11af4 <hvm_close_vmexit+0x104>
   11ed0:	mov    r13d,eax
   11ed3:	jmp    11d94 <hvm_close_vmexit+0x3a4>
   11ed8:	mov    r14d,edx
   11edb:	jmp    11b49 <hvm_close_vmexit+0x159>

0000000000011ee0 <hvm_vmentry_process>:
   11ee0:	push   r14
   11ee2:	mov    r14,rdi
   11ee5:	push   r13
   11ee7:	push   r12
   11ee9:	push   rbp
   11eea:	push   rbx
   11eeb:	mov    ecx,DWORD PTR [rsi]
   11eed:	test   ecx,ecx
   11eef:	jne    11f30 <hvm_vmentry_process+0x50>
   11ef1:	test   BYTE PTR [rip+0x191a9],0x40        # 2b0a1 <opt+0x1>
   11ef8:	jne    11f0d <hvm_vmentry_process+0x2d>
   11efa:	pop    rbx
   11efb:	pop    rbp
   11efc:	pop    r12
   11efe:	pop    r13
   11f00:	pop    r14
   11f02:	ret    
   11f03:	nop    DWORD PTR [rax+rax*1+0x0]
   11f08:	test   dil,dil
   11f0b:	je     11efa <hvm_vmentry_process+0x1a>
   11f0d:	pop    rbx
   11f0e:	lea    rdx,[r14+0x28]
   11f12:	pop    rbp
   11f13:	mov    edi,0x1
   11f18:	pop    r12
   11f1a:	lea    rsi,[rip+0xc67b]        # 1e59c <_IO_stdin_used+0x59c>
   11f21:	pop    r13
   11f23:	xor    eax,eax
   11f25:	pop    r14
   11f27:	jmp    5200 <__printf_chk@plt>
   11f2c:	nop    DWORD PTR [rax+0x0]
   11f30:	mov    r12,rsi
   11f33:	mov    rsi,QWORD PTR [rdi+0x8]
   11f37:	mov    rdi,QWORD PTR [r12+0x10]
   11f3c:	call   e0e0 <hvm_vlapic_vmentry_cleanup>
   11f41:	movzx  ecx,BYTE PTR [rip+0x19159]        # 2b0a1 <opt+0x1>
   11f48:	mov    edi,ecx
   11f4a:	test   BYTE PTR [r12+0x28418],0x1
   11f53:	je     1209f <hvm_vmentry_process+0x1bf>
   11f59:	and    edi,0x40
   11f5c:	jne    12075 <hvm_vmentry_process+0x195>
   11f62:	mov    edx,DWORD PTR [r12+0x28424]
   11f6a:	and    BYTE PTR [r12+0x28418],0xfe
   11f73:	test   edx,edx
   11f75:	je     11fc8 <hvm_vmentry_process+0xe8>
   11f77:	lea    rbx,[r12+0x12be8]
   11f7f:	xor    ebp,ebp
   11f81:	lea    r13,[rip+0xf330]        # 212b8 <_IO_stdin_used+0x32b8>
   11f88:	jmp    11fa2 <hvm_vmentry_process+0xc2>
   11f8a:	nop    WORD PTR [rax+rax*1+0x0]
   11f90:	add    ebp,0x1
   11f93:	add    rbx,0xf8
   11f9a:	cmp    ebp,0x15e
   11fa0:	je     11fc8 <hvm_vmentry_process+0xe8>
   11fa2:	mov    edi,ecx
   11fa4:	and    edi,0x40
   11fa7:	cmp    QWORD PTR [rbx],0x1
   11fab:	jne    11f90 <hvm_vmentry_process+0xb0>
   11fad:	mov    r9,QWORD PTR [r14+0x8]
   11fb1:	test   dil,dil
   11fb4:	jne    12040 <hvm_vmentry_process+0x160>
   11fba:	mov    QWORD PTR [rbx],r9
   11fbd:	sub    DWORD PTR [r12+0x28424],0x1
   11fc6:	jne    11f90 <hvm_vmentry_process+0xb0>
   11fc8:	mov    eax,DWORD PTR [r12+0x4]
   11fcd:	test   eax,eax
   11fcf:	je     11f08 <hvm_vmentry_process+0x28>
   11fd5:	mov    rsi,QWORD PTR [r14+0x8]
   11fd9:	test   dil,dil
   11fdc:	je     1201d <hvm_vmentry_process+0x13d>
   11fde:	lea    rax,[rip+0xcae0]        # 1eac5 <_IO_stdin_used+0xac5>
   11fe5:	sub    rsi,QWORD PTR [r12+0x283e0]
   11fed:	lea    r8,[rip+0xc5a6]        # 1e59a <_IO_stdin_used+0x59a>
   11ff4:	mov    edi,0x1
   11ff9:	cmp    rsi,0x2710
   12000:	mov    rcx,rsi
   12003:	lea    rdx,[r14+0x28]
   12007:	cmovbe r8,rax
   1200b:	lea    rsi,[rip+0xc597]        # 1e5a9 <_IO_stdin_used+0x5a9>
   12012:	xor    eax,eax
   12014:	call   5200 <__printf_chk@plt>
   12019:	mov    rsi,QWORD PTR [r14+0x8]
   1201d:	mov    rdi,r12
   12020:	call   119f0 <hvm_close_vmexit>
   12025:	mov    rax,QWORD PTR [r14+0x8]
   12029:	mov    QWORD PTR [r12+0x283f0],rax
   12031:	pop    rbx
   12032:	pop    rbp
   12033:	pop    r12
   12035:	pop    r13
   12037:	pop    r14
   12039:	ret    
   1203a:	nop    WORD PTR [rax+rax*1+0x0]
   12040:	mov    rax,QWORD PTR [r12+0x10]
   12045:	mov    edi,0x1
   1204a:	mov    r8d,ebp
   1204d:	mov    rsi,r13
   12050:	mov    rdx,QWORD PTR [rax+0x8]
   12054:	mov    ecx,DWORD PTR [rax]
   12056:	xor    eax,eax
   12058:	mov    edx,DWORD PTR [rdx+0x8]
   1205b:	call   5200 <__printf_chk@plt>
   12060:	movzx  ecx,BYTE PTR [rip+0x1903a]        # 2b0a1 <opt+0x1>
   12067:	mov    r9,QWORD PTR [r14+0x8]
   1206b:	mov    edi,ecx
   1206d:	and    edi,0x40
   12070:	jmp    11fba <hvm_vmentry_process+0xda>
   12075:	mov    rax,QWORD PTR [r12+0x10]
   1207a:	mov    edi,0x1
   1207f:	lea    rsi,[rip+0xf212]        # 21298 <_IO_stdin_used+0x3298>
   12086:	mov    rdx,QWORD PTR [rax+0x8]
   1208a:	mov    ecx,DWORD PTR [rax]
   1208c:	xor    eax,eax
   1208e:	mov    edx,DWORD PTR [rdx+0x8]
   12091:	call   5200 <__printf_chk@plt>
   12096:	movzx  ecx,BYTE PTR [rip+0x19004]        # 2b0a1 <opt+0x1>
   1209d:	mov    edi,ecx
   1209f:	and    edi,0x40
   120a2:	jmp    11f62 <hvm_vmentry_process+0x82>
   120a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000120b0 <hvm_summary>:
   120b0:	mov    eax,DWORD PTR [rdi+0x8]
   120b3:	test   eax,eax
   120b5:	jne    120c0 <hvm_summary+0x10>
   120b7:	ret    
   120b8:	nop    DWORD PTR [rax+rax*1+0x0]
   120c0:	jmp    86d0 <hvm_summary.part.19>
   120c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000120d0 <flag_string>:
   120d0:	lea    rax,[rip+0x551e9]        # 672c0 <flagstring.7045>
   120d7:	lea    rdx,[rax+0x20]
   120db:	nop    DWORD PTR [rax+rax*1+0x0]
   120e0:	mov    BYTE PTR [rax],0x2d
   120e3:	add    rax,0x1
   120e7:	cmp    rdx,rax
   120ea:	jne    120e0 <flag_string+0x10>
   120ec:	movzx  eax,BYTE PTR [rdi+0x8]
   120f0:	test   al,0x1
   120f2:	je     12198 <flag_string+0xc8>
   120f8:	mov    BYTE PTR [rip+0x551c1],0x64        # 672c0 <flagstring.7045>
   120ff:	test   al,0x4
   12101:	je     1210a <flag_string+0x3a>
   12103:	mov    BYTE PTR [rip+0x551b7],0x67        # 672c1 <flagstring.7045+0x1>
   1210a:	test   al,0x8
   1210c:	je     12115 <flag_string+0x45>
   1210e:	mov    BYTE PTR [rip+0x551ad],0x70        # 672c2 <flagstring.7045+0x2>
   12115:	movzx  eax,BYTE PTR [rdi+0x9]
   12119:	test   al,0x1
   1211b:	je     12124 <flag_string+0x54>
   1211d:	mov    BYTE PTR [rip+0x5519f],0x44        # 672c3 <flagstring.7045+0x3>
   12124:	test   al,0x2
   12126:	je     1212f <flag_string+0x5f>
   12128:	mov    BYTE PTR [rip+0x55195],0x50        # 672c4 <flagstring.7045+0x4>
   1212f:	test   al,0x4
   12131:	je     1213a <flag_string+0x6a>
   12133:	mov    BYTE PTR [rip+0x5518b],0x77        # 672c5 <flagstring.7045+0x5>
   1213a:	test   al,0x8
   1213c:	je     12145 <flag_string+0x75>
   1213e:	mov    BYTE PTR [rip+0x55181],0x47        # 672c6 <flagstring.7045+0x6>
   12145:	test   al,0x20
   12147:	je     12150 <flag_string+0x80>
   12149:	mov    BYTE PTR [rip+0x55177],0x65        # 672c7 <flagstring.7045+0x7>
   12150:	movzx  eax,BYTE PTR [rdi+0xa]
   12154:	test   al,0x2
   12156:	je     1215f <flag_string+0x8f>
   12158:	mov    BYTE PTR [rip+0x55169],0x48        # 672c8 <flagstring.7045+0x8>
   1215f:	test   al,0x4
   12161:	je     1216a <flag_string+0x9a>
   12163:	mov    BYTE PTR [rip+0x5515f],0x75        # 672c9 <flagstring.7045+0x9>
   1216a:	test   al,0x8
   1216c:	je     12179 <flag_string+0xa9>
   1216e:	mov    BYTE PTR [rip+0x55155],0x61        # 672ca <flagstring.7045+0xa>
   12175:	movzx  eax,BYTE PTR [rdi+0xa]
   12179:	test   al,0x10
   1217b:	je     12184 <flag_string+0xb4>
   1217d:	mov    BYTE PTR [rip+0x55147],0x78        # 672cb <flagstring.7045+0xb>
   12184:	mov    BYTE PTR [rip+0x55141],0x0        # 672cc <flagstring.7045+0xc>
   1218b:	lea    rax,[rip+0x5512e]        # 672c0 <flagstring.7045>
   12192:	ret    
   12193:	nop    DWORD PTR [rax+rax*1+0x0]
   12198:	test   al,0x2
   1219a:	je     120ff <flag_string+0x2f>
   121a0:	mov    BYTE PTR [rip+0x55119],0x61        # 672c0 <flagstring.7045>
   121a7:	jmp    120ff <flag_string+0x2f>
   121ac:	nop    DWORD PTR [rax+0x0]

00000000000121b0 <shadow_fault_generic_dump>:
   121b0:	push   r14
   121b2:	movzx  r9d,dil
   121b6:	mov    r14,rcx
   121b9:	push   r13
   121bb:	mov    r13,rdx
   121be:	push   r12
   121c0:	push   rbp
   121c1:	mov    ebp,edi
   121c3:	push   rbx
   121c4:	mov    rbx,rsi
   121c7:	sub    rsp,0x20
   121cb:	mov    rax,QWORD PTR fs:0x28
   121d4:	mov    QWORD PTR [rsp+0x18],rax
   121d9:	xor    eax,eax
   121db:	cmp    dil,0xd
   121df:	ja     12270 <shadow_fault_generic_dump+0xc0>
   121e5:	movsxd rax,r9d
   121e8:	lea    rdx,[rip+0x19371]        # 2b560 <pf_xen_name>
   121ef:	mov    r8,QWORD PTR [rdx+rax*8]
   121f3:	test   r8,r8
   121f6:	je     12270 <shadow_fault_generic_dump+0xc0>
   121f8:	mov    r9d,ebp
   121fb:	mov    rcx,r14
   121fe:	mov    rdx,r13
   12201:	mov    edi,0x1
   12206:	shr    r9d,0x8
   1220a:	lea    rsi,[rip+0xc3b4]        # 1e5c5 <_IO_stdin_used+0x5c5>
   12211:	xor    eax,eax
   12213:	and    r9d,0xf
   12217:	lea    r12,[rbx+0x10]
   1221b:	lea    rbp,[rip+0xc318]        # 1e53a <_IO_stdin_used+0x53a>
   12222:	call   5200 <__printf_chk@plt>
   12227:	mov    edx,DWORD PTR [rbx]
   12229:	mov    rsi,rbp
   1222c:	mov    edi,0x1
   12231:	xor    eax,eax
   12233:	add    rbx,0x4
   12237:	call   5200 <__printf_chk@plt>
   1223c:	cmp    r12,rbx
   1223f:	jne    12227 <shadow_fault_generic_dump+0x77>
   12241:	lea    rdi,[rip+0xc2f6]        # 1e53e <_IO_stdin_used+0x53e>
   12248:	call   5090 <puts@plt>
   1224d:	mov    rax,QWORD PTR [rsp+0x18]
   12252:	xor    rax,QWORD PTR fs:0x28
   1225b:	jne    1229d <shadow_fault_generic_dump+0xed>
   1225d:	add    rsp,0x20
   12261:	pop    rbx
   12262:	pop    rbp
   12263:	pop    r12
   12265:	pop    r13
   12267:	pop    r14
   12269:	ret    
   1226a:	nop    WORD PTR [rax+rax*1+0x0]
   12270:	lea    r12,[rsp+0xe]
   12275:	lea    r8,[rip+0xc2af]        # 1e52b <_IO_stdin_used+0x52b>
   1227c:	mov    ecx,0xa
   12281:	xor    eax,eax
   12283:	mov    edx,0x1
   12288:	mov    esi,0xa
   1228d:	mov    rdi,r12
   12290:	call   5030 <__snprintf_chk@plt>
   12295:	mov    r8,r12
   12298:	jmp    121f8 <shadow_fault_generic_dump+0x48>
   1229d:	call   50d0 <__stack_chk_fail@plt>
   122a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   122ad:	nop    DWORD PTR [rax]

00000000000122b0 <shadow_fault_generic_process>:
   122b0:	push   rbp
   122b1:	push   rbx
   122b2:	mov    rbx,rsi
   122b5:	sub    rsp,0x8
   122b9:	mov    ebp,DWORD PTR [rdi+0x10]
   122bc:	mov    DWORD PTR [rsi+0x28348],ebp
   122c2:	mov    rax,QWORD PTR [rdi+0x20]
   122c6:	movdqu xmm0,XMMWORD PTR [rax]
   122ca:	movups XMMWORD PTR [rsi+0x2834c],xmm0
   122d1:	test   BYTE PTR [rip+0x18dc9],0x40        # 2b0a1 <opt+0x1>
   122d8:	jne    12340 <shadow_fault_generic_process+0x90>
   122da:	mov    rax,QWORD PTR [rbx+0x283d8]
   122e1:	and    ebp,0xff
   122e7:	lea    rdx,[rip+0xffffffffffffb442]        # d730 <hvm_generic_postprocess>
   122ee:	mov    DWORD PTR [rbx+0x28358],ebp
   122f4:	cmp    rax,rdx
   122f7:	je     12328 <shadow_fault_generic_process+0x78>
   122f9:	test   rax,rax
   122fc:	je     12328 <shadow_fault_generic_process+0x78>
   122fe:	mov    rdi,QWORD PTR [rip+0x54f53]        # 67258 <warn>
   12305:	add    rsp,0x8
   12309:	mov    esi,0x1
   1230e:	xor    eax,eax
   12310:	pop    rbx
   12311:	lea    rcx,[rip+0x12178]        # 24490 <__func__.7245>
   12318:	lea    rdx,[rip+0xea59]        # 20d78 <_IO_stdin_used+0x2d78>
   1231f:	pop    rbp
   12320:	jmp    5270 <__fprintf_chk@plt>
   12325:	nop    DWORD PTR [rax]
   12328:	lea    rax,[rip+0xffffffffffff9191]        # b4c0 <shadow_fault_generic_postprocess>
   1232f:	mov    QWORD PTR [rbx+0x283d8],rax
   12336:	add    rsp,0x8
   1233a:	pop    rbx
   1233b:	pop    rbp
   1233c:	ret    
   1233d:	nop    DWORD PTR [rax]
   12340:	lea    rcx,[rdi+0x28]
   12344:	lea    rsi,[rsi+0x2834c]
   1234b:	mov    edi,ebp
   1234d:	lea    rdx,[rip+0xc1eb]        # 1e53f <_IO_stdin_used+0x53f>
   12354:	call   121b0 <shadow_fault_generic_dump>
   12359:	jmp    122da <shadow_fault_generic_process+0x2a>
   1235e:	xchg   ax,ax

0000000000012360 <shadow_resync_process>:
   12360:	push   rbx
   12361:	mov    rbx,rsi
   12364:	test   BYTE PTR [rip+0x18d36],0x40        # 2b0a1 <opt+0x1>
   1236b:	je     123a4 <shadow_resync_process+0x44>
   1236d:	mov    rax,QWORD PTR [rdi+0x20]
   12371:	cmp    DWORD PTR [rdi+0x10],0x40f00e
   12378:	lea    rdx,[rip+0xc262]        # 1e5e1 <_IO_stdin_used+0x5e1>
   1237f:	lea    rcx,[rip+0xc256]        # 1e5dc <_IO_stdin_used+0x5dc>
   12386:	cmovne rcx,rdx
   1238a:	lea    rsi,[rip+0xc255]        # 1e5e6 <_IO_stdin_used+0x5e6>
   12391:	lea    rdx,[rdi+0x28]
   12395:	mov    edi,0x1
   1239a:	mov    r8,QWORD PTR [rax]
   1239d:	xor    eax,eax
   1239f:	call   5200 <__printf_chk@plt>
   123a4:	add    DWORD PTR [rbx+0x283d0],0x1
   123ab:	pop    rbx
   123ac:	ret    
   123ad:	nop    DWORD PTR [rax]

00000000000123b0 <shadow_prealloc_unpin_process>:
   123b0:	push   rbp
   123b1:	push   rbx
   123b2:	mov    rbx,rsi
   123b5:	sub    rsp,0x8
   123b9:	mov    rbp,QWORD PTR [rdi+0x20]
   123bd:	test   BYTE PTR [rip+0x18cdd],0x40        # 2b0a1 <opt+0x1>
   123c4:	jne    123f0 <shadow_prealloc_unpin_process+0x40>
   123c6:	test   BYTE PTR [rbx+0x28408],0x2
   123cd:	jne    12414 <shadow_prealloc_unpin_process+0x64>
   123cf:	or     BYTE PTR [rbx+0x28408],0x2
   123d6:	test   BYTE PTR [rip+0x18cc5],0x20        # 2b0a2 <opt+0x2>
   123dd:	jne    12441 <shadow_prealloc_unpin_process+0x91>
   123df:	add    rsp,0x8
   123e3:	pop    rbx
   123e4:	pop    rbp
   123e5:	ret    
   123e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   123f0:	mov    rcx,QWORD PTR [rbp+0x0]
   123f4:	lea    rdx,[rdi+0x28]
   123f8:	xor    eax,eax
   123fa:	lea    rsi,[rip+0xc201]        # 1e602 <_IO_stdin_used+0x602>
   12401:	mov    edi,0x1
   12406:	call   5200 <__printf_chk@plt>
   1240b:	test   BYTE PTR [rbx+0x28408],0x2
   12412:	je     123cf <shadow_prealloc_unpin_process+0x1f>
   12414:	mov    rcx,QWORD PTR [rip+0x54e3d]        # 67258 <warn>
   1241b:	mov    edx,0x2f
   12420:	mov    esi,0x1
   12425:	lea    rdi,[rip+0xeebc]        # 212e8 <_IO_stdin_used+0x32e8>
   1242c:	call   5260 <fwrite@plt>
   12431:	or     BYTE PTR [rbx+0x28408],0x2
   12438:	test   BYTE PTR [rip+0x18c63],0x20        # 2b0a2 <opt+0x2>
   1243f:	je     123df <shadow_prealloc_unpin_process+0x2f>
   12441:	mov    rdi,QWORD PTR [rbx+0x10]
   12445:	mov    rsi,QWORD PTR [rbp+0x0]
   12449:	add    rsp,0x8
   1244d:	pop    rbx
   1244e:	pop    rbp
   1244f:	jmp    10100 <cr3_prealloc_unpin>
   12454:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1245f:	nop

0000000000012460 <shadow_wrmap_bf_process>:
   12460:	push   rbx
   12461:	mov    rbx,rsi
   12464:	test   BYTE PTR [rip+0x18c36],0x40        # 2b0a1 <opt+0x1>
   1246b:	jne    12480 <shadow_wrmap_bf_process+0x20>
   1246d:	or     BYTE PTR [rbx+0x28408],0x4
   12474:	pop    rbx
   12475:	ret    
   12476:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12480:	mov    rax,QWORD PTR [rdi+0x20]
   12484:	lea    rdx,[rdi+0x28]
   12488:	lea    rsi,[rip+0xc190]        # 1e61f <_IO_stdin_used+0x61f>
   1248f:	mov    edi,0x1
   12494:	mov    rcx,QWORD PTR [rax]
   12497:	xor    eax,eax
   12499:	call   5200 <__printf_chk@plt>
   1249e:	or     BYTE PTR [rbx+0x28408],0x4
   124a5:	pop    rbx
   124a6:	ret    
   124a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000124b0 <pv_hypercall_process>:
   124b0:	mov    rax,QWORD PTR [rdi+0x20]
   124b4:	test   BYTE PTR [rdi+0x11],0x1
   124b8:	je     12538 <pv_hypercall_process+0x88>
   124ba:	mov    r8,QWORD PTR [rax]
   124bd:	mov    ecx,DWORD PTR [rax+0x8]
   124c0:	mov    eax,DWORD PTR [rip+0x18bde]        # 2b0a4 <opt+0x4>
   124c6:	test   eax,eax
   124c8:	je     124cf <pv_hypercall_process+0x1f>
   124ca:	cmp    ecx,0x37
   124cd:	jbe    12528 <pv_hypercall_process+0x78>
   124cf:	test   BYTE PTR [rip+0x18bcb],0x40        # 2b0a1 <opt+0x1>
   124d6:	je     12508 <pv_hypercall_process+0x58>
   124d8:	lea    rdx,[rdi+0x28]
   124dc:	cmp    ecx,0x25
   124df:	ja     12510 <pv_hypercall_process+0x60>
   124e1:	mov    esi,ecx
   124e3:	lea    rax,[rip+0x191f6]        # 2b6e0 <hypercall_name>
   124ea:	mov    r9,r8
   124ed:	mov    edi,0x1
   124f2:	mov    r8,QWORD PTR [rax+rsi*8]
   124f6:	lea    rsi,[rip+0xee1b]        # 21318 <_IO_stdin_used+0x3318>
   124fd:	xor    eax,eax
   124ff:	jmp    5200 <__printf_chk@plt>
   12504:	nop    DWORD PTR [rax+0x0]
   12508:	ret    
   12509:	nop    DWORD PTR [rax+0x0]
   12510:	lea    rsi,[rip+0xc11f]        # 1e636 <_IO_stdin_used+0x636>
   12517:	mov    edi,0x1
   1251c:	xor    eax,eax
   1251e:	jmp    5200 <__printf_chk@plt>
   12523:	nop    DWORD PTR [rax+rax*1+0x0]
   12528:	mov    eax,ecx
   1252a:	add    DWORD PTR [rsi+rax*4+0x40],0x1
   1252f:	jmp    124cf <pv_hypercall_process+0x1f>
   12531:	nop    DWORD PTR [rax+0x0]
   12538:	mov    r8d,DWORD PTR [rax]
   1253b:	mov    ecx,DWORD PTR [rax+0x4]
   1253e:	jmp    124c0 <pv_hypercall_process+0x10>

0000000000012540 <pv_trap_process>:
   12540:	push   rbp
   12541:	push   rbx
   12542:	sub    rsp,0x8
   12546:	mov    rax,QWORD PTR [rdi+0x20]
   1254a:	test   BYTE PTR [rdi+0x11],0x1
   1254e:	je     125e0 <pv_trap_process+0xa0>
   12554:	movzx  ebx,BYTE PTR [rax+0x9]
   12558:	movzx  ecx,WORD PTR [rax+0x8]
   1255c:	mov    r8,QWORD PTR [rax]
   1255f:	movzx  ebp,WORD PTR [rax+0xa]
   12563:	shr    bl,0x7
   12566:	and    ecx,0x7fff
   1256c:	movzx  ebx,bl
   1256f:	mov    eax,DWORD PTR [rip+0x18b2f]        # 2b0a4 <opt+0x4>
   12575:	test   eax,eax
   12577:	je     1257e <pv_trap_process+0x3e>
   12579:	cmp    ecx,0x13
   1257c:	jbe    12590 <pv_trap_process+0x50>
   1257e:	test   BYTE PTR [rip+0x18b1c],0x40        # 2b0a1 <opt+0x1>
   12585:	jne    125a3 <pv_trap_process+0x63>
   12587:	add    rsp,0x8
   1258b:	pop    rbx
   1258c:	pop    rbp
   1258d:	ret    
   1258e:	xchg   ax,ax
   12590:	mov    eax,ecx
   12592:	add    DWORD PTR [rsi+rax*4+0x120],0x1
   1259a:	test   BYTE PTR [rip+0x18b00],0x40        # 2b0a1 <opt+0x1>
   125a1:	je     12587 <pv_trap_process+0x47>
   125a3:	lea    rdx,[rdi+0x28]
   125a7:	xor    eax,eax
   125a9:	lea    rsi,[rip+0xc0a1]        # 1e651 <_IO_stdin_used+0x651>
   125b0:	mov    edi,0x1
   125b5:	call   5200 <__printf_chk@plt>
   125ba:	test   ebx,ebx
   125bc:	je     12600 <pv_trap_process+0xc0>
   125be:	add    rsp,0x8
   125c2:	mov    edx,ebp
   125c4:	lea    rsi,[rip+0xc09b]        # 1e666 <_IO_stdin_used+0x666>
   125cb:	xor    eax,eax
   125cd:	pop    rbx
   125ce:	mov    edi,0x1
   125d3:	pop    rbp
   125d4:	jmp    5200 <__printf_chk@plt>
   125d9:	nop    DWORD PTR [rax+0x0]
   125e0:	movzx  ebx,BYTE PTR [rax+0x5]
   125e4:	movzx  ecx,WORD PTR [rax+0x4]
   125e8:	mov    r8d,DWORD PTR [rax]
   125eb:	movzx  ebp,WORD PTR [rax+0x6]
   125ef:	shr    bl,0x7
   125f2:	and    ecx,0x7fff
   125f8:	movzx  ebx,bl
   125fb:	jmp    1256f <pv_trap_process+0x2f>
   12600:	add    rsp,0x8
   12604:	mov    edi,0xa
   12609:	pop    rbx
   1260a:	pop    rbp
   1260b:	jmp    5050 <putchar@plt>

0000000000012610 <pv_generic_process>:
   12610:	test   BYTE PTR [rip+0x18a8a],0x40        # 2b0a1 <opt+0x1>
   12617:	je     126d0 <pv_generic_process+0xc0>
   1261d:	push   r12
   1261f:	lea    rdx,[rdi+0x28]
   12623:	push   rbp
   12624:	push   rbx
   12625:	mov    eax,DWORD PTR [rdi+0x10]
   12628:	mov    rbx,rdi
   1262b:	movzx  ecx,al
   1262e:	cmp    al,0xe
   12630:	ja     126d8 <pv_generic_process+0xc8>
   12636:	movsxd rax,ecx
   12639:	lea    rsi,[rip+0x18e40]        # 2b480 <pv_name>
   12640:	mov    rax,QWORD PTR [rsi+rax*8]
   12644:	test   rax,rax
   12647:	je     126d8 <pv_generic_process+0xc8>
   1264d:	mov    rcx,rax
   12650:	lea    rsi,[rip+0xc017]        # 1e66e <_IO_stdin_used+0x66e>
   12657:	mov    edi,0x1
   1265c:	xor    eax,eax
   1265e:	call   5200 <__printf_chk@plt>
   12663:	mov    edx,DWORD PTR [rbx+0x14]
   12666:	test   edx,edx
   12668:	je     126f6 <pv_generic_process+0xe6>
   1266e:	lea    rsi,[rip+0xc00b]        # 1e680 <_IO_stdin_used+0x680>
   12675:	mov    edi,0x1
   1267a:	xor    eax,eax
   1267c:	xor    ebp,ebp
   1267e:	call   5200 <__printf_chk@plt>
   12683:	mov    eax,DWORD PTR [rbx+0x14]
   12686:	lea    r12,[rip+0xbff6]        # 1e683 <_IO_stdin_used+0x683>
   1268d:	test   eax,eax
   1268f:	jle    126b7 <pv_generic_process+0xa7>
   12691:	nop    DWORD PTR [rax+0x0]
   12698:	mov    rax,QWORD PTR [rbx+0x20]
   1269c:	mov    rsi,r12
   1269f:	mov    edi,0x1
   126a4:	mov    edx,DWORD PTR [rax+rbp*4]
   126a7:	xor    eax,eax
   126a9:	add    rbp,0x1
   126ad:	call   5200 <__printf_chk@plt>
   126b2:	cmp    DWORD PTR [rbx+0x14],ebp
   126b5:	jg     12698 <pv_generic_process+0x88>
   126b7:	mov    edi,0x5d
   126bc:	call   5050 <putchar@plt>
   126c1:	pop    rbx
   126c2:	mov    edi,0xa
   126c7:	pop    rbp
   126c8:	pop    r12
   126ca:	jmp    5050 <putchar@plt>
   126cf:	nop
   126d0:	ret    
   126d1:	nop    DWORD PTR [rax+0x0]
   126d8:	lea    rsi,[rip+0xbf96]        # 1e675 <_IO_stdin_used+0x675>
   126df:	mov    edi,0x1
   126e4:	xor    eax,eax
   126e6:	call   5200 <__printf_chk@plt>
   126eb:	mov    edx,DWORD PTR [rbx+0x14]
   126ee:	test   edx,edx
   126f0:	jne    1266e <pv_generic_process+0x5e>
   126f6:	pop    rbx
   126f7:	mov    edi,0xa
   126fc:	pop    rbp
   126fd:	pop    r12
   126ff:	jmp    5050 <putchar@plt>
   12704:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1270f:	nop

0000000000012710 <pv_summary>:
   12710:	test   BYTE PTR [rdi],0x1
   12713:	jne    12716 <pv_summary+0x6>
   12715:	ret    
   12716:	push   r15
   12718:	lea    r15,[rip+0x18d61]        # 2b480 <pv_name>
   1271f:	push   r14
   12721:	mov    r14,rdi
   12724:	lea    rdi,[rip+0xbf5c]        # 1e687 <_IO_stdin_used+0x687>
   1272b:	push   r13
   1272d:	push   r12
   1272f:	lea    r12,[rip+0x18faa]        # 2b6e0 <hypercall_name>
   12736:	push   rbp
   12737:	xor    ebp,ebp
   12739:	push   rbx
   1273a:	sub    rsp,0x8
   1273e:	call   5090 <puts@plt>
   12743:	jmp    12780 <pv_summary+0x70>
   12745:	nop    DWORD PTR [rax]
   12748:	test   ecx,ecx
   1274a:	je     12772 <pv_summary+0x62>
   1274c:	mov    rdx,QWORD PTR [r15+rbp*8]
   12750:	xor    eax,eax
   12752:	mov    edi,0x1
   12757:	lea    rsi,[rip+0xbf34]        # 1e692 <_IO_stdin_used+0x692>
   1275e:	call   5200 <__printf_chk@plt>
   12763:	cmp    ebx,0x3
   12766:	je     127e0 <pv_summary+0xd0>
   12768:	cmp    ebx,0xd
   1276b:	je     127a0 <pv_summary+0x90>
   1276d:	cmp    ebx,0x1
   12770:	je     127a0 <pv_summary+0x90>
   12772:	cmp    r13d,0xe
   12776:	je     12815 <pv_summary+0x105>
   1277c:	add    rbp,0x1
   12780:	mov    r13d,ebp
   12783:	mov    ebx,ebp
   12785:	mov    ecx,DWORD PTR [r14+rbp*4+0x4]
   1278a:	cmp    rbp,0xd
   1278e:	jne    12748 <pv_summary+0x38>
   12790:	add    ecx,DWORD PTR [r14+0x3c]
   12794:	je     1277c <pv_summary+0x6c>
   12796:	jmp    1274c <pv_summary+0x3c>
   12798:	nop    DWORD PTR [rax+rax*1+0x0]
   127a0:	xor    ebx,ebx
   127a2:	jmp    127b2 <pv_summary+0xa2>
   127a4:	nop    DWORD PTR [rax+0x0]
   127a8:	add    rbx,0x1
   127ac:	cmp    rbx,0x38
   127b0:	je     12772 <pv_summary+0x62>
   127b2:	mov    r8d,DWORD PTR [r14+rbx*4+0x40]
   127b7:	test   r8d,r8d
   127ba:	je     127a8 <pv_summary+0x98>
   127bc:	mov    rdx,QWORD PTR [r12+rbx*8]
   127c0:	mov    ecx,ebx
   127c2:	lea    rsi,[rip+0xbed3]        # 1e69c <_IO_stdin_used+0x69c>
   127c9:	xor    eax,eax
   127cb:	mov    edi,0x1
   127d0:	call   5200 <__printf_chk@plt>
   127d5:	jmp    127a8 <pv_summary+0x98>
   127d7:	nop    WORD PTR [rax+rax*1+0x0]
   127e0:	xor    ebx,ebx
   127e2:	jmp    127f2 <pv_summary+0xe2>
   127e4:	nop    DWORD PTR [rax+0x0]
   127e8:	add    rbx,0x1
   127ec:	cmp    rbx,0x14
   127f0:	je     1277c <pv_summary+0x6c>
   127f2:	mov    ecx,DWORD PTR [r14+rbx*4+0x120]
   127fa:	test   ecx,ecx
   127fc:	je     127e8 <pv_summary+0xd8>
   127fe:	mov    edx,ebx
   12800:	lea    rsi,[rip+0xbeaa]        # 1e6b1 <_IO_stdin_used+0x6b1>
   12807:	mov    edi,0x1
   1280c:	xor    eax,eax
   1280e:	call   5200 <__printf_chk@plt>
   12813:	jmp    127e8 <pv_summary+0xd8>
   12815:	add    rsp,0x8
   12819:	pop    rbx
   1281a:	pop    rbp
   1281b:	pop    r12
   1281d:	pop    r13
   1281f:	pop    r14
   12821:	pop    r15
   12823:	ret    
   12824:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1282f:	nop

0000000000012830 <pv_hypercall_gather_args>:
   12830:	pxor   xmm0,xmm0
   12834:	mov    ecx,0x14
   12839:	mov    edx,0x1
   1283e:	movups XMMWORD PTR [rsi],xmm0
   12841:	movups XMMWORD PTR [rsi+0x10],xmm0
   12845:	movups XMMWORD PTR [rsi+0x20],xmm0
   12849:	cmp    DWORD PTR [rdi+0x14],edx
   1284c:	jle    1288c <pv_hypercall_gather_args+0x5c>
   1284e:	mov    r8,QWORD PTR [rdi+0x20]
   12852:	mov    eax,DWORD PTR [r8]
   12855:	shr    eax,cl
   12857:	and    eax,0x3
   1285a:	cmp    eax,0x1
   1285d:	je     12890 <pv_hypercall_gather_args+0x60>
   1285f:	cmp    eax,0x2
   12862:	jne    1287e <pv_hypercall_gather_args+0x4e>
   12864:	movsxd r10,edx
   12867:	add    r10,0x1
   1286b:	mov    r9d,DWORD PTR [r8+r10*4]
   1286f:	mov    r8d,DWORD PTR [r8+r10*4-0x4]
   12874:	shl    r9,0x20
   12878:	or     r8,r9
   1287b:	mov    QWORD PTR [rsi],r8
   1287e:	add    ecx,0x2
   12881:	add    edx,eax
   12883:	add    rsi,0x8
   12887:	cmp    ecx,0x20
   1288a:	jne    12849 <pv_hypercall_gather_args+0x19>
   1288c:	ret    
   1288d:	nop    DWORD PTR [rax]
   12890:	movsxd r9,edx
   12893:	mov    r11d,DWORD PTR [r8+r9*4]
   12897:	mov    QWORD PTR [rsi],r11
   1289a:	jmp    1287e <pv_hypercall_gather_args+0x4e>
   1289c:	nop    DWORD PTR [rax+0x0]

00000000000128a0 <pv_hypercall_v2_process>:
   128a0:	push   r14
   128a2:	mov    rcx,rdx
   128a5:	push   r13
   128a7:	push   r12
   128a9:	push   rbp
   128aa:	mov    rbp,rdi
   128ad:	push   rbx
   128ae:	sub    rsp,0x40
   128b2:	mov    rax,QWORD PTR fs:0x28
   128bb:	mov    QWORD PTR [rsp+0x38],rax
   128c0:	xor    eax,eax
   128c2:	mov    rax,QWORD PTR [rdi+0x20]
   128c6:	mov    ebx,DWORD PTR [rax]
   128c8:	mov    eax,DWORD PTR [rip+0x187d6]        # 2b0a4 <opt+0x4>
   128ce:	and    ebx,0xfffff
   128d4:	test   eax,eax
   128d6:	je     128e1 <pv_hypercall_v2_process+0x41>
   128d8:	cmp    ebx,0x37
   128db:	jbe    129d0 <pv_hypercall_v2_process+0x130>
   128e1:	test   BYTE PTR [rip+0x187b9],0x40        # 2b0a1 <opt+0x1>
   128e8:	je     1296a <pv_hypercall_v2_process+0xca>
   128ee:	lea    rdx,[rbp+0x28]
   128f2:	cmp    ebx,0x25
   128f5:	jbe    12990 <pv_hypercall_v2_process+0xf0>
   128fb:	mov    r8d,ebx
   128fe:	lea    rsi,[rip+0xbddf]        # 1e6e4 <_IO_stdin_used+0x6e4>
   12905:	mov    edi,0x1
   1290a:	xor    eax,eax
   1290c:	call   5200 <__printf_chk@plt>
   12911:	mov    r12d,0x14
   12917:	mov    r13d,0x1
   1291d:	lea    r14,[rip+0xbe07]        # 1e72b <_IO_stdin_used+0x72b>
   12924:	cmp    DWORD PTR [rbp+0x14],r13d
   12928:	jle    12960 <pv_hypercall_v2_process+0xc0>
   1292a:	mov    rax,QWORD PTR [rbp+0x20]
   1292e:	mov    ecx,r12d
   12931:	mov    ebx,DWORD PTR [rax]
   12933:	shr    ebx,cl
   12935:	and    ebx,0x3
   12938:	cmp    ebx,0x1
   1293b:	je     12bb0 <pv_hypercall_v2_process+0x310>
   12941:	cmp    ebx,0x2
   12944:	je     12b80 <pv_hypercall_v2_process+0x2e0>
   1294a:	test   ebx,ebx
   1294c:	je     12b60 <pv_hypercall_v2_process+0x2c0>
   12952:	add    r12d,0x2
   12956:	add    r13d,ebx
   12959:	cmp    r12d,0x20
   1295d:	jne    12924 <pv_hypercall_v2_process+0x84>
   1295f:	nop
   12960:	mov    edi,0xa
   12965:	call   5050 <putchar@plt>
   1296a:	mov    rax,QWORD PTR [rsp+0x38]
   1296f:	xor    rax,QWORD PTR fs:0x28
   12978:	jne    12bfd <pv_hypercall_v2_process+0x35d>
   1297e:	add    rsp,0x40
   12982:	pop    rbx
   12983:	pop    rbp
   12984:	pop    r12
   12986:	pop    r13
   12988:	pop    r14
   1298a:	ret    
   1298b:	nop    DWORD PTR [rax+rax*1+0x0]
   12990:	movsxd rax,ebx
   12993:	lea    rsi,[rip+0x18d46]        # 2b6e0 <hypercall_name>
   1299a:	mov    r8d,ebx
   1299d:	mov    edi,0x1
   129a2:	mov    r9,QWORD PTR [rsi+rax*8]
   129a6:	xor    eax,eax
   129a8:	lea    rsi,[rip+0xbd1c]        # 1e6cb <_IO_stdin_used+0x6cb>
   129af:	call   5200 <__printf_chk@plt>
   129b4:	cmp    ebx,0x1d
   129b7:	ja     12911 <pv_hypercall_v2_process+0x71>
   129bd:	lea    rdx,[rip+0x11618]        # 23fdc <_IO_stdin_used+0x5fdc>
   129c4:	movsxd rax,DWORD PTR [rdx+rbx*4]
   129c8:	add    rax,rdx
   129cb:	jmp    rax
   129cd:	nop    DWORD PTR [rax]
   129d0:	mov    eax,ebx
   129d2:	add    DWORD PTR [rsi+rax*4+0x40],0x1
   129d7:	jmp    128e1 <pv_hypercall_v2_process+0x41>
   129dc:	nop    DWORD PTR [rax+0x0]
   129e0:	mov    rdi,rbp
   129e3:	mov    rsi,rsp
   129e6:	call   12830 <pv_hypercall_gather_args>
   129eb:	mov    rdi,QWORD PTR [rsp]
   129ef:	mov    eax,edi
   129f1:	cmp    rax,0x6
   129f5:	ja     12be0 <pv_hypercall_v2_process+0x340>
   129fb:	lea    rdx,[rip+0x1879e]        # 2b1a0 <sched_op_str>
   12a02:	mov    rdx,QWORD PTR [rdx+rax*8]
   12a06:	lea    rsi,[rip+0xb7c4]        # 1e1d1 <_IO_stdin_used+0x1d1>
   12a0d:	mov    edi,0x1
   12a12:	xor    eax,eax
   12a14:	call   5200 <__printf_chk@plt>
   12a19:	jmp    12960 <pv_hypercall_v2_process+0xc0>
   12a1e:	xchg   ax,ax
   12a20:	mov    rsi,rsp
   12a23:	mov    rdi,rbp
   12a26:	call   12830 <pv_hypercall_gather_args>
   12a2b:	mov    edx,DWORD PTR [rsp+0x8]
   12a2f:	mov    edi,0x1
   12a34:	xor    eax,eax
   12a36:	lea    rsi,[rip+0xbcd6]        # 1e713 <_IO_stdin_used+0x713>
   12a3d:	call   5200 <__printf_chk@plt>
   12a42:	jmp    12960 <pv_hypercall_v2_process+0xc0>
   12a47:	nop    WORD PTR [rax+rax*1+0x0]
   12a50:	mov    rdi,rbp
   12a53:	mov    rsi,rsp
   12a56:	call   12830 <pv_hypercall_gather_args>
   12a5b:	mov    rdi,QWORD PTR [rsp]
   12a5f:	mov    rbx,QWORD PTR [rsp+0x8]
   12a64:	mov    eax,edi
   12a66:	cmp    rax,0xd
   12a6a:	ja     12bd0 <pv_hypercall_v2_process+0x330>
   12a70:	lea    rdx,[rip+0x18769]        # 2b1e0 <vcpu_op_str>
   12a77:	mov    rdx,QWORD PTR [rdx+rax*8]
   12a7b:	mov    ecx,ebx
   12a7d:	lea    rsi,[rip+0xbc97]        # 1e71b <_IO_stdin_used+0x71b>
   12a84:	mov    edi,0x1
   12a89:	xor    eax,eax
   12a8b:	call   5200 <__printf_chk@plt>
   12a90:	jmp    12960 <pv_hypercall_v2_process+0xc0>
   12a95:	nop    DWORD PTR [rax]
   12a98:	mov    rdi,rbp
   12a9b:	mov    rsi,rsp
   12a9e:	call   12830 <pv_hypercall_gather_args>
   12aa3:	mov    rdi,QWORD PTR [rsp]
   12aa7:	mov    rbx,QWORD PTR [rsp+0x10]
   12aac:	mov    eax,edi
   12aae:	cmp    rax,0xb
   12ab2:	ja     12bf0 <pv_hypercall_v2_process+0x350>
   12ab8:	lea    rdx,[rip+0x187a1]        # 2b260 <grant_table_op_str>
   12abf:	mov    rdx,QWORD PTR [rdx+rax*8]
   12ac3:	mov    ecx,ebx
   12ac5:	lea    rsi,[rip+0xbc44]        # 1e710 <_IO_stdin_used+0x710>
   12acc:	mov    edi,0x1
   12ad1:	xor    eax,eax
   12ad3:	call   5200 <__printf_chk@plt>
   12ad8:	jmp    12960 <pv_hypercall_v2_process+0xc0>
   12add:	nop    DWORD PTR [rax]
   12ae0:	mov    rsi,rsp
   12ae3:	mov    rdi,rbp
   12ae6:	call   12830 <pv_hypercall_gather_args>
   12aeb:	mov    edx,DWORD PTR [rsp+0x8]
   12aef:	mov    edi,0x1
   12af4:	xor    eax,eax
   12af6:	lea    rsi,[rip+0xbc09]        # 1e706 <_IO_stdin_used+0x706>
   12afd:	call   5200 <__printf_chk@plt>
   12b02:	jmp    12960 <pv_hypercall_v2_process+0xc0>
   12b07:	nop    WORD PTR [rax+rax*1+0x0]
   12b10:	mov    rsi,rsp
   12b13:	mov    rdi,rbp
   12b16:	call   12830 <pv_hypercall_gather_args>
   12b1b:	mov    rdx,QWORD PTR [rsp+0x8]
   12b20:	lea    rax,[rip+0xbf9e]        # 1eac5 <_IO_stdin_used+0xac5>
   12b27:	lea    rcx,[rip+0xbb90]        # 1e6be <_IO_stdin_used+0x6be>
   12b2e:	lea    rsi,[rip+0xbbc3]        # 1e6f8 <_IO_stdin_used+0x6f8>
   12b35:	mov    edi,0x1
   12b3a:	test   edx,0x80000000
   12b40:	cmove  rcx,rax
   12b44:	and    edx,0x7fffffff
   12b4a:	xor    eax,eax
   12b4c:	call   5200 <__printf_chk@plt>
   12b51:	jmp    12960 <pv_hypercall_v2_process+0xc0>
   12b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12b60:	lea    rsi,[rip+0xbbc0]        # 1e727 <_IO_stdin_used+0x727>
   12b67:	mov    edi,0x1
   12b6c:	xor    eax,eax
   12b6e:	call   5200 <__printf_chk@plt>
   12b73:	jmp    12952 <pv_hypercall_v2_process+0xb2>
   12b78:	nop    DWORD PTR [rax+rax*1+0x0]
   12b80:	movsxd rcx,r13d
   12b83:	lea    rsi,[rip+0xbba7]        # 1e731 <_IO_stdin_used+0x731>
   12b8a:	mov    edi,0x1
   12b8f:	add    rcx,0x1
   12b93:	mov    edx,DWORD PTR [rax+rcx*4]
   12b96:	mov    eax,DWORD PTR [rax+rcx*4-0x4]
   12b9a:	shl    rdx,0x20
   12b9e:	or     rdx,rax
   12ba1:	xor    eax,eax
   12ba3:	call   5200 <__printf_chk@plt>
   12ba8:	jmp    12952 <pv_hypercall_v2_process+0xb2>
   12bad:	nop    DWORD PTR [rax]
   12bb0:	movsxd rdx,r13d
   12bb3:	mov    rsi,r14
   12bb6:	mov    edi,0x1
   12bbb:	mov    edx,DWORD PTR [rax+rdx*4]
   12bbe:	xor    eax,eax
   12bc0:	call   5200 <__printf_chk@plt>
   12bc5:	jmp    12952 <pv_hypercall_v2_process+0xb2>
   12bca:	nop    WORD PTR [rax+rax*1+0x0]
   12bd0:	call   56a0 <cmd_to_str.part.4>
   12bd5:	mov    rdx,rax
   12bd8:	jmp    12a7b <pv_hypercall_v2_process+0x1db>
   12bdd:	nop    DWORD PTR [rax]
   12be0:	call   56a0 <cmd_to_str.part.4>
   12be5:	mov    rdx,rax
   12be8:	jmp    12a06 <pv_hypercall_v2_process+0x166>
   12bed:	nop    DWORD PTR [rax]
   12bf0:	call   56a0 <cmd_to_str.part.4>
   12bf5:	mov    rdx,rax
   12bf8:	jmp    12ac3 <pv_hypercall_v2_process+0x223>
   12bfd:	call   50d0 <__stack_chk_fail@plt>
   12c02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   12c0d:	nop    DWORD PTR [rax]

0000000000012c10 <vcpu_create>:
   12c10:	push   r13
   12c12:	movsxd rax,esi
   12c15:	push   r12
   12c17:	lea    r13,[rdi+rax*8]
   12c1b:	push   rbp
   12c1c:	push   rbx
   12c1d:	sub    rsp,0x8
   12c21:	cmp    QWORD PTR [r13+0x10],0x0
   12c26:	jne    12cf6 <vcpu_create+0xe6>
   12c2c:	mov    r8d,DWORD PTR [rdi+0x8]
   12c30:	mov    rbp,rdi
   12c33:	mov    rdi,QWORD PTR [rip+0x5461e]        # 67258 <warn>
   12c3a:	mov    ecx,eax
   12c3c:	lea    rdx,[rip+0xbb0b]        # 1e74e <_IO_stdin_used+0x74e>
   12c43:	mov    esi,0x1
   12c48:	mov    r12,rax
   12c4b:	xor    eax,eax
   12c4d:	call   5270 <__fprintf_chk@plt>
   12c52:	mov    edi,0x2c028
   12c57:	call   51a0 <malloc@plt>
   12c5c:	mov    rbx,rax
   12c5f:	test   rax,rax
   12c62:	je     12cb8 <vcpu_create+0xa8>
   12c64:	mov    edx,0x2c028
   12c69:	xor    esi,esi
   12c6b:	mov    rdi,rbx
   12c6e:	call   5130 <memset@plt>
   12c73:	mov    DWORD PTR [rbx],r12d
   12c76:	mov    QWORD PTR [rbx+0x8],rbp
   12c7a:	mov    QWORD PTR [rbx+0x50],0x0
   12c82:	mov    DWORD PTR [rbx+0x18],0x6
   12c89:	mov    DWORD PTR [rbx+0x28],0x6
   12c90:	mov    QWORD PTR [r13+0x10],rbx
   12c94:	cmp    DWORD PTR [rbp+0x810],r12d
   12c9b:	jge    12ca4 <vcpu_create+0x94>
   12c9d:	mov    DWORD PTR [rbp+0x810],r12d
   12ca4:	add    rsp,0x8
   12ca8:	mov    rax,rbx
   12cab:	pop    rbx
   12cac:	pop    rbp
   12cad:	pop    r12
   12caf:	pop    r13
   12cb1:	ret    
   12cb2:	nop    WORD PTR [rax+rax*1+0x0]
   12cb8:	mov    rdi,QWORD PTR [rip+0x1b781]        # 2e440 <stderr@@GLIBC_2.2.5>
   12cbf:	xor    eax,eax
   12cc1:	mov    r8d,0x1338
   12cc7:	lea    rcx,[rip+0x1177a]        # 24448 <__func__.7481>
   12cce:	lea    rdx,[rip+0xba96]        # 1e76b <_IO_stdin_used+0x76b>
   12cd5:	mov    esi,0x1
   12cda:	call   5270 <__fprintf_chk@plt>
   12cdf:	cmp    DWORD PTR [rip+0x183fa],0x7        # 2b0e0 <opt+0x40>
   12ce6:	ja     12c64 <vcpu_create+0x54>
   12cec:	mov    edi,0x1
   12cf1:	call   5250 <exit@plt>
   12cf6:	lea    rcx,[rip+0x1175b]        # 24458 <__PRETTY_FUNCTION__.7480>
   12cfd:	mov    edx,0x19f9
   12d02:	lea    rsi,[rip+0xb3bf]        # 1e0c8 <_IO_stdin_used+0xc8>
   12d09:	lea    rdi,[rip+0xba29]        # 1e739 <_IO_stdin_used+0x739>
   12d10:	call   5110 <__assert_fail@plt>
   12d15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000012d20 <domain_init>:
   12d20:	mov    QWORD PTR [rdi+0x1330],0x0
   12d2b:	mov    rdx,rdi
   12d2e:	xor    eax,eax
   12d30:	lea    rdi,[rdi+0x8]
   12d34:	and    rdi,0xfffffffffffffff8
   12d38:	mov    rcx,rdx
   12d3b:	sub    rcx,rdi
   12d3e:	add    ecx,0x1338
   12d44:	shr    ecx,0x3
   12d47:	rep stos QWORD PTR es:[rdi],rax
   12d4a:	mov    DWORD PTR [rdx+0x8],esi
   12d4d:	mov    QWORD PTR [rdx],0x0
   12d54:	cmp    DWORD PTR [rip+0x183a1],0x2        # 2b0fc <opt+0x5c>
   12d5b:	je     12d60 <domain_init+0x40>
   12d5d:	ret    
   12d5e:	xchg   ax,ax
   12d60:	mov    rdi,rdx
   12d63:	jmp    97f0 <interval_domain_value_check>
   12d68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012d70 <domain_create>:
   12d70:	push   rbp
   12d71:	mov    ecx,edi
   12d73:	mov    ebp,edi
   12d75:	lea    rdx,[rip+0xba07]        # 1e783 <_IO_stdin_used+0x783>
   12d7c:	push   rbx
   12d7d:	mov    esi,0x1
   12d82:	xor    eax,eax
   12d84:	sub    rsp,0x8
   12d88:	mov    rdi,QWORD PTR [rip+0x544c9]        # 67258 <warn>
   12d8f:	call   5270 <__fprintf_chk@plt>
   12d94:	mov    edi,0x1338
   12d99:	call   51a0 <malloc@plt>
   12d9e:	mov    rbx,rax
   12da1:	test   rax,rax
   12da4:	je     12dc0 <domain_create+0x50>
   12da6:	mov    esi,ebp
   12da8:	mov    rdi,rbx
   12dab:	call   12d20 <domain_init>
   12db0:	add    rsp,0x8
   12db4:	mov    rax,rbx
   12db7:	pop    rbx
   12db8:	pop    rbp
   12db9:	ret    
   12dba:	nop    WORD PTR [rax+rax*1+0x0]
   12dc0:	mov    rdi,QWORD PTR [rip+0x1b679]        # 2e440 <stderr@@GLIBC_2.2.5>
   12dc7:	xor    eax,eax
   12dc9:	mov    r8d,0x1338
   12dcf:	lea    rcx,[rip+0x11662]        # 24438 <__func__.7490>
   12dd6:	lea    rdx,[rip+0xb98e]        # 1e76b <_IO_stdin_used+0x76b>
   12ddd:	mov    esi,0x1
   12de2:	call   5270 <__fprintf_chk@plt>
   12de7:	cmp    DWORD PTR [rip+0x182f2],0x7        # 2b0e0 <opt+0x40>
   12dee:	ja     12da6 <domain_create+0x36>
   12df0:	mov    edi,0x1
   12df5:	call   5250 <exit@plt>
   12dfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012e00 <domain_find>:
   12e00:	push   rbp
   12e01:	push   rbx
   12e02:	sub    rsp,0x8
   12e06:	mov    rbx,QWORD PTR [rip+0x54423]        # 67230 <domain_list>
   12e0d:	test   rbx,rbx
   12e10:	je     12e5e <domain_find+0x5e>
   12e12:	mov    edx,DWORD PTR [rbx+0x8]
   12e15:	cmp    edi,edx
   12e17:	jg     12e27 <domain_find+0x27>
   12e19:	jmp    12e45 <domain_find+0x45>
   12e1b:	nop    DWORD PTR [rax+rax*1+0x0]
   12e20:	mov    edx,DWORD PTR [rbx+0x8]
   12e23:	cmp    edx,edi
   12e25:	jge    12e50 <domain_find+0x50>
   12e27:	mov    rbp,rbx
   12e2a:	mov    rbx,QWORD PTR [rbx]
   12e2d:	test   rbx,rbx
   12e30:	jne    12e20 <domain_find+0x20>
   12e32:	call   12d70 <domain_create>
   12e37:	mov    QWORD PTR [rax],rbx
   12e3a:	mov    QWORD PTR [rbp+0x0],rax
   12e3e:	add    rsp,0x8
   12e42:	pop    rbx
   12e43:	pop    rbp
   12e44:	ret    
   12e45:	lea    rbp,[rip+0x543e4]        # 67230 <domain_list>
   12e4c:	nop    DWORD PTR [rax+0x0]
   12e50:	mov    rax,rbx
   12e53:	cmp    edx,edi
   12e55:	jne    12e32 <domain_find+0x32>
   12e57:	add    rsp,0x8
   12e5b:	pop    rbx
   12e5c:	pop    rbp
   12e5d:	ret    
   12e5e:	lea    rbp,[rip+0x543cb]        # 67230 <domain_list>
   12e65:	jmp    12e32 <domain_find+0x32>
   12e67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012e70 <vcpu_find>:
   12e70:	push   rbx
   12e71:	mov    ebx,esi
   12e73:	call   12e00 <domain_find>
   12e78:	movsxd rdx,ebx
   12e7b:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
   12e80:	test   rdx,rdx
   12e83:	je     12e90 <vcpu_find+0x20>
   12e85:	mov    rax,rdx
   12e88:	pop    rbx
   12e89:	ret    
   12e8a:	nop    WORD PTR [rax+rax*1+0x0]
   12e90:	mov    esi,ebx
   12e92:	mov    rdi,rax
   12e95:	pop    rbx
   12e96:	jmp    12c10 <vcpu_create>
   12e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012ea0 <pcpu_runstate_update>:
   12ea0:	mov    rax,QWORD PTR [rdi+0x2d0]
   12ea7:	test   rax,rax
   12eaa:	je     12fe0 <pcpu_runstate_update+0x140>
   12eb0:	push   r12
   12eb2:	sub    rsi,rax
   12eb5:	push   rbp
   12eb6:	mov    rbp,rsi
   12eb9:	push   rbx
   12eba:	mov    rax,QWORD PTR [rdi+0x1a8]
   12ec1:	mov    rbx,rdi
   12ec4:	mov    rax,QWORD PTR [rax+0x8]
   12ec8:	cmp    DWORD PTR [rax+0x8],0x7fff
   12ecf:	je     12fe8 <pcpu_runstate_update+0x148>
   12ed5:	add    DWORD PTR [rdi+0x310],0x1
   12edc:	test   rsi,rsi
   12edf:	je     12fc6 <pcpu_runstate_update+0x126>
   12ee5:	movsxd rcx,DWORD PTR [rdi+0x314]
   12eec:	mov    edx,DWORD PTR [rip+0x181e6]        # 2b0d8 <opt+0x38>
   12ef2:	mov    eax,ecx
   12ef4:	test   edx,edx
   12ef6:	je     12fa8 <pcpu_runstate_update+0x108>
   12efc:	mov    eax,DWORD PTR [rdi+0x318]
   12f02:	cmp    eax,ecx
   12f04:	jg     130f0 <pcpu_runstate_update+0x250>
   12f0a:	mov    r12d,DWORD PTR [rip+0x181cb]        # 2b0dc <opt+0x3c>
   12f11:	test   ecx,ecx
   12f13:	jne    13128 <pcpu_runstate_update+0x288>
   12f19:	add    eax,eax
   12f1b:	cmove  eax,edx
   12f1e:	cmp    eax,r12d
   12f21:	jle    13158 <pcpu_runstate_update+0x2b8>
   12f27:	test   r12d,r12d
   12f2a:	je     13158 <pcpu_runstate_update+0x2b8>
   12f30:	movsxd rsi,r12d
   12f33:	mov    rdi,QWORD PTR [rbx+0x328]
   12f3a:	shl    rsi,0x3
   12f3e:	call   51d0 <realloc@plt>
   12f43:	test   rax,rax
   12f46:	je     13148 <pcpu_runstate_update+0x2a8>
   12f4c:	mov    QWORD PTR [rbx+0x328],rax
   12f53:	mov    DWORD PTR [rbx+0x318],r12d
   12f5a:	movsxd rcx,DWORD PTR [rbx+0x314]
   12f61:	cmp    ecx,r12d
   12f64:	jl     130f0 <pcpu_runstate_update+0x250>
   12f6a:	mov    eax,ecx
   12f6c:	cdq    
   12f6d:	idiv   r12d
   12f70:	lea    esi,[rax+0x1]
   12f73:	movsxd rdi,edx
   12f76:	mov    edx,0x55555556
   12f7b:	mov    eax,esi
   12f7d:	imul   edx
   12f7f:	mov    eax,esi
   12f81:	sar    eax,0x1f
   12f84:	sub    eax,edx
   12f86:	add    eax,edi
   12f88:	cdq    
   12f89:	idiv   esi
   12f8b:	mov    eax,ecx
   12f8d:	test   edx,edx
   12f8f:	jne    12fa8 <pcpu_runstate_update+0x108>
   12f91:	mov    rax,QWORD PTR [rbx+0x328]
   12f98:	mov    QWORD PTR [rax+rdi*8],rbp
   12f9c:	mov    eax,DWORD PTR [rbx+0x314]
   12fa2:	nop    WORD PTR [rax+rax*1+0x0]
   12fa8:	add    eax,0x1
   12fab:	add    QWORD PTR [rbx+0x320],rbp
   12fb2:	add    DWORD PTR [rbx+0x330],0x1
   12fb9:	add    QWORD PTR [rbx+0x338],rbp
   12fc0:	mov    DWORD PTR [rbx+0x314],eax
   12fc6:	mov    QWORD PTR [rbx+0x2d0],0x0
   12fd1:	pop    rbx
   12fd2:	pop    rbp
   12fd3:	pop    r12
   12fd5:	ret    
   12fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   12fe0:	ret    
   12fe1:	nop    DWORD PTR [rax+0x0]
   12fe8:	add    DWORD PTR [rdi+0x2d8],0x1
   12fef:	test   rsi,rsi
   12ff2:	je     12fc6 <pcpu_runstate_update+0x126>
   12ff4:	movsxd rcx,DWORD PTR [rdi+0x2dc]
   12ffb:	mov    edx,DWORD PTR [rip+0x180d7]        # 2b0d8 <opt+0x38>
   13001:	mov    eax,ecx
   13003:	test   edx,edx
   13005:	je     130bb <pcpu_runstate_update+0x21b>
   1300b:	mov    eax,DWORD PTR [rdi+0x2e0]
   13011:	cmp    eax,ecx
   13013:	jg     13110 <pcpu_runstate_update+0x270>
   13019:	mov    r12d,DWORD PTR [rip+0x180bc]        # 2b0dc <opt+0x3c>
   13020:	test   ecx,ecx
   13022:	je     13032 <pcpu_runstate_update+0x192>
   13024:	test   r12d,r12d
   13027:	je     13032 <pcpu_runstate_update+0x192>
   13029:	cmp    eax,r12d
   1302c:	jge    13174 <pcpu_runstate_update+0x2d4>
   13032:	add    eax,eax
   13034:	cmove  eax,edx
   13037:	test   r12d,r12d
   1303a:	je     1316c <pcpu_runstate_update+0x2cc>
   13040:	cmp    eax,r12d
   13043:	jle    1316c <pcpu_runstate_update+0x2cc>
   13049:	movsxd rsi,r12d
   1304c:	mov    rdi,QWORD PTR [rbx+0x2f0]
   13053:	shl    rsi,0x3
   13057:	call   51d0 <realloc@plt>
   1305c:	test   rax,rax
   1305f:	je     13160 <pcpu_runstate_update+0x2c0>
   13065:	mov    QWORD PTR [rbx+0x2f0],rax
   1306c:	mov    DWORD PTR [rbx+0x2e0],r12d
   13073:	movsxd rcx,DWORD PTR [rbx+0x2dc]
   1307a:	cmp    ecx,r12d
   1307d:	jl     13110 <pcpu_runstate_update+0x270>
   13083:	mov    eax,ecx
   13085:	cdq    
   13086:	idiv   r12d
   13089:	lea    esi,[rax+0x1]
   1308c:	movsxd rdi,edx
   1308f:	mov    edx,0x55555556
   13094:	mov    eax,esi
   13096:	imul   edx
   13098:	mov    eax,esi
   1309a:	sar    eax,0x1f
   1309d:	sub    eax,edx
   1309f:	add    eax,edi
   130a1:	cdq    
   130a2:	idiv   esi
   130a4:	mov    eax,ecx
   130a6:	test   edx,edx
   130a8:	jne    130bb <pcpu_runstate_update+0x21b>
   130aa:	mov    rax,QWORD PTR [rbx+0x2f0]
   130b1:	mov    QWORD PTR [rax+rdi*8],rbp
   130b5:	mov    eax,DWORD PTR [rbx+0x2dc]
   130bb:	add    eax,0x1
   130be:	add    QWORD PTR [rbx+0x2e8],rbp
   130c5:	mov    DWORD PTR [rbx+0x2dc],eax
   130cb:	add    DWORD PTR [rbx+0x2f8],0x1
   130d2:	add    QWORD PTR [rbx+0x300],rbp
   130d9:	mov    QWORD PTR [rbx+0x2d0],0x0
   130e4:	pop    rbx
   130e5:	pop    rbp
   130e6:	pop    r12
   130e8:	ret    
   130e9:	nop    DWORD PTR [rax+0x0]
   130f0:	mov    rax,QWORD PTR [rbx+0x328]
   130f7:	mov    QWORD PTR [rax+rcx*8],rbp
   130fb:	mov    eax,DWORD PTR [rbx+0x314]
   13101:	jmp    12fa8 <pcpu_runstate_update+0x108>
   13106:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13110:	mov    rax,QWORD PTR [rbx+0x2f0]
   13117:	mov    QWORD PTR [rax+rcx*8],rbp
   1311b:	mov    eax,DWORD PTR [rbx+0x2dc]
   13121:	jmp    130bb <pcpu_runstate_update+0x21b>
   13123:	nop    DWORD PTR [rax+rax*1+0x0]
   13128:	test   r12d,r12d
   1312b:	je     12f19 <pcpu_runstate_update+0x79>
   13131:	cmp    eax,r12d
   13134:	jl     12f19 <pcpu_runstate_update+0x79>
   1313a:	mov    r12d,eax
   1313d:	jmp    12f6a <pcpu_runstate_update+0xca>
   13142:	nop    WORD PTR [rax+rax*1+0x0]
   13148:	mov    r12d,DWORD PTR [rbx+0x318]
   1314f:	jmp    12f5a <pcpu_runstate_update+0xba>
   13154:	nop    DWORD PTR [rax+0x0]
   13158:	mov    r12d,eax
   1315b:	jmp    12f30 <pcpu_runstate_update+0x90>
   13160:	mov    r12d,DWORD PTR [rbx+0x2e0]
   13167:	jmp    13073 <pcpu_runstate_update+0x1d3>
   1316c:	mov    r12d,eax
   1316f:	jmp    13049 <pcpu_runstate_update+0x1a9>
   13174:	mov    r12d,eax
   13177:	jmp    13083 <pcpu_runstate_update+0x1e3>
   1317c:	nop    DWORD PTR [rax+0x0]

0000000000013180 <dump_sched_switch>:
   13180:	sub    rsp,0x10
   13184:	mov    rax,QWORD PTR [rdi+0x20]
   13188:	lea    rdx,[rdi+0x28]
   1318c:	lea    rsi,[rip+0xe1ad]        # 21340 <_IO_stdin_used+0x3340>
   13193:	mov    edi,0x1
   13198:	mov    ecx,DWORD PTR [rax+0xc]
   1319b:	mov    r9d,DWORD PTR [rax+0x8]
   1319f:	mov    r8d,DWORD PTR [rax+0x4]
   131a3:	push   rcx
   131a4:	mov    ecx,DWORD PTR [rax]
   131a6:	xor    eax,eax
   131a8:	call   5200 <__printf_chk@plt>
   131ad:	add    rsp,0x18
   131b1:	ret    
   131b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   131bd:	nop    DWORD PTR [rax]

00000000000131c0 <sched_default_domain_init>:
   131c0:	mov    esi,0x8000
   131c5:	lea    rdi,[rip+0x58374]        # 6b540 <default_domain>
   131cc:	jmp    12d20 <domain_init>
   131d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   131dc:	nop    DWORD PTR [rax+0x0]

00000000000131e0 <runstate_clear>:
   131e0:	lea    rax,[rdi+0x38]
   131e4:	nop    DWORD PTR [rax+0x0]
   131e8:	mov    QWORD PTR [rdi],0x0
   131ef:	add    rdi,0x8
   131f3:	cmp    rdi,rax
   131f6:	jne    131e8 <runstate_clear+0x8>
   131f8:	ret    
   131f9:	nop    DWORD PTR [rax+0x0]

0000000000013200 <runstate_summary>:
   13200:	push   r13
   13202:	push   r12
   13204:	mov    r12,rdi
   13207:	push   rbp
   13208:	movabs rbp,0x44b82fa09b5a53
   13212:	push   rbx
   13213:	lea    rbx,[rip+0x18226]        # 2b440 <runstate_name>
   1321a:	lea    r13,[rbx+0x38]
   1321e:	sub    rsp,0x8
   13222:	jmp    13235 <runstate_summary+0x35>
   13224:	nop    DWORD PTR [rax+0x0]
   13228:	add    rbx,0x8
   1322c:	add    r12,0x8
   13230:	cmp    rbx,r13
   13233:	je     13296 <runstate_summary+0x96>
   13235:	mov    rax,QWORD PTR [r12]
   13239:	test   rax,rax
   1323c:	je     13228 <runstate_summary+0x28>
   1323e:	xor    edx,edx
   13240:	mov    edi,0x1
   13245:	add    rbx,0x8
   13249:	add    r12,0x8
   1324d:	sub    rax,QWORD PTR [rip+0x1bf6c]        # 2f1c0 <P+0x20>
   13254:	lea    rsi,[rip+0xb53c]        # 1e797 <_IO_stdin_used+0x797>
   1325b:	shl    rax,0xa
   1325f:	div    QWORD PTR [rip+0x17e42]        # 2b0a8 <opt+0x8>
   13266:	mov    rcx,rax
   13269:	mov    r8,rax
   1326c:	shr    rcx,0x9
   13270:	mov    rax,rcx
   13273:	mul    rbp
   13276:	mov    rcx,rdx
   13279:	mov    rdx,QWORD PTR [rbx-0x8]
   1327d:	shr    rcx,0xb
   13281:	imul   eax,ecx,0x3b9aca00
   13287:	sub    r8d,eax
   1328a:	xor    eax,eax
   1328c:	call   5200 <__printf_chk@plt>
   13291:	cmp    rbx,r13
   13294:	jne    13235 <runstate_summary+0x35>
   13296:	add    rsp,0x8
   1329a:	pop    rbx
   1329b:	pop    rbp
   1329c:	pop    r12
   1329e:	pop    r13
   132a0:	ret    
   132a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   132ac:	nop    DWORD PTR [rax+0x0]

00000000000132b0 <sched_summary_vcpu>:
   132b0:	push   r15
   132b2:	push   r14
   132b4:	push   r13
   132b6:	push   r12
   132b8:	push   rbp
   132b9:	push   rbx
   132ba:	mov    rbx,rdi
   132bd:	sub    rsp,0x68
   132c1:	mov    rax,QWORD PTR fs:0x28
   132ca:	mov    QWORD PTR [rsp+0x58],rax
   132cf:	xor    eax,eax
   132d1:	mov    rax,QWORD PTR [rdi+0x58]
   132d5:	test   rax,rax
   132d8:	je     13339 <sched_summary_vcpu+0x89>
   132da:	mov    rsi,QWORD PTR [rip+0x1bee7]        # 2f1c8 <P+0x28>
   132e1:	add    DWORD PTR [rdi+0x3b8],0x1
   132e8:	sub    rsi,rax
   132eb:	je     1388c <sched_summary_vcpu+0x5dc>
   132f1:	lea    rdi,[rdi+0x3b8]
   132f8:	call   56e0 <update_cycles.part.5>
   132fd:	mov    rax,QWORD PTR [rbx+0x50]
   13301:	mov    rsi,QWORD PTR [rip+0x1bec0]        # 2f1c8 <P+0x28>
   13308:	sub    rsi,QWORD PTR [rbx+0x58]
   1330c:	movsxd rdx,DWORD PTR [rax+0x4]
   13310:	lea    rax,[rdx*8+0x0]
   13318:	sub    rax,rdx
   1331b:	shl    rax,0x3
   1331f:	lea    rdi,[rbx+rax*1+0x3f0]
   13327:	add    DWORD PTR [rbx+rax*1+0x3f0],0x1
   1332f:	test   rsi,rsi
   13332:	je     13339 <sched_summary_vcpu+0x89>
   13334:	call   56e0 <update_cycles.part.5>
   13339:	lea    rdi,[rip+0xb468]        # 1e7a8 <_IO_stdin_used+0x7a8>
   13340:	xor    r13d,r13d
   13343:	lea    r12,[rbx+0x154]
   1334a:	call   5090 <puts@plt>
   1334f:	lea    rbp,[rsp+0x30]
   13354:	mov    QWORD PTR [rsp+0x18],rbx
   13359:	lea    r15,[rip+0x180e0]        # 2b440 <runstate_name>
   13360:	jmp    13428 <sched_summary_vcpu+0x178>
   13365:	nop    DWORD PTR [rax]
   13368:	cmp    DWORD PTR [r12+0x4],ecx
   1336d:	cmovle ecx,DWORD PTR [r12+0x4]
   13373:	mov    edx,0x32
   13378:	mov    rdi,QWORD PTR [r12+0x14]
   1337d:	mov    esi,ecx
   1337f:	mov    r14d,ecx
   13382:	call   84c0 <self_weighted_percentile>
   13387:	mov    rdi,QWORD PTR [r12+0x14]
   1338c:	mov    edx,0x5
   13391:	mov    esi,r14d
   13394:	mov    QWORD PTR [rsp+0x10],rax
   13399:	call   84c0 <self_weighted_percentile>
   1339e:	mov    rdi,QWORD PTR [r12+0x14]
   133a3:	mov    edx,0x5f
   133a8:	mov    esi,r14d
   133ab:	mov    QWORD PTR [rsp+0x8],rax
   133b0:	call   84c0 <self_weighted_percentile>
   133b5:	mov    rdx,QWORD PTR [r12+0xc]
   133ba:	mov    r9,QWORD PTR [rsp+0x8]
   133bf:	mov    rcx,QWORD PTR [rsp+0x10]
   133c4:	test   rdx,rdx
   133c7:	js     13800 <sched_summary_vcpu+0x550>
   133cd:	pxor   xmm0,xmm0
   133d1:	cvtsi2sd xmm0,rdx
   133d6:	pxor   xmm1,xmm1
   133da:	push   rax
   133db:	mov    r8,rbx
   133de:	mov    rdx,rbp
   133e1:	cvtsi2sd xmm1,QWORD PTR [rip+0x17cc6]        # 2b0b0 <opt+0x10>
   133ea:	push   rcx
   133eb:	mov    ecx,DWORD PTR [r12]
   133ef:	mov    edi,0x1
   133f4:	lea    rsi,[rip+0xd57d]        # 20978 <_IO_stdin_used+0x2978>
   133fb:	mov    eax,0x1
   13400:	divsd  xmm0,xmm1
   13404:	call   5200 <__printf_chk@plt>
   13409:	pop    rbx
   1340a:	pop    r14
   1340c:	cmp    r13,0x1
   13410:	je     134be <sched_summary_vcpu+0x20e>
   13416:	cmp    r13d,0x6
   1341a:	je     135f5 <sched_summary_vcpu+0x345>
   13420:	add    r13,0x1
   13424:	add    r12,0x38
   13428:	mov    r9,QWORD PTR [r15+r13*8]
   1342c:	mov    ecx,0x1e
   13431:	mov    edx,0x1
   13436:	xor    eax,eax
   13438:	lea    r8,[rip+0xb377]        # 1e7b6 <_IO_stdin_used+0x7b6>
   1343f:	mov    esi,0x1e
   13444:	mov    rdi,rbp
   13447:	call   5030 <__snprintf_chk@plt>
   1344c:	mov    ecx,DWORD PTR [r12]
   13450:	test   ecx,ecx
   13452:	je     1340c <sched_summary_vcpu+0x15c>
   13454:	mov    rsi,QWORD PTR [r12+0xc]
   13459:	movsxd rdi,ecx
   1345c:	xor    edx,edx
   1345e:	mov    rax,rsi
   13461:	div    rdi
   13464:	mov    rbx,rax
   13467:	mov    eax,DWORD PTR [rip+0x17c6b]        # 2b0d8 <opt+0x38>
   1346d:	test   eax,eax
   1346f:	jne    13368 <sched_summary_vcpu+0xb8>
   13475:	test   rsi,rsi
   13478:	js     1386e <sched_summary_vcpu+0x5be>
   1347e:	pxor   xmm0,xmm0
   13482:	cvtsi2sd xmm0,rsi
   13487:	pxor   xmm1,xmm1
   1348b:	mov    r8,rbx
   1348e:	mov    rdx,rbp
   13491:	mov    edi,0x1
   13496:	cvtsi2sd xmm1,QWORD PTR [rip+0x17c11]        # 2b0b0 <opt+0x10>
   1349f:	lea    rsi,[rip+0xad2f]        # 1e1d5 <_IO_stdin_used+0x1d5>
   134a6:	mov    eax,0x1
   134ab:	divsd  xmm0,xmm1
   134af:	call   5200 <__printf_chk@plt>
   134b4:	cmp    r13,0x1
   134b8:	jne    13416 <sched_summary_vcpu+0x166>
   134be:	mov    rax,QWORD PTR [rsp+0x18]
   134c3:	mov    QWORD PTR [rsp+0x8],r12
   134c8:	xor    r14d,r14d
   134cb:	lea    rbx,[rax+0x2dc]
   134d2:	mov    r12,rbx
   134d5:	test   r14,r14
   134d8:	je     13820 <sched_summary_vcpu+0x570>
   134de:	lea    rax,[rip+0x17f3b]        # 2b420 <runnable_state_name>
   134e5:	mov    ecx,0x1e
   134ea:	mov    edx,0x1
   134ef:	mov    rdi,rbp
   134f2:	mov    r9,QWORD PTR [rax+r14*8]
   134f6:	lea    r8,[rip+0xb2b7]        # 1e7b4 <_IO_stdin_used+0x7b4>
   134fd:	mov    esi,0x1e
   13502:	xor    eax,eax
   13504:	call   5030 <__snprintf_chk@plt>
   13509:	mov    ecx,DWORD PTR [r12]
   1350d:	test   ecx,ecx
   1350f:	je     135e1 <sched_summary_vcpu+0x331>
   13515:	mov    rsi,QWORD PTR [r12+0xc]
   1351a:	movsxd rdi,ecx
   1351d:	xor    edx,edx
   1351f:	mov    r11d,DWORD PTR [rip+0x17bb2]        # 2b0d8 <opt+0x38>
   13526:	mov    rax,rsi
   13529:	div    rdi
   1352c:	mov    r8,rax
   1352f:	test   r11d,r11d
   13532:	je     1382d <sched_summary_vcpu+0x57d>
   13538:	cmp    DWORD PTR [r12+0x4],ecx
   1353d:	mov    ebx,ecx
   1353f:	cmovle ebx,DWORD PTR [r12+0x4]
   13545:	mov    edx,0x32
   1354a:	mov    rdi,QWORD PTR [r12+0x14]
   1354f:	mov    QWORD PTR [rsp+0x28],rax
   13554:	mov    esi,ebx
   13556:	call   84c0 <self_weighted_percentile>
   1355b:	mov    rdi,QWORD PTR [r12+0x14]
   13560:	mov    edx,0x5
   13565:	mov    esi,ebx
   13567:	mov    QWORD PTR [rsp+0x20],rax
   1356c:	call   84c0 <self_weighted_percentile>
   13571:	mov    rdi,QWORD PTR [r12+0x14]
   13576:	mov    edx,0x5f
   1357b:	mov    esi,ebx
   1357d:	mov    QWORD PTR [rsp+0x10],rax
   13582:	call   84c0 <self_weighted_percentile>
   13587:	mov    rdx,QWORD PTR [r12+0xc]
   1358c:	mov    r9,QWORD PTR [rsp+0x10]
   13591:	mov    rcx,QWORD PTR [rsp+0x20]
   13596:	mov    r8,QWORD PTR [rsp+0x28]
   1359b:	test   rdx,rdx
   1359e:	js     138ef <sched_summary_vcpu+0x63f>
   135a4:	pxor   xmm0,xmm0
   135a8:	cvtsi2sd xmm0,rdx
   135ad:	pxor   xmm1,xmm1
   135b1:	push   rax
   135b2:	mov    rdx,rbp
   135b5:	lea    rsi,[rip+0xd3bc]        # 20978 <_IO_stdin_used+0x2978>
   135bc:	cvtsi2sd xmm1,QWORD PTR [rip+0x17aeb]        # 2b0b0 <opt+0x10>
   135c5:	push   rcx
   135c6:	mov    ecx,DWORD PTR [r12]
   135ca:	mov    edi,0x1
   135cf:	mov    eax,0x1
   135d4:	divsd  xmm0,xmm1
   135d8:	call   5200 <__printf_chk@plt>
   135dd:	pop    r9
   135df:	pop    r10
   135e1:	cmp    r14d,0x3
   135e5:	jne    13820 <sched_summary_vcpu+0x570>
   135eb:	mov    r12,QWORD PTR [rsp+0x8]
   135f0:	jmp    13420 <sched_summary_vcpu+0x170>
   135f5:	mov    rbx,QWORD PTR [rsp+0x18]
   135fa:	mov    r12d,DWORD PTR [rbx+0x3bc]
   13601:	test   r12d,r12d
   13604:	je     136b9 <sched_summary_vcpu+0x409>
   1360a:	mov    rax,QWORD PTR [rbx+0x3c8]
   13611:	movsxd rcx,r12d
   13614:	xor    edx,edx
   13616:	mov    r8d,DWORD PTR [rip+0x17abb]        # 2b0d8 <opt+0x38>
   1361d:	div    rcx
   13620:	mov    r13,rax
   13623:	test   r8d,r8d
   13626:	je     138ac <sched_summary_vcpu+0x5fc>
   1362c:	mov    eax,DWORD PTR [rbx+0x3c0]
   13632:	cmp    r12d,eax
   13635:	jle    13648 <sched_summary_vcpu+0x398>
   13637:	test   eax,eax
   13639:	jne    13645 <sched_summary_vcpu+0x395>
   1363b:	xor    r15d,r15d
   1363e:	xor    r14d,r14d
   13641:	xor    eax,eax
   13643:	jmp    13691 <sched_summary_vcpu+0x3e1>
   13645:	mov    r12d,eax
   13648:	mov    rdi,QWORD PTR [rbx+0x3d0]
   1364f:	mov    esi,r12d
   13652:	mov    edx,0x32
   13657:	call   57f0 <percentile.part.6>
   1365c:	mov    rdi,QWORD PTR [rbx+0x3d0]
   13663:	mov    esi,r12d
   13666:	mov    edx,0x5
   1366b:	mov    r15,rax
   1366e:	call   57f0 <percentile.part.6>
   13673:	mov    rdi,QWORD PTR [rbx+0x3d0]
   1367a:	mov    esi,r12d
   1367d:	mov    edx,0x5f
   13682:	mov    r14,rax
   13685:	call   57f0 <percentile.part.6>
   1368a:	mov    r12d,DWORD PTR [rbx+0x3bc]
   13691:	push   rax
   13692:	lea    rsi,[rip+0xdcd7]        # 21370 <_IO_stdin_used+0x3370>
   13699:	mov    edi,0x1
   1369e:	mov    r9,r14
   136a1:	push   r15
   136a3:	mov    r8,r13
   136a6:	mov    ecx,r12d
   136a9:	lea    rdx,[rip+0xb10c]        # 1e7bc <_IO_stdin_used+0x7bc>
   136b0:	xor    eax,eax
   136b2:	call   5200 <__printf_chk@plt>
   136b7:	pop    rsi
   136b8:	pop    rdi
   136b9:	add    rbx,0x3f4
   136c0:	xor    r13d,r13d
   136c3:	jmp    1370f <sched_summary_vcpu+0x45f>
   136c5:	nop    DWORD PTR [rax]
   136c8:	test   eax,eax
   136ca:	jne    137d8 <sched_summary_vcpu+0x528>
   136d0:	xor    ecx,ecx
   136d2:	xor    r15d,r15d
   136d5:	xor    eax,eax
   136d7:	push   rax
   136d8:	mov    rdx,rbp
   136db:	mov    r9,r15
   136de:	mov    r8,r14
   136e1:	push   rcx
   136e2:	lea    rsi,[rip+0xdc87]        # 21370 <_IO_stdin_used+0x3370>
   136e9:	mov    ecx,r12d
   136ec:	mov    edi,0x1
   136f1:	xor    eax,eax
   136f3:	call   5200 <__printf_chk@plt>
   136f8:	pop    rax
   136f9:	pop    rdx
   136fa:	add    r13d,0x1
   136fe:	add    rbx,0x38
   13702:	cmp    r13d,0x100
   13709:	je     137dd <sched_summary_vcpu+0x52d>
   1370f:	mov    r9d,r13d
   13712:	lea    r8,[rip+0xb0c0]        # 1e7d9 <_IO_stdin_used+0x7d9>
   13719:	mov    rdi,rbp
   1371c:	xor    eax,eax
   1371e:	mov    ecx,0x1e
   13723:	mov    edx,0x1
   13728:	mov    esi,0x1e
   1372d:	call   5030 <__snprintf_chk@plt>
   13732:	mov    r12d,DWORD PTR [rbx]
   13735:	test   r12d,r12d
   13738:	je     136fa <sched_summary_vcpu+0x44a>
   1373a:	mov    rax,QWORD PTR [rbx+0xc]
   1373e:	movsxd rcx,r12d
   13741:	xor    edx,edx
   13743:	div    rcx
   13746:	mov    ecx,DWORD PTR [rip+0x1798c]        # 2b0d8 <opt+0x38>
   1374c:	mov    r14,rax
   1374f:	test   ecx,ecx
   13751:	je     137b0 <sched_summary_vcpu+0x500>
   13753:	mov    eax,DWORD PTR [rbx+0x4]
   13756:	cmp    r12d,eax
   13759:	jg     136c8 <sched_summary_vcpu+0x418>
   1375f:	mov    rdi,QWORD PTR [rbx+0x14]
   13763:	mov    esi,r12d
   13766:	mov    edx,0x32
   1376b:	call   57f0 <percentile.part.6>
   13770:	mov    rdi,QWORD PTR [rbx+0x14]
   13774:	mov    esi,r12d
   13777:	mov    edx,0x5
   1377c:	mov    QWORD PTR [rsp+0x8],rax
   13781:	call   57f0 <percentile.part.6>
   13786:	mov    rdi,QWORD PTR [rbx+0x14]
   1378a:	mov    esi,r12d
   1378d:	mov    edx,0x5f
   13792:	mov    r15,rax
   13795:	call   57f0 <percentile.part.6>
   1379a:	mov    r12d,DWORD PTR [rbx]
   1379d:	mov    rcx,QWORD PTR [rsp+0x8]
   137a2:	jmp    136d7 <sched_summary_vcpu+0x427>
   137a7:	nop    WORD PTR [rax+rax*1+0x0]
   137b0:	mov    r8,rax
   137b3:	mov    ecx,r12d
   137b6:	mov    rdx,rbp
   137b9:	mov    edi,0x1
   137be:	lea    rsi,[rip+0xb005]        # 1e7ca <_IO_stdin_used+0x7ca>
   137c5:	xor    eax,eax
   137c7:	call   5200 <__printf_chk@plt>
   137cc:	jmp    136fa <sched_summary_vcpu+0x44a>
   137d1:	nop    DWORD PTR [rax+0x0]
   137d8:	mov    r12d,eax
   137db:	jmp    1375f <sched_summary_vcpu+0x4af>
   137dd:	mov    rax,QWORD PTR [rsp+0x58]
   137e2:	xor    rax,QWORD PTR fs:0x28
   137eb:	jne    1390d <sched_summary_vcpu+0x65d>
   137f1:	add    rsp,0x68
   137f5:	pop    rbx
   137f6:	pop    rbp
   137f7:	pop    r12
   137f9:	pop    r13
   137fb:	pop    r14
   137fd:	pop    r15
   137ff:	ret    
   13800:	mov    rsi,rdx
   13803:	and    edx,0x1
   13806:	pxor   xmm0,xmm0
   1380a:	shr    rsi,1
   1380d:	or     rsi,rdx
   13810:	cvtsi2sd xmm0,rsi
   13815:	addsd  xmm0,xmm0
   13819:	jmp    133d6 <sched_summary_vcpu+0x126>
   1381e:	xchg   ax,ax
   13820:	add    r14,0x1
   13824:	add    r12,0x38
   13828:	jmp    134d5 <sched_summary_vcpu+0x225>
   1382d:	test   rsi,rsi
   13830:	js     138d1 <sched_summary_vcpu+0x621>
   13836:	pxor   xmm0,xmm0
   1383a:	cvtsi2sd xmm0,rsi
   1383f:	pxor   xmm1,xmm1
   13843:	mov    rdx,rbp
   13846:	mov    edi,0x1
   1384b:	mov    eax,0x1
   13850:	cvtsi2sd xmm1,QWORD PTR [rip+0x17857]        # 2b0b0 <opt+0x10>
   13859:	lea    rsi,[rip+0xa975]        # 1e1d5 <_IO_stdin_used+0x1d5>
   13860:	divsd  xmm0,xmm1
   13864:	call   5200 <__printf_chk@plt>
   13869:	jmp    135e1 <sched_summary_vcpu+0x331>
   1386e:	mov    rax,rsi
   13871:	and    esi,0x1
   13874:	pxor   xmm0,xmm0
   13878:	shr    rax,1
   1387b:	or     rax,rsi
   1387e:	cvtsi2sd xmm0,rax
   13883:	addsd  xmm0,xmm0
   13887:	jmp    13487 <sched_summary_vcpu+0x1d7>
   1388c:	mov    rax,QWORD PTR [rdi+0x50]
   13890:	movsxd rdx,DWORD PTR [rax+0x4]
   13894:	lea    rax,[rdx*8+0x0]
   1389c:	sub    rax,rdx
   1389f:	add    DWORD PTR [rdi+rax*8+0x3f0],0x1
   138a7:	jmp    13339 <sched_summary_vcpu+0x89>
   138ac:	mov    r8,rax
   138af:	mov    ecx,r12d
   138b2:	xor    eax,eax
   138b4:	mov    edi,0x1
   138b9:	lea    rdx,[rip+0xaefc]        # 1e7bc <_IO_stdin_used+0x7bc>
   138c0:	lea    rsi,[rip+0xaf03]        # 1e7ca <_IO_stdin_used+0x7ca>
   138c7:	call   5200 <__printf_chk@plt>
   138cc:	jmp    136b9 <sched_summary_vcpu+0x409>
   138d1:	mov    rax,rsi
   138d4:	and    esi,0x1
   138d7:	pxor   xmm0,xmm0
   138db:	shr    rax,1
   138de:	or     rax,rsi
   138e1:	cvtsi2sd xmm0,rax
   138e6:	addsd  xmm0,xmm0
   138ea:	jmp    1383f <sched_summary_vcpu+0x58f>
   138ef:	mov    rsi,rdx
   138f2:	and    edx,0x1
   138f5:	pxor   xmm0,xmm0
   138f9:	shr    rsi,1
   138fc:	or     rsi,rdx
   138ff:	cvtsi2sd xmm0,rsi
   13904:	addsd  xmm0,xmm0
   13908:	jmp    135ad <sched_summary_vcpu+0x2fd>
   1390d:	call   50d0 <__stack_chk_fail@plt>
   13912:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1391d:	nop    DWORD PTR [rax]

0000000000013920 <sched_summary_domain>:
   13920:	push   r15
   13922:	push   r14
   13924:	push   r13
   13926:	lea    r13,[rip+0xae89]        # 1e7b6 <_IO_stdin_used+0x7b6>
   1392d:	push   r12
   1392f:	push   rbp
   13930:	lea    rbp,[rip+0x17a09]        # 2b340 <domain_runstate_name>
   13937:	push   rbx
   13938:	mov    rbx,rdi
   1393b:	lea    rdi,[rip+0xae66]        # 1e7a8 <_IO_stdin_used+0x7a8>
   13942:	lea    r14,[rbp+0x38]
   13946:	add    rbx,0x85c
   1394d:	sub    rsp,0x58
   13951:	mov    rax,QWORD PTR fs:0x28
   1395a:	mov    QWORD PTR [rsp+0x48],rax
   1395f:	xor    eax,eax
   13961:	lea    r12,[rsp+0x20]
   13966:	call   5090 <puts@plt>
   1396b:	jmp    13a21 <sched_summary_domain+0x101>
   13970:	cmp    DWORD PTR [rbx+0x4],ecx
   13973:	cmovle ecx,DWORD PTR [rbx+0x4]
   13977:	mov    edx,0x32
   1397c:	mov    QWORD PTR [rsp+0x18],rax
   13981:	mov    rdi,QWORD PTR [rbx+0x14]
   13985:	mov    esi,ecx
   13987:	mov    r15d,ecx
   1398a:	call   84c0 <self_weighted_percentile>
   1398f:	mov    rdi,QWORD PTR [rbx+0x14]
   13993:	mov    edx,0x5
   13998:	mov    esi,r15d
   1399b:	mov    QWORD PTR [rsp+0x10],rax
   139a0:	call   84c0 <self_weighted_percentile>
   139a5:	mov    rdi,QWORD PTR [rbx+0x14]
   139a9:	mov    edx,0x5f
   139ae:	mov    esi,r15d
   139b1:	mov    QWORD PTR [rsp+0x8],rax
   139b6:	call   84c0 <self_weighted_percentile>
   139bb:	mov    rdx,QWORD PTR [rbx+0xc]
   139bf:	mov    r9,QWORD PTR [rsp+0x8]
   139c4:	mov    rcx,QWORD PTR [rsp+0x10]
   139c9:	mov    r8,QWORD PTR [rsp+0x18]
   139ce:	test   rdx,rdx
   139d1:	js     13ae0 <sched_summary_domain+0x1c0>
   139d7:	pxor   xmm0,xmm0
   139db:	cvtsi2sd xmm0,rdx
   139e0:	pxor   xmm1,xmm1
   139e4:	push   rax
   139e5:	mov    rdx,r12
   139e8:	lea    rsi,[rip+0xcf89]        # 20978 <_IO_stdin_used+0x2978>
   139ef:	cvtsi2sd xmm1,QWORD PTR [rip+0x176b8]        # 2b0b0 <opt+0x10>
   139f8:	push   rcx
   139f9:	mov    ecx,DWORD PTR [rbx]
   139fb:	mov    edi,0x1
   13a00:	mov    eax,0x1
   13a05:	divsd  xmm0,xmm1
   13a09:	call   5200 <__printf_chk@plt>
   13a0e:	pop    rax
   13a0f:	pop    rdx
   13a10:	add    rbp,0x8
   13a14:	add    rbx,0x38
   13a18:	cmp    rbp,r14
   13a1b:	je     13ab8 <sched_summary_domain+0x198>
   13a21:	mov    r9,QWORD PTR [rbp+0x0]
   13a25:	mov    ecx,0x1e
   13a2a:	mov    r8,r13
   13a2d:	mov    rdi,r12
   13a30:	mov    edx,0x1
   13a35:	mov    esi,0x1e
   13a3a:	xor    eax,eax
   13a3c:	call   5030 <__snprintf_chk@plt>
   13a41:	mov    ecx,DWORD PTR [rbx]
   13a43:	test   ecx,ecx
   13a45:	je     13a10 <sched_summary_domain+0xf0>
   13a47:	mov    rsi,QWORD PTR [rbx+0xc]
   13a4b:	movsxd rdi,ecx
   13a4e:	xor    edx,edx
   13a50:	mov    rax,rsi
   13a53:	div    rdi
   13a56:	mov    edi,DWORD PTR [rip+0x1767c]        # 2b0d8 <opt+0x38>
   13a5c:	mov    r8,rax
   13a5f:	test   edi,edi
   13a61:	jne    13970 <sched_summary_domain+0x50>
   13a67:	test   rsi,rsi
   13a6a:	js     13b00 <sched_summary_domain+0x1e0>
   13a70:	pxor   xmm0,xmm0
   13a74:	cvtsi2sd xmm0,rsi
   13a79:	pxor   xmm1,xmm1
   13a7d:	mov    rdx,r12
   13a80:	mov    edi,0x1
   13a85:	add    rbp,0x8
   13a89:	lea    rsi,[rip+0xa745]        # 1e1d5 <_IO_stdin_used+0x1d5>
   13a90:	mov    eax,0x1
   13a95:	add    rbx,0x38
   13a99:	cvtsi2sd xmm1,QWORD PTR [rip+0x1760e]        # 2b0b0 <opt+0x10>
   13aa2:	divsd  xmm0,xmm1
   13aa6:	call   5200 <__printf_chk@plt>
   13aab:	cmp    rbp,r14
   13aae:	jne    13a21 <sched_summary_domain+0x101>
   13ab4:	nop    DWORD PTR [rax+0x0]
   13ab8:	mov    rax,QWORD PTR [rsp+0x48]
   13abd:	xor    rax,QWORD PTR fs:0x28
   13ac6:	jne    13b1e <sched_summary_domain+0x1fe>
   13ac8:	add    rsp,0x58
   13acc:	pop    rbx
   13acd:	pop    rbp
   13ace:	pop    r12
   13ad0:	pop    r13
   13ad2:	pop    r14
   13ad4:	pop    r15
   13ad6:	ret    
   13ad7:	nop    WORD PTR [rax+rax*1+0x0]
   13ae0:	mov    rsi,rdx
   13ae3:	and    edx,0x1
   13ae6:	pxor   xmm0,xmm0
   13aea:	shr    rsi,1
   13aed:	or     rsi,rdx
   13af0:	cvtsi2sd xmm0,rsi
   13af5:	addsd  xmm0,xmm0
   13af9:	jmp    139e0 <sched_summary_domain+0xc0>
   13afe:	xchg   ax,ax
   13b00:	mov    rax,rsi
   13b03:	and    esi,0x1
   13b06:	pxor   xmm0,xmm0
   13b0a:	shr    rax,1
   13b0d:	or     rax,rsi
   13b10:	cvtsi2sd xmm0,rax
   13b15:	addsd  xmm0,xmm0
   13b19:	jmp    13a79 <sched_summary_domain+0x159>
   13b1e:	call   50d0 <__stack_chk_fail@plt>
   13b23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   13b2e:	xchg   ax,ax

0000000000013b30 <dump_sched_vcpu_action>:
   13b30:	mov    rax,QWORD PTR [rdi+0x20]
   13b34:	mov    rcx,rsi
   13b37:	lea    rdx,[rdi+0x28]
   13b3b:	lea    rsi,[rip+0xac9f]        # 1e7e1 <_IO_stdin_used+0x7e1>
   13b42:	mov    edi,0x1
   13b47:	mov    r9d,DWORD PTR [rax+0x4]
   13b4b:	mov    r8d,DWORD PTR [rax]
   13b4e:	xor    eax,eax
   13b50:	jmp    5200 <__printf_chk@plt>
   13b55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000013b60 <mem_summary_domain>:
   13b60:	push   r15
   13b62:	push   r14
   13b64:	lea    r14,[rip+0xaca2]        # 1e80d <_IO_stdin_used+0x80d>
   13b6b:	push   r13
   13b6d:	mov    r13,rdi
   13b70:	lea    rdi,[rip+0xac79]        # 1e7f0 <_IO_stdin_used+0x7f0>
   13b77:	push   r12
   13b79:	lea    r12,[r13+0x11a8]
   13b80:	push   rbp
   13b81:	push   rbx
   13b82:	lea    rbx,[rip+0x177f7]        # 2b380 <mem_name>
   13b89:	lea    r15,[rbx+0x98]
   13b90:	mov    rbp,rbx
   13b93:	sub    rsp,0x18
   13b97:	call   5090 <puts@plt>
   13b9c:	lea    rdi,[rip+0xac5f]        # 1e802 <_IO_stdin_used+0x802>
   13ba3:	call   5090 <puts@plt>
   13ba8:	jmp    13bbd <mem_summary_domain+0x5d>
   13baa:	nop    WORD PTR [rax+rax*1+0x0]
   13bb0:	add    rbp,0x8
   13bb4:	add    r12,0x4
   13bb8:	cmp    rbp,r15
   13bbb:	je     13be5 <mem_summary_domain+0x85>
   13bbd:	mov    ecx,DWORD PTR [r12]
   13bc1:	test   ecx,ecx
   13bc3:	je     13bb0 <mem_summary_domain+0x50>
   13bc5:	mov    rdx,QWORD PTR [rbp+0x0]
   13bc9:	mov    rsi,r14
   13bcc:	mov    edi,0x1
   13bd1:	xor    eax,eax
   13bd3:	add    rbp,0x8
   13bd7:	add    r12,0x4
   13bdb:	call   5200 <__printf_chk@plt>
   13be0:	cmp    rbp,r15
   13be3:	jne    13bbd <mem_summary_domain+0x5d>
   13be5:	lea    rdi,[rip+0xac2f]        # 1e81b <_IO_stdin_used+0x81b>
   13bec:	lea    rbp,[r13+0x1240]
   13bf3:	call   5090 <puts@plt>
   13bf8:	lea    r12,[rip+0xac0e]        # 1e80d <_IO_stdin_used+0x80d>
   13bff:	jmp    13c15 <mem_summary_domain+0xb5>
   13c01:	nop    DWORD PTR [rax+0x0]
   13c08:	add    rbx,0x8
   13c0c:	add    rbp,0x4
   13c10:	cmp    rbx,r15
   13c13:	je     13c3b <mem_summary_domain+0xdb>
   13c15:	mov    ecx,DWORD PTR [rbp+0x0]
   13c18:	test   ecx,ecx
   13c1a:	je     13c08 <mem_summary_domain+0xa8>
   13c1c:	mov    rdx,QWORD PTR [rbx]
   13c1f:	mov    rsi,r12
   13c22:	mov    edi,0x1
   13c27:	xor    eax,eax
   13c29:	add    rbx,0x8
   13c2d:	add    rbp,0x4
   13c31:	call   5200 <__printf_chk@plt>
   13c36:	cmp    rbx,r15
   13c39:	jne    13c15 <mem_summary_domain+0xb5>
   13c3b:	lea    rdi,[rip+0xabe5]        # 1e827 <_IO_stdin_used+0x827>
   13c42:	xor    ebx,ebx
   13c44:	lea    rbp,[rip+0xaa67]        # 1e6b2 <_IO_stdin_used+0x6b2>
   13c4b:	call   5090 <puts@plt>
   13c50:	lea    rdi,[rip+0xabe5]        # 1e83c <_IO_stdin_used+0x83c>
   13c57:	call   5090 <puts@plt>
   13c5c:	mov    ecx,DWORD PTR [r13+rbx*4+0x1324]
   13c64:	test   ecx,ecx
   13c66:	jne    13d08 <mem_summary_domain+0x1a8>
   13c6c:	add    rbx,0x1
   13c70:	cmp    rbx,0x4
   13c74:	jne    13c5c <mem_summary_domain+0xfc>
   13c76:	lea    rdi,[rip+0xabcc]        # 1e849 <_IO_stdin_used+0x849>
   13c7d:	xor    ebx,ebx
   13c7f:	lea    rbp,[rip+0xaa2c]        # 1e6b2 <_IO_stdin_used+0x6b2>
   13c86:	call   5090 <puts@plt>
   13c8b:	mov    ecx,DWORD PTR [r13+rbx*4+0x12d8]
   13c93:	test   ecx,ecx
   13c95:	jne    13cf0 <mem_summary_domain+0x190>
   13c97:	add    rbx,0x1
   13c9b:	cmp    rbx,0x4
   13c9f:	jne    13c8b <mem_summary_domain+0x12b>
   13ca1:	lea    rdi,[rip+0xabb2]        # 1e85a <_IO_stdin_used+0x85a>
   13ca8:	xor    ebx,ebx
   13caa:	lea    r15,[rip+0x1766f]        # 2b320 <pod_reclaim_context_name>
   13cb1:	call   5090 <puts@plt>
   13cb6:	lea    r14,[rip+0xabb1]        # 1e86e <_IO_stdin_used+0x86e>
   13cbd:	lea    r12,[rip+0xa9ed]        # 1e6b1 <_IO_stdin_used+0x6b1>
   13cc4:	mov    ecx,DWORD PTR [r13+rbx*1+0x12e8]
   13ccc:	test   ecx,ecx
   13cce:	jne    13d20 <mem_summary_domain+0x1c0>
   13cd0:	add    rbx,0x4
   13cd4:	cmp    rbx,0xc
   13cd8:	jne    13cc4 <mem_summary_domain+0x164>
   13cda:	add    rsp,0x18
   13cde:	pop    rbx
   13cdf:	pop    rbp
   13ce0:	pop    r12
   13ce2:	pop    r13
   13ce4:	pop    r14
   13ce6:	pop    r15
   13ce8:	ret    
   13ce9:	nop    DWORD PTR [rax+0x0]
   13cf0:	mov    edx,ebx
   13cf2:	mov    rsi,rbp
   13cf5:	mov    edi,0x1
   13cfa:	xor    eax,eax
   13cfc:	call   5200 <__printf_chk@plt>
   13d01:	jmp    13c97 <mem_summary_domain+0x137>
   13d03:	nop    DWORD PTR [rax+rax*1+0x0]
   13d08:	mov    edx,ebx
   13d0a:	mov    rsi,rbp
   13d0d:	mov    edi,0x1
   13d12:	xor    eax,eax
   13d14:	call   5200 <__printf_chk@plt>
   13d19:	jmp    13c6c <mem_summary_domain+0x10c>
   13d1e:	xchg   ax,ax
   13d20:	mov    rdx,QWORD PTR [r15+rbx*2]
   13d24:	mov    rsi,r14
   13d27:	mov    edi,0x1
   13d2c:	xor    eax,eax
   13d2e:	xor    ebp,ebp
   13d30:	call   5200 <__printf_chk@plt>
   13d35:	lea    r8,[r13+rbx*4+0x0]
   13d3a:	mov    ecx,DWORD PTR [r8+rbp*4+0x12f4]
   13d42:	test   ecx,ecx
   13d44:	jne    13d6a <mem_summary_domain+0x20a>
   13d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13d50:	add    rbp,0x1
   13d54:	cmp    rbp,0x4
   13d58:	je     13cd0 <mem_summary_domain+0x170>
   13d5e:	mov    ecx,DWORD PTR [r8+rbp*4+0x12f4]
   13d66:	test   ecx,ecx
   13d68:	je     13d50 <mem_summary_domain+0x1f0>
   13d6a:	mov    edx,ebp
   13d6c:	mov    rsi,r12
   13d6f:	mov    edi,0x1
   13d74:	xor    eax,eax
   13d76:	mov    QWORD PTR [rsp+0x8],r8
   13d7b:	call   5200 <__printf_chk@plt>
   13d80:	mov    r8,QWORD PTR [rsp+0x8]
   13d85:	jmp    13d50 <mem_summary_domain+0x1f0>
   13d87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013d90 <p2m_canonical_order>:
   13d90:	mov    eax,edi
   13d92:	mov    edx,0x38e38e39
   13d97:	imul   edx
   13d99:	mov    eax,edx
   13d9b:	mov    edx,edi
   13d9d:	sar    edx,0x1f
   13da0:	sar    eax,1
   13da2:	sub    eax,edx
   13da4:	lea    edx,[rax+rax*8]
   13da7:	cmp    edi,edx
   13da9:	jne    13db8 <p2m_canonical_order+0x28>
   13dab:	cmp    edi,0x1a
   13dae:	jg     13db8 <p2m_canonical_order+0x28>
   13db0:	ret    
   13db1:	nop    DWORD PTR [rax+0x0]
   13db8:	jmp    7b80 <p2m_canonical_order.part.23>
   13dbd:	nop    DWORD PTR [rax]

0000000000013dc0 <mem_pod_zero_reclaim_process>:
   13dc0:	push   r12
   13dc2:	movzx  eax,BYTE PTR [rip+0x172d8]        # 2b0a1 <opt+0x1>
   13dc9:	push   rbp
   13dca:	push   rbx
   13dcb:	mov    rbp,QWORD PTR [rdi+0x1a8]
   13dd2:	and    eax,0x40
   13dd5:	mov    r12,QWORD PTR [rdi+0x50]
   13dd9:	test   rbp,rbp
   13ddc:	je     13e80 <mem_pod_zero_reclaim_process+0xc0>
   13de2:	movsxd rbx,DWORD PTR [rbp+0x3bfc]
   13de9:	test   ebx,ebx
   13deb:	je     13e0e <mem_pod_zero_reclaim_process+0x4e>
   13ded:	mov    edx,DWORD PTR [rbp+0x2bff8]
   13df3:	mov    ebx,0x2
   13df8:	cmp    edx,0x12
   13dfb:	je     13e0e <mem_pod_zero_reclaim_process+0x4e>
   13dfd:	mov    ebx,0x1
   13e02:	cmp    edx,0x30
   13e05:	je     13e0e <mem_pod_zero_reclaim_process+0x4e>
   13e07:	xor    ebx,ebx
   13e09:	test   edx,edx
   13e0b:	sete   bl
   13e0e:	test   al,al
   13e10:	jne    13e86 <mem_pod_zero_reclaim_process+0xc6>
   13e12:	mov    eax,DWORD PTR [rip+0x1728c]        # 2b0a4 <opt+0x4>
   13e18:	test   eax,eax
   13e1a:	je     13e75 <mem_pod_zero_reclaim_process+0xb5>
   13e1c:	test   rbp,rbp
   13e1f:	je     13e75 <mem_pod_zero_reclaim_process+0xb5>
   13e21:	mov    rbp,QWORD PTR [rbp+0x8]
   13e25:	test   rbp,rbp
   13e28:	je     13e75 <mem_pod_zero_reclaim_process+0xb5>
   13e2a:	movsx  edi,WORD PTR [r12+0x12]
   13e30:	mov    edx,0x38e38e39
   13e35:	mov    eax,edi
   13e37:	imul   edx
   13e39:	mov    eax,edx
   13e3b:	mov    edx,edi
   13e3d:	sar    edx,0x1f
   13e40:	sar    eax,1
   13e42:	sub    eax,edx
   13e44:	lea    edx,[rax+rax*8]
   13e47:	cmp    edi,edx
   13e49:	jne    13ed0 <mem_pod_zero_reclaim_process+0x110>
   13e4f:	cmp    edi,0x1a
   13e52:	jg     13ed0 <mem_pod_zero_reclaim_process+0x110>
   13e54:	cdqe   
   13e56:	shl    rbx,0x2
   13e5a:	add    DWORD PTR [rbp+rax*4+0x12d8],0x1
   13e62:	add    DWORD PTR [rbp+rbx*1+0x12e8],0x1
   13e6a:	add    rbx,rax
   13e6d:	add    DWORD PTR [rbp+rbx*4+0x12f4],0x1
   13e75:	pop    rbx
   13e76:	pop    rbp
   13e77:	pop    r12
   13e79:	ret    
   13e7a:	nop    WORD PTR [rax+rax*1+0x0]
   13e80:	test   al,al
   13e82:	je     13e75 <mem_pod_zero_reclaim_process+0xb5>
   13e84:	xor    ebx,ebx
   13e86:	movsxd rax,ebx
   13e89:	movsx  ecx,WORD PTR [r12+0x10]
   13e8f:	movsx  r8d,WORD PTR [r12+0x12]
   13e95:	lea    rsi,[rip+0x17484]        # 2b320 <pod_reclaim_context_name>
   13e9c:	push   QWORD PTR [rsi+rax*8]
   13e9f:	lea    rdx,[rdi+0x58]
   13ea3:	lea    rsi,[rip+0xd4ee]        # 21398 <_IO_stdin_used+0x3398>
   13eaa:	xor    eax,eax
   13eac:	push   QWORD PTR [r12+0x8]
   13eb1:	mov    edi,0x1
   13eb6:	mov    r9,QWORD PTR [r12]
   13eba:	call   5200 <__printf_chk@plt>
   13ebf:	pop    rdx
   13ec0:	pop    rcx
   13ec1:	jmp    13e12 <mem_pod_zero_reclaim_process+0x52>
   13ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   13ed0:	call   7b80 <p2m_canonical_order.part.23>
   13ed5:	jmp    13e54 <mem_pod_zero_reclaim_process+0x94>
   13eda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013ee0 <mem_pod_populate_process>:
   13ee0:	push   rbp
   13ee1:	push   rbx
   13ee2:	mov    rbx,rdi
   13ee5:	sub    rsp,0x8
   13ee9:	mov    rbp,QWORD PTR [rdi+0x50]
   13eed:	test   BYTE PTR [rip+0x171ad],0x40        # 2b0a1 <opt+0x1>
   13ef4:	jne    13f50 <mem_pod_populate_process+0x70>
   13ef6:	mov    eax,DWORD PTR [rip+0x171a8]        # 2b0a4 <opt+0x4>
   13efc:	test   eax,eax
   13efe:	je     13f43 <mem_pod_populate_process+0x63>
   13f00:	mov    rax,QWORD PTR [rbx+0x1a8]
   13f07:	test   rax,rax
   13f0a:	je     13f43 <mem_pod_populate_process+0x63>
   13f0c:	mov    rbx,QWORD PTR [rax+0x8]
   13f10:	test   rbx,rbx
   13f13:	je     13f43 <mem_pod_populate_process+0x63>
   13f15:	movsx  edi,WORD PTR [rbp+0x12]
   13f19:	mov    edx,0x38e38e39
   13f1e:	mov    eax,edi
   13f20:	imul   edx
   13f22:	mov    eax,edx
   13f24:	mov    edx,edi
   13f26:	sar    edx,0x1f
   13f29:	sar    eax,1
   13f2b:	sub    eax,edx
   13f2d:	lea    edx,[rax+rax*8]
   13f30:	cmp    edi,edx
   13f32:	jne    13f88 <mem_pod_populate_process+0xa8>
   13f34:	cmp    edi,0x1a
   13f37:	jg     13f88 <mem_pod_populate_process+0xa8>
   13f39:	cdqe   
   13f3b:	add    DWORD PTR [rbx+rax*4+0x1324],0x1
   13f43:	add    rsp,0x8
   13f47:	pop    rbx
   13f48:	pop    rbp
   13f49:	ret    
   13f4a:	nop    WORD PTR [rax+rax*1+0x0]
   13f50:	sub    rsp,0x8
   13f54:	movsx  ecx,WORD PTR [rbp+0x10]
   13f58:	movsx  r8d,WORD PTR [rbp+0x12]
   13f5d:	push   QWORD PTR [rbp+0x8]
   13f60:	mov    r9,QWORD PTR [rbp+0x0]
   13f64:	lea    rdx,[rdi+0x58]
   13f68:	lea    rsi,[rip+0xd461]        # 213d0 <_IO_stdin_used+0x33d0>
   13f6f:	xor    eax,eax
   13f71:	mov    edi,0x1
   13f76:	call   5200 <__printf_chk@plt>
   13f7b:	pop    rdx
   13f7c:	pop    rcx
   13f7d:	jmp    13ef6 <mem_pod_populate_process+0x16>
   13f82:	nop    WORD PTR [rax+rax*1+0x0]
   13f88:	call   7b80 <p2m_canonical_order.part.23>
   13f8d:	jmp    13f39 <mem_pod_populate_process+0x59>
   13f8f:	nop

0000000000013f90 <mem_pod_superpage_splinter_process>:
   13f90:	test   BYTE PTR [rip+0x1710a],0x40        # 2b0a1 <opt+0x1>
   13f97:	jne    13fa0 <mem_pod_superpage_splinter_process+0x10>
   13f99:	ret    
   13f9a:	nop    WORD PTR [rax+rax*1+0x0]
   13fa0:	mov    rax,QWORD PTR [rdi+0x50]
   13fa4:	lea    rdx,[rdi+0x58]
   13fa8:	lea    rsi,[rip+0xd449]        # 213f8 <_IO_stdin_used+0x33f8>
   13faf:	mov    edi,0x1
   13fb4:	movsx  ecx,WORD PTR [rax+0x8]
   13fb8:	mov    r8,QWORD PTR [rax]
   13fbb:	xor    eax,eax
   13fbd:	jmp    5200 <__printf_chk@plt>
   13fc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   13fcd:	nop    DWORD PTR [rax]

0000000000013fd0 <mem_page_grant>:
   13fd0:	test   BYTE PTR [rip+0x170ca],0x40        # 2b0a1 <opt+0x1>
   13fd7:	jne    13fe0 <mem_page_grant+0x10>
   13fd9:	ret    
   13fda:	nop    WORD PTR [rax+rax*1+0x0]
   13fe0:	mov    rax,QWORD PTR [rdi+0x50]
   13fe4:	movzx  ecx,BYTE PTR [rdi+0x40]
   13fe8:	lea    rdx,[rip+0x17391]        # 2b380 <mem_name>
   13fef:	lea    rsi,[rip+0xa886]        # 1e87c <_IO_stdin_used+0x87c>
   13ff6:	mov    rcx,QWORD PTR [rdx+rcx*8]
   13ffa:	mov    r8d,DWORD PTR [rax]
   13ffd:	lea    rdx,[rdi+0x58]
   14001:	xor    eax,eax
   14003:	mov    edi,0x1
   14008:	jmp    5200 <__printf_chk@plt>
   1400d:	nop    DWORD PTR [rax]

0000000000014010 <mem_set_p2m_entry_process>:
   14010:	test   BYTE PTR [rip+0x1708a],0x40        # 2b0a1 <opt+0x1>
   14017:	jne    14020 <mem_set_p2m_entry_process+0x10>
   14019:	ret    
   1401a:	nop    WORD PTR [rax+rax*1+0x0]
   14020:	sub    rsp,0x8
   14024:	mov    rax,QWORD PTR [rdi+0x50]
   14028:	lea    rdx,[rdi+0x58]
   1402c:	lea    rsi,[rip+0xd3ed]        # 21420 <_IO_stdin_used+0x3420>
   14033:	mov    edi,0x1
   14038:	mov    r9d,DWORD PTR [rax+0x10]
   1403c:	movsx  r8d,WORD PTR [rax+0x16]
   14041:	movsx  ecx,WORD PTR [rax+0x14]
   14045:	push   QWORD PTR [rax+0x8]
   14048:	push   QWORD PTR [rax]
   1404a:	xor    eax,eax
   1404c:	call   5200 <__printf_chk@plt>
   14051:	add    rsp,0x18
   14055:	ret    
   14056:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000014060 <mem_decrease_reservation_process>:
   14060:	test   BYTE PTR [rip+0x1703a],0x40        # 2b0a1 <opt+0x1>
   14067:	jne    14070 <mem_decrease_reservation_process+0x10>
   14069:	ret    
   1406a:	nop    WORD PTR [rax+rax*1+0x0]
   14070:	mov    rax,QWORD PTR [rdi+0x50]
   14074:	lea    rdx,[rdi+0x58]
   14078:	lea    rsi,[rip+0xd3d1]        # 21450 <_IO_stdin_used+0x3450>
   1407f:	mov    edi,0x1
   14084:	movsx  ecx,WORD PTR [rax+0x8]
   14088:	mov    r9,QWORD PTR [rax]
   1408b:	movsx  r8d,WORD PTR [rax+0xa]
   14090:	xor    eax,eax
   14092:	jmp    5200 <__printf_chk@plt>
   14097:	nop    WORD PTR [rax+rax*1+0x0]

00000000000140a0 <pdev_find>:
   140a0:	push   r15
   140a2:	mov    eax,edi
   140a4:	mov    ecx,esi
   140a6:	push   r14
   140a8:	push   r13
   140aa:	push   r12
   140ac:	push   rbp
   140ad:	lea    rbp,[rip+0x5546c]        # 69520 <pdev_list>
   140b4:	push   rbx
   140b5:	sub    rsp,0x8
   140b9:	mov    rbx,QWORD PTR [rip+0x55460]        # 69520 <pdev_list>
   140c0:	test   rbx,rbx
   140c3:	je     140ed <pdev_find+0x4d>
   140c5:	nop    DWORD PTR [rax]
   140c8:	cmp    BYTE PTR [rbx],al
   140ca:	jb     140da <pdev_find+0x3a>
   140cc:	jne    140ed <pdev_find+0x4d>
   140ce:	movzx  edx,BYTE PTR [rbx+0x1]
   140d2:	cmp    dl,cl
   140d4:	jae    141b0 <pdev_find+0x110>
   140da:	lea    rbp,[rbx+0x408]
   140e1:	mov    rbx,QWORD PTR [rbx+0x408]
   140e8:	test   rbx,rbx
   140eb:	jne    140c8 <pdev_find+0x28>
   140ed:	mov    r8d,esi
   140f0:	movzx  ecx,dil
   140f4:	mov    r9d,esi
   140f7:	mov    r14d,edi
   140fa:	shr    r8b,0x4
   140fe:	mov    rdi,QWORD PTR [rip+0x53153]        # 67258 <warn>
   14105:	mov    r13d,esi
   14108:	xor    eax,eax
   1410a:	and    r9d,0x3
   1410e:	and    r8d,0xf
   14112:	mov    esi,0x1
   14117:	lea    rdx,[rip+0xa770]        # 1e88e <_IO_stdin_used+0x88e>
   1411e:	call   5270 <__fprintf_chk@plt>
   14123:	mov    edi,0x410
   14128:	call   51a0 <malloc@plt>
   1412d:	mov    r12,rax
   14130:	mov    r15,rax
   14133:	test   rax,rax
   14136:	je     14170 <pdev_find+0xd0>
   14138:	mov    ecx,0x82
   1413d:	xor    eax,eax
   1413f:	mov    rdi,r12
   14142:	rep stos QWORD PTR es:[rdi],rax
   14145:	mov    BYTE PTR [r12],r14b
   14149:	mov    BYTE PTR [r12+0x1],r13b
   1414e:	mov    QWORD PTR [r12+0x408],rbx
   14156:	mov    QWORD PTR [rbp+0x0],r12
   1415a:	add    rsp,0x8
   1415e:	mov    rax,r15
   14161:	pop    rbx
   14162:	pop    rbp
   14163:	pop    r12
   14165:	pop    r13
   14167:	pop    r14
   14169:	pop    r15
   1416b:	ret    
   1416c:	nop    DWORD PTR [rax+0x0]
   14170:	mov    rdi,QWORD PTR [rip+0x1a2c9]        # 2e440 <stderr@@GLIBC_2.2.5>
   14177:	xor    eax,eax
   14179:	mov    r8d,0x410
   1417f:	lea    rcx,[rip+0x101a2]        # 24328 <__func__.8148>
   14186:	lea    rdx,[rip+0xa5de]        # 1e76b <_IO_stdin_used+0x76b>
   1418d:	mov    esi,0x1
   14192:	call   5270 <__fprintf_chk@plt>
   14197:	cmp    DWORD PTR [rip+0x16f42],0x7        # 2b0e0 <opt+0x40>
   1419e:	ja     14138 <pdev_find+0x98>
   141a0:	mov    edi,0x1
   141a5:	call   5250 <exit@plt>
   141aa:	nop    WORD PTR [rax+rax*1+0x0]
   141b0:	cmp    dl,sil
   141b3:	jne    140ed <pdev_find+0x4d>
   141b9:	mov    r15,rbx
   141bc:	jmp    1415a <pdev_find+0xba>
   141be:	xchg   ax,ax

00000000000141c0 <dump_generic>:
   141c0:	push   r13
   141c2:	lea    rcx,[rsi+0x28]
   141c6:	lea    rdx,[rip+0xa6dd]        # 1e8aa <_IO_stdin_used+0x8aa>
   141cd:	push   r12
   141cf:	mov    r12,rdi
   141d2:	push   rbp
   141d3:	mov    rbp,rsi
   141d6:	push   rbx
   141d7:	sub    rsp,0x10
   141db:	mov    eax,DWORD PTR [rsi+0x14]
   141de:	movzx  r9d,WORD PTR [rsi+0x12]
   141e3:	push   rax
   141e4:	movzx  eax,WORD PTR [rsi+0x10]
   141e8:	and    r9d,0xfff
   141ef:	and    eax,0xfff
   141f4:	push   rax
   141f5:	movzx  eax,BYTE PTR [rsi+0x11]
   141f9:	shr    al,0x4
   141fc:	movzx  eax,al
   141ff:	push   rax
   14200:	mov    r8d,DWORD PTR [rsi+0x10]
   14204:	xor    eax,eax
   14206:	mov    esi,0x1
   1420b:	call   5270 <__fprintf_chk@plt>
   14210:	mov    eax,DWORD PTR [rbp+0x14]
   14213:	add    rsp,0x20
   14217:	test   eax,eax
   14219:	jle    1424a <dump_generic+0x8a>
   1421b:	xor    ebx,ebx
   1421d:	lea    r13,[rip+0xa316]        # 1e53a <_IO_stdin_used+0x53a>
   14224:	nop    DWORD PTR [rax+0x0]
   14228:	mov    rax,QWORD PTR [rbp+0x20]
   1422c:	mov    rdx,r13
   1422f:	mov    esi,0x1
   14234:	mov    rdi,r12
   14237:	mov    ecx,DWORD PTR [rax+rbx*4]
   1423a:	xor    eax,eax
   1423c:	add    rbx,0x1
   14240:	call   5270 <__fprintf_chk@plt>
   14245:	cmp    DWORD PTR [rbp+0x14],ebx
   14248:	jg     14228 <dump_generic+0x68>
   1424a:	add    rsp,0x8
   1424e:	mov    rcx,r12
   14251:	mov    edx,0x3
   14256:	mov    esi,0x1
   1425b:	pop    rbx
   1425c:	lea    rdi,[rip+0xa65e]        # 1e8c1 <_IO_stdin_used+0x8c1>
   14263:	pop    rbp
   14264:	pop    r12
   14266:	pop    r13
   14268:	jmp    5260 <fwrite@plt>
   1426d:	nop    DWORD PTR [rax]

0000000000014270 <irq_process>:
   14270:	movzx  edx,BYTE PTR [rip+0x16e2a]        # 2b0a1 <opt+0x1>
   14277:	mov    eax,DWORD PTR [rdi+0x40]
   1427a:	mov    esi,edx
   1427c:	sub    eax,0x802001
   14281:	and    esi,0x40
   14284:	cmp    eax,0x7
   14287:	ja     145f0 <irq_process+0x380>
   1428d:	lea    rcx,[rip+0xfdc0]        # 24054 <_IO_stdin_used+0x6054>
   14294:	push   r12
   14296:	movsxd rax,DWORD PTR [rcx+rax*4]
   1429a:	push   rbp
   1429b:	push   rbx
   1429c:	mov    rbx,rdi
   1429f:	add    rax,rcx
   142a2:	jmp    rax
   142a4:	nop    DWORD PTR [rax+0x0]
   142a8:	mov    rbp,QWORD PTR [rdi+0x50]
   142ac:	test   sil,sil
   142af:	jne    14538 <irq_process+0x2c8>
   142b5:	and    edx,0x8
   142b8:	je     14339 <irq_process+0xc9>
   142ba:	mov    rax,QWORD PTR [rbx+0x38]
   142be:	mov    rdx,QWORD PTR [rip+0x1aefb]        # 2f1c0 <P+0x20>
   142c5:	cmp    rax,rdx
   142c8:	jbe    144b8 <irq_process+0x248>
   142ce:	movabs rcx,0x44b82fa09b5a53
   142d8:	sub    rax,rdx
   142db:	xor    edx,edx
   142dd:	mov    r8,rax
   142e0:	shl    r8,0xa
   142e4:	mov    rax,r8
   142e7:	div    QWORD PTR [rip+0x16dba]        # 2b0a8 <opt+0x8>
   142ee:	mov    rdx,rax
   142f1:	mov    r8,rax
   142f4:	shr    rdx,0x9
   142f8:	mov    rax,rdx
   142fb:	mul    rcx
   142fe:	shr    rdx,0xb
   14302:	mov    ecx,edx
   14304:	imul   edx,edx,0x3b9aca00
   1430a:	sub    r8d,edx
   1430d:	mov    r9d,DWORD PTR [rbx+0x4]
   14311:	mov    edx,DWORD PTR [rbp+0x0]
   14314:	lea    rsi,[rip+0xa5aa]        # 1e8c5 <_IO_stdin_used+0x8c5>
   1431b:	xor    eax,eax
   1431d:	pop    rbx
   1431e:	mov    edi,0x1
   14323:	pop    rbp
   14324:	pop    r12
   14326:	jmp    5200 <__printf_chk@plt>
   1432b:	nop    DWORD PTR [rax+rax*1+0x0]
   14330:	test   sil,sil
   14333:	jne    144c8 <irq_process+0x258>
   14339:	pop    rbx
   1433a:	pop    rbp
   1433b:	pop    r12
   1433d:	ret    
   1433e:	xchg   ax,ax
   14340:	mov    rbp,QWORD PTR [rdi+0x50]
   14344:	movsxd rcx,DWORD PTR [rbp+0x0]
   14348:	test   sil,sil
   1434b:	jne    14578 <irq_process+0x308>
   14351:	cmp    ecx,0x1ff
   14357:	jg     14339 <irq_process+0xc9>
   14359:	movsxd rax,DWORD PTR [rbp+0x4]
   1435d:	cmp    eax,0xff
   14362:	jg     14339 <irq_process+0xc9>
   14364:	mov    rdx,rcx
   14367:	lea    rbx,[rip+0x551d2]        # 69540 <irq_table>
   1436e:	shl    rdx,0x4
   14372:	cmp    DWORD PTR [rbx+rdx*1],0x1
   14376:	je     145c8 <irq_process+0x358>
   1437c:	shl    rcx,0x4
   14380:	mov    rbx,QWORD PTR [rbx+rcx*1+0x8]
   14385:	test   rbx,rbx
   14388:	je     14339 <irq_process+0xc9>
   1438a:	movsxd rax,DWORD PTR [rbp+0x4]
   1438e:	mov    edx,DWORD PTR [rbx+rax*4+0x4]
   14392:	test   edx,edx
   14394:	je     145fa <irq_process+0x38a>
   1439a:	mov    DWORD PTR [rbx+rax*4+0x4],0x0
   143a2:	jmp    14339 <irq_process+0xc9>
   143a4:	nop    DWORD PTR [rax+0x0]
   143a8:	test   sil,sil
   143ab:	je     14339 <irq_process+0xc9>
   143ad:	mov    rax,QWORD PTR [rdi+0x50]
   143b1:	sub    rsp,0x8
   143b5:	lea    rdx,[rdi+0x58]
   143b9:	lea    rsi,[rip+0xd0c0]        # 21480 <_IO_stdin_used+0x3480>
   143c0:	mov    edi,0x1
   143c5:	mov    ecx,DWORD PTR [rax+0x8]
   143c8:	mov    r9d,DWORD PTR [rax+0x14]
   143cc:	mov    r8d,DWORD PTR [rax+0x4]
   143d0:	push   rcx
   143d1:	mov    ecx,DWORD PTR [rax+0xc]
   143d4:	push   rcx
   143d5:	mov    ecx,DWORD PTR [rax+0x10]
   143d8:	push   rcx
   143d9:	mov    ecx,DWORD PTR [rax]
   143db:	xor    eax,eax
   143dd:	call   5200 <__printf_chk@plt>
   143e2:	add    rsp,0x20
   143e6:	jmp    14339 <irq_process+0xc9>
   143eb:	nop    DWORD PTR [rax+rax*1+0x0]
   143f0:	mov    rbp,QWORD PTR [rdi+0x50]
   143f4:	movsxd rcx,DWORD PTR [rbp+0x0]
   143f8:	test   sil,sil
   143fb:	jne    144f8 <irq_process+0x288>
   14401:	cmp    ecx,0x1ff
   14407:	jg     14339 <irq_process+0xc9>
   1440d:	movsxd rax,DWORD PTR [rbp+0x4]
   14411:	cmp    eax,0xff
   14416:	jg     14339 <irq_process+0xc9>
   1441c:	mov    rdx,rcx
   1441f:	lea    rbx,[rip+0x5511a]        # 69540 <irq_table>
   14426:	shl    rdx,0x4
   1442a:	cmp    DWORD PTR [rbx+rdx*1],0x1
   1442e:	je     145a0 <irq_process+0x330>
   14434:	shl    rcx,0x4
   14438:	mov    rbx,QWORD PTR [rbx+rcx*1+0x8]
   1443d:	test   rbx,rbx
   14440:	je     14339 <irq_process+0xc9>
   14446:	movsxd rax,DWORD PTR [rbp+0x4]
   1444a:	mov    esi,DWORD PTR [rbx+rax*4+0x4]
   1444e:	test   esi,esi
   14450:	jne    14620 <irq_process+0x3b0>
   14456:	mov    DWORD PTR [rbx+rax*4+0x4],0x1
   1445e:	jmp    14339 <irq_process+0xc9>
   14463:	nop    DWORD PTR [rax+rax*1+0x0]
   14468:	test   sil,sil
   1446b:	je     14339 <irq_process+0xc9>
   14471:	mov    rax,QWORD PTR [rdi+0x50]
   14475:	pop    rbx
   14476:	lea    rdx,[rdi+0x58]
   1447a:	lea    rsi,[rip+0xd187]        # 21608 <_IO_stdin_used+0x3608>
   14481:	pop    rbp
   14482:	mov    edi,0x1
   14487:	pop    r12
   14489:	mov    ecx,DWORD PTR [rax]
   1448b:	xor    eax,eax
   1448d:	jmp    5200 <__printf_chk@plt>
   14492:	nop    WORD PTR [rax+rax*1+0x0]
   14498:	test   sil,sil
   1449b:	je     14339 <irq_process+0xc9>
   144a1:	lea    rsi,[rdi+0x30]
   144a5:	mov    rdi,QWORD PTR [rip+0x19f74]        # 2e420 <stdout@@GLIBC_2.2.5>
   144ac:	pop    rbx
   144ad:	pop    rbp
   144ae:	pop    r12
   144b0:	jmp    141c0 <dump_generic>
   144b5:	nop    DWORD PTR [rax]
   144b8:	xor    r8d,r8d
   144bb:	xor    ecx,ecx
   144bd:	jmp    1430d <irq_process+0x9d>
   144c2:	nop    WORD PTR [rax+rax*1+0x0]
   144c8:	mov    rax,QWORD PTR [rdi+0x50]
   144cc:	pop    rbx
   144cd:	lea    rdx,[rdi+0x58]
   144d1:	lea    rsi,[rip+0xd0a0]        # 21578 <_IO_stdin_used+0x3578>
   144d8:	pop    rbp
   144d9:	mov    edi,0x1
   144de:	pop    r12
   144e0:	mov    r9d,DWORD PTR [rax+0x8]
   144e4:	mov    r8d,DWORD PTR [rax+0x4]
   144e8:	mov    ecx,DWORD PTR [rax]
   144ea:	xor    eax,eax
   144ec:	jmp    5200 <__printf_chk@plt>
   144f1:	nop    DWORD PTR [rax+0x0]
   144f8:	mov    eax,DWORD PTR [rbp+0x8]
   144fb:	sub    rsp,0x8
   144ff:	mov    r9d,DWORD PTR [rbp+0x14]
   14503:	lea    rdx,[rdi+0x58]
   14507:	mov    r8d,DWORD PTR [rbp+0x4]
   1450b:	lea    rsi,[rip+0xcfd6]        # 214e8 <_IO_stdin_used+0x34e8>
   14512:	mov    edi,0x1
   14517:	push   rax
   14518:	mov    eax,DWORD PTR [rbp+0xc]
   1451b:	push   rax
   1451c:	mov    eax,DWORD PTR [rbp+0x10]
   1451f:	push   rax
   14520:	xor    eax,eax
   14522:	call   5200 <__printf_chk@plt>
   14527:	movsxd rcx,DWORD PTR [rbp+0x0]
   1452b:	add    rsp,0x20
   1452f:	jmp    14401 <irq_process+0x191>
   14534:	nop    DWORD PTR [rax+0x0]
   14538:	mov    r8d,DWORD PTR [rbp+0x8]
   1453c:	sub    rsp,0x8
   14540:	mov    eax,DWORD PTR [rbp+0x4]
   14543:	lea    rdx,[rdi+0x58]
   14547:	lea    rsi,[rip+0xcf72]        # 214c0 <_IO_stdin_used+0x34c0>
   1454e:	mov    edi,0x1
   14553:	push   r8
   14555:	mov    ecx,DWORD PTR [rbp+0x0]
   14558:	mov    r9d,eax
   1455b:	sub    r8d,eax
   1455e:	xor    eax,eax
   14560:	call   5200 <__printf_chk@plt>
   14565:	pop    r8
   14567:	movzx  edx,BYTE PTR [rip+0x16b33]        # 2b0a1 <opt+0x1>
   1456e:	pop    r9
   14570:	jmp    142b5 <irq_process+0x45>
   14575:	nop    DWORD PTR [rax]
   14578:	mov    r9d,DWORD PTR [rbp+0x8]
   1457c:	mov    r8d,DWORD PTR [rbp+0x4]
   14580:	lea    rdx,[rdi+0x58]
   14584:	xor    eax,eax
   14586:	lea    rsi,[rip+0xd023]        # 215b0 <_IO_stdin_used+0x35b0>
   1458d:	mov    edi,0x1
   14592:	call   5200 <__printf_chk@plt>
   14597:	movsxd rcx,DWORD PTR [rbp+0x0]
   1459b:	jmp    14351 <irq_process+0xe1>
   145a0:	lea    r12,[rip+0x1a7f9]        # 2eda0 <global_vector_used>
   145a7:	mov    edi,DWORD PTR [r12+rax*4]
   145ab:	test   edi,edi
   145ad:	jne    14671 <irq_process+0x401>
   145b3:	mov    DWORD PTR [r12+rax*4],0x1
   145bb:	movsxd rcx,DWORD PTR [rbp+0x0]
   145bf:	jmp    14434 <irq_process+0x1c4>
   145c4:	nop    DWORD PTR [rax+0x0]
   145c8:	lea    r12,[rip+0x1a7d1]        # 2eda0 <global_vector_used>
   145cf:	mov    ecx,DWORD PTR [r12+rax*4]
   145d3:	test   ecx,ecx
   145d5:	je     1464b <irq_process+0x3db>
   145d7:	mov    DWORD PTR [r12+rax*4],0x0
   145df:	movsxd rcx,DWORD PTR [rbp+0x0]
   145e3:	jmp    1437c <irq_process+0x10c>
   145e8:	nop    DWORD PTR [rax+rax*1+0x0]
   145f0:	test   sil,sil
   145f3:	jne    14697 <irq_process+0x427>
   145f9:	ret    
   145fa:	mov    rcx,QWORD PTR [rip+0x52c57]        # 67258 <warn>
   14601:	mov    edx,0x26
   14606:	mov    esi,0x1
   1460b:	lea    rdi,[rip+0xcfce]        # 215e0 <_IO_stdin_used+0x35e0>
   14612:	call   5260 <fwrite@plt>
   14617:	movsxd rax,DWORD PTR [rbp+0x4]
   1461b:	jmp    1439a <irq_process+0x12a>
   14620:	movzx  ecx,BYTE PTR [rbx]
   14623:	movzx  r8d,BYTE PTR [rbx+0x1]
   14628:	mov    esi,0x1
   1462d:	xor    eax,eax
   1462f:	mov    rdi,QWORD PTR [rip+0x52c22]        # 67258 <warn>
   14636:	lea    rdx,[rip+0xcf13]        # 21550 <_IO_stdin_used+0x3550>
   1463d:	call   5270 <__fprintf_chk@plt>
   14642:	movsxd rax,DWORD PTR [rbp+0x4]
   14646:	jmp    14456 <irq_process+0x1e6>
   1464b:	mov    rcx,QWORD PTR [rip+0x52c06]        # 67258 <warn>
   14652:	mov    edx,0x26
   14657:	mov    esi,0x1
   1465c:	lea    rdi,[rip+0xcf7d]        # 215e0 <_IO_stdin_used+0x35e0>
   14663:	call   5260 <fwrite@plt>
   14668:	movsxd rax,DWORD PTR [rbp+0x4]
   1466c:	jmp    145d7 <irq_process+0x367>
   14671:	mov    rcx,QWORD PTR [rip+0x52be0]        # 67258 <warn>
   14678:	mov    edx,0x24
   1467d:	mov    esi,0x1
   14682:	lea    rdi,[rip+0xce9f]        # 21528 <_IO_stdin_used+0x3528>
   14689:	call   5260 <fwrite@plt>
   1468e:	movsxd rax,DWORD PTR [rbp+0x4]
   14692:	jmp    145b3 <irq_process+0x343>
   14697:	lea    rsi,[rdi+0x30]
   1469b:	mov    rdi,QWORD PTR [rip+0x19d7e]        # 2e420 <stdout@@GLIBC_2.2.5>
   146a2:	jmp    141c0 <dump_generic>
   146a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000146b0 <error.part.24>:
   146b0:	sub    rsp,0x8
   146b4:	test   rdi,rdi
   146b7:	je     146c8 <error.part.24+0x18>
   146b9:	mov    rsi,rdi
   146bc:	mov    rdi,QWORD PTR [rip+0x52b95]        # 67258 <warn>
   146c3:	call   141c0 <dump_generic>
   146c8:	mov    edi,0x1
   146cd:	call   5250 <exit@plt>
   146d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   146dd:	nop    DWORD PTR [rax]

00000000000146e0 <hvm_io_assist_process>:
   146e0:	push   rbp
   146e1:	push   rbx
   146e2:	mov    rbx,rdi
   146e5:	sub    rsp,0x8
   146e9:	movzx  ecx,BYTE PTR [rdi+0x11]
   146ed:	test   cl,0x1
   146f0:	jne    14800 <hvm_io_assist_process+0x120>
   146f6:	mov    rbp,QWORD PTR [rsi+0x28410]
   146fd:	mov    eax,DWORD PTR [rsi+0x28348]
   14703:	mov    edx,DWORD PTR [rbp+0x0]
   14706:	and    eax,0x80000000
   1470b:	and    edx,0x7fffffff
   14711:	or     eax,edx
   14713:	mov    rdx,QWORD PTR [rsi+0x283d8]
   1471a:	mov    DWORD PTR [rsi+0x28348],eax
   14720:	mov    eax,DWORD PTR [rbp+0x4]
   14723:	mov    DWORD PTR [rsi+0x2834c],eax
   14729:	lea    rax,[rip+0xffffffffffff9000]        # d730 <hvm_generic_postprocess>
   14730:	cmp    rdx,rax
   14733:	sete   al
   14736:	test   rdx,rdx
   14739:	sete   dl
   1473c:	or     eax,edx
   1473e:	and    ecx,0x6
   14741:	je     147b0 <hvm_io_assist_process+0xd0>
   14743:	or     BYTE PTR [rsi+0x2834b],0x80
   1474a:	test   al,al
   1474c:	jne    14830 <hvm_io_assist_process+0x150>
   14752:	mov    rdi,QWORD PTR [rip+0x52aff]        # 67258 <warn>
   14759:	lea    rcx,[rip+0x10000]        # 24760 <__func__.6501>
   14760:	mov    esi,0x1
   14765:	lea    rdx,[rip+0xc60c]        # 20d78 <_IO_stdin_used+0x2d78>
   1476c:	call   5270 <__fprintf_chk@plt>
   14771:	test   BYTE PTR [rip+0x16929],0x40        # 2b0a1 <opt+0x1>
   14778:	je     14826 <hvm_io_assist_process+0x146>
   1477e:	mov    r9d,DWORD PTR [rbp+0x4]
   14782:	mov    r8d,DWORD PTR [rbp+0x0]
   14786:	lea    rcx,[rip+0xb3c4]        # 1fb51 <_IO_stdin_used+0x1b51>
   1478d:	add    rsp,0x8
   14791:	lea    rdx,[rbx+0x28]
   14795:	mov    edi,0x1
   1479a:	xor    eax,eax
   1479c:	pop    rbx
   1479d:	lea    rsi,[rip+0xa14f]        # 1e8f3 <_IO_stdin_used+0x8f3>
   147a4:	pop    rbp
   147a5:	jmp    5200 <__printf_chk@plt>
   147aa:	nop    WORD PTR [rax+rax*1+0x0]
   147b0:	and    BYTE PTR [rsi+0x2834b],0x7f
   147b7:	test   al,al
   147b9:	jne    14848 <hvm_io_assist_process+0x168>
   147bf:	mov    rdi,QWORD PTR [rip+0x52a92]        # 67258 <warn>
   147c6:	lea    rcx,[rip+0xff93]        # 24760 <__func__.6501>
   147cd:	lea    rdx,[rip+0xc5a4]        # 20d78 <_IO_stdin_used+0x2d78>
   147d4:	xor    eax,eax
   147d6:	mov    esi,0x1
   147db:	call   5270 <__fprintf_chk@plt>
   147e0:	test   BYTE PTR [rip+0x168ba],0x40        # 2b0a1 <opt+0x1>
   147e7:	je     14826 <hvm_io_assist_process+0x146>
   147e9:	mov    r9d,DWORD PTR [rbp+0x4]
   147ed:	mov    r8d,DWORD PTR [rbp+0x0]
   147f1:	lea    rcx,[rip+0xb351]        # 1fb49 <_IO_stdin_used+0x1b49>
   147f8:	jmp    1478d <hvm_io_assist_process+0xad>
   147fa:	nop    WORD PTR [rax+rax*1+0x0]
   14800:	mov    rcx,QWORD PTR [rip+0x19c39]        # 2e440 <stderr@@GLIBC_2.2.5>
   14807:	mov    edx,0x1d
   1480c:	mov    esi,0x1
   14811:	lea    rdi,[rip+0xa0bd]        # 1e8d5 <_IO_stdin_used+0x8d5>
   14818:	call   5260 <fwrite@plt>
   1481d:	cmp    DWORD PTR [rip+0x168bc],0x3        # 2b0e0 <opt+0x40>
   14824:	jbe    14858 <hvm_io_assist_process+0x178>
   14826:	add    rsp,0x8
   1482a:	pop    rbx
   1482b:	pop    rbp
   1482c:	ret    
   1482d:	nop    DWORD PTR [rax]
   14830:	lea    rax,[rip+0xffffffffffffabd9]        # f410 <hvm_io_write_postprocess>
   14837:	mov    QWORD PTR [rsi+0x283d8],rax
   1483e:	jmp    14771 <hvm_io_assist_process+0x91>
   14843:	nop    DWORD PTR [rax+rax*1+0x0]
   14848:	lea    rax,[rip+0xffffffffffffac01]        # f450 <hvm_io_read_postprocess>
   1484f:	mov    QWORD PTR [rsi+0x283d8],rax
   14856:	jmp    147e0 <hvm_io_assist_process+0x100>
   14858:	mov    rdi,rbx
   1485b:	call   146b0 <error.part.24>

0000000000014860 <shadow_emulate_process>:
   14860:	push   r13
   14862:	push   r12
   14864:	mov    r12,rdi
   14867:	push   rbp
   14868:	mov    rbp,rsi
   1486b:	push   rbx
   1486c:	sub    rsp,0x8
   14870:	mov    ebx,DWORD PTR [rdi+0x10]
   14873:	mov    rax,QWORD PTR [rsi+0x10]
   14877:	mov    r13,QWORD PTR [rdi+0x20]
   1487b:	shr    ebx,0x8
   1487e:	mov    r9d,DWORD PTR [rax+0x14]
   14882:	and    ebx,0xf
   14885:	add    ebx,0x2
   14888:	cmp    r9d,ebx
   1488b:	je     148b8 <shadow_emulate_process+0x58>
   1488d:	mov    rdi,QWORD PTR [rip+0x529c4]        # 67258 <warn>
   14894:	mov    r8d,ebx
   14897:	xor    eax,eax
   14899:	lea    rcx,[rip+0xfcf0]        # 24590 <__func__.7087>
   148a0:	lea    rdx,[rip+0xcd81]        # 21628 <_IO_stdin_used+0x3628>
   148a7:	mov    esi,0x1
   148ac:	call   5270 <__fprintf_chk@plt>
   148b1:	mov    rax,QWORD PTR [rbp+0x10]
   148b5:	mov    DWORD PTR [rax+0x14],ebx
   148b8:	cmp    ebx,0x3
   148bb:	je     14a38 <shadow_emulate_process+0x1d8>
   148c1:	cmp    ebx,0x4
   148c4:	je     14a10 <shadow_emulate_process+0x1b0>
   148ca:	cmp    ebx,0x2
   148cd:	je     149c8 <shadow_emulate_process+0x168>
   148d3:	lea    r13,[rbp+0x28348]
   148da:	mov    esi,ebx
   148dc:	mov    rdi,r13
   148df:	call   dad0 <pf_preprocess>
   148e4:	test   BYTE PTR [rip+0x167b6],0x40        # 2b0a1 <opt+0x1>
   148eb:	jne    14940 <shadow_emulate_process+0xe0>
   148ed:	mov    rax,QWORD PTR [rbp+0x283d8]
   148f4:	test   rax,rax
   148f7:	je     149a8 <shadow_emulate_process+0x148>
   148fd:	lea    rdx,[rip+0xffffffffffff8e2c]        # d730 <hvm_generic_postprocess>
   14904:	cmp    rax,rdx
   14907:	je     149a8 <shadow_emulate_process+0x148>
   1490d:	mov    rdi,QWORD PTR [rip+0x52944]        # 67258 <warn>
   14914:	add    rsp,0x8
   14918:	mov    esi,0x1
   1491d:	xor    eax,eax
   1491f:	pop    rbx
   14920:	lea    rcx,[rip+0xfc69]        # 24590 <__func__.7087>
   14927:	lea    rdx,[rip+0xc44a]        # 20d78 <_IO_stdin_used+0x2d78>
   1492e:	pop    rbp
   1492f:	pop    r12
   14931:	pop    r13
   14933:	jmp    5270 <__fprintf_chk@plt>
   14938:	nop    DWORD PTR [rax+rax*1+0x0]
   14940:	mov    r9,QWORD PTR [rbp+0x28380]
   14947:	mov    r8d,DWORD PTR [rbp+0x283a0]
   1494e:	mov    rdi,r13
   14951:	mov    esi,DWORD PTR [rbp+0x28350]
   14957:	call   120d0 <flag_string>
   1495c:	lea    rdx,[r12+0x28]
   14961:	mov    edi,0x1
   14966:	mov    rcx,QWORD PTR [rbp+0x28348]
   1496d:	push   r9
   1496f:	mov    r9,QWORD PTR [rbp+0x28378]
   14976:	push   r8
   14978:	mov    r8,QWORD PTR [rbp+0x28370]
   1497f:	push   rsi
   14980:	lea    rsi,[rip+0xcd21]        # 216a8 <_IO_stdin_used+0x36a8>
   14987:	push   rax
   14988:	xor    eax,eax
   1498a:	call   5200 <__printf_chk@plt>
   1498f:	mov    rax,QWORD PTR [rbp+0x283d8]
   14996:	add    rsp,0x20
   1499a:	test   rax,rax
   1499d:	jne    148fd <shadow_emulate_process+0x9d>
   149a3:	nop    DWORD PTR [rax+rax*1+0x0]
   149a8:	lea    rax,[rip+0xffffffffffff6d21]        # b6d0 <shadow_emulate_postprocess>
   149af:	mov    QWORD PTR [rbp+0x283d8],rax
   149b6:	add    rsp,0x8
   149ba:	pop    rbx
   149bb:	pop    rbp
   149bc:	pop    r12
   149be:	pop    r13
   149c0:	ret    
   149c1:	nop    DWORD PTR [rax+0x0]
   149c8:	mov    eax,DWORD PTR [r12+0x14]
   149cd:	shl    eax,0x2
   149d0:	cmp    eax,0x10
   149d3:	jne    14a80 <shadow_emulate_process+0x220>
   149d9:	mov    eax,DWORD PTR [r13+0x8]
   149dd:	mov    QWORD PTR [rbp+0x28348],rax
   149e4:	mov    eax,DWORD PTR [r13+0xc]
   149e8:	and    eax,0x1fffffff
   149ed:	mov    DWORD PTR [rbp+0x28350],eax
   149f3:	mov    eax,DWORD PTR [r13+0x0]
   149f7:	mov    QWORD PTR [rbp+0x28370],rax
   149fe:	mov    eax,DWORD PTR [r13+0x4]
   14a02:	mov    QWORD PTR [rbp+0x28378],rax
   14a09:	jmp    148d3 <shadow_emulate_process+0x73>
   14a0e:	xchg   ax,ax
   14a10:	mov    eax,DWORD PTR [r12+0x14]
   14a15:	shl    eax,0x2
   14a18:	cmp    eax,0x20
   14a1b:	jne    14ae8 <shadow_emulate_process+0x288>
   14a21:	mov    rax,QWORD PTR [r13+0x10]
   14a25:	mov    QWORD PTR [rbp+0x28348],rax
   14a2c:	mov    eax,DWORD PTR [r13+0x18]
   14a30:	jmp    14a58 <shadow_emulate_process+0x1f8>
   14a32:	nop    WORD PTR [rax+rax*1+0x0]
   14a38:	mov    eax,DWORD PTR [r12+0x14]
   14a3d:	shl    eax,0x2
   14a40:	cmp    eax,0x18
   14a43:	jne    14ad0 <shadow_emulate_process+0x270>
   14a49:	mov    eax,DWORD PTR [r13+0x10]
   14a4d:	mov    QWORD PTR [rbp+0x28348],rax
   14a54:	mov    eax,DWORD PTR [r13+0x14]
   14a58:	and    eax,0x1fffffff
   14a5d:	mov    DWORD PTR [rbp+0x28350],eax
   14a63:	mov    rax,QWORD PTR [r13+0x0]
   14a67:	mov    QWORD PTR [rbp+0x28370],rax
   14a6e:	mov    rax,QWORD PTR [r13+0x8]
   14a72:	mov    QWORD PTR [rbp+0x28378],rax
   14a79:	jmp    148d3 <shadow_emulate_process+0x73>
   14a7e:	xchg   ax,ax
   14a80:	mov    rdx,QWORD PTR [rbp+0x10]
   14a84:	sub    rsp,0x8
   14a88:	mov    r8d,0x10
   14a8e:	mov    r9d,DWORD PTR [rdx+0x14]
   14a92:	push   rax
   14a93:	mov    rdi,QWORD PTR [rip+0x527be]        # 67258 <warn>
   14a9a:	lea    rdx,[rip+0xcbcf]        # 21670 <_IO_stdin_used+0x3670>
   14aa1:	xor    eax,eax
   14aa3:	lea    rcx,[rip+0xfae6]        # 24590 <__func__.7087>
   14aaa:	mov    esi,0x1
   14aaf:	call   5270 <__fprintf_chk@plt>
   14ab4:	cmp    DWORD PTR [rip+0x16625],0x3        # 2b0e0 <opt+0x40>
   14abb:	pop    rax
   14abc:	pop    rdx
   14abd:	ja     149b6 <shadow_emulate_process+0x156>
   14ac3:	mov    rdi,r12
   14ac6:	call   146b0 <error.part.24>
   14acb:	nop    DWORD PTR [rax+rax*1+0x0]
   14ad0:	mov    rdx,QWORD PTR [rbp+0x10]
   14ad4:	sub    rsp,0x8
   14ad8:	mov    r8d,0x18
   14ade:	mov    r9d,DWORD PTR [rdx+0x14]
   14ae2:	push   rax
   14ae3:	jmp    14a93 <shadow_emulate_process+0x233>
   14ae5:	nop    DWORD PTR [rax]
   14ae8:	mov    rdx,QWORD PTR [rbp+0x10]
   14aec:	sub    rsp,0x8
   14af0:	mov    r8d,0x20
   14af6:	mov    r9d,DWORD PTR [rdx+0x14]
   14afa:	push   rax
   14afb:	jmp    14a93 <shadow_emulate_process+0x233>
   14afd:	nop    DWORD PTR [rax]

0000000000014b00 <shadow_parse_other>:
   14b00:	push   r14
   14b02:	push   r13
   14b04:	mov    r13,rsi
   14b07:	push   r12
   14b09:	push   rbp
   14b0a:	mov    rbp,rdi
   14b0d:	push   rbx
   14b0e:	mov    ebx,DWORD PTR [rdi+0x10]
   14b11:	mov    rax,QWORD PTR [rdx+0x10]
   14b15:	mov    r14,QWORD PTR [rdi+0x20]
   14b19:	shr    ebx,0x8
   14b1c:	and    ebx,0xf
   14b1f:	mov    r9d,DWORD PTR [rax+0x14]
   14b23:	add    ebx,0x2
   14b26:	cmp    r9d,ebx
   14b29:	je     14b5a <shadow_parse_other+0x5a>
   14b2b:	mov    rdi,QWORD PTR [rip+0x52726]        # 67258 <warn>
   14b32:	mov    r12,rdx
   14b35:	mov    r8d,ebx
   14b38:	xor    eax,eax
   14b3a:	lea    rcx,[rip+0xfa2f]        # 24570 <__func__.7116>
   14b41:	lea    rdx,[rip+0xcae0]        # 21628 <_IO_stdin_used+0x3628>
   14b48:	mov    esi,0x1
   14b4d:	call   5270 <__fprintf_chk@plt>
   14b52:	mov    rax,QWORD PTR [r12+0x10]
   14b57:	mov    DWORD PTR [rax+0x14],ebx
   14b5a:	cmp    ebx,0x3
   14b5d:	je     14b78 <shadow_parse_other+0x78>
   14b5f:	cmp    ebx,0x4
   14b62:	je     14bd0 <shadow_parse_other+0xd0>
   14b64:	cmp    ebx,0x2
   14b67:	je     14ba0 <shadow_parse_other+0xa0>
   14b69:	pop    rbx
   14b6a:	pop    rbp
   14b6b:	pop    r12
   14b6d:	pop    r13
   14b6f:	pop    r14
   14b71:	ret    
   14b72:	nop    WORD PTR [rax+rax*1+0x0]
   14b78:	mov    eax,DWORD PTR [rbp+0x14]
   14b7b:	shl    eax,0x2
   14b7e:	cmp    eax,0x10
   14b81:	jne    14bf8 <shadow_parse_other+0xf8>
   14b83:	mov    eax,DWORD PTR [r14+0x8]
   14b87:	pop    rbx
   14b88:	pop    rbp
   14b89:	pop    r12
   14b8b:	mov    QWORD PTR [r13+0x8],rax
   14b8f:	mov    rax,QWORD PTR [r14]
   14b92:	mov    QWORD PTR [r13+0x0],rax
   14b96:	pop    r13
   14b98:	pop    r14
   14b9a:	ret    
   14b9b:	nop    DWORD PTR [rax+rax*1+0x0]
   14ba0:	mov    eax,DWORD PTR [rbp+0x14]
   14ba3:	shl    eax,0x2
   14ba6:	cmp    eax,0x8
   14ba9:	jne    14c60 <shadow_parse_other+0x160>
   14baf:	mov    eax,DWORD PTR [r14+0x4]
   14bb3:	pop    rbx
   14bb4:	pop    rbp
   14bb5:	pop    r12
   14bb7:	mov    QWORD PTR [r13+0x8],rax
   14bbb:	mov    eax,DWORD PTR [r14]
   14bbe:	mov    QWORD PTR [r13+0x0],rax
   14bc2:	pop    r13
   14bc4:	pop    r14
   14bc6:	ret    
   14bc7:	nop    WORD PTR [rax+rax*1+0x0]
   14bd0:	mov    eax,DWORD PTR [rbp+0x14]
   14bd3:	shl    eax,0x2
   14bd6:	cmp    eax,0x10
   14bd9:	jne    14c48 <shadow_parse_other+0x148>
   14bdb:	mov    rax,QWORD PTR [r14+0x8]
   14bdf:	pop    rbx
   14be0:	pop    rbp
   14be1:	pop    r12
   14be3:	mov    QWORD PTR [r13+0x8],rax
   14be7:	mov    rax,QWORD PTR [r14]
   14bea:	mov    QWORD PTR [r13+0x0],rax
   14bee:	pop    r13
   14bf0:	pop    r14
   14bf2:	ret    
   14bf3:	nop    DWORD PTR [rax+rax*1+0x0]
   14bf8:	sub    rsp,0x8
   14bfc:	mov    r9d,0x3
   14c02:	mov    r8d,0x10
   14c08:	push   rax
   14c09:	mov    rdi,QWORD PTR [rip+0x52648]        # 67258 <warn>
   14c10:	lea    rdx,[rip+0xca59]        # 21670 <_IO_stdin_used+0x3670>
   14c17:	xor    eax,eax
   14c19:	lea    rcx,[rip+0xf950]        # 24570 <__func__.7116>
   14c20:	mov    esi,0x1
   14c25:	call   5270 <__fprintf_chk@plt>
   14c2a:	cmp    DWORD PTR [rip+0x164af],0x3        # 2b0e0 <opt+0x40>
   14c31:	pop    rax
   14c32:	pop    rdx
   14c33:	ja     14b69 <shadow_parse_other+0x69>
   14c39:	mov    rdi,rbp
   14c3c:	call   146b0 <error.part.24>
   14c41:	nop    DWORD PTR [rax+0x0]
   14c48:	sub    rsp,0x8
   14c4c:	mov    r9d,0x4
   14c52:	mov    r8d,0x10
   14c58:	push   rax
   14c59:	jmp    14c09 <shadow_parse_other+0x109>
   14c5b:	nop    DWORD PTR [rax+rax*1+0x0]
   14c60:	sub    rsp,0x8
   14c64:	mov    r9d,0x2
   14c6a:	mov    r8d,0x8
   14c70:	push   rax
   14c71:	jmp    14c09 <shadow_parse_other+0x109>
   14c73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   14c7e:	xchg   ax,ax

0000000000014c80 <shadow_emulate_other_process>:
   14c80:	push   r12
   14c82:	mov    r12,rdi
   14c85:	push   rbp
   14c86:	push   rbx
   14c87:	mov    rbx,rsi
   14c8a:	mov    rdx,rbx
   14c8d:	sub    rsp,0x20
   14c91:	mov    ebp,DWORD PTR [rdi+0x10]
   14c94:	mov    rax,QWORD PTR fs:0x28
   14c9d:	mov    QWORD PTR [rsp+0x18],rax
   14ca2:	xor    eax,eax
   14ca4:	mov    rsi,rsp
   14ca7:	call   14b00 <shadow_parse_other>
   14cac:	mov    rax,QWORD PTR [rsp]
   14cb0:	movzx  ebp,bpl
   14cb4:	lea    rdi,[rbx+0x28348]
   14cbb:	mov    DWORD PTR [rbx+0x28358],ebp
   14cc1:	mov    QWORD PTR [rbx+0x283a8],rax
   14cc8:	mov    rax,QWORD PTR [rsp+0x8]
   14ccd:	mov    QWORD PTR [rbx+0x28348],rax
   14cd4:	mov    rax,QWORD PTR [rbx+0x10]
   14cd8:	mov    esi,DWORD PTR [rax+0x14]
   14cdb:	call   dad0 <pf_preprocess>
   14ce0:	test   BYTE PTR [rip+0x163ba],0x40        # 2b0a1 <opt+0x1>
   14ce7:	jne    14d50 <shadow_emulate_other_process+0xd0>
   14ce9:	mov    rax,QWORD PTR [rbx+0x283d8]
   14cf0:	test   rax,rax
   14cf3:	je     14d40 <shadow_emulate_other_process+0xc0>
   14cf5:	lea    rdx,[rip+0xffffffffffff8a34]        # d730 <hvm_generic_postprocess>
   14cfc:	cmp    rax,rdx
   14cff:	je     14d40 <shadow_emulate_other_process+0xc0>
   14d01:	mov    rdi,QWORD PTR [rip+0x52550]        # 67258 <warn>
   14d08:	lea    rcx,[rip+0xf841]        # 24550 <__func__.7130>
   14d0f:	lea    rdx,[rip+0xc062]        # 20d78 <_IO_stdin_used+0x2d78>
   14d16:	xor    eax,eax
   14d18:	mov    esi,0x1
   14d1d:	call   5270 <__fprintf_chk@plt>
   14d22:	mov    rax,QWORD PTR [rsp+0x18]
   14d27:	xor    rax,QWORD PTR fs:0x28
   14d30:	jne    14d86 <shadow_emulate_other_process+0x106>
   14d32:	add    rsp,0x20
   14d36:	pop    rbx
   14d37:	pop    rbp
   14d38:	pop    r12
   14d3a:	ret    
   14d3b:	nop    DWORD PTR [rax+rax*1+0x0]
   14d40:	lea    rax,[rip+0xffffffffffff6779]        # b4c0 <shadow_fault_generic_postprocess>
   14d47:	mov    QWORD PTR [rbx+0x283d8],rax
   14d4e:	jmp    14d22 <shadow_emulate_other_process+0xa2>
   14d50:	lea    rax,[rip+0x16809]        # 2b560 <pf_xen_name>
   14d57:	lea    rdx,[r12+0x28]
   14d5c:	mov    r9,QWORD PTR [rbx+0x28348]
   14d63:	mov    r8,QWORD PTR [rbx+0x283a8]
   14d6a:	mov    rcx,QWORD PTR [rax+rbp*8]
   14d6e:	lea    rsi,[rip+0xc983]        # 216f8 <_IO_stdin_used+0x36f8>
   14d75:	mov    edi,0x1
   14d7a:	xor    eax,eax
   14d7c:	call   5200 <__printf_chk@plt>
   14d81:	jmp    14ce9 <shadow_emulate_other_process+0x69>
   14d86:	call   50d0 <__stack_chk_fail@plt>
   14d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000014d90 <shadow_fixup_process>:
   14d90:	push   r13
   14d92:	push   r12
   14d94:	mov    r12,rdi
   14d97:	push   rbp
   14d98:	mov    rbp,rsi
   14d9b:	push   rbx
   14d9c:	sub    rsp,0x8
   14da0:	mov    ebx,DWORD PTR [rdi+0x10]
   14da3:	mov    rax,QWORD PTR [rsi+0x10]
   14da7:	mov    r13,QWORD PTR [rdi+0x20]
   14dab:	shr    ebx,0x8
   14dae:	mov    r9d,DWORD PTR [rax+0x14]
   14db2:	and    ebx,0xf
   14db5:	add    ebx,0x2
   14db8:	cmp    r9d,ebx
   14dbb:	je     14de8 <shadow_fixup_process+0x58>
   14dbd:	mov    rdi,QWORD PTR [rip+0x52494]        # 67258 <warn>
   14dc4:	mov    r8d,ebx
   14dc7:	xor    eax,eax
   14dc9:	lea    rcx,[rip+0xf760]        # 24530 <__func__.7159>
   14dd0:	lea    rdx,[rip+0xc851]        # 21628 <_IO_stdin_used+0x3628>
   14dd7:	mov    esi,0x1
   14ddc:	call   5270 <__fprintf_chk@plt>
   14de1:	mov    rax,QWORD PTR [rbp+0x10]
   14de5:	mov    DWORD PTR [rax+0x14],ebx
   14de8:	cmp    ebx,0x3
   14deb:	je     14f50 <shadow_fixup_process+0x1c0>
   14df1:	cmp    ebx,0x4
   14df4:	je     14f10 <shadow_fixup_process+0x180>
   14dfa:	cmp    ebx,0x2
   14dfd:	je     14ed0 <shadow_fixup_process+0x140>
   14e03:	lea    r13,[rbp+0x28348]
   14e0a:	mov    esi,ebx
   14e0c:	mov    rdi,r13
   14e0f:	call   dad0 <pf_preprocess>
   14e14:	test   BYTE PTR [rip+0x16286],0x40        # 2b0a1 <opt+0x1>
   14e1b:	je     14e6b <shadow_fixup_process+0xdb>
   14e1d:	add    r12,0x28
   14e21:	mov    rdi,r13
   14e24:	test   BYTE PTR [rbp+0x28352],0x4
   14e2b:	je     14f90 <shadow_fixup_process+0x200>
   14e31:	call   120d0 <flag_string>
   14e36:	mov    rcx,QWORD PTR [rbp+0x28348]
   14e3d:	mov    rdx,r12
   14e40:	mov    r9,QWORD PTR [rbp+0x28380]
   14e47:	push   rax
   14e48:	mov    eax,DWORD PTR [rbp+0x28350]
   14e4e:	mov    edi,0x1
   14e53:	lea    rsi,[rip+0xc8be]        # 21718 <_IO_stdin_used+0x3718>
   14e5a:	mov    r8,QWORD PTR [rbp+0x28370]
   14e61:	push   rax
   14e62:	xor    eax,eax
   14e64:	call   5200 <__printf_chk@plt>
   14e69:	pop    rcx
   14e6a:	pop    rsi
   14e6b:	mov    rax,QWORD PTR [rbp+0x283d8]
   14e72:	test   rax,rax
   14e75:	je     14eb0 <shadow_fixup_process+0x120>
   14e77:	lea    rdx,[rip+0xffffffffffff88b2]        # d730 <hvm_generic_postprocess>
   14e7e:	cmp    rax,rdx
   14e81:	je     14eb0 <shadow_fixup_process+0x120>
   14e83:	mov    rdi,QWORD PTR [rip+0x523ce]        # 67258 <warn>
   14e8a:	add    rsp,0x8
   14e8e:	mov    esi,0x1
   14e93:	xor    eax,eax
   14e95:	pop    rbx
   14e96:	lea    rcx,[rip+0xf693]        # 24530 <__func__.7159>
   14e9d:	lea    rdx,[rip+0xbed4]        # 20d78 <_IO_stdin_used+0x2d78>
   14ea4:	pop    rbp
   14ea5:	pop    r12
   14ea7:	pop    r13
   14ea9:	jmp    5270 <__fprintf_chk@plt>
   14eae:	xchg   ax,ax
   14eb0:	lea    rax,[rip+0xffffffffffff5799]        # a650 <shadow_fixup_postprocess>
   14eb7:	mov    QWORD PTR [rbp+0x283d8],rax
   14ebe:	add    rsp,0x8
   14ec2:	pop    rbx
   14ec3:	pop    rbp
   14ec4:	pop    r12
   14ec6:	pop    r13
   14ec8:	ret    
   14ec9:	nop    DWORD PTR [rax+0x0]
   14ed0:	mov    eax,DWORD PTR [r12+0x14]
   14ed5:	shl    eax,0x2
   14ed8:	cmp    eax,0xc
   14edb:	jne    14fe0 <shadow_fixup_process+0x250>
   14ee1:	mov    eax,DWORD PTR [r13+0x4]
   14ee5:	mov    QWORD PTR [rbp+0x28348],rax
   14eec:	mov    eax,DWORD PTR [r13+0x8]
   14ef0:	mov    DWORD PTR [rbp+0x28350],eax
   14ef6:	mov    eax,DWORD PTR [r13+0x0]
   14efa:	mov    QWORD PTR [rbp+0x28370],rax
   14f01:	jmp    14e03 <shadow_fixup_process+0x73>
   14f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14f10:	mov    eax,DWORD PTR [r12+0x14]
   14f15:	shl    eax,0x2
   14f18:	cmp    eax,0x18
   14f1b:	jne    15048 <shadow_fixup_process+0x2b8>
   14f21:	mov    rax,QWORD PTR [r13+0x8]
   14f25:	mov    QWORD PTR [rbp+0x28348],rax
   14f2c:	mov    eax,DWORD PTR [r13+0x10]
   14f30:	mov    DWORD PTR [rbp+0x28350],eax
   14f36:	mov    rax,QWORD PTR [r13+0x0]
   14f3a:	mov    QWORD PTR [rbp+0x28370],rax
   14f41:	jmp    14e03 <shadow_fixup_process+0x73>
   14f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14f50:	mov    eax,DWORD PTR [r12+0x14]
   14f55:	shl    eax,0x2
   14f58:	cmp    eax,0x10
   14f5b:	jne    15030 <shadow_fixup_process+0x2a0>
   14f61:	mov    eax,DWORD PTR [r13+0x8]
   14f65:	mov    QWORD PTR [rbp+0x28348],rax
   14f6c:	mov    eax,DWORD PTR [r13+0xc]
   14f70:	mov    DWORD PTR [rbp+0x28350],eax
   14f76:	mov    rax,QWORD PTR [r13+0x0]
   14f7a:	mov    QWORD PTR [rbp+0x28370],rax
   14f81:	jmp    14e03 <shadow_fixup_process+0x73>
   14f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
   14f90:	call   120d0 <flag_string>
   14f95:	sub    rsp,0x8
   14f99:	mov    rdx,r12
   14f9c:	mov    rcx,QWORD PTR [rbp+0x28348]
   14fa3:	push   rax
   14fa4:	mov    r9d,DWORD PTR [rbp+0x28350]
   14fab:	xor    eax,eax
   14fad:	lea    rsi,[rip+0xc7a4]        # 21758 <_IO_stdin_used+0x3758>
   14fb4:	mov    r8,QWORD PTR [rbp+0x28370]
   14fbb:	mov    edi,0x1
   14fc0:	call   5200 <__printf_chk@plt>
   14fc5:	pop    rax
   14fc6:	mov    rax,QWORD PTR [rbp+0x283d8]
   14fcd:	pop    rdx
   14fce:	test   rax,rax
   14fd1:	jne    14e77 <shadow_fixup_process+0xe7>
   14fd7:	jmp    14eb0 <shadow_fixup_process+0x120>
   14fdc:	nop    DWORD PTR [rax+0x0]
   14fe0:	mov    rdx,QWORD PTR [rbp+0x10]
   14fe4:	sub    rsp,0x8
   14fe8:	mov    r8d,0xc
   14fee:	mov    r9d,DWORD PTR [rdx+0x14]
   14ff2:	push   rax
   14ff3:	mov    rdi,QWORD PTR [rip+0x5225e]        # 67258 <warn>
   14ffa:	xor    eax,eax
   14ffc:	lea    rcx,[rip+0xf52d]        # 24530 <__func__.7159>
   15003:	lea    rdx,[rip+0xc666]        # 21670 <_IO_stdin_used+0x3670>
   1500a:	mov    esi,0x1
   1500f:	call   5270 <__fprintf_chk@plt>
   15014:	cmp    DWORD PTR [rip+0x160c5],0x3        # 2b0e0 <opt+0x40>
   1501b:	pop    rdi
   1501c:	pop    r8
   1501e:	ja     14ebe <shadow_fixup_process+0x12e>
   15024:	mov    rdi,r12
   15027:	call   146b0 <error.part.24>
   1502c:	nop    DWORD PTR [rax+0x0]
   15030:	mov    rdx,QWORD PTR [rbp+0x10]
   15034:	sub    rsp,0x8
   15038:	mov    r8d,0x10
   1503e:	mov    r9d,DWORD PTR [rdx+0x14]
   15042:	push   rax
   15043:	jmp    14ff3 <shadow_fixup_process+0x263>
   15045:	nop    DWORD PTR [rax]
   15048:	mov    rdx,QWORD PTR [rbp+0x10]
   1504c:	sub    rsp,0x8
   15050:	mov    r8d,0x18
   15056:	mov    r9d,DWORD PTR [rdx+0x14]
   1505a:	push   rax
   1505b:	jmp    14ff3 <shadow_fixup_process+0x263>
   1505d:	nop    DWORD PTR [rax]

0000000000015060 <shadow_mmio_process>:
   15060:	push   r13
   15062:	push   r12
   15064:	mov    r12,rdi
   15067:	push   rbp
   15068:	mov    rbp,rsi
   1506b:	push   rbx
   1506c:	sub    rsp,0x8
   15070:	mov    ebx,DWORD PTR [rdi+0x10]
   15073:	mov    rax,QWORD PTR [rsi+0x10]
   15077:	mov    r13,QWORD PTR [rdi+0x20]
   1507b:	shr    ebx,0x8
   1507e:	mov    r9d,DWORD PTR [rax+0x14]
   15082:	and    ebx,0xf
   15085:	add    ebx,0x2
   15088:	cmp    r9d,ebx
   1508b:	je     150b8 <shadow_mmio_process+0x58>
   1508d:	mov    rdi,QWORD PTR [rip+0x521c4]        # 67258 <warn>
   15094:	mov    r8d,ebx
   15097:	xor    eax,eax
   15099:	lea    rcx,[rip+0xf470]        # 24510 <__func__.7184>
   150a0:	lea    rdx,[rip+0xc581]        # 21628 <_IO_stdin_used+0x3628>
   150a7:	mov    esi,0x1
   150ac:	call   5270 <__fprintf_chk@plt>
   150b1:	mov    rax,QWORD PTR [rbp+0x10]
   150b5:	mov    DWORD PTR [rax+0x14],ebx
   150b8:	cmp    ebx,0x2
   150bb:	jl     150ee <shadow_mmio_process+0x8e>
   150bd:	cmp    ebx,0x3
   150c0:	jle    151a8 <shadow_mmio_process+0x148>
   150c6:	cmp    ebx,0x4
   150c9:	jne    150ee <shadow_mmio_process+0x8e>
   150cb:	mov    eax,DWORD PTR [r12+0x14]
   150d0:	shl    eax,0x2
   150d3:	cmp    eax,0x8
   150d6:	jne    15230 <shadow_mmio_process+0x1d0>
   150dc:	mov    rax,QWORD PTR [r13+0x0]
   150e0:	mov    QWORD PTR [rbp+0x283c0],rax
   150e7:	mov    QWORD PTR [rbp+0x28348],rax
   150ee:	test   BYTE PTR [rip+0x15fac],0x40        # 2b0a1 <opt+0x1>
   150f5:	jne    15140 <shadow_mmio_process+0xe0>
   150f7:	mov    rax,QWORD PTR [rbp+0x283d8]
   150fe:	test   rax,rax
   15101:	je     15188 <shadow_mmio_process+0x128>
   15107:	lea    rdx,[rip+0xffffffffffff8622]        # d730 <hvm_generic_postprocess>
   1510e:	cmp    rax,rdx
   15111:	je     15188 <shadow_mmio_process+0x128>
   15113:	mov    rdi,QWORD PTR [rip+0x5213e]        # 67258 <warn>
   1511a:	add    rsp,0x8
   1511e:	mov    esi,0x1
   15123:	xor    eax,eax
   15125:	pop    rbx
   15126:	lea    rcx,[rip+0xf3e3]        # 24510 <__func__.7184>
   1512d:	lea    rdx,[rip+0xbc44]        # 20d78 <_IO_stdin_used+0x2d78>
   15134:	pop    rbp
   15135:	pop    r12
   15137:	pop    r13
   15139:	jmp    5270 <__fprintf_chk@plt>
   1513e:	xchg   ax,ax
   15140:	cmp    DWORD PTR [rbp+0x28358],0x3
   15147:	lea    rax,[rip+0x9977]        # 1eac5 <_IO_stdin_used+0xac5>
   1514e:	lea    rcx,[rip+0x97b8]        # 1e90d <_IO_stdin_used+0x90d>
   15155:	mov    r8,QWORD PTR [rbp+0x28348]
   1515c:	cmovne rcx,rax
   15160:	lea    rdx,[r12+0x28]
   15165:	lea    rsi,[rip+0x97a7]        # 1e913 <_IO_stdin_used+0x913>
   1516c:	xor    eax,eax
   1516e:	mov    edi,0x1
   15173:	call   5200 <__printf_chk@plt>
   15178:	mov    rax,QWORD PTR [rbp+0x283d8]
   1517f:	test   rax,rax
   15182:	jne    15107 <shadow_mmio_process+0xa7>
   15188:	lea    rax,[rip+0xffffffffffffa051]        # f1e0 <shadow_mmio_postprocess>
   1518f:	mov    QWORD PTR [rbp+0x283d8],rax
   15196:	add    rsp,0x8
   1519a:	pop    rbx
   1519b:	pop    rbp
   1519c:	pop    r12
   1519e:	pop    r13
   151a0:	ret    
   151a1:	nop    DWORD PTR [rax+0x0]
   151a8:	mov    eax,DWORD PTR [r12+0x14]
   151ad:	shl    eax,0x2
   151b0:	cmp    eax,0x4
   151b3:	jne    151e0 <shadow_mmio_process+0x180>
   151b5:	mov    eax,DWORD PTR [r13+0x0]
   151b9:	mov    QWORD PTR [rbp+0x283c0],rax
   151c0:	mov    QWORD PTR [rbp+0x28348],rax
   151c7:	test   BYTE PTR [rip+0x15ed3],0x40        # 2b0a1 <opt+0x1>
   151ce:	je     150f7 <shadow_mmio_process+0x97>
   151d4:	jmp    15140 <shadow_mmio_process+0xe0>
   151d9:	nop    DWORD PTR [rax+0x0]
   151e0:	mov    rdx,QWORD PTR [rbp+0x10]
   151e4:	sub    rsp,0x8
   151e8:	mov    r8d,0x4
   151ee:	mov    r9d,DWORD PTR [rdx+0x14]
   151f2:	push   rax
   151f3:	mov    rdi,QWORD PTR [rip+0x5205e]        # 67258 <warn>
   151fa:	lea    rdx,[rip+0xc46f]        # 21670 <_IO_stdin_used+0x3670>
   15201:	xor    eax,eax
   15203:	lea    rcx,[rip+0xf306]        # 24510 <__func__.7184>
   1520a:	mov    esi,0x1
   1520f:	call   5270 <__fprintf_chk@plt>
   15214:	cmp    DWORD PTR [rip+0x15ec5],0x3        # 2b0e0 <opt+0x40>
   1521b:	pop    rax
   1521c:	pop    rdx
   1521d:	ja     15196 <shadow_mmio_process+0x136>
   15223:	mov    rdi,r12
   15226:	call   146b0 <error.part.24>
   1522b:	nop    DWORD PTR [rax+rax*1+0x0]
   15230:	mov    rdx,QWORD PTR [rbp+0x10]
   15234:	sub    rsp,0x8
   15238:	mov    r8d,0x8
   1523e:	mov    r9d,DWORD PTR [rdx+0x14]
   15242:	push   rax
   15243:	jmp    151f3 <shadow_mmio_process+0x193>
   15245:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000015250 <shadow_propagate_process>:
   15250:	push   r13
   15252:	push   r12
   15254:	mov    r12,rdi
   15257:	push   rbp
   15258:	mov    rbp,rsi
   1525b:	push   rbx
   1525c:	sub    rsp,0x8
   15260:	mov    ebx,DWORD PTR [rdi+0x10]
   15263:	mov    rax,QWORD PTR [rsi+0x10]
   15267:	mov    r13,QWORD PTR [rdi+0x20]
   1526b:	shr    ebx,0x8
   1526e:	mov    r9d,DWORD PTR [rax+0x14]
   15272:	and    ebx,0xf
   15275:	add    ebx,0x2
   15278:	cmp    r9d,ebx
   1527b:	je     152a8 <shadow_propagate_process+0x58>
   1527d:	mov    rdi,QWORD PTR [rip+0x51fd4]        # 67258 <warn>
   15284:	mov    r8d,ebx
   15287:	xor    eax,eax
   15289:	lea    rcx,[rip+0xf260]        # 244f0 <__func__.7217>
   15290:	lea    rdx,[rip+0xc391]        # 21628 <_IO_stdin_used+0x3628>
   15297:	mov    esi,0x1
   1529c:	call   5270 <__fprintf_chk@plt>
   152a1:	mov    rax,QWORD PTR [rbp+0x10]
   152a5:	mov    DWORD PTR [rax+0x14],ebx
   152a8:	cmp    ebx,0x3
   152ab:	je     15410 <shadow_propagate_process+0x1c0>
   152b1:	cmp    ebx,0x4
   152b4:	je     153d0 <shadow_propagate_process+0x180>
   152ba:	cmp    ebx,0x2
   152bd:	je     15390 <shadow_propagate_process+0x140>
   152c3:	test   BYTE PTR [rip+0x15dd7],0x40        # 2b0a1 <opt+0x1>
   152ca:	jne    15320 <shadow_propagate_process+0xd0>
   152cc:	mov    rax,QWORD PTR [rbp+0x283d8]
   152d3:	test   rax,rax
   152d6:	je     15370 <shadow_propagate_process+0x120>
   152dc:	lea    rdx,[rip+0xffffffffffff844d]        # d730 <hvm_generic_postprocess>
   152e3:	cmp    rax,rdx
   152e6:	je     15370 <shadow_propagate_process+0x120>
   152ec:	mov    rdi,QWORD PTR [rip+0x51f65]        # 67258 <warn>
   152f3:	add    rsp,0x8
   152f7:	mov    esi,0x1
   152fc:	xor    eax,eax
   152fe:	pop    rbx
   152ff:	lea    rcx,[rip+0xf1ea]        # 244f0 <__func__.7217>
   15306:	lea    rdx,[rip+0xba6b]        # 20d78 <_IO_stdin_used+0x2d78>
   1530d:	pop    rbp
   1530e:	pop    r12
   15310:	pop    r13
   15312:	jmp    5270 <__fprintf_chk@plt>
   15317:	nop    WORD PTR [rax+rax*1+0x0]
   15320:	lea    rdi,[rbp+0x28348]
   15327:	call   120d0 <flag_string>
   1532c:	sub    rsp,0x8
   15330:	mov    rcx,QWORD PTR [rbp+0x28348]
   15337:	mov    r9d,DWORD PTR [rbp+0x28350]
   1533e:	push   rax
   1533f:	mov    r8,QWORD PTR [rbp+0x28370]
   15346:	xor    eax,eax
   15348:	lea    rdx,[r12+0x28]
   1534d:	lea    rsi,[rip+0xc434]        # 21788 <_IO_stdin_used+0x3788>
   15354:	mov    edi,0x1
   15359:	call   5200 <__printf_chk@plt>
   1535e:	pop    rax
   1535f:	mov    rax,QWORD PTR [rbp+0x283d8]
   15366:	pop    rdx
   15367:	test   rax,rax
   1536a:	jne    152dc <shadow_propagate_process+0x8c>
   15370:	lea    rax,[rip+0xffffffffffff5f29]        # b2a0 <shadow_propagate_postprocess>
   15377:	mov    QWORD PTR [rbp+0x283d8],rax
   1537e:	add    rsp,0x8
   15382:	pop    rbx
   15383:	pop    rbp
   15384:	pop    r12
   15386:	pop    r13
   15388:	ret    
   15389:	nop    DWORD PTR [rax+0x0]
   15390:	mov    eax,DWORD PTR [r12+0x14]
   15395:	shl    eax,0x2
   15398:	cmp    eax,0xc
   1539b:	jne    15448 <shadow_propagate_process+0x1f8>
   153a1:	mov    eax,DWORD PTR [r13+0x4]
   153a5:	mov    QWORD PTR [rbp+0x28348],rax
   153ac:	mov    eax,DWORD PTR [r13+0x8]
   153b0:	mov    DWORD PTR [rbp+0x28350],eax
   153b6:	mov    eax,DWORD PTR [r13+0x0]
   153ba:	mov    QWORD PTR [rbp+0x28370],rax
   153c1:	jmp    152c3 <shadow_propagate_process+0x73>
   153c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   153d0:	mov    eax,DWORD PTR [r12+0x14]
   153d5:	shl    eax,0x2
   153d8:	cmp    eax,0x18
   153db:	jne    154b0 <shadow_propagate_process+0x260>
   153e1:	mov    rax,QWORD PTR [r13+0x8]
   153e5:	mov    QWORD PTR [rbp+0x28348],rax
   153ec:	mov    eax,DWORD PTR [r13+0x10]
   153f0:	mov    DWORD PTR [rbp+0x28350],eax
   153f6:	mov    rax,QWORD PTR [r13+0x0]
   153fa:	mov    QWORD PTR [rbp+0x28370],rax
   15401:	jmp    152c3 <shadow_propagate_process+0x73>
   15406:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15410:	mov    eax,DWORD PTR [r12+0x14]
   15415:	shl    eax,0x2
   15418:	cmp    eax,0x10
   1541b:	jne    15498 <shadow_propagate_process+0x248>
   1541d:	mov    eax,DWORD PTR [r13+0x8]
   15421:	mov    QWORD PTR [rbp+0x28348],rax
   15428:	mov    eax,DWORD PTR [r13+0xc]
   1542c:	mov    DWORD PTR [rbp+0x28350],eax
   15432:	mov    rax,QWORD PTR [r13+0x0]
   15436:	mov    QWORD PTR [rbp+0x28370],rax
   1543d:	jmp    152c3 <shadow_propagate_process+0x73>
   15442:	nop    WORD PTR [rax+rax*1+0x0]
   15448:	mov    rdx,QWORD PTR [rbp+0x10]
   1544c:	sub    rsp,0x8
   15450:	mov    r8d,0xc
   15456:	mov    r9d,DWORD PTR [rdx+0x14]
   1545a:	push   rax
   1545b:	mov    rdi,QWORD PTR [rip+0x51df6]        # 67258 <warn>
   15462:	lea    rcx,[rip+0xf087]        # 244f0 <__func__.7217>
   15469:	mov    esi,0x1
   1546e:	xor    eax,eax
   15470:	lea    rdx,[rip+0xc1f9]        # 21670 <_IO_stdin_used+0x3670>
   15477:	call   5270 <__fprintf_chk@plt>
   1547c:	cmp    DWORD PTR [rip+0x15c5d],0x3        # 2b0e0 <opt+0x40>
   15483:	pop    rcx
   15484:	pop    rsi
   15485:	ja     1537e <shadow_propagate_process+0x12e>
   1548b:	mov    rdi,r12
   1548e:	call   146b0 <error.part.24>
   15493:	nop    DWORD PTR [rax+rax*1+0x0]
   15498:	mov    rdx,QWORD PTR [rbp+0x10]
   1549c:	sub    rsp,0x8
   154a0:	mov    r8d,0x10
   154a6:	mov    r9d,DWORD PTR [rdx+0x14]
   154aa:	push   rax
   154ab:	jmp    1545b <shadow_propagate_process+0x20b>
   154ad:	nop    DWORD PTR [rax]
   154b0:	mov    rdx,QWORD PTR [rbp+0x10]
   154b4:	sub    rsp,0x8
   154b8:	mov    r8d,0x18
   154be:	mov    r9d,DWORD PTR [rdx+0x14]
   154c2:	push   rax
   154c3:	jmp    1545b <shadow_propagate_process+0x20b>
   154c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000154d0 <pv_ptwr_emulation_process>:
   154d0:	push   rbp
   154d1:	push   rbx
   154d2:	mov    rbx,rdi
   154d5:	sub    rsp,0x8
   154d9:	mov    ecx,DWORD PTR [rdi+0x10]
   154dc:	mov    rbp,QWORD PTR [rdi+0x20]
   154e0:	cmp    cl,0xb
   154e3:	je     15510 <pv_ptwr_emulation_process+0x40>
   154e5:	cmp    cl,0xc
   154e8:	jne    15550 <pv_ptwr_emulation_process+0x80>
   154ea:	test   ch,0x1
   154ed:	jne    15580 <pv_ptwr_emulation_process+0xb0>
   154f3:	mov    rcx,QWORD PTR [rbp+0x0]
   154f7:	mov    r9d,DWORD PTR [rbp+0x8]
   154fb:	mov    r8d,DWORD PTR [rbp+0xc]
   154ff:	test   BYTE PTR [rip+0x15b9b],0x40        # 2b0a1 <opt+0x1>
   15506:	jne    1552e <pv_ptwr_emulation_process+0x5e>
   15508:	add    rsp,0x8
   1550c:	pop    rbx
   1550d:	pop    rbp
   1550e:	ret    
   1550f:	nop
   15510:	test   ch,0x1
   15513:	je     155b0 <pv_ptwr_emulation_process+0xe0>
   15519:	mov    rcx,QWORD PTR [rbp+0x0]
   1551d:	mov    r9,QWORD PTR [rbp+0x8]
   15521:	mov    r8,QWORD PTR [rbp+0x10]
   15525:	test   BYTE PTR [rip+0x15b75],0x40        # 2b0a1 <opt+0x1>
   1552c:	je     15508 <pv_ptwr_emulation_process+0x38>
   1552e:	add    rsp,0x8
   15532:	lea    rdx,[rbx+0x28]
   15536:	mov    edi,0x1
   1553b:	xor    eax,eax
   1553d:	pop    rbx
   1553e:	lea    rsi,[rip+0xc2fb]        # 21840 <_IO_stdin_used+0x3840>
   15545:	pop    rbp
   15546:	jmp    5200 <__printf_chk@plt>
   1554b:	nop    DWORD PTR [rax+rax*1+0x0]
   15550:	mov    rdi,QWORD PTR [rip+0x51d01]        # 67258 <warn>
   15557:	xor    eax,eax
   15559:	movzx  ecx,cl
   1555c:	lea    rdx,[rip+0xc2b5]        # 21818 <_IO_stdin_used+0x3818>
   15563:	mov    esi,0x1
   15568:	call   5270 <__fprintf_chk@plt>
   1556d:	cmp    DWORD PTR [rip+0x15b6c],0x3        # 2b0e0 <opt+0x40>
   15574:	ja     15508 <pv_ptwr_emulation_process+0x38>
   15576:	mov    rdi,rbx
   15579:	call   146b0 <error.part.24>
   1557e:	xchg   ax,ax
   15580:	mov    rdi,QWORD PTR [rip+0x51cd1]        # 67258 <warn>
   15587:	xor    eax,eax
   15589:	mov    esi,0x1
   1558e:	lea    rdx,[rip+0xc223]        # 217b8 <_IO_stdin_used+0x37b8>
   15595:	call   5270 <__fprintf_chk@plt>
   1559a:	cmp    DWORD PTR [rip+0x15b3f],0x3        # 2b0e0 <opt+0x40>
   155a1:	ja     154f3 <pv_ptwr_emulation_process+0x23>
   155a7:	jmp    15576 <pv_ptwr_emulation_process+0xa6>
   155a9:	nop    DWORD PTR [rax+0x0]
   155b0:	mov    rdi,QWORD PTR [rip+0x51ca1]        # 67258 <warn>
   155b7:	xor    eax,eax
   155b9:	mov    esi,0x1
   155be:	lea    rdx,[rip+0xc223]        # 217e8 <_IO_stdin_used+0x37e8>
   155c5:	call   5270 <__fprintf_chk@plt>
   155ca:	cmp    DWORD PTR [rip+0x15b0f],0x3        # 2b0e0 <opt+0x40>
   155d1:	ja     15519 <pv_ptwr_emulation_process+0x49>
   155d7:	jmp    15576 <pv_ptwr_emulation_process+0xa6>
   155d9:	nop    DWORD PTR [rax+0x0]

00000000000155e0 <pv_process>:
   155e0:	mov    rdx,rdi
   155e3:	add    rdi,0x30
   155e7:	mov    rax,QWORD PTR [rdx+0x1a8]
   155ee:	mov    edx,DWORD PTR [rdx+0x40]
   155f1:	mov    ecx,DWORD PTR [rax+0x3bf0]
   155f7:	lea    rsi,[rax+0x3bf8]
   155fe:	test   ecx,ecx
   15600:	jne    15650 <pv_process+0x70>
   15602:	mov    DWORD PTR [rax+0x3bf0],0x2
   1560c:	mov    r8d,DWORD PTR [rip+0x15a91]        # 2b0a4 <opt+0x4>
   15613:	movzx  ecx,dl
   15616:	test   r8d,r8d
   15619:	je     15634 <pv_process+0x54>
   1561b:	or     BYTE PTR [rax+0x3bf8],0x1
   15622:	cmp    dl,0xc
   15625:	je     15698 <pv_process+0xb8>
   15627:	movzx  r8d,dl
   1562b:	add    DWORD PTR [rax+r8*4+0x3bfc],0x1
   15634:	cmp    dl,0xe
   15637:	ja     15690 <pv_process+0xb0>
   15639:	lea    rdx,[rip+0xea34]        # 24074 <_IO_stdin_used+0x6074>
   15640:	movsxd rax,DWORD PTR [rdx+rcx*4]
   15644:	add    rax,rdx
   15647:	jmp    rax
   15649:	nop    DWORD PTR [rax+0x0]
   15650:	cmp    ecx,0x2
   15653:	je     1560c <pv_process+0x2c>
   15655:	push   r9
   15657:	call   7bc0 <vcpu_set_data_type.part.43>
   1565c:	nop    DWORD PTR [rax+0x0]
   15660:	lea    rdx,[rip+0x92f1]        # 1e958 <_IO_stdin_used+0x958>
   15667:	jmp    128a0 <pv_hypercall_v2_process>
   1566c:	nop    DWORD PTR [rax+0x0]
   15670:	jmp    124b0 <pv_hypercall_process>
   15675:	nop    DWORD PTR [rax]
   15678:	jmp    12540 <pv_trap_process>
   1567d:	nop    DWORD PTR [rax]
   15680:	lea    rdx,[rip+0x943e]        # 1eac5 <_IO_stdin_used+0xac5>
   15687:	jmp    128a0 <pv_hypercall_v2_process>
   1568c:	nop    DWORD PTR [rax+0x0]
   15690:	jmp    12610 <pv_generic_process>
   15695:	nop    DWORD PTR [rax]
   15698:	add    DWORD PTR [rax+0x3c28],0x1
   1569f:	jmp    154d0 <pv_ptwr_emulation_process>
   156a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   156af:	nop

00000000000156b0 <mem_process>:
   156b0:	push   r12
   156b2:	push   rbp
   156b3:	push   rbx
   156b4:	movzx  ebx,WORD PTR [rdi+0x40]
   156b8:	and    bx,0xfff
   156bd:	cmp    bx,0x12
   156c1:	ja     15740 <mem_process+0x90>
   156c3:	lea    rcx,[rip+0xe9e6]        # 240b0 <_IO_stdin_used+0x60b0>
   156ca:	movzx  edx,bx
   156cd:	movsxd rax,DWORD PTR [rcx+rdx*4]
   156d1:	add    rax,rcx
   156d4:	jmp    rax
   156d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   156e0:	pop    rbx
   156e1:	pop    rbp
   156e2:	pop    r12
   156e4:	jmp    13f90 <mem_pod_superpage_splinter_process>
   156e9:	nop    DWORD PTR [rax+0x0]
   156f0:	pop    rbx
   156f1:	pop    rbp
   156f2:	pop    r12
   156f4:	jmp    13fd0 <mem_page_grant>
   156f9:	nop    DWORD PTR [rax+0x0]
   15700:	pop    rbx
   15701:	pop    rbp
   15702:	pop    r12
   15704:	jmp    14010 <mem_set_p2m_entry_process>
   15709:	nop    DWORD PTR [rax+0x0]
   15710:	pop    rbx
   15711:	pop    rbp
   15712:	pop    r12
   15714:	jmp    14060 <mem_decrease_reservation_process>
   15719:	nop    DWORD PTR [rax+0x0]
   15720:	pop    rbx
   15721:	pop    rbp
   15722:	pop    r12
   15724:	jmp    13ee0 <mem_pod_populate_process>
   15729:	nop    DWORD PTR [rax+0x0]
   15730:	pop    rbx
   15731:	pop    rbp
   15732:	pop    r12
   15734:	jmp    13dc0 <mem_pod_zero_reclaim_process>
   15739:	nop    DWORD PTR [rax+0x0]
   15740:	mov    rbp,rdi
   15743:	mov    r12,QWORD PTR [rdi+0x50]
   15747:	test   BYTE PTR [rip+0x15953],0x40        # 2b0a1 <opt+0x1>
   1574e:	jne    15770 <mem_process+0xc0>
   15750:	mov    eax,DWORD PTR [rip+0x1594e]        # 2b0a4 <opt+0x4>
   15756:	test   eax,eax
   15758:	je     15762 <mem_process+0xb2>
   1575a:	movzx  eax,bx
   1575d:	cmp    eax,0x12
   15760:	jle    15788 <mem_process+0xd8>
   15762:	pop    rbx
   15763:	pop    rbp
   15764:	pop    r12
   15766:	ret    
   15767:	nop    WORD PTR [rax+rax*1+0x0]
   15770:	lea    rsi,[rdi+0x30]
   15774:	mov    rdi,QWORD PTR [rip+0x18ca5]        # 2e420 <stdout@@GLIBC_2.2.5>
   1577b:	call   141c0 <dump_generic>
   15780:	jmp    15750 <mem_process+0xa0>
   15782:	nop    WORD PTR [rax+rax*1+0x0]
   15788:	mov    rax,QWORD PTR [rbp+0x1a8]
   1578f:	test   rax,rax
   15792:	je     15762 <mem_process+0xb2>
   15794:	mov    rdx,QWORD PTR [rax+0x8]
   15798:	test   rdx,rdx
   1579b:	je     157be <mem_process+0x10e>
   1579d:	movzx  eax,bx
   157a0:	shl    rax,0x2
   157a4:	add    DWORD PTR [rdx+rax*1+0x11a8],0x1
   157ac:	mov    rdx,QWORD PTR [rbp+0x1a8]
   157b3:	add    rax,QWORD PTR [rdx+0x8]
   157b7:	add    DWORD PTR [rax+0x11f4],0x1
   157be:	mov    edi,DWORD PTR [r12]
   157c2:	call   12e00 <domain_find>
   157c7:	test   rax,rax
   157ca:	je     15762 <mem_process+0xb2>
   157cc:	movzx  ebx,bx
   157cf:	lea    rax,[rax+rbx*4]
   157d3:	add    DWORD PTR [rax+0x1240],0x1
   157da:	add    DWORD PTR [rax+0x128c],0x1
   157e1:	jmp    15762 <mem_process+0xb2>
   157e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000157f0 <dump_raw>:
   157f0:	push   r12
   157f2:	push   rbp
   157f3:	mov    rbp,rsi
   157f6:	push   rbx
   157f7:	cmp    BYTE PTR [rsi+0x13b],0x0
   157fe:	mov    r8d,DWORD PTR [rsi+0x14]
   15802:	mov    ecx,DWORD PTR [rsi+0x10]
   15805:	js     158d8 <dump_raw+0xe8>
   1580b:	mov    rdx,rdi
   1580e:	lea    r9,[rip+0x982f]        # 1f044 <_IO_stdin_used+0x1044>
   15815:	mov    edi,0x1
   1581a:	xor    eax,eax
   1581c:	lea    rsi,[rip+0x9117]        # 1e93a <_IO_stdin_used+0x93a>
   15823:	call   5200 <__printf_chk@plt>
   15828:	xor    ebx,ebx
   1582a:	lea    r12,[rip+0x911f]        # 1e950 <_IO_stdin_used+0x950>
   15831:	jmp    1585c <dump_raw+0x6c>
   15833:	nop    DWORD PTR [rax+rax*1+0x0]
   15838:	mov    rax,QWORD PTR [rbp+0x20]
   1583c:	lea    rsi,[rip+0x9108]        # 1e94b <_IO_stdin_used+0x94b>
   15843:	mov    edi,0x1
   15848:	mov    edx,DWORD PTR [rax+rbx*4]
   1584b:	xor    eax,eax
   1584d:	add    rbx,0x1
   15851:	call   5200 <__printf_chk@plt>
   15856:	cmp    rbx,0x7
   1585a:	je     1587a <dump_raw+0x8a>
   1585c:	cmp    DWORD PTR [rbp+0x14],ebx
   1585f:	jg     15838 <dump_raw+0x48>
   15861:	mov    rsi,r12
   15864:	mov    edi,0x1
   15869:	xor    eax,eax
   1586b:	add    rbx,0x1
   1586f:	call   5200 <__printf_chk@plt>
   15874:	cmp    rbx,0x7
   15878:	jne    1585c <dump_raw+0x6c>
   1587a:	lea    rsi,[rip+0x90d9]        # 1e95a <_IO_stdin_used+0x95a>
   15881:	mov    edi,0x1
   15886:	xor    eax,eax
   15888:	lea    rbx,[rbp+0x138]
   1588f:	lea    r12,[rip+0x8e95]        # 1e72b <_IO_stdin_used+0x72b>
   15896:	add    rbp,0x158
   1589d:	call   5200 <__printf_chk@plt>
   158a2:	nop    WORD PTR [rax+rax*1+0x0]
   158a8:	mov    edx,DWORD PTR [rbx]
   158aa:	mov    rsi,r12
   158ad:	mov    edi,0x1
   158b2:	xor    eax,eax
   158b4:	add    rbx,0x4
   158b8:	call   5200 <__printf_chk@plt>
   158bd:	cmp    rbx,rbp
   158c0:	jne    158a8 <dump_raw+0xb8>
   158c2:	pop    rbx
   158c3:	lea    rdi,[rip+0x9096]        # 1e960 <_IO_stdin_used+0x960>
   158ca:	pop    rbp
   158cb:	pop    r12
   158cd:	jmp    5090 <puts@plt>
   158d2:	nop    WORD PTR [rax+rax*1+0x0]
   158d8:	mov    r9,QWORD PTR [rsi+0x8]
   158dc:	mov    rdx,rdi
   158df:	lea    rsi,[rip+0x9041]        # 1e927 <_IO_stdin_used+0x927>
   158e6:	xor    eax,eax
   158e8:	mov    edi,0x1
   158ed:	call   5200 <__printf_chk@plt>
   158f2:	jmp    15828 <dump_raw+0x38>
   158f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015900 <error>:
   15900:	cmp    DWORD PTR [rip+0x157da],edi        # 2b0e0 <opt+0x40>
   15906:	jb     15909 <error+0x9>
   15908:	ret    
   15909:	push   rax
   1590a:	mov    rdi,rsi
   1590d:	call   146b0 <error.part.24>
   15912:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1591d:	nop    DWORD PTR [rax]

0000000000015920 <check_extra_words>:
   15920:	push   rbp
   15921:	movsxd r9,esi
   15924:	push   rbx
   15925:	shr    r9,0x2
   15929:	sub    rsp,0x8
   1592d:	mov    r8d,DWORD PTR [rdi+0x14]
   15931:	cmp    r8d,r9d
   15934:	je     15985 <check_extra_words+0x65>
   15936:	mov    ebx,DWORD PTR [rip+0x5193c]        # 67278 <off_by_one.8240>
   1593c:	mov    rbp,rdi
   1593f:	mov    rcx,rdx
   15942:	lea    eax,[r9+0x1]
   15946:	mov    rdi,QWORD PTR [rip+0x5190b]        # 67258 <warn>
   1594d:	test   ebx,ebx
   1594f:	jne    15980 <check_extra_words+0x60>
   15951:	cmp    r8d,eax
   15954:	je     15990 <check_extra_words+0x70>
   15956:	xor    eax,eax
   15958:	lea    rdx,[rip+0xbf39]        # 21898 <_IO_stdin_used+0x3898>
   1595f:	mov    esi,0x1
   15964:	call   5270 <__fprintf_chk@plt>
   15969:	cmp    DWORD PTR [rip+0x15770],0x3        # 2b0e0 <opt+0x40>
   15970:	jbe    159b5 <check_extra_words+0x95>
   15972:	mov    ebx,0x1
   15977:	add    rsp,0x8
   1597b:	mov    eax,ebx
   1597d:	pop    rbx
   1597e:	pop    rbp
   1597f:	ret    
   15980:	cmp    r8d,eax
   15983:	jne    15956 <check_extra_words+0x36>
   15985:	xor    ebx,ebx
   15987:	add    rsp,0x8
   1598b:	mov    eax,ebx
   1598d:	pop    rbx
   1598e:	pop    rbp
   1598f:	ret    
   15990:	mov    rcx,rdi
   15993:	mov    edx,0x2f
   15998:	mov    esi,0x1
   1599d:	lea    rdi,[rip+0xbec4]        # 21868 <_IO_stdin_used+0x3868>
   159a4:	call   5260 <fwrite@plt>
   159a9:	mov    DWORD PTR [rip+0x518c5],0x1        # 67278 <off_by_one.8240>
   159b3:	jmp    15977 <check_extra_words+0x57>
   159b5:	mov    rdi,rbp
   159b8:	call   146b0 <error.part.24>
   159bd:	nop    DWORD PTR [rax]

00000000000159c0 <hvm_msr_write_process>:
   159c0:	push   r12
   159c2:	lea    rdx,[rip+0x8f9a]        # 1e963 <_IO_stdin_used+0x963>
   159c9:	push   rbp
   159ca:	mov    rbp,rdi
   159cd:	push   rbx
   159ce:	mov    rbx,rsi
   159d1:	mov    r12,QWORD PTR [rsi+0x28410]
   159d8:	mov    esi,0xc
   159dd:	call   15920 <check_extra_words>
   159e2:	test   eax,eax
   159e4:	jne    15a56 <hvm_msr_write_process+0x96>
   159e6:	mov    eax,DWORD PTR [r12]
   159ea:	mov    DWORD PTR [rbx+0x28348],eax
   159f0:	mov    r8,QWORD PTR [r12+0x4]
   159f5:	mov    QWORD PTR [rbx+0x28350],r8
   159fc:	test   BYTE PTR [rip+0x1569e],0x40        # 2b0a1 <opt+0x1>
   15a03:	jne    15a60 <hvm_msr_write_process+0xa0>
   15a05:	mov    rax,QWORD PTR [rbx+0x283d8]
   15a0c:	test   rax,rax
   15a0f:	je     15a48 <hvm_msr_write_process+0x88>
   15a11:	lea    rdx,[rip+0xffffffffffff7d18]        # d730 <hvm_generic_postprocess>
   15a18:	cmp    rax,rdx
   15a1b:	je     15a48 <hvm_msr_write_process+0x88>
   15a1d:	mov    rdi,QWORD PTR [rip+0x51834]        # 67258 <warn>
   15a24:	pop    rbx
   15a25:	mov    esi,0x1
   15a2a:	xor    eax,eax
   15a2c:	pop    rbp
   15a2d:	lea    rcx,[rip+0xecac]        # 246e0 <__func__.6667>
   15a34:	lea    rdx,[rip+0xb33d]        # 20d78 <_IO_stdin_used+0x2d78>
   15a3b:	pop    r12
   15a3d:	jmp    5270 <__fprintf_chk@plt>
   15a42:	nop    WORD PTR [rax+rax*1+0x0]
   15a48:	lea    rax,[rip+0xffffffffffff7881]        # d2d0 <hvm_msr_write_postprocess>
   15a4f:	mov    QWORD PTR [rbx+0x283d8],rax
   15a56:	pop    rbx
   15a57:	pop    rbp
   15a58:	pop    r12
   15a5a:	ret    
   15a5b:	nop    DWORD PTR [rax+rax*1+0x0]
   15a60:	mov    ecx,DWORD PTR [r12]
   15a64:	lea    rdx,[rbp+0x28]
   15a68:	mov    edi,0x1
   15a6d:	xor    eax,eax
   15a6f:	lea    rsi,[rip+0xbe4a]        # 218c0 <_IO_stdin_used+0x38c0>
   15a76:	call   5200 <__printf_chk@plt>
   15a7b:	jmp    15a05 <hvm_msr_write_process+0x45>
   15a7d:	nop    DWORD PTR [rax]

0000000000015a80 <hvm_msr_read_process>:
   15a80:	push   r12
   15a82:	lea    rdx,[rip+0x8ee4]        # 1e96d <_IO_stdin_used+0x96d>
   15a89:	push   rbp
   15a8a:	mov    rbp,rdi
   15a8d:	push   rbx
   15a8e:	mov    rbx,rsi
   15a91:	mov    r12,QWORD PTR [rsi+0x28410]
   15a98:	mov    esi,0xc
   15a9d:	call   15920 <check_extra_words>
   15aa2:	test   eax,eax
   15aa4:	jne    15b16 <hvm_msr_read_process+0x96>
   15aa6:	mov    eax,DWORD PTR [r12]
   15aaa:	mov    DWORD PTR [rbx+0x28348],eax
   15ab0:	mov    r8,QWORD PTR [r12+0x4]
   15ab5:	mov    QWORD PTR [rbx+0x28350],r8
   15abc:	test   BYTE PTR [rip+0x155de],0x40        # 2b0a1 <opt+0x1>
   15ac3:	jne    15b20 <hvm_msr_read_process+0xa0>
   15ac5:	mov    rax,QWORD PTR [rbx+0x283d8]
   15acc:	test   rax,rax
   15acf:	je     15b08 <hvm_msr_read_process+0x88>
   15ad1:	lea    rdx,[rip+0xffffffffffff7c58]        # d730 <hvm_generic_postprocess>
   15ad8:	cmp    rax,rdx
   15adb:	je     15b08 <hvm_msr_read_process+0x88>
   15add:	mov    rdi,QWORD PTR [rip+0x51774]        # 67258 <warn>
   15ae4:	pop    rbx
   15ae5:	mov    esi,0x1
   15aea:	xor    eax,eax
   15aec:	pop    rbp
   15aed:	lea    rcx,[rip+0xebac]        # 246a0 <__func__.6686>
   15af4:	lea    rdx,[rip+0xb27d]        # 20d78 <_IO_stdin_used+0x2d78>
   15afb:	pop    r12
   15afd:	jmp    5270 <__fprintf_chk@plt>
   15b02:	nop    WORD PTR [rax+rax*1+0x0]
   15b08:	lea    rax,[rip+0xffffffffffff7831]        # d340 <hvm_msr_read_postprocess>
   15b0f:	mov    QWORD PTR [rbx+0x283d8],rax
   15b16:	pop    rbx
   15b17:	pop    rbp
   15b18:	pop    r12
   15b1a:	ret    
   15b1b:	nop    DWORD PTR [rax+rax*1+0x0]
   15b20:	mov    ecx,DWORD PTR [r12]
   15b24:	lea    rdx,[rbp+0x28]
   15b28:	mov    edi,0x1
   15b2d:	xor    eax,eax
   15b2f:	lea    rsi,[rip+0xbdaa]        # 218e0 <_IO_stdin_used+0x38e0>
   15b36:	call   5200 <__printf_chk@plt>
   15b3b:	jmp    15ac5 <hvm_msr_read_process+0x45>
   15b3d:	nop    DWORD PTR [rax]

0000000000015b40 <hvm_vmexit_process>:
   15b40:	push   r14
   15b42:	push   r13
   15b44:	push   r12
   15b46:	mov    r12,rdx
   15b49:	lea    rdx,[rip+0x8e26]        # 1e976 <_IO_stdin_used+0x976>
   15b50:	push   rbp
   15b51:	mov    rbp,rdi
   15b54:	push   rbx
   15b55:	mov    rbx,rsi
   15b58:	test   BYTE PTR [rdi+0x11],0x1
   15b5c:	je     15ec0 <hvm_vmexit_process+0x380>
   15b62:	mov    esi,0xc
   15b67:	call   15920 <check_extra_words>
   15b6c:	test   eax,eax
   15b6e:	jne    15de7 <hvm_vmexit_process+0x2a7>
   15b74:	mov    eax,DWORD PTR [rbx]
   15b76:	mov    r13,QWORD PTR [rbp+0x20]
   15b7a:	test   eax,eax
   15b7c:	je     15eb0 <hvm_vmexit_process+0x370>
   15b82:	lea    rdi,[rbx+0x28350]
   15b89:	mov    eax,ebx
   15b8b:	mov    DWORD PTR [rbx+0x4],0x1
   15b92:	mov    QWORD PTR [rbx+0x28348],0x0
   15b9d:	and    rdi,0xfffffffffffffff8
   15ba1:	mov    QWORD PTR [rbx+0x283c8],0x0
   15bac:	sub    eax,edi
   15bae:	lea    ecx,[rax+0x283d0]
   15bb4:	xor    eax,eax
   15bb6:	shr    ecx,0x3
   15bb9:	rep stos QWORD PTR es:[rdi],rax
   15bbc:	cmp    DWORD PTR [rbp+0x10],0x81102
   15bc3:	je     15df0 <hvm_vmexit_process+0x2b0>
   15bc9:	cmp    DWORD PTR [r12+0x14],0x4
   15bcf:	je     15f30 <hvm_vmexit_process+0x3f0>
   15bd5:	mov    eax,DWORD PTR [r13+0x4]
   15bd9:	mov    QWORD PTR [rbx+0x283f8],rax
   15be0:	mov    eax,DWORD PTR [r13+0x0]
   15be4:	mov    DWORD PTR [rbx+0x28400],eax
   15bea:	test   BYTE PTR [rip+0x154af],0x20        # 2b0a0 <opt>
   15bf1:	jne    15e5e <hvm_vmexit_process+0x31e>
   15bf7:	mov    ecx,DWORD PTR [rbx+0x28400]
   15bfd:	mov    r8d,DWORD PTR [rbx+0x20]
   15c01:	cmp    ecx,r8d
   15c04:	ja     15e81 <hvm_vmexit_process+0x341>
   15c0a:	test   BYTE PTR [rip+0x15490],0x40        # 2b0a1 <opt+0x1>
   15c11:	je     15c70 <hvm_vmexit_process+0x130>
   15c13:	mov    rdi,QWORD PTR [rbx+0x283f8]
   15c1a:	lea    r12,[rbp+0x28]
   15c1e:	cmp    ecx,r8d
   15c21:	jae    15f00 <hvm_vmexit_process+0x3c0>
   15c27:	mov    rax,QWORD PTR [rbx+0x18]
   15c2b:	cmp    QWORD PTR [rax+rcx*8],0x0
   15c30:	je     15f00 <hvm_vmexit_process+0x3c0>
   15c36:	call   7ee0 <find_symbol>
   15c3b:	mov    edx,DWORD PTR [rbx+0x28400]
   15c41:	mov    edi,0x1
   15c46:	mov    r8,QWORD PTR [rbx+0x283f8]
   15c4d:	mov    r9,rax
   15c50:	mov    rax,QWORD PTR [rbx+0x18]
   15c54:	lea    rsi,[rip+0xbd5d]        # 219b8 <_IO_stdin_used+0x39b8>
   15c5b:	mov    rcx,QWORD PTR [rax+rdx*8]
   15c5f:	mov    rdx,r12
   15c62:	xor    eax,eax
   15c64:	call   5200 <__printf_chk@plt>
   15c69:	nop    DWORD PTR [rax+0x0]
   15c70:	mov    rax,QWORD PTR [rbx+0x10]
   15c74:	mov    r12,QWORD PTR [rax+0x70]
   15c78:	mov    rax,QWORD PTR [rbp+0x8]
   15c7c:	test   r12,r12
   15c7f:	je     15dac <hvm_vmexit_process+0x26c>
   15c85:	mov    rdx,QWORD PTR [rbx+0x283f0]
   15c8c:	test   rdx,rdx
   15c8f:	je     15dac <hvm_vmexit_process+0x26c>
   15c95:	add    DWORD PTR [r12+0x70],0x1
   15c9b:	sub    rax,rdx
   15c9e:	mov    r13,rax
   15ca1:	je     15d91 <hvm_vmexit_process+0x251>
   15ca7:	movsxd rcx,DWORD PTR [r12+0x74]
   15cac:	mov    edx,DWORD PTR [rip+0x15426]        # 2b0d8 <opt+0x38>
   15cb2:	mov    eax,ecx
   15cb4:	test   edx,edx
   15cb6:	je     15d70 <hvm_vmexit_process+0x230>
   15cbc:	mov    eax,DWORD PTR [r12+0x78]
   15cc1:	cmp    eax,ecx
   15cc3:	jg     15f90 <hvm_vmexit_process+0x450>
   15cc9:	mov    r14d,DWORD PTR [rip+0x1540c]        # 2b0dc <opt+0x3c>
   15cd0:	test   ecx,ecx
   15cd2:	je     15ce2 <hvm_vmexit_process+0x1a2>
   15cd4:	cmp    eax,r14d
   15cd7:	jl     15ce2 <hvm_vmexit_process+0x1a2>
   15cd9:	test   r14d,r14d
   15cdc:	jne    16019 <hvm_vmexit_process+0x4d9>
   15ce2:	add    eax,eax
   15ce4:	cmove  eax,edx
   15ce7:	cmp    eax,r14d
   15cea:	jle    16011 <hvm_vmexit_process+0x4d1>
   15cf0:	test   r14d,r14d
   15cf3:	je     16011 <hvm_vmexit_process+0x4d1>
   15cf9:	movsxd rsi,r14d
   15cfc:	mov    rdi,QWORD PTR [r12+0x88]
   15d04:	shl    rsi,0x3
   15d08:	call   51d0 <realloc@plt>
   15d0d:	test   rax,rax
   15d10:	je     16007 <hvm_vmexit_process+0x4c7>
   15d16:	mov    QWORD PTR [r12+0x88],rax
   15d1e:	mov    DWORD PTR [r12+0x78],r14d
   15d23:	movsxd rcx,DWORD PTR [r12+0x74]
   15d28:	cmp    ecx,r14d
   15d2b:	jl     15f90 <hvm_vmexit_process+0x450>
   15d31:	mov    eax,ecx
   15d33:	cdq    
   15d34:	idiv   r14d
   15d37:	lea    esi,[rax+0x1]
   15d3a:	movsxd rdi,edx
   15d3d:	mov    edx,0x55555556
   15d42:	mov    eax,esi
   15d44:	imul   edx
   15d46:	mov    eax,esi
   15d48:	sar    eax,0x1f
   15d4b:	sub    eax,edx
   15d4d:	add    eax,edi
   15d4f:	cdq    
   15d50:	idiv   esi
   15d52:	mov    eax,ecx
   15d54:	test   edx,edx
   15d56:	jne    15d70 <hvm_vmexit_process+0x230>
   15d58:	mov    rax,QWORD PTR [r12+0x88]
   15d60:	mov    QWORD PTR [rax+rdi*8],r13
   15d64:	mov    eax,DWORD PTR [r12+0x74]
   15d69:	nop    DWORD PTR [rax+0x0]
   15d70:	add    eax,0x1
   15d73:	add    QWORD PTR [r12+0x80],r13
   15d7b:	add    DWORD PTR [r12+0x90],0x1
   15d84:	add    QWORD PTR [r12+0x98],r13
   15d8c:	mov    DWORD PTR [r12+0x74],eax
   15d91:	mov    rax,QWORD PTR [rbx+0x10]
   15d95:	mov    rdx,QWORD PTR [rax+0x70]
   15d99:	mov    rax,QWORD PTR [rbp+0x8]
   15d9d:	sub    rax,QWORD PTR [rbx+0x283f0]
   15da4:	add    QWORD PTR [rdx+0x30],rax
   15da8:	mov    rax,QWORD PTR [rbp+0x8]
   15dac:	mov    QWORD PTR [rbx+0x283e0],rax
   15db3:	lea    rax,[rip+0xffffffffffff7976]        # d730 <hvm_generic_postprocess>
   15dba:	and    BYTE PTR [rbx+0x28408],0xf8
   15dc1:	mov    QWORD PTR [rbx+0x283f0],0x0
   15dcc:	mov    DWORD PTR [rbx+0x283d0],0x0
   15dd6:	mov    QWORD PTR [rbx+0x283d8],rax
   15ddd:	mov    DWORD PTR [rbx+0x28348],0x0
   15de7:	pop    rbx
   15de8:	pop    rbp
   15de9:	pop    r12
   15deb:	pop    r13
   15ded:	pop    r14
   15def:	ret    
   15df0:	mov    r8d,DWORD PTR [r12+0x14]
   15df5:	cmp    r8d,0x4
   15df9:	je     15e11 <hvm_vmexit_process+0x2d1>
   15dfb:	cmp    DWORD PTR [rip+0x15316],0x5        # 2b118 <verbosity>
   15e02:	jg     15fb0 <hvm_vmexit_process+0x470>
   15e08:	mov    DWORD PTR [r12+0x14],0x4
   15e11:	movabs rax,0xffff000000000000
   15e1b:	mov    r8,QWORD PTR [r13+0x4]
   15e1f:	mov    rdx,r8
   15e22:	and    rdx,rax
   15e25:	bt     r8,0x2f
   15e2a:	jb     15ee8 <hvm_vmexit_process+0x3a8>
   15e30:	xor    eax,eax
   15e32:	test   rdx,rdx
   15e35:	sete   al
   15e38:	test   eax,eax
   15e3a:	je     15f60 <hvm_vmexit_process+0x420>
   15e40:	mov    QWORD PTR [rbx+0x283f8],r8
   15e47:	mov    eax,DWORD PTR [r13+0x0]
   15e4b:	mov    DWORD PTR [rbx+0x28400],eax
   15e51:	test   BYTE PTR [rip+0x15248],0x20        # 2b0a0 <opt>
   15e58:	je     15bf7 <hvm_vmexit_process+0xb7>
   15e5e:	mov    rsi,QWORD PTR [rbx+0x283f8]
   15e65:	mov    rdi,QWORD PTR [rbp+0x8]
   15e69:	call   8200 <scatterplot_vs_time>
   15e6e:	mov    ecx,DWORD PTR [rbx+0x28400]
   15e74:	mov    r8d,DWORD PTR [rbx+0x20]
   15e78:	cmp    ecx,r8d
   15e7b:	jbe    15c0a <hvm_vmexit_process+0xca>
   15e81:	mov    rdi,QWORD PTR [rip+0x513d0]        # 67258 <warn>
   15e88:	xor    eax,eax
   15e8a:	mov    esi,0x1
   15e8f:	lea    rdx,[rip+0xbaf2]        # 21988 <_IO_stdin_used+0x3988>
   15e96:	call   5270 <__fprintf_chk@plt>
   15e9b:	cmp    DWORD PTR [rip+0x1523e],0x3        # 2b0e0 <opt+0x40>
   15ea2:	ja     15de7 <hvm_vmexit_process+0x2a7>
   15ea8:	mov    rdi,rbp
   15eab:	call   146b0 <error.part.24>
   15eb0:	mov    rsi,r12
   15eb3:	mov    rdi,rbx
   15eb6:	call   7c00 <init_hvm_data.part.25>
   15ebb:	jmp    15b82 <hvm_vmexit_process+0x42>
   15ec0:	mov    esi,0x8
   15ec5:	call   15920 <check_extra_words>
   15eca:	test   eax,eax
   15ecc:	jne    15de7 <hvm_vmexit_process+0x2a7>
   15ed2:	mov    eax,DWORD PTR [rbx]
   15ed4:	mov    r13,QWORD PTR [rbp+0x20]
   15ed8:	test   eax,eax
   15eda:	jne    15b82 <hvm_vmexit_process+0x42>
   15ee0:	jmp    15eb0 <hvm_vmexit_process+0x370>
   15ee2:	nop    WORD PTR [rax+rax*1+0x0]
   15ee8:	cmp    rdx,rax
   15eeb:	sete   al
   15eee:	movzx  eax,al
   15ef1:	jmp    15e38 <hvm_vmexit_process+0x2f8>
   15ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15f00:	call   7ee0 <find_symbol>
   15f05:	mov    ecx,DWORD PTR [rbx+0x28400]
   15f0b:	mov    rdx,r12
   15f0e:	mov    r8,QWORD PTR [rbx+0x283f8]
   15f15:	mov    r9,rax
   15f18:	lea    rsi,[rip+0xbac1]        # 219e0 <_IO_stdin_used+0x39e0>
   15f1f:	mov    edi,0x1
   15f24:	xor    eax,eax
   15f26:	call   5200 <__printf_chk@plt>
   15f2b:	jmp    15c70 <hvm_vmexit_process+0x130>
   15f30:	mov    r14d,DWORD PTR [rip+0x1519d]        # 2b0d4 <opt+0x34>
   15f37:	mov    eax,0x2
   15f3c:	cmp    r14d,0x4
   15f40:	cmove  r14d,eax
   15f44:	cmp    DWORD PTR [rip+0x151cd],0x5        # 2b118 <verbosity>
   15f4b:	jg     15fd8 <hvm_vmexit_process+0x498>
   15f51:	mov    DWORD PTR [r12+0x14],r14d
   15f56:	jmp    15bd5 <hvm_vmexit_process+0x95>
   15f5b:	nop    DWORD PTR [rax+rax*1+0x0]
   15f60:	mov    rdi,QWORD PTR [rip+0x512f1]        # 67258 <warn>
   15f67:	lea    rcx,[rip+0xe652]        # 245c0 <__func__.6964>
   15f6e:	mov    esi,0x1
   15f73:	lea    rdx,[rip+0x8a03]        # 1e97d <_IO_stdin_used+0x97d>
   15f7a:	call   5270 <__fprintf_chk@plt>
   15f7f:	mov    r8,QWORD PTR [r13+0x4]
   15f83:	jmp    15e40 <hvm_vmexit_process+0x300>
   15f88:	nop    DWORD PTR [rax+rax*1+0x0]
   15f90:	mov    rax,QWORD PTR [r12+0x88]
   15f98:	mov    QWORD PTR [rax+rcx*8],r13
   15f9c:	mov    eax,DWORD PTR [r12+0x74]
   15fa1:	jmp    15d70 <hvm_vmexit_process+0x230>
   15fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   15fb0:	mov    rdi,QWORD PTR [rip+0x512a1]        # 67258 <warn>
   15fb7:	lea    rcx,[rip+0xe602]        # 245c0 <__func__.6964>
   15fbe:	mov    esi,0x1
   15fc3:	lea    rdx,[rip+0xb936]        # 21900 <_IO_stdin_used+0x3900>
   15fca:	call   5270 <__fprintf_chk@plt>
   15fcf:	jmp    15e08 <hvm_vmexit_process+0x2c8>
   15fd4:	nop    DWORD PTR [rax+0x0]
   15fd8:	mov    r9d,r14d
   15fdb:	mov    r8d,0x4
   15fe1:	mov    esi,0x1
   15fe6:	xor    eax,eax
   15fe8:	mov    rdi,QWORD PTR [rip+0x51269]        # 67258 <warn>
   15fef:	lea    rcx,[rip+0xe5ca]        # 245c0 <__func__.6964>
   15ff6:	lea    rdx,[rip+0xb943]        # 21940 <_IO_stdin_used+0x3940>
   15ffd:	call   5270 <__fprintf_chk@plt>
   16002:	jmp    15f51 <hvm_vmexit_process+0x411>
   16007:	mov    r14d,DWORD PTR [r12+0x78]
   1600c:	jmp    15d23 <hvm_vmexit_process+0x1e3>
   16011:	mov    r14d,eax
   16014:	jmp    15cf9 <hvm_vmexit_process+0x1b9>
   16019:	mov    r14d,eax
   1601c:	jmp    15d31 <hvm_vmexit_process+0x1f1>
   16021:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1602c:	nop    DWORD PTR [rax+0x0]

0000000000016030 <process_generic>:
   16030:	mov    edx,DWORD PTR [rip+0x150aa]        # 2b0e0 <opt+0x40>
   16036:	test   edx,edx
   16038:	je     16057 <process_generic+0x27>
   1603a:	test   BYTE PTR [rip+0x15060],0x40        # 2b0a1 <opt+0x1>
   16041:	jne    16048 <process_generic+0x18>
   16043:	ret    
   16044:	nop    DWORD PTR [rax+0x0]
   16048:	mov    rsi,rdi
   1604b:	mov    rdi,QWORD PTR [rip+0x183ce]        # 2e420 <stdout@@GLIBC_2.2.5>
   16052:	jmp    141c0 <dump_generic>
   16057:	push   rax
   16058:	call   146b0 <error.part.24>
   1605d:	nop    DWORD PTR [rax]

0000000000016060 <dom0_process>:
   16060:	movzx  eax,BYTE PTR [rdi+0x41]
   16064:	shr    al,0x4
   16067:	cmp    al,0x1
   16069:	jne    160b8 <dom0_process+0x58>
   1606b:	test   BYTE PTR [rip+0x1502f],0x40        # 2b0a1 <opt+0x1>
   16072:	je     160b0 <dom0_process+0x50>
   16074:	mov    rax,QWORD PTR [rdi+0x50]
   16078:	cmp    DWORD PTR [rdi+0x40],0x41001
   1607f:	lea    rdx,[rip+0x8915]        # 1e99b <_IO_stdin_used+0x99b>
   16086:	lea    rcx,[rip+0x8905]        # 1e992 <_IO_stdin_used+0x992>
   1608d:	cmovne rcx,rdx
   16091:	lea    rsi,[rip+0x890e]        # 1e9a6 <_IO_stdin_used+0x9a6>
   16098:	lea    rdx,[rdi+0x58]
   1609c:	mov    edi,0x1
   160a1:	mov    r8d,DWORD PTR [rax]
   160a4:	xor    eax,eax
   160a6:	jmp    5200 <__printf_chk@plt>
   160ab:	nop    DWORD PTR [rax+rax*1+0x0]
   160b0:	ret    
   160b1:	nop    DWORD PTR [rax+0x0]
   160b8:	add    rdi,0x30
   160bc:	jmp    16030 <process_generic>
   160c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   160cc:	nop    DWORD PTR [rax+0x0]

00000000000160d0 <vcpu_set_data_type>:
   160d0:	sub    rsp,0x8
   160d4:	mov    eax,DWORD PTR [rdi+0x3bf0]
   160da:	test   eax,eax
   160dc:	jne    160f0 <vcpu_set_data_type+0x20>
   160de:	mov    DWORD PTR [rdi+0x3bf0],esi
   160e4:	cmp    esi,0x1
   160e7:	je     16100 <vcpu_set_data_type+0x30>
   160e9:	xor    eax,eax
   160eb:	add    rsp,0x8
   160ef:	ret    
   160f0:	cmp    eax,esi
   160f2:	je     160e9 <vcpu_set_data_type+0x19>
   160f4:	call   7bc0 <vcpu_set_data_type.part.43>
   160f9:	nop    DWORD PTR [rax+0x0]
   16100:	mov    eax,DWORD PTR [rdi+0x3bf8]
   16106:	test   eax,eax
   16108:	jne    160e9 <vcpu_set_data_type+0x19>
   1610a:	lea    rax,[rdi+0x3bf8]
   16111:	mov    rsi,rdi
   16114:	mov    rdi,rax
   16117:	call   7c00 <init_hvm_data.part.25>
   1611c:	xor    eax,eax
   1611e:	add    rsp,0x8
   16122:	ret    
   16123:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1612e:	xchg   ax,ax

0000000000016130 <shadow_process>:
   16130:	push   r15
   16132:	push   r14
   16134:	push   r13
   16136:	push   r12
   16138:	push   rbp
   16139:	push   rbx
   1613a:	mov    rbx,rdi
   1613d:	sub    rsp,0x18
   16141:	mov    ebp,DWORD PTR [rdi+0x40]
   16144:	mov    rdi,QWORD PTR [rdi+0x1a8]
   1614b:	mov    eax,ebp
   1614d:	shr    eax,0x8
   16150:	mov    r13d,eax
   16153:	and    r13d,0xf
   16157:	test   rdi,rdi
   1615a:	je     16481 <shadow_process+0x351>
   16160:	mov    esi,0x1
   16165:	call   160d0 <vcpu_set_data_type>
   1616a:	test   eax,eax
   1616c:	jne    161f9 <shadow_process+0xc9>
   16172:	mov    r12,QWORD PTR [rbx+0x1a8]
   16179:	mov    esi,DWORD PTR [r12+0x3bf8]
   16181:	test   esi,esi
   16183:	je     161f0 <shadow_process+0xc0>
   16185:	mov    ecx,DWORD PTR [r12+0x3bfc]
   1618d:	test   ecx,ecx
   1618f:	je     161f0 <shadow_process+0xc0>
   16191:	lea    r9,[rbx+0x30]
   16195:	lea    r15,[r12+0x3bf8]
   1619d:	movzx  r14d,bpl
   161a1:	cmp    bpl,0x1
   161a5:	jbe    16238 <shadow_process+0x108>
   161ab:	cmp    bpl,0xb
   161af:	jbe    16280 <shadow_process+0x150>
   161b5:	cmp    bpl,0xd
   161b9:	je     16320 <shadow_process+0x1f0>
   161bf:	ja     162c0 <shadow_process+0x190>
   161c5:	cmp    bpl,0xc
   161c9:	jne    16400 <shadow_process+0x2d0>
   161cf:	add    rsp,0x18
   161d3:	mov    rsi,r15
   161d6:	mov    rdi,r9
   161d9:	pop    rbx
   161da:	pop    rbp
   161db:	pop    r12
   161dd:	pop    r13
   161df:	pop    r14
   161e1:	pop    r15
   161e3:	jmp    12460 <shadow_wrmap_bf_process>
   161e8:	nop    DWORD PTR [rax+rax*1+0x0]
   161f0:	test   BYTE PTR [rip+0x14eaa],0x40        # 2b0a1 <opt+0x1>
   161f7:	jne    16210 <shadow_process+0xe0>
   161f9:	add    rsp,0x18
   161fd:	pop    rbx
   161fe:	pop    rbp
   161ff:	pop    r12
   16201:	pop    r13
   16203:	pop    r14
   16205:	pop    r15
   16207:	ret    
   16208:	nop    DWORD PTR [rax+rax*1+0x0]
   16210:	mov    rsi,QWORD PTR [rbx+0x50]
   16214:	mov    edi,DWORD PTR [rbx+0x40]
   16217:	add    rsp,0x18
   1621b:	lea    rcx,[rbx+0x58]
   1621f:	lea    rdx,[rip+0x8374]        # 1e59a <_IO_stdin_used+0x59a>
   16226:	pop    rbx
   16227:	pop    rbp
   16228:	pop    r12
   1622a:	pop    r13
   1622c:	pop    r14
   1622e:	pop    r15
   16230:	jmp    121b0 <shadow_fault_generic_dump>
   16235:	nop    DWORD PTR [rax]
   16238:	movzx  r13d,r13b
   1623c:	add    r13d,0x2
   16240:	cmp    DWORD PTR [r12+0x14],r13d
   16245:	je     16280 <shadow_process+0x150>
   16247:	mov    r8d,r13d
   1624a:	mov    esi,0x1
   1624f:	xor    eax,eax
   16251:	mov    QWORD PTR [rsp+0x8],r9
   16256:	mov    rdi,QWORD PTR [rip+0x50ffb]        # 67258 <warn>
   1625d:	lea    rcx,[rip+0xe204]        # 24468 <__func__.7275>
   16264:	lea    rdx,[rip+0xb79d]        # 21a08 <_IO_stdin_used+0x3a08>
   1626b:	call   5270 <__fprintf_chk@plt>
   16270:	mov    rax,QWORD PTR [rbx+0x1a8]
   16277:	mov    r9,QWORD PTR [rsp+0x8]
   1627c:	mov    DWORD PTR [rax+0x14],r13d
   16280:	movzx  eax,bpl
   16284:	mov    DWORD PTR [r12+0x2bf50],eax
   1628c:	test   BYTE PTR [rip+0x14e10],0x20        # 2b0a3 <opt+0x3>
   16293:	je     1629f <shadow_process+0x16f>
   16295:	mov    edx,DWORD PTR [rip+0x51005]        # 672a0 <done.7276>
   1629b:	test   edx,edx
   1629d:	je     162e8 <shadow_process+0x1b8>
   1629f:	cmp    bpl,0xf
   162a3:	ja     163e0 <shadow_process+0x2b0>
   162a9:	lea    rdx,[rip+0xde4c]        # 240fc <_IO_stdin_used+0x60fc>
   162b0:	movsxd rax,DWORD PTR [rdx+r14*4]
   162b4:	add    rax,rdx
   162b7:	jmp    rax
   162b9:	nop    DWORD PTR [rax+0x0]
   162c0:	cmp    bpl,0xf
   162c4:	ja     16400 <shadow_process+0x2d0>
   162ca:	add    rsp,0x18
   162ce:	mov    rsi,r15
   162d1:	mov    rdi,r9
   162d4:	pop    rbx
   162d5:	pop    rbp
   162d6:	pop    r12
   162d8:	pop    r13
   162da:	pop    r14
   162dc:	pop    r15
   162de:	jmp    12360 <shadow_resync_process>
   162e3:	nop    DWORD PTR [rax+rax*1+0x0]
   162e8:	xor    edx,edx
   162ea:	lea    rsi,[rip+0xfffffffffffef5cf]        # 58c0 <hvm_pf_xen_summary>
   162f1:	mov    rdi,r15
   162f4:	mov    QWORD PTR [rsp+0x8],r9
   162f9:	call   cb10 <__hvm_set_summary_handler>
   162fe:	mov    r9,QWORD PTR [rsp+0x8]
   16303:	test   eax,eax
   16305:	jne    16420 <shadow_process+0x2f0>
   1630b:	mov    DWORD PTR [rip+0x50f8b],0x1        # 672a0 <done.7276>
   16315:	jmp    1629f <shadow_process+0x16f>
   16317:	nop    WORD PTR [rax+rax*1+0x0]
   16320:	add    rsp,0x18
   16324:	mov    rsi,r15
   16327:	mov    rdi,r9
   1632a:	pop    rbx
   1632b:	pop    rbp
   1632c:	pop    r12
   1632e:	pop    r13
   16330:	pop    r14
   16332:	pop    r15
   16334:	jmp    123b0 <shadow_prealloc_unpin_process>
   16339:	nop    DWORD PTR [rax+0x0]
   16340:	add    rsp,0x18
   16344:	mov    rsi,r15
   16347:	mov    rdi,r9
   1634a:	pop    rbx
   1634b:	pop    rbp
   1634c:	pop    r12
   1634e:	pop    r13
   16350:	pop    r14
   16352:	pop    r15
   16354:	jmp    14c80 <shadow_emulate_other_process>
   16359:	nop    DWORD PTR [rax+0x0]
   16360:	add    rsp,0x18
   16364:	mov    rsi,r15
   16367:	mov    rdi,r9
   1636a:	pop    rbx
   1636b:	pop    rbp
   1636c:	pop    r12
   1636e:	pop    r13
   16370:	pop    r14
   16372:	pop    r15
   16374:	jmp    14860 <shadow_emulate_process>
   16379:	nop    DWORD PTR [rax+0x0]
   16380:	add    rsp,0x18
   16384:	mov    rsi,r15
   16387:	mov    rdi,r9
   1638a:	pop    rbx
   1638b:	pop    rbp
   1638c:	pop    r12
   1638e:	pop    r13
   16390:	pop    r14
   16392:	pop    r15
   16394:	jmp    14d90 <shadow_fixup_process>
   16399:	nop    DWORD PTR [rax+0x0]
   163a0:	add    rsp,0x18
   163a4:	mov    rsi,r15
   163a7:	mov    rdi,r9
   163aa:	pop    rbx
   163ab:	pop    rbp
   163ac:	pop    r12
   163ae:	pop    r13
   163b0:	pop    r14
   163b2:	pop    r15
   163b4:	jmp    15060 <shadow_mmio_process>
   163b9:	nop    DWORD PTR [rax+0x0]
   163c0:	add    rsp,0x18
   163c4:	mov    rsi,r15
   163c7:	mov    rdi,r9
   163ca:	pop    rbx
   163cb:	pop    rbp
   163cc:	pop    r12
   163ce:	pop    r13
   163d0:	pop    r14
   163d2:	pop    r15
   163d4:	jmp    15250 <shadow_propagate_process>
   163d9:	nop    DWORD PTR [rax+0x0]
   163e0:	add    rsp,0x18
   163e4:	mov    rsi,r15
   163e7:	mov    rdi,r9
   163ea:	pop    rbx
   163eb:	pop    rbp
   163ec:	pop    r12
   163ee:	pop    r13
   163f0:	pop    r14
   163f2:	pop    r15
   163f4:	jmp    122b0 <shadow_fault_generic_process>
   163f9:	nop    DWORD PTR [rax+0x0]
   16400:	mov    eax,DWORD PTR [rip+0x14c22]        # 2b028 <_w.7292>
   16406:	test   eax,eax
   16408:	jne    1644e <shadow_process+0x31e>
   1640a:	add    rsp,0x18
   1640e:	mov    rdi,r9
   16411:	pop    rbx
   16412:	pop    rbp
   16413:	pop    r12
   16415:	pop    r13
   16417:	pop    r14
   16419:	pop    r15
   1641b:	jmp    16030 <process_generic>
   16420:	mov    rdi,QWORD PTR [rip+0x18019]        # 2e440 <stderr@@GLIBC_2.2.5>
   16427:	mov    r8d,eax
   1642a:	xor    eax,eax
   1642c:	lea    rcx,[rip+0xe035]        # 24468 <__func__.7275>
   16433:	lea    rdx,[rip+0xa736]        # 20b70 <_IO_stdin_used+0x2b70>
   1643a:	mov    esi,0x1
   1643f:	call   5270 <__fprintf_chk@plt>
   16444:	mov    r9,QWORD PTR [rsp+0x8]
   16449:	jmp    1630b <shadow_process+0x1db>
   1644e:	mov    edx,0x26
   16453:	mov    rcx,QWORD PTR [rip+0x50dfe]        # 67258 <warn>
   1645a:	mov    esi,0x1
   1645f:	lea    rdi,[rip+0xb5ca]        # 21a30 <_IO_stdin_used+0x3a30>
   16466:	mov    QWORD PTR [rsp+0x8],r9
   1646b:	mov    DWORD PTR [rip+0x14bb3],0x0        # 2b028 <_w.7292>
   16475:	call   5260 <fwrite@plt>
   1647a:	mov    r9,QWORD PTR [rsp+0x8]
   1647f:	jmp    1640a <shadow_process+0x2da>
   16481:	lea    rcx,[rip+0xdff0]        # 24478 <__PRETTY_FUNCTION__.7274>
   16488:	mov    edx,0x1816
   1648d:	lea    rsi,[rip+0x7c34]        # 1e0c8 <_IO_stdin_used+0xc8>
   16494:	lea    rdi,[rip+0x851e]        # 1e9b9 <_IO_stdin_used+0x9b9>
   1649b:	call   5110 <__assert_fail@plt>

00000000000164a0 <lose_vcpu>:
   164a0:	push   r14
   164a2:	push   r13
   164a4:	push   r12
   164a6:	push   rbp
   164a7:	mov    rbp,rsi
   164aa:	push   rbx
   164ab:	cmp    DWORD PTR [rdi+0x3bf0],0x1
   164b2:	mov    rbx,rdi
   164b5:	jne    164c1 <lose_vcpu+0x21>
   164b7:	mov    DWORD PTR [rdi+0x3bfc],0x0
   164c1:	mov    r12,QWORD PTR [rbx+0x8]
   164c5:	test   BYTE PTR [rip+0x14bd4],0x40        # 2b0a0 <opt>
   164cc:	je     16542 <lose_vcpu+0xa2>
   164ce:	mov    rax,QWORD PTR [rip+0x18ceb]        # 2f1c0 <P+0x20>
   164d5:	cmp    rbp,rax
   164d8:	ja     165d0 <lose_vcpu+0x130>
   164de:	xor    r13d,r13d
   164e1:	xor    r14d,r14d
   164e4:	movsxd rcx,DWORD PTR [rbx+0x18]
   164e8:	sub    rsp,0x8
   164ec:	mov    edx,DWORD PTR [r12+0x8]
   164f1:	mov    r9d,r13d
   164f4:	lea    rax,[rip+0x14b85]        # 2b080 <runstate_graph>
   164fb:	mov    r8d,r14d
   164fe:	mov    edi,0x1
   16503:	mov    eax,DWORD PTR [rax+rcx*4]
   16506:	lea    rsi,[rip+0x8064]        # 1e571 <_IO_stdin_used+0x571>
   1650d:	push   rax
   1650e:	mov    ecx,DWORD PTR [rbx]
   16510:	xor    eax,eax
   16512:	call   5200 <__printf_chk@plt>
   16517:	mov    edx,DWORD PTR [r12+0x8]
   1651c:	mov    r9d,r13d
   1651f:	mov    r8d,r14d
   16522:	mov    eax,DWORD PTR [rip+0x14b68]        # 2b090 <runstate_graph+0x10>
   16528:	lea    rsi,[rip+0x8042]        # 1e571 <_IO_stdin_used+0x571>
   1652f:	mov    edi,0x1
   16534:	mov    DWORD PTR [rsp],eax
   16537:	mov    ecx,DWORD PTR [rbx]
   16539:	xor    eax,eax
   1653b:	call   5200 <__printf_chk@plt>
   16540:	pop    rsi
   16541:	pop    rdi
   16542:	mov    rax,QWORD PTR [rbx+0x20]
   16546:	test   rax,rax
   16549:	je     16554 <lose_vcpu+0xb4>
   1654b:	cmp    rbp,rax
   1654e:	ja     166c1 <lose_vcpu+0x221>
   16554:	mov    QWORD PTR [rbx+0x18],0x4
   1655c:	mov    QWORD PTR [rbx+0x20],rbp
   16560:	mov    rax,QWORD PTR [r12+0x818]
   16568:	cmp    rbp,rax
   1656b:	jbe    16576 <lose_vcpu+0xd6>
   1656d:	test   rax,rax
   16570:	jne    16693 <lose_vcpu+0x1f3>
   16576:	mov    rdi,r12
   16579:	call   11250 <domain_runstate>
   1657e:	lea    rdi,[rbx+0x80]
   16585:	mov    QWORD PTR [r12+0x818],rbp
   1658d:	mov    DWORD PTR [r12+0x814],eax
   16595:	and    rdi,0xfffffffffffffff8
   16599:	mov    eax,ebx
   1659b:	sub    eax,edi
   1659d:	mov    QWORD PTR [rbx+0x78],0x0
   165a5:	lea    ecx,[rax+0x138]
   165ab:	xor    eax,eax
   165ad:	mov    QWORD PTR [rbx+0x130],0x0
   165b8:	shr    ecx,0x3
   165bb:	rep stos QWORD PTR es:[rdi],rax
   165be:	cmp    DWORD PTR [rbx+0x3bf0],0x1
   165c5:	je     16615 <lose_vcpu+0x175>
   165c7:	pop    rbx
   165c8:	pop    rbp
   165c9:	pop    r12
   165cb:	pop    r13
   165cd:	pop    r14
   165cf:	ret    
   165d0:	movabs rcx,0x44b82fa09b5a53
   165da:	mov    r13,rbp
   165dd:	xor    edx,edx
   165df:	sub    r13,rax
   165e2:	shl    r13,0xa
   165e6:	mov    rax,r13
   165e9:	div    QWORD PTR [rip+0x14ab8]        # 2b0a8 <opt+0x8>
   165f0:	mov    rdx,rax
   165f3:	mov    r13,rax
   165f6:	shr    rdx,0x9
   165fa:	mov    rax,rdx
   165fd:	mul    rcx
   16600:	shr    rdx,0xb
   16604:	mov    r14d,edx
   16607:	imul   edx,edx,0x3b9aca00
   1660d:	sub    r13d,edx
   16610:	jmp    164e4 <lose_vcpu+0x44>
   16615:	movzx  eax,BYTE PTR [rip+0x14a85]        # 2b0a1 <opt+0x1>
   1661c:	test   al,0x40
   1661e:	jne    16798 <lose_vcpu+0x2f8>
   16624:	and    BYTE PTR [rbx+0x2c010],0xfe
   1662b:	xor    ebp,ebp
   1662d:	add    rbx,0x167e0
   16634:	mov    QWORD PTR [rbx+0x15834],0x0
   1663f:	lea    r12,[rip+0xb43a]        # 21a80 <_IO_stdin_used+0x3a80>
   16646:	jmp    16674 <lose_vcpu+0x1d4>
   16648:	nop    DWORD PTR [rax+rax*1+0x0]
   16650:	add    ebp,0x1
   16653:	mov    QWORD PTR [rbx],0x0
   1665a:	add    rbx,0xf8
   16661:	cmp    ebp,0x15e
   16667:	je     165c7 <lose_vcpu+0x127>
   1666d:	movzx  eax,BYTE PTR [rip+0x14a2d]        # 2b0a1 <opt+0x1>
   16674:	test   al,0x40
   16676:	je     16650 <lose_vcpu+0x1b0>
   16678:	mov    rcx,QWORD PTR [rbx]
   1667b:	test   rcx,rcx
   1667e:	je     16650 <lose_vcpu+0x1b0>
   16680:	mov    edx,ebp
   16682:	mov    rsi,r12
   16685:	mov    edi,0x1
   1668a:	xor    eax,eax
   1668c:	call   5200 <__printf_chk@plt>
   16691:	jmp    16650 <lose_vcpu+0x1b0>
   16693:	movsxd rcx,DWORD PTR [r12+0x814]
   1669b:	mov    rsi,rbp
   1669e:	sub    rsi,rax
   166a1:	lea    rdx,[rcx*8+0x0]
   166a9:	sub    rdx,rcx
   166ac:	lea    rdi,[r12+rdx*8+0x858]
   166b4:	add    DWORD PTR [rdi],0x1
   166b7:	call   56e0 <update_cycles.part.5>
   166bc:	jmp    16576 <lose_vcpu+0xd6>
   166c1:	movsxd rcx,DWORD PTR [rbx+0x18]
   166c5:	mov    rsi,rbp
   166c8:	sub    rsi,rax
   166cb:	lea    rdx,[rcx*8+0x0]
   166d3:	sub    rdx,rcx
   166d6:	lea    rdi,[rbx+rdx*8+0x150]
   166de:	add    DWORD PTR [rdi],0x1
   166e1:	call   56e0 <update_cycles.part.5>
   166e6:	cmp    BYTE PTR [rip+0x149b3],0x0        # 2b0a0 <opt>
   166ed:	js     167c0 <lose_vcpu+0x320>
   166f3:	mov    eax,DWORD PTR [rbx+0x18]
   166f6:	test   eax,eax
   166f8:	jne    16720 <lose_vcpu+0x280>
   166fa:	mov    rax,QWORD PTR [rbx+0x8]
   166fe:	mov    rsi,rbp
   16701:	sub    rsi,QWORD PTR [rbx+0x20]
   16705:	add    DWORD PTR [rax+0x820],0x1
   1670c:	test   rsi,rsi
   1670f:	je     1671d <lose_vcpu+0x27d>
   16711:	lea    rdi,[rax+0x820]
   16718:	call   56e0 <update_cycles.part.5>
   1671d:	mov    eax,DWORD PTR [rbx+0x18]
   16720:	cmp    eax,0x1
   16723:	je     16839 <lose_vcpu+0x399>
   16729:	mov    rax,QWORD PTR [rbx+0x8]
   1672d:	mov    eax,DWORD PTR [rax+0x8]
   16730:	test   eax,eax
   16732:	jne    16554 <lose_vcpu+0xb4>
   16738:	lea    rax,[rip+0x18aa1]        # 2f1e0 <P+0x40>
   1673f:	lea    rsi,[rax+0x38000]
   16746:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16750:	test   BYTE PTR [rax],0x1
   16753:	je     16788 <lose_vcpu+0x2e8>
   16755:	movsxd rcx,DWORD PTR [rbx+0x18]
   16759:	mov    rdx,QWORD PTR [rax+0x1c0]
   16760:	mov    rdi,rbp
   16763:	cmp    QWORD PTR [rbx+0x20],rdx
   16767:	cmovae rdx,QWORD PTR [rbx+0x20]
   1676c:	sub    rdi,rdx
   1676f:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   16777:	mov    DWORD PTR [rax+0x208],0x4
   16781:	mov    QWORD PTR [rax+0x1c8],rbp
   16788:	add    rax,0x380
   1678e:	cmp    rsi,rax
   16791:	jne    16750 <lose_vcpu+0x2b0>
   16793:	jmp    16554 <lose_vcpu+0xb4>
   16798:	mov    rax,QWORD PTR [rbx+0x8]
   1679c:	mov    ecx,DWORD PTR [rbx]
   1679e:	mov    edi,0x1
   167a3:	lea    rsi,[rip+0xb2ae]        # 21a58 <_IO_stdin_used+0x3a58>
   167aa:	mov    edx,DWORD PTR [rax+0x8]
   167ad:	xor    eax,eax
   167af:	call   5200 <__printf_chk@plt>
   167b4:	movzx  eax,BYTE PTR [rip+0x148e6]        # 2b0a1 <opt+0x1>
   167bb:	jmp    16624 <lose_vcpu+0x184>
   167c0:	mov    rax,QWORD PTR [rip+0x189f9]        # 2f1c0 <P+0x20>
   167c7:	mov    rcx,rbp
   167ca:	mov    rsi,QWORD PTR [rip+0x148d7]        # 2b0a8 <opt+0x8>
   167d1:	sub    rcx,rax
   167d4:	cmp    rbp,rax
   167d7:	ja     1686d <lose_vcpu+0x3cd>
   167dd:	xor    r9d,r9d
   167e0:	xor    r8d,r8d
   167e3:	sub    rcx,QWORD PTR [rbx+0x20]
   167e7:	xor    edx,edx
   167e9:	mov    edi,0x1
   167ee:	shl    rcx,0xa
   167f2:	mov    rax,rcx
   167f5:	div    rsi
   167f8:	movabs rdx,0x44b82fa09b5a53
   16802:	mov    rcx,rax
   16805:	shr    rax,0x9
   16809:	mul    rdx
   1680c:	mov    rax,rdx
   1680f:	mov    edx,DWORD PTR [r12+0x8]
   16814:	shr    rax,0xb
   16818:	imul   esi,eax,0x3b9aca00
   1681e:	sub    ecx,esi
   16820:	lea    rsi,[rip+0x7d5c]        # 1e583 <_IO_stdin_used+0x583>
   16827:	push   rcx
   16828:	push   rax
   16829:	mov    ecx,DWORD PTR [rbx]
   1682b:	xor    eax,eax
   1682d:	call   5200 <__printf_chk@plt>
   16832:	pop    rdx
   16833:	pop    rcx
   16834:	jmp    166f3 <lose_vcpu+0x253>
   16839:	movsxd rdx,DWORD PTR [rbx+0x1c]
   1683d:	mov    rsi,rbp
   16840:	sub    rsi,QWORD PTR [rbx+0x20]
   16844:	lea    rax,[rdx*8+0x0]
   1684c:	sub    rax,rdx
   1684f:	lea    rdi,[rbx+rax*8+0x2d8]
   16857:	add    DWORD PTR [rdi],0x1
   1685a:	test   rsi,rsi
   1685d:	je     16729 <lose_vcpu+0x289>
   16863:	call   56e0 <update_cycles.part.5>
   16868:	jmp    16729 <lose_vcpu+0x289>
   1686d:	mov    r9,rcx
   16870:	xor    edx,edx
   16872:	shl    r9,0xa
   16876:	mov    rax,r9
   16879:	div    rsi
   1687c:	movabs rdx,0x44b82fa09b5a53
   16886:	mov    r9,rax
   16889:	shr    rax,0x9
   1688d:	mul    rdx
   16890:	mov    rax,rdx
   16893:	shr    rax,0xb
   16897:	mov    r8d,eax
   1689a:	imul   eax,eax,0x3b9aca00
   168a0:	sub    r9d,eax
   168a3:	jmp    167e3 <lose_vcpu+0x343>
   168a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000168b0 <activate_early_eof>:
   168b0:	push   r13
   168b2:	mov    edx,0x2e
   168b7:	mov    esi,0x1
   168bc:	lea    rdi,[rip+0xb1e5]        # 21aa8 <_IO_stdin_used+0x3aa8>
   168c3:	push   r12
   168c5:	push   rbp
   168c6:	push   rbx
   168c7:	sub    rsp,0x8
   168cb:	mov    rcx,QWORD PTR [rip+0x50986]        # 67258 <warn>
   168d2:	call   5260 <fwrite@plt>
   168d7:	mov    eax,DWORD PTR [rip+0x188c3]        # 2f1a0 <P>
   168dd:	mov    DWORD PTR [rip+0x188c9],0x1        # 2f1b0 <P+0x10>
   168e7:	test   eax,eax
   168e9:	js     16956 <activate_early_eof+0xa6>
   168eb:	lea    rbx,[rip+0x188ee]        # 2f1e0 <P+0x40>
   168f2:	xor    ebp,ebp
   168f4:	lea    r13,[rip+0x80c9]        # 1e9c4 <_IO_stdin_used+0x9c4>
   168fb:	lea    r12,[rbx-0x40]
   168ff:	jmp    16918 <activate_early_eof+0x68>
   16901:	nop    DWORD PTR [rax+0x0]
   16908:	add    ebp,0x1
   1690b:	add    rbx,0x380
   16912:	cmp    DWORD PTR [r12],ebp
   16916:	jl     16956 <activate_early_eof+0xa6>
   16918:	test   BYTE PTR [rbx],0x1
   1691b:	je     16908 <activate_early_eof+0x58>
   1691d:	mov    rax,QWORD PTR [rip+0x18884]        # 2f1a8 <P+0x8>
   16924:	cmp    QWORD PTR [rbx+0x20],rax
   16928:	jle    16908 <activate_early_eof+0x58>
   1692a:	mov    ecx,DWORD PTR [rbx+0x4]
   1692d:	mov    rdi,QWORD PTR [rip+0x50924]        # 67258 <warn>
   16934:	mov    rdx,r13
   16937:	xor    eax,eax
   16939:	mov    esi,0x1
   1693e:	add    ebp,0x1
   16941:	call   5270 <__fprintf_chk@plt>
   16946:	and    BYTE PTR [rbx],0xfe
   16949:	add    rbx,0x380
   16950:	cmp    DWORD PTR [r12],ebp
   16954:	jge    16918 <activate_early_eof+0x68>
   16956:	add    rsp,0x8
   1695a:	pop    rbx
   1695b:	pop    rbp
   1695c:	pop    r12
   1695e:	pop    r13
   16960:	ret    
   16961:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1696c:	nop    DWORD PTR [rax+0x0]

0000000000016970 <process_record_tsc>:
   16970:	mov    rax,QWORD PTR [rsi+0x8]
   16974:	test   rax,rax
   16977:	je     169c8 <process_record_tsc+0x58>
   16979:	mov    rdx,QWORD PTR [rip+0x18840]        # 2f1c0 <P+0x20>
   16980:	cmp    rax,rdx
   16983:	jb     169c8 <process_record_tsc+0x58>
   16985:	movzx  eax,BYTE PTR [rip+0x14715]        # 2b0a1 <opt+0x1>
   1698c:	push   rbx
   1698d:	mov    rbx,rdi
   16990:	and    eax,0x20
   16993:	test   rdx,rdx
   16996:	jne    169d0 <process_record_tsc+0x60>
   16998:	mov    QWORD PTR [rip+0x18821],rdi        # 2f1c0 <P+0x20>
   1699f:	test   al,al
   169a1:	je     169aa <process_record_tsc+0x3a>
   169a3:	mov    QWORD PTR [rip+0x5084e],rdi        # 671f8 <P+0x38058>
   169aa:	mov    QWORD PTR [rip+0x18817],rbx        # 2f1c8 <P+0x28>
   169b1:	mov    QWORD PTR [rip+0x18800],rbx        # 2f1b8 <P+0x18>
   169b8:	pop    rbx
   169b9:	mov    QWORD PTR [rip+0x18810],rdx        # 2f1d0 <P+0x30>
   169c0:	ret    
   169c1:	nop    DWORD PTR [rax+0x0]
   169c8:	ret    
   169c9:	nop    DWORD PTR [rax+0x0]
   169d0:	test   al,al
   169d2:	je     16a28 <process_record_tsc+0xb8>
   169d4:	mov    r8,QWORD PTR [rip+0x5081d]        # 671f8 <P+0x38058>
   169db:	cmp    r8,rdi
   169de:	ja     16a40 <process_record_tsc+0xd0>
   169e0:	mov    rax,rdi
   169e3:	sub    rax,r8
   169e6:	cmp    QWORD PTR [rip+0x146fb],rax        # 2b0e8 <opt+0x48>
   169ed:	jae    16a28 <process_record_tsc+0xb8>
   169ef:	nop
   169f0:	call   9be0 <interval_callback>
   169f5:	mov    rdx,QWORD PTR [rip+0x507fc]        # 671f8 <P+0x38058>
   169fc:	mov    rax,QWORD PTR [rip+0x146e5]        # 2b0e8 <opt+0x48>
   16a03:	mov    rcx,rbx
   16a06:	add    rdx,rax
   16a09:	sub    rcx,rdx
   16a0c:	mov    QWORD PTR [rip+0x507e5],rdx        # 671f8 <P+0x38058>
   16a13:	cmp    rax,rcx
   16a16:	jb     169f0 <process_record_tsc+0x80>
   16a18:	mov    rdx,rbx
   16a1b:	sub    rdx,QWORD PTR [rip+0x1879e]        # 2f1c0 <P+0x20>
   16a22:	jmp    169aa <process_record_tsc+0x3a>
   16a24:	nop    DWORD PTR [rax+0x0]
   16a28:	mov    rax,rbx
   16a2b:	sub    rax,rdx
   16a2e:	mov    rdx,rax
   16a31:	jmp    169aa <process_record_tsc+0x3a>
   16a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16a40:	mov    rcx,rdi
   16a43:	mov    rdi,QWORD PTR [rip+0x5080e]        # 67258 <warn>
   16a4a:	xor    eax,eax
   16a4c:	lea    rdx,[rip+0xb085]        # 21ad8 <_IO_stdin_used+0x3ad8>
   16a53:	mov    esi,0x1
   16a58:	call   5270 <__fprintf_chk@plt>
   16a5d:	cmp    DWORD PTR [rip+0x1467c],0x4        # 2b0e0 <opt+0x40>
   16a64:	ja     16a18 <process_record_tsc+0xa8>
   16a66:	mov    edi,0x1
   16a6b:	call   5250 <exit@plt>

0000000000016a70 <find_toplevel_event>:
   16a70:	movzx  r9d,WORD PTR [rdi+0x12]
   16a75:	xor    ecx,ecx
   16a77:	xor    edx,edx
   16a79:	xor    eax,eax
   16a7b:	and    r9w,0xfff
   16a81:	movzx  esi,r9w
   16a85:	nop    DWORD PTR [rax]
   16a88:	bt     rsi,rdx
   16a8c:	jae    16a93 <find_toplevel_event+0x23>
   16a8e:	add    ecx,0x1
   16a91:	mov    eax,edx
   16a93:	add    edx,0x1
   16a96:	cmp    edx,0x8
   16a99:	jne    16a88 <find_toplevel_event+0x18>
   16a9b:	cmp    ecx,0x1
   16a9e:	jne    16aa8 <find_toplevel_event+0x38>
   16aa0:	ret    
   16aa1:	nop    DWORD PTR [rax+0x0]
   16aa8:	sub    rsp,0x8
   16aac:	movzx  eax,WORD PTR [rdi+0x10]
   16ab0:	mov    esi,0x1
   16ab5:	and    r9d,0xfff
   16abc:	lea    rdx,[rip+0xb04d]        # 21b10 <_IO_stdin_used+0x3b10>
   16ac3:	and    eax,0xfff
   16ac8:	push   rax
   16ac9:	movzx  eax,BYTE PTR [rdi+0x11]
   16acd:	shr    al,0x4
   16ad0:	movzx  eax,al
   16ad3:	push   rax
   16ad4:	mov    r8d,DWORD PTR [rdi+0x10]
   16ad8:	xor    eax,eax
   16ada:	mov    rdi,QWORD PTR [rip+0x50777]        # 67258 <warn>
   16ae1:	call   5270 <__fprintf_chk@plt>
   16ae6:	cmp    DWORD PTR [rip+0x145f3],0x3        # 2b0e0 <opt+0x40>
   16aed:	pop    rax
   16aee:	pop    rdx
   16aef:	jbe    16afb <find_toplevel_event+0x8b>
   16af1:	mov    eax,0xffffffff
   16af6:	add    rsp,0x8
   16afa:	ret    
   16afb:	mov    edi,0x1
   16b00:	call   5250 <exit@plt>
   16b05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000016b10 <toplevel_assert_check>:
   16b10:	lea    rax,[rip+0x14529]        # 2b040 <tl_assert_checks>
   16b17:	movsxd rdi,edi
   16b1a:	push   rbx
   16b1b:	mov    rdx,QWORD PTR [rax+rdi*8]
   16b1f:	mov    edi,DWORD PTR [rax+rdi*8+0x4]
   16b23:	test   dl,0x1
   16b26:	je     16b70 <toplevel_assert_check+0x60>
   16b28:	mov    rbx,rsi
   16b2b:	mov    rsi,QWORD PTR [rsi+0x1a8]
   16b32:	test   rsi,rsi
   16b35:	je     16bf0 <toplevel_assert_check+0xe0>
   16b3b:	and    edx,0x2
   16b3e:	je     16b51 <toplevel_assert_check+0x41>
   16b40:	mov    rax,QWORD PTR [rsi+0x8]
   16b44:	cmp    DWORD PTR [rax+0x8],0x7fff
   16b4b:	je     16bd0 <toplevel_assert_check+0xc0>
   16b51:	test   edi,edi
   16b53:	je     16b81 <toplevel_assert_check+0x71>
   16b55:	mov    edx,DWORD PTR [rsi+0x3bf0]
   16b5b:	mov    eax,0x1
   16b60:	test   edx,edx
   16b62:	je     16b68 <toplevel_assert_check+0x58>
   16b64:	cmp    edx,edi
   16b66:	jne    16b90 <toplevel_assert_check+0x80>
   16b68:	pop    rbx
   16b69:	ret    
   16b6a:	nop    WORD PTR [rax+rax*1+0x0]
   16b70:	and    edx,0x2
   16b73:	jne    16c2e <toplevel_assert_check+0x11e>
   16b79:	test   edi,edi
   16b7b:	jne    16c0f <toplevel_assert_check+0xff>
   16b81:	mov    eax,0x1
   16b86:	pop    rbx
   16b87:	ret    
   16b88:	nop    DWORD PTR [rax+rax*1+0x0]
   16b90:	mov    rax,QWORD PTR [rsi+0x8]
   16b94:	mov    ecx,DWORD PTR [rax+0x8]
   16b97:	push   rdx
   16b98:	xor    eax,eax
   16b9a:	lea    rdx,[rip+0xb037]        # 21bd8 <_IO_stdin_used+0x3bd8>
   16ba1:	push   rdi
   16ba2:	mov    rdi,QWORD PTR [rip+0x506af]        # 67258 <warn>
   16ba9:	mov    r8d,DWORD PTR [rsi]
   16bac:	mov    r9d,DWORD PTR [rbx+0x4]
   16bb0:	mov    esi,0x1
   16bb5:	call   5270 <__fprintf_chk@plt>
   16bba:	pop    rax
   16bbb:	pop    rdx
   16bbc:	mov    rdi,QWORD PTR [rip+0x50695]        # 67258 <warn>
   16bc3:	lea    rsi,[rbx+0x30]
   16bc7:	call   141c0 <dump_generic>
   16bcc:	xor    eax,eax
   16bce:	pop    rbx
   16bcf:	ret    
   16bd0:	mov    rcx,QWORD PTR [rip+0x50681]        # 67258 <warn>
   16bd7:	mov    edx,0x3b
   16bdc:	mov    esi,0x1
   16be1:	lea    rdi,[rip+0xafb0]        # 21b98 <_IO_stdin_used+0x3b98>
   16be8:	call   5260 <fwrite@plt>
   16bed:	jmp    16bbc <toplevel_assert_check+0xac>
   16bef:	nop
   16bf0:	mov    rcx,QWORD PTR [rip+0x50661]        # 67258 <warn>
   16bf7:	mov    edx,0x2a
   16bfc:	mov    esi,0x1
   16c01:	lea    rdi,[rip+0xaf60]        # 21b68 <_IO_stdin_used+0x3b68>
   16c08:	call   5260 <fwrite@plt>
   16c0d:	jmp    16bbc <toplevel_assert_check+0xac>
   16c0f:	lea    rcx,[rip+0xd66a]        # 24280 <__PRETTY_FUNCTION__.8378>
   16c16:	mov    edx,0x24ac
   16c1b:	lea    rsi,[rip+0x74a6]        # 1e0c8 <_IO_stdin_used+0xc8>
   16c22:	lea    rdi,[rip+0x7db1]        # 1e9da <_IO_stdin_used+0x9da>
   16c29:	call   5110 <__assert_fail@plt>
   16c2e:	lea    rcx,[rip+0xd64b]        # 24280 <__PRETTY_FUNCTION__.8378>
   16c35:	mov    edx,0x24a1
   16c3a:	lea    rsi,[rip+0x7487]        # 1e0c8 <_IO_stdin_used+0xc8>
   16c41:	lea    rdi,[rip+0x7d92]        # 1e9da <_IO_stdin_used+0x9da>
   16c48:	call   5110 <__assert_fail@plt>
   16c4d:	nop    DWORD PTR [rax]

0000000000016c50 <progress_child_exec>:
   16c50:	sub    rsp,0x8
   16c54:	mov    rdi,QWORD PTR [rip+0x177d5]        # 2e430 <stdin@@GLIBC_2.2.5>
   16c5b:	call   50c0 <fclose@plt>
   16c60:	mov    edi,DWORD PTR [rip+0x144fa]        # 2b160 <G+0x40>
   16c66:	xor    esi,esi
   16c68:	call   50f0 <dup2@plt>
   16c6d:	lea    rax,[rip+0x7da6]        # 1ea1a <_IO_stdin_used+0xa1a>
   16c74:	push   0x0
   16c76:	lea    rsi,[rip+0x7d96]        # 1ea13 <_IO_stdin_used+0xa13>
   16c7d:	push   rax
   16c7e:	lea    rax,[rip+0x7da1]        # 1ea26 <_IO_stdin_used+0xa26>
   16c85:	lea    r9,[rip+0x7d5d]        # 1e9e9 <_IO_stdin_used+0x9e9>
   16c8c:	mov    rdi,rsi
   16c8f:	push   QWORD PTR [rip+0x144ab]        # 2b140 <G+0x20>
   16c95:	lea    r8,[rip+0x7d57]        # 1e9f3 <_IO_stdin_used+0x9f3>
   16c9c:	lea    rcx,[rip+0x7d58]        # 1e9fb <_IO_stdin_used+0x9fb>
   16ca3:	push   rax
   16ca4:	lea    rdx,[rip+0x7d5d]        # 1ea08 <_IO_stdin_used+0xa08>
   16cab:	xor    eax,eax
   16cad:	call   5280 <execlp@plt>
   16cb2:	add    rsp,0x28
   16cb6:	ret    
   16cb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016cc0 <progress_init>:
   16cc0:	sub    rsp,0x8
   16cc4:	lea    rdi,[rip+0x14495]        # 2b160 <G+0x40>
   16ccb:	call   5140 <pipe@plt>
   16cd0:	test   eax,eax
   16cd2:	js     16d10 <progress_init+0x50>
   16cd4:	call   52b0 <fork@plt>
   16cd9:	test   eax,eax
   16cdb:	je     16d9c <progress_init+0xdc>
   16ce1:	js     16d20 <progress_init+0x60>
   16ce3:	mov    edi,DWORD PTR [rip+0x1447b]        # 2b164 <G+0x44>
   16ce9:	lea    rsi,[rip+0x821c]        # 1ef0c <_IO_stdin_used+0xf0c>
   16cf0:	call   51e0 <fdopen@plt>
   16cf5:	mov    QWORD PTR [rip+0x1446c],rax        # 2b168 <G+0x48>
   16cfc:	test   rax,rax
   16cff:	je     16d60 <progress_init+0xa0>
   16d01:	add    rsp,0x8
   16d05:	ret    
   16d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
   16d10:	lea    rdi,[rip+0x7d16]        # 1ea2d <_IO_stdin_used+0xa2d>
   16d17:	call   5240 <perror@plt>
   16d1c:	jmp    16cd4 <progress_init+0x14>
   16d1e:	xchg   ax,ax
   16d20:	call   5060 <__errno_location@plt>
   16d25:	mov    edi,DWORD PTR [rax]
   16d27:	call   5290 <strerror@plt>
   16d2c:	mov    rdi,QWORD PTR [rip+0x1770d]        # 2e440 <stderr@@GLIBC_2.2.5>
   16d33:	mov    esi,0x1
   16d38:	lea    rcx,[rip+0xd529]        # 24268 <__func__.8407>
   16d3f:	mov    r8,rax
   16d42:	lea    rdx,[rip+0xaf1f]        # 21c68 <_IO_stdin_used+0x3c68>
   16d49:	xor    eax,eax
   16d4b:	call   5270 <__fprintf_chk@plt>
   16d50:	and    BYTE PTR [rip+0x1434c],0xf7        # 2b0a3 <opt+0x3>
   16d57:	jmp    16ce3 <progress_init+0x23>
   16d59:	nop    DWORD PTR [rax+0x0]
   16d60:	call   5060 <__errno_location@plt>
   16d65:	mov    edi,DWORD PTR [rax]
   16d67:	call   5290 <strerror@plt>
   16d6c:	mov    rdi,QWORD PTR [rip+0x176cd]        # 2e440 <stderr@@GLIBC_2.2.5>
   16d73:	mov    esi,0x1
   16d78:	lea    rcx,[rip+0xd4e9]        # 24268 <__func__.8407>
   16d7f:	mov    r8,rax
   16d82:	lea    rdx,[rip+0xaf0f]        # 21c98 <_IO_stdin_used+0x3c98>
   16d89:	xor    eax,eax
   16d8b:	call   5270 <__fprintf_chk@plt>
   16d90:	and    BYTE PTR [rip+0x1430c],0xf7        # 2b0a3 <opt+0x3>
   16d97:	add    rsp,0x8
   16d9b:	ret    
   16d9c:	call   16c50 <progress_child_exec>
   16da1:	call   5060 <__errno_location@plt>
   16da6:	mov    edi,DWORD PTR [rax]
   16da8:	call   5290 <strerror@plt>
   16dad:	mov    rdi,QWORD PTR [rip+0x1768c]        # 2e440 <stderr@@GLIBC_2.2.5>
   16db4:	mov    esi,0x1
   16db9:	lea    rcx,[rip+0xd4a8]        # 24268 <__func__.8407>
   16dc0:	mov    r8,rax
   16dc3:	lea    rdx,[rip+0xae6e]        # 21c38 <_IO_stdin_used+0x3c38>
   16dca:	xor    eax,eax
   16dcc:	call   5270 <__fprintf_chk@plt>
   16dd1:	mov    edi,0x1
   16dd6:	and    BYTE PTR [rip+0x142c6],0xf7        # 2b0a3 <opt+0x3>
   16ddd:	call   5250 <exit@plt>
   16de2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   16ded:	nop    DWORD PTR [rax]

0000000000016df0 <progress_update>:
   16df0:	lea    rax,[rdi+rdi*4]
   16df4:	push   rbx
   16df5:	mov    rdi,QWORD PTR [rip+0x1436c]        # 2b168 <G+0x48>
   16dfc:	mov    esi,0x1
   16e01:	lea    rax,[rax+rax*4]
   16e05:	shl    rax,0x2
   16e09:	cqo    
   16e0b:	idiv   QWORD PTR [rip+0x1433e]        # 2b150 <G+0x30>
   16e12:	lea    rdx,[rip+0x76a7]        # 1e4c0 <_IO_stdin_used+0x4c0>
   16e19:	mov    rcx,rax
   16e1c:	mov    rbx,rax
   16e1f:	xor    eax,eax
   16e21:	call   5270 <__fprintf_chk@plt>
   16e26:	mov    rdi,QWORD PTR [rip+0x1433b]        # 2b168 <G+0x48>
   16e2d:	call   51b0 <fflush@plt>
   16e32:	lea    rcx,[rbx+0x1]
   16e36:	pop    rbx
   16e37:	movabs rdx,0xa3d70a3d70a3d70b
   16e41:	imul   rcx,QWORD PTR [rip+0x14307]        # 2b150 <G+0x30>
   16e49:	mov    rax,rcx
   16e4c:	imul   rdx
   16e4f:	add    rdx,rcx
   16e52:	sar    rcx,0x3f
   16e56:	sar    rdx,0x6
   16e5a:	sub    rdx,rcx
   16e5d:	mov    QWORD PTR [rip+0x142f4],rdx        # 2b158 <G+0x38>
   16e64:	ret    
   16e65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000016e70 <progress_finish>:
   16e70:	push   rbx
   16e71:	mov    edx,0x4
   16e76:	mov    esi,0x1
   16e7b:	lea    rdi,[rip+0x7bb0]        # 1ea32 <_IO_stdin_used+0xa32>
   16e82:	sub    rsp,0x90
   16e89:	mov    rcx,QWORD PTR [rip+0x142d8]        # 2b168 <G+0x48>
   16e90:	mov    rax,QWORD PTR fs:0x28
   16e99:	mov    QWORD PTR [rsp+0x88],rax
   16ea1:	xor    eax,eax
   16ea3:	call   5260 <fwrite@plt>
   16ea8:	mov    rdi,QWORD PTR [rip+0x142b9]        # 2b168 <G+0x48>
   16eaf:	call   51b0 <fflush@plt>
   16eb4:	mov    rdi,QWORD PTR [rip+0x142ad]        # 2b168 <G+0x48>
   16ebb:	call   50c0 <fclose@plt>
   16ec0:	xor    edi,edi
   16ec2:	call   52a0 <wait@plt>
   16ec7:	call   52b0 <fork@plt>
   16ecc:	test   eax,eax
   16ece:	je     16ef0 <progress_finish+0x80>
   16ed0:	mov    rax,QWORD PTR [rsp+0x88]
   16ed8:	xor    rax,QWORD PTR fs:0x28
   16ee1:	jne    16f3f <progress_finish+0xcf>
   16ee3:	add    rsp,0x90
   16eea:	pop    rbx
   16eeb:	ret    
   16eec:	nop    DWORD PTR [rax+0x0]
   16ef0:	mov    rbx,rsp
   16ef3:	mov    ecx,0x80
   16ef8:	mov    edx,0x1
   16efd:	mov    r9,QWORD PTR [rip+0x1423c]        # 2b140 <G+0x20>
   16f04:	mov    rdi,rbx
   16f07:	lea    r8,[rip+0x7b29]        # 1ea37 <_IO_stdin_used+0xa37>
   16f0e:	mov    esi,0x80
   16f13:	call   5030 <__snprintf_chk@plt>
   16f18:	xor    r9d,r9d
   16f1b:	mov    r8,rbx
   16f1e:	xor    eax,eax
   16f20:	lea    rsi,[rip+0x7aec]        # 1ea13 <_IO_stdin_used+0xa13>
   16f27:	lea    rcx,[rip+0x7af8]        # 1ea26 <_IO_stdin_used+0xa26>
   16f2e:	lea    rdx,[rip+0x7b18]        # 1ea4d <_IO_stdin_used+0xa4d>
   16f35:	mov    rdi,rsi
   16f38:	call   5280 <execlp@plt>
   16f3d:	jmp    16ed0 <progress_finish+0x60>
   16f3f:	call   50d0 <__stack_chk_fail@plt>
   16f44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   16f4f:	nop

0000000000016f50 <__read_record>:
   16f50:	push   r12
   16f52:	mov    rcx,rsi
   16f55:	mov    r12,rsi
   16f58:	mov    rsi,rdi
   16f5b:	push   rbp
   16f5c:	mov    rbp,rdi
   16f5f:	mov    rdi,QWORD PTR [rip+0x141c2]        # 2b128 <G+0x8>
   16f66:	mov    edx,0x28
   16f6b:	push   rbx
   16f6c:	call   1dbb0 <mread64>
   16f71:	test   rax,rax
   16f74:	js     17040 <__read_record+0xf0>
   16f7a:	je     16fb0 <__read_record+0x60>
   16f7c:	mov    rbx,rax
   16f7f:	cmp    rax,0x3
   16f83:	jle    16fc0 <__read_record+0x70>
   16f85:	movzx  edx,BYTE PTR [rbp+0x3]
   16f89:	movsx  rax,BYTE PTR [rbp+0x3]
   16f8e:	shr    dl,0x4
   16f91:	sar    rax,0x3f
   16f95:	and    edx,0x7
   16f98:	and    eax,0x8
   16f9b:	lea    rax,[rax+rdx*4+0x4]
   16fa0:	cmp    rbx,rax
   16fa3:	jl     1700d <__read_record+0xbd>
   16fa5:	pop    rbx
   16fa6:	pop    rbp
   16fa7:	pop    r12
   16fa9:	ret    
   16faa:	nop    WORD PTR [rax+rax*1+0x0]
   16fb0:	pop    rbx
   16fb1:	xor    eax,eax
   16fb3:	pop    rbp
   16fb4:	pop    r12
   16fb6:	ret    
   16fb7:	nop    WORD PTR [rax+rax*1+0x0]
   16fc0:	mov    rdi,QWORD PTR [rip+0x17479]        # 2e440 <stderr@@GLIBC_2.2.5>
   16fc7:	mov    r8,rax
   16fca:	xor    eax,eax
   16fcc:	lea    rcx,[rip+0xd285]        # 24258 <__func__.8423>
   16fd3:	lea    rdx,[rip+0x7a87]        # 1ea61 <_IO_stdin_used+0xa61>
   16fda:	mov    esi,0x1
   16fdf:	call   5270 <__fprintf_chk@plt>
   16fe4:	cmp    DWORD PTR [rip+0x140f5],0x7        # 2b0e0 <opt+0x40>
   16feb:	jbe    17070 <__read_record+0x120>
   16ff1:	movzx  edx,BYTE PTR [rbp+0x3]
   16ff5:	shr    dl,0x4
   16ff8:	and    edx,0x7
   16ffb:	shl    rdx,0x2
   16fff:	cmp    BYTE PTR [rbp+0x3],0x0
   17003:	lea    rax,[rdx+0xc]
   17007:	js     1700d <__read_record+0xbd>
   17009:	lea    rax,[rdx+0x4]
   1700d:	mov    rdi,QWORD PTR [rip+0x1742c]        # 2e440 <stderr@@GLIBC_2.2.5>
   17014:	mov    r9,rax
   17017:	xor    eax,eax
   17019:	mov    r8,rbx
   1701c:	lea    rcx,[rip+0xd235]        # 24258 <__func__.8423>
   17023:	lea    rdx,[rip+0xaca6]        # 21cd0 <_IO_stdin_used+0x3cd0>
   1702a:	mov    esi,0x1
   1702f:	call   5270 <__fprintf_chk@plt>
   17034:	pop    rbx
   17035:	xor    eax,eax
   17037:	pop    rbp
   17038:	pop    r12
   1703a:	ret    
   1703b:	nop    DWORD PTR [rax+rax*1+0x0]
   17040:	lea    rdi,[rip+0x8b02]        # 1fb49 <_IO_stdin_used+0x1b49>
   17047:	call   5240 <perror@plt>
   1704c:	mov    rcx,r12
   1704f:	mov    esi,0x1
   17054:	xor    eax,eax
   17056:	mov    rdi,QWORD PTR [rip+0x173e3]        # 2e440 <stderr@@GLIBC_2.2.5>
   1705d:	lea    rdx,[rip+0x79f0]        # 1ea54 <_IO_stdin_used+0xa54>
   17064:	call   5270 <__fprintf_chk@plt>
   17069:	pop    rbx
   1706a:	xor    eax,eax
   1706c:	pop    rbp
   1706d:	pop    r12
   1706f:	ret    
   17070:	mov    edi,0x1
   17075:	call   5250 <exit@plt>
   1707a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017080 <__fill_in_record_info>:
   17080:	push   rbp
   17081:	push   rbx
   17082:	mov    rbx,rdi
   17085:	sub    rsp,0x118
   1708c:	mov    rax,QWORD PTR fs:0x28
   17095:	mov    QWORD PTR [rsp+0x108],rax
   1709d:	xor    eax,eax
   1709f:	mov    eax,DWORD PTR [rdi+0x168]
   170a5:	and    eax,0xfffffff
   170aa:	mov    DWORD PTR [rdi+0x40],eax
   170ad:	movzx  eax,BYTE PTR [rdi+0x16b]
   170b4:	shr    al,0x4
   170b7:	and    eax,0x7
   170ba:	cmp    BYTE PTR [rdi+0x16b],0x0
   170c1:	mov    DWORD PTR [rdi+0x44],eax
   170c4:	js     17110 <__fill_in_record_info+0x90>
   170c6:	mov    rax,QWORD PTR [rdi+0x10]
   170ca:	mov    QWORD PTR [rdi+0x38],rax
   170ce:	lea    rax,[rdi+0x16c]
   170d5:	mov    QWORD PTR [rdi+0x50],rax
   170d9:	mov    r9d,DWORD PTR [rbx+0x4]
   170dd:	test   BYTE PTR [rip+0x13fbe],0x1        # 2b0a2 <opt+0x2>
   170e4:	jne    17171 <__fill_in_record_info+0xf1>
   170ea:	mov    DWORD PTR [rbx+0x30],r9d
   170ee:	mov    rax,QWORD PTR [rsp+0x108]
   170f6:	xor    rax,QWORD PTR fs:0x28
   170ff:	jne    171b2 <__fill_in_record_info+0x132>
   17105:	add    rsp,0x118
   1710c:	pop    rbx
   1710d:	pop    rbp
   1710e:	ret    
   1710f:	nop
   17110:	mov    rcx,QWORD PTR [rdi+0x198]
   17117:	mov    rax,QWORD PTR [rdi+0x16c]
   1711e:	lea    rdx,[rdi+0x174]
   17125:	mov    QWORD PTR [rdi+0x50],rdx
   17129:	add    rax,rcx
   1712c:	cmp    QWORD PTR [rdi+0x8],0x0
   17131:	mov    QWORD PTR [rdi+0x38],rax
   17135:	jne    1713b <__fill_in_record_info+0xbb>
   17137:	mov    QWORD PTR [rdi+0x8],rax
   1713b:	movabs rsi,0x40001f001
   17145:	mov    rdx,rax
   17148:	cmp    QWORD PTR [rbx+0x40],rsi
   1714c:	jne    17158 <__fill_in_record_info+0xd8>
   1714e:	add    rcx,QWORD PTR [rbx+0x17c]
   17155:	mov    rdx,rcx
   17158:	mov    QWORD PTR [rbx+0x18],rdx
   1715c:	mov    r9d,DWORD PTR [rbx+0x4]
   17160:	mov    QWORD PTR [rbx+0x10],rax
   17164:	test   BYTE PTR [rip+0x13f37],0x1        # 2b0a2 <opt+0x2>
   1716b:	je     170ea <__fill_in_record_info+0x6a>
   17171:	mov    rbp,rsp
   17174:	sub    rsp,0x8
   17178:	push   QWORD PTR [rbx+0x20]
   1717b:	mov    edx,0x1
   17180:	mov    ecx,0x100
   17185:	mov    esi,0x100
   1718a:	mov    rdi,rbp
   1718d:	xor    eax,eax
   1718f:	lea    r8,[rip+0x78e7]        # 1ea7d <_IO_stdin_used+0xa7d>
   17196:	call   5030 <__snprintf_chk@plt>
   1719b:	lea    rsi,[rbx+0x30]
   1719f:	mov    rdi,rbp
   171a2:	call   157f0 <dump_raw>
   171a7:	pop    rax
   171a8:	mov    r9d,DWORD PTR [rbx+0x4]
   171ac:	pop    rdx
   171ad:	jmp    170ea <__fill_in_record_info+0x6a>
   171b2:	call   50d0 <__stack_chk_fail@plt>
   171b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000171c0 <pcpu_string_draw>:
   171c0:	movsxd rax,DWORD PTR [rdi+0x4]
   171c4:	lea    rdx,[rip+0x17ab5]        # 2ec80 <__pcpu_string>
   171cb:	add    rax,rdx
   171ce:	test   BYTE PTR [rdi+0x1b0],0x1
   171d5:	je     171e0 <pcpu_string_draw+0x20>
   171d7:	mov    BYTE PTR [rax],0x6c
   171da:	ret    
   171db:	nop    DWORD PTR [rax+rax*1+0x0]
   171e0:	mov    rdx,QWORD PTR [rdi+0x1a8]
   171e7:	test   rdx,rdx
   171ea:	je     17228 <pcpu_string_draw+0x68>
   171ec:	mov    rdx,QWORD PTR [rdx+0x8]
   171f0:	mov    edx,DWORD PTR [rdx+0x8]
   171f3:	cmp    edx,0x8000
   171f9:	je     17230 <pcpu_string_draw+0x70>
   171fb:	cmp    edx,0x7fff
   17201:	je     17210 <pcpu_string_draw+0x50>
   17203:	mov    BYTE PTR [rax],0x7c
   17206:	ret    
   17207:	nop    WORD PTR [rax+rax*1+0x0]
   17210:	test   BYTE PTR [rip+0x13e8b],0x10        # 2b0a2 <opt+0x2>
   17217:	je     17238 <pcpu_string_draw+0x78>
   17219:	mov    edx,DWORD PTR [rdi+0x194]
   1721f:	add    edx,0x30
   17222:	mov    BYTE PTR [rax],dl
   17224:	ret    
   17225:	nop    DWORD PTR [rax]
   17228:	mov    BYTE PTR [rax],0x20
   1722b:	ret    
   1722c:	nop    DWORD PTR [rax+0x0]
   17230:	mov    BYTE PTR [rax],0x2e
   17233:	ret    
   17234:	nop    DWORD PTR [rax+0x0]
   17238:	mov    BYTE PTR [rax],0x2d
   1723b:	ret    
   1723c:	nop    DWORD PTR [rax+0x0]

0000000000017240 <vcpu_prev_update>:
   17240:	push   r15
   17242:	push   r14
   17244:	push   r13
   17246:	push   r12
   17248:	push   rbp
   17249:	mov    rbp,rdx
   1724c:	push   rbx
   1724d:	sub    rsp,0x18
   17251:	mov    rax,QWORD PTR [rsi+0x8]
   17255:	movsxd rdx,DWORD PTR [rsi]
   17258:	cmp    QWORD PTR [rax+rdx*8+0x10],rsi
   1725d:	jne    17829 <vcpu_prev_update+0x5e9>
   17263:	mov    rax,QWORD PTR [rsi+0x50]
   17267:	mov    r12,rdi
   1726a:	mov    rbx,rsi
   1726d:	mov    r13d,ecx
   17270:	cmp    rax,rdi
   17273:	jne    17438 <vcpu_prev_update+0x1f8>
   17279:	mov    rax,QWORD PTR [rdi+0x1a8]
   17280:	test   rax,rax
   17283:	je     176a0 <vcpu_prev_update+0x460>
   17289:	cmp    rbx,rax
   1728c:	jne    173f0 <vcpu_prev_update+0x1b0>
   17292:	mov    r8d,DWORD PTR [rbx+0x18]
   17296:	test   r8d,r8d
   17299:	jne    176e0 <vcpu_prev_update+0x4a0>
   1729f:	mov    rdi,r12
   172a2:	mov    rsi,rbp
   172a5:	call   12ea0 <pcpu_runstate_update>
   172aa:	mov    rdi,r12
   172ad:	mov    QWORD PTR [r12+0x1a8],0x0
   172b9:	call   171c0 <pcpu_string_draw>
   172be:	mov    r12,QWORD PTR [rbx+0x8]
   172c2:	test   BYTE PTR [rip+0x13dd7],0x40        # 2b0a0 <opt>
   172c9:	je     17386 <vcpu_prev_update+0x146>
   172cf:	mov    rax,QWORD PTR [rip+0x17eea]        # 2f1c0 <P+0x20>
   172d6:	cmp    rbp,rax
   172d9:	jbe    174a0 <vcpu_prev_update+0x260>
   172df:	movabs rcx,0x44b82fa09b5a53
   172e9:	mov    r14,rbp
   172ec:	xor    edx,edx
   172ee:	sub    r14,rax
   172f1:	shl    r14,0xa
   172f5:	mov    rax,r14
   172f8:	div    QWORD PTR [rip+0x13da9]        # 2b0a8 <opt+0x8>
   172ff:	mov    rdx,rax
   17302:	mov    r14,rax
   17305:	shr    rdx,0x9
   17309:	mov    rax,rdx
   1730c:	mul    rcx
   1730f:	shr    rdx,0xb
   17313:	mov    r15d,edx
   17316:	imul   edx,edx,0x3b9aca00
   1731c:	sub    r14d,edx
   1731f:	movsxd rax,DWORD PTR [rbx+0x18]
   17323:	sub    rsp,0x8
   17327:	mov    edx,DWORD PTR [r12+0x8]
   1732c:	mov    r9d,r14d
   1732f:	lea    r10,[rip+0x13d4a]        # 2b080 <runstate_graph>
   17336:	mov    r8d,r15d
   17339:	mov    edi,0x1
   1733e:	mov    eax,DWORD PTR [r10+rax*4]
   17342:	lea    rsi,[rip+0x7228]        # 1e571 <_IO_stdin_used+0x571>
   17349:	push   rax
   1734a:	mov    ecx,DWORD PTR [rbx]
   1734c:	xor    eax,eax
   1734e:	call   5200 <__printf_chk@plt>
   17353:	movsxd rax,r13d
   17356:	mov    edx,DWORD PTR [r12+0x8]
   1735b:	mov    r9d,r14d
   1735e:	lea    r10,[rip+0x13d1b]        # 2b080 <runstate_graph>
   17365:	lea    rsi,[rip+0x7205]        # 1e571 <_IO_stdin_used+0x571>
   1736c:	mov    edi,0x1
   17371:	mov    r8d,r15d
   17374:	mov    eax,DWORD PTR [r10+rax*4]
   17378:	mov    DWORD PTR [rsp],eax
   1737b:	mov    ecx,DWORD PTR [rbx]
   1737d:	xor    eax,eax
   1737f:	call   5200 <__printf_chk@plt>
   17384:	pop    rsi
   17385:	pop    rdi
   17386:	mov    rax,QWORD PTR [rbx+0x20]
   1738a:	test   rax,rax
   1738d:	je     17398 <vcpu_prev_update+0x158>
   1738f:	cmp    rbp,rax
   17392:	ja     174b0 <vcpu_prev_update+0x270>
   17398:	cmp    r13d,0x1
   1739c:	je     17470 <vcpu_prev_update+0x230>
   173a2:	mov    DWORD PTR [rbx+0x1c],0x0
   173a9:	mov    DWORD PTR [rbx+0x18],r13d
   173ad:	mov    QWORD PTR [rbx+0x20],rbp
   173b1:	mov    rax,QWORD PTR [r12+0x818]
   173b9:	test   rax,rax
   173bc:	je     173c7 <vcpu_prev_update+0x187>
   173be:	cmp    rbp,rax
   173c1:	ja     17650 <vcpu_prev_update+0x410>
   173c7:	mov    rdi,r12
   173ca:	call   11250 <domain_runstate>
   173cf:	mov    QWORD PTR [r12+0x818],rbp
   173d7:	mov    DWORD PTR [r12+0x814],eax
   173df:	add    rsp,0x18
   173e3:	pop    rbx
   173e4:	pop    rbp
   173e5:	pop    r12
   173e7:	pop    r13
   173e9:	pop    r14
   173eb:	pop    r15
   173ed:	ret    
   173ee:	xchg   ax,ax
   173f0:	mov    rdx,QWORD PTR [rbx+0x8]
   173f4:	mov    rdi,QWORD PTR [rip+0x4fe5d]        # 67258 <warn>
   173fb:	mov    esi,0x1
   17400:	mov    ecx,DWORD PTR [rdx+0x8]
   17403:	mov    edx,DWORD PTR [rax]
   17405:	push   rdx
   17406:	mov    rax,QWORD PTR [rax+0x8]
   1740a:	lea    rdx,[rip+0xa947]        # 21d58 <_IO_stdin_used+0x3d58>
   17411:	mov    eax,DWORD PTR [rax+0x8]
   17414:	push   rax
   17415:	mov    r9d,DWORD PTR [r12+0x4]
   1741a:	xor    eax,eax
   1741c:	mov    r8d,DWORD PTR [rbx]
   1741f:	call   5270 <__fprintf_chk@plt>
   17424:	mov    QWORD PTR [rbx+0x20],0x0
   1742c:	pop    r9
   1742e:	pop    r10
   17430:	jmp    1729f <vcpu_prev_update+0x5f>
   17435:	nop    DWORD PTR [rax]
   17438:	mov    ecx,DWORD PTR [rdi+0x4]
   1743b:	mov    r8d,DWORD PTR [rax+0x4]
   1743f:	lea    rdx,[rip+0xa8da]        # 21d20 <_IO_stdin_used+0x3d20>
   17446:	mov    rdi,QWORD PTR [rip+0x4fe0b]        # 67258 <warn>
   1744d:	mov    esi,0x1
   17452:	xor    eax,eax
   17454:	call   5270 <__fprintf_chk@plt>
   17459:	mov    QWORD PTR [rbx+0x20],0x0
   17461:	jmp    1729f <vcpu_prev_update+0x5f>
   17466:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17470:	mov    eax,DWORD PTR [rbx+0x18]
   17473:	test   eax,eax
   17475:	je     17680 <vcpu_prev_update+0x440>
   1747b:	js     17690 <vcpu_prev_update+0x450>
   17481:	sub    eax,0x2
   17484:	cmp    eax,0x1
   17487:	ja     17690 <vcpu_prev_update+0x450>
   1748d:	mov    DWORD PTR [rbx+0x1c],0x1
   17494:	jmp    173a9 <vcpu_prev_update+0x169>
   17499:	nop    DWORD PTR [rax+0x0]
   174a0:	xor    r14d,r14d
   174a3:	xor    r15d,r15d
   174a6:	jmp    1731f <vcpu_prev_update+0xdf>
   174ab:	nop    DWORD PTR [rax+rax*1+0x0]
   174b0:	movsxd rdx,DWORD PTR [rbx+0x18]
   174b4:	mov    r15,rbp
   174b7:	sub    r15,rax
   174ba:	lea    rax,[rdx*8+0x0]
   174c2:	sub    rax,rdx
   174c5:	lea    r14,[rbx+rax*8+0x150]
   174cd:	add    DWORD PTR [r14],0x1
   174d1:	movsxd rcx,DWORD PTR [r14+0x4]
   174d5:	mov    edx,DWORD PTR [rip+0x13bfd]        # 2b0d8 <opt+0x38>
   174db:	mov    eax,ecx
   174dd:	test   edx,edx
   174df:	je     17590 <vcpu_prev_update+0x350>
   174e5:	mov    eax,DWORD PTR [r14+0x8]
   174e9:	cmp    ecx,eax
   174eb:	jl     177b8 <vcpu_prev_update+0x578>
   174f1:	mov    r8d,DWORD PTR [rip+0x13be4]        # 2b0dc <opt+0x3c>
   174f8:	test   ecx,ecx
   174fa:	je     1750a <vcpu_prev_update+0x2ca>
   174fc:	cmp    eax,r8d
   174ff:	jl     1750a <vcpu_prev_update+0x2ca>
   17501:	test   r8d,r8d
   17504:	jne    17821 <vcpu_prev_update+0x5e1>
   1750a:	add    eax,eax
   1750c:	cmove  eax,edx
   1750f:	test   r8d,r8d
   17512:	je     17819 <vcpu_prev_update+0x5d9>
   17518:	cmp    eax,r8d
   1751b:	jle    17819 <vcpu_prev_update+0x5d9>
   17521:	movsxd rsi,r8d
   17524:	mov    rdi,QWORD PTR [r14+0x18]
   17528:	mov    DWORD PTR [rsp+0xc],r8d
   1752d:	shl    rsi,0x3
   17531:	call   51d0 <realloc@plt>
   17536:	mov    r8d,DWORD PTR [rsp+0xc]
   1753b:	test   rax,rax
   1753e:	je     17810 <vcpu_prev_update+0x5d0>
   17544:	mov    QWORD PTR [r14+0x18],rax
   17548:	mov    DWORD PTR [r14+0x8],r8d
   1754c:	movsxd rcx,DWORD PTR [r14+0x4]
   17550:	cmp    ecx,r8d
   17553:	jl     177b8 <vcpu_prev_update+0x578>
   17559:	mov    eax,ecx
   1755b:	cdq    
   1755c:	idiv   r8d
   1755f:	lea    edi,[rax+0x1]
   17562:	movsxd rsi,edx
   17565:	mov    edx,0x55555556
   1756a:	mov    eax,edi
   1756c:	imul   edx
   1756e:	mov    eax,edi
   17570:	sar    eax,0x1f
   17573:	sub    eax,edx
   17575:	add    eax,esi
   17577:	cdq    
   17578:	idiv   edi
   1757a:	mov    eax,ecx
   1757c:	test   edx,edx
   1757e:	jne    17590 <vcpu_prev_update+0x350>
   17580:	mov    rax,QWORD PTR [r14+0x18]
   17584:	mov    QWORD PTR [rax+rsi*8],r15
   17588:	mov    eax,DWORD PTR [r14+0x4]
   1758c:	nop    DWORD PTR [rax+0x0]
   17590:	add    eax,0x1
   17593:	add    QWORD PTR [r14+0x10],r15
   17597:	mov    DWORD PTR [r14+0x4],eax
   1759b:	add    DWORD PTR [r14+0x20],0x1
   175a0:	add    QWORD PTR [r14+0x28],r15
   175a4:	cmp    BYTE PTR [rip+0x13af5],0x0        # 2b0a0 <opt>
   175ab:	js     17700 <vcpu_prev_update+0x4c0>
   175b1:	mov    eax,DWORD PTR [rbx+0x18]
   175b4:	test   eax,eax
   175b6:	jne    175de <vcpu_prev_update+0x39e>
   175b8:	mov    rdi,QWORD PTR [rbx+0x8]
   175bc:	mov    rsi,rbp
   175bf:	sub    rsi,QWORD PTR [rbx+0x20]
   175c3:	add    DWORD PTR [rdi+0x820],0x1
   175ca:	test   rsi,rsi
   175cd:	je     175db <vcpu_prev_update+0x39b>
   175cf:	add    rdi,0x820
   175d6:	call   56e0 <update_cycles.part.5>
   175db:	mov    eax,DWORD PTR [rbx+0x18]
   175de:	cmp    eax,0x1
   175e1:	je     17780 <vcpu_prev_update+0x540>
   175e7:	mov    rax,QWORD PTR [rbx+0x8]
   175eb:	mov    eax,DWORD PTR [rax+0x8]
   175ee:	test   eax,eax
   175f0:	jne    17398 <vcpu_prev_update+0x158>
   175f6:	lea    rax,[rip+0x17be3]        # 2f1e0 <P+0x40>
   175fd:	lea    rsi,[rax+0x38000]
   17604:	nop    DWORD PTR [rax+0x0]
   17608:	test   BYTE PTR [rax],0x1
   1760b:	je     1763d <vcpu_prev_update+0x3fd>
   1760d:	movsxd rcx,DWORD PTR [rbx+0x18]
   17611:	mov    rdx,QWORD PTR [rax+0x1c0]
   17618:	mov    rdi,rbp
   1761b:	cmp    QWORD PTR [rbx+0x20],rdx
   1761f:	cmovae rdx,QWORD PTR [rbx+0x20]
   17624:	sub    rdi,rdx
   17627:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   1762f:	mov    DWORD PTR [rax+0x208],r13d
   17636:	mov    QWORD PTR [rax+0x1c8],rbp
   1763d:	add    rax,0x380
   17643:	cmp    rsi,rax
   17646:	jne    17608 <vcpu_prev_update+0x3c8>
   17648:	jmp    17398 <vcpu_prev_update+0x158>
   1764d:	nop    DWORD PTR [rax]
   17650:	movsxd rcx,DWORD PTR [r12+0x814]
   17658:	mov    rsi,rbp
   1765b:	sub    rsi,rax
   1765e:	lea    rdx,[rcx*8+0x0]
   17666:	sub    rdx,rcx
   17669:	lea    rdi,[r12+rdx*8+0x858]
   17671:	add    DWORD PTR [rdi],0x1
   17674:	call   56e0 <update_cycles.part.5>
   17679:	jmp    173c7 <vcpu_prev_update+0x187>
   1767e:	xchg   ax,ax
   17680:	mov    DWORD PTR [rbx+0x1c],0x2
   17687:	jmp    173a9 <vcpu_prev_update+0x169>
   1768c:	nop    DWORD PTR [rax+0x0]
   17690:	mov    DWORD PTR [rbx+0x1c],0x3
   17697:	jmp    173a9 <vcpu_prev_update+0x169>
   1769c:	nop    DWORD PTR [rax+0x0]
   176a0:	mov    rdi,QWORD PTR [rip+0x4fbb1]        # 67258 <warn>
   176a7:	lea    rcx,[rip+0xcd52]        # 24400 <__func__.7518>
   176ae:	mov    esi,0x1
   176b3:	lea    rdx,[rip+0x73d4]        # 1ea8e <_IO_stdin_used+0xa8e>
   176ba:	call   5270 <__fprintf_chk@plt>
   176bf:	cmp    DWORD PTR [rip+0x13a1a],0x6        # 2b0e0 <opt+0x40>
   176c6:	jbe    17848 <vcpu_prev_update+0x608>
   176cc:	mov    rax,QWORD PTR [r12+0x1a8]
   176d4:	jmp    17289 <vcpu_prev_update+0x49>
   176d9:	nop    DWORD PTR [rax+0x0]
   176e0:	mov    rax,QWORD PTR [rbx+0x8]
   176e4:	mov    r8d,DWORD PTR [rbx]
   176e7:	lea    rdx,[rip+0xa6aa]        # 21d98 <_IO_stdin_used+0x3d98>
   176ee:	mov    ecx,DWORD PTR [rax+0x8]
   176f1:	jmp    17446 <vcpu_prev_update+0x206>
   176f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   17700:	mov    rax,QWORD PTR [rip+0x17ab9]        # 2f1c0 <P+0x20>
   17707:	mov    rcx,rbp
   1770a:	mov    rsi,QWORD PTR [rip+0x13997]        # 2b0a8 <opt+0x8>
   17711:	sub    rcx,rax
   17714:	cmp    rbp,rax
   17717:	ja     177d0 <vcpu_prev_update+0x590>
   1771d:	xor    r9d,r9d
   17720:	xor    r8d,r8d
   17723:	mov    rax,rcx
   17726:	sub    rax,QWORD PTR [rbx+0x20]
   1772a:	xor    edx,edx
   1772c:	mov    edi,0x1
   17731:	movabs rcx,0x44b82fa09b5a53
   1773b:	shl    rax,0xa
   1773f:	div    rsi
   17742:	mov    rdx,rax
   17745:	mov    rsi,rax
   17748:	shr    rdx,0x9
   1774c:	mov    rax,rdx
   1774f:	mul    rcx
   17752:	mov    rcx,rdx
   17755:	mov    edx,DWORD PTR [r12+0x8]
   1775a:	shr    rcx,0xb
   1775e:	imul   eax,ecx,0x3b9aca00
   17764:	sub    esi,eax
   17766:	xor    eax,eax
   17768:	push   rsi
   17769:	lea    rsi,[rip+0x6e13]        # 1e583 <_IO_stdin_used+0x583>
   17770:	push   rcx
   17771:	mov    ecx,DWORD PTR [rbx]
   17773:	call   5200 <__printf_chk@plt>
   17778:	pop    rdx
   17779:	pop    rcx
   1777a:	jmp    175b1 <vcpu_prev_update+0x371>
   1777f:	nop
   17780:	movsxd rdx,DWORD PTR [rbx+0x1c]
   17784:	mov    rsi,rbp
   17787:	sub    rsi,QWORD PTR [rbx+0x20]
   1778b:	lea    rax,[rdx*8+0x0]
   17793:	sub    rax,rdx
   17796:	lea    rdi,[rbx+rax*8+0x2d8]
   1779e:	add    DWORD PTR [rdi],0x1
   177a1:	test   rsi,rsi
   177a4:	je     175e7 <vcpu_prev_update+0x3a7>
   177aa:	call   56e0 <update_cycles.part.5>
   177af:	jmp    175e7 <vcpu_prev_update+0x3a7>
   177b4:	nop    DWORD PTR [rax+0x0]
   177b8:	mov    rax,QWORD PTR [r14+0x18]
   177bc:	mov    QWORD PTR [rax+rcx*8],r15
   177c0:	mov    eax,DWORD PTR [r14+0x4]
   177c4:	jmp    17590 <vcpu_prev_update+0x350>
   177c9:	nop    DWORD PTR [rax+0x0]
   177d0:	movabs rdi,0x44b82fa09b5a53
   177da:	mov    rax,rcx
   177dd:	xor    edx,edx
   177df:	shl    rax,0xa
   177e3:	div    rsi
   177e6:	mov    rdx,rax
   177e9:	mov    r9,rax
   177ec:	shr    rdx,0x9
   177f0:	mov    rax,rdx
   177f3:	mul    rdi
   177f6:	shr    rdx,0xb
   177fa:	mov    r8d,edx
   177fd:	imul   edx,edx,0x3b9aca00
   17803:	sub    r9d,edx
   17806:	jmp    17723 <vcpu_prev_update+0x4e3>
   1780b:	nop    DWORD PTR [rax+rax*1+0x0]
   17810:	mov    r8d,DWORD PTR [r14+0x8]
   17814:	jmp    1754c <vcpu_prev_update+0x30c>
   17819:	mov    r8d,eax
   1781c:	jmp    17521 <vcpu_prev_update+0x2e1>
   17821:	mov    r8d,eax
   17824:	jmp    17559 <vcpu_prev_update+0x319>
   17829:	lea    rcx,[rip+0xcbf0]        # 24420 <__PRETTY_FUNCTION__.7516>
   17830:	mov    edx,0x1a68
   17835:	lea    rsi,[rip+0x688c]        # 1e0c8 <_IO_stdin_used+0xc8>
   1783c:	lea    rdi,[rip+0xa4b5]        # 21cf8 <_IO_stdin_used+0x3cf8>
   17843:	call   5110 <__assert_fail@plt>
   17848:	mov    edi,0x1
   1784d:	call   5250 <exit@plt>
   17852:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1785d:	nop    DWORD PTR [rax]

0000000000017860 <vcpu_next_update>:
   17860:	push   r15
   17862:	push   r14
   17864:	push   r13
   17866:	push   r12
   17868:	push   rbp
   17869:	mov    rbp,rdx
   1786c:	push   rbx
   1786d:	sub    rsp,0x8
   17871:	mov    rax,QWORD PTR [rsi+0x8]
   17875:	movsxd rdx,DWORD PTR [rsi]
   17878:	cmp    QWORD PTR [rax+rdx*8+0x10],rsi
   1787d:	jne    17e83 <vcpu_next_update+0x623>
   17883:	mov    rax,QWORD PTR [rdi+0x1a8]
   1788a:	mov    r12,rdi
   1788d:	mov    rbx,rsi
   17890:	test   rax,rax
   17893:	je     178e6 <vcpu_next_update+0x86>
   17895:	mov    rdi,QWORD PTR [rip+0x4f9bc]        # 67258 <warn>
   1789c:	test   BYTE PTR [r12+0x1b0],0x4
   178a5:	jne    17af8 <vcpu_next_update+0x298>
   178ab:	lea    rcx,[rip+0xcb0e]        # 243c0 <__func__.7525>
   178b2:	lea    rdx,[rip+0xa52f]        # 21de8 <_IO_stdin_used+0x3de8>
   178b9:	mov    esi,0x1
   178be:	xor    eax,eax
   178c0:	call   5270 <__fprintf_chk@plt>
   178c5:	mov    rdi,QWORD PTR [r12+0x1a8]
   178cd:	mov    rdx,rbp
   178d0:	mov    esi,0x4
   178d5:	call   11480 <runstate_update>
   178da:	mov    QWORD PTR [r12+0x1a8],0x0
   178e6:	movzx  eax,BYTE PTR [rbx+0x10]
   178ea:	test   al,0x1
   178ec:	jne    17a60 <vcpu_next_update+0x200>
   178f2:	mov    edx,DWORD PTR [rip+0x137dc]        # 2b0d4 <opt+0x34>
   178f8:	or     eax,0x1
   178fb:	mov    BYTE PTR [rbx+0x10],al
   178fe:	mov    DWORD PTR [rbx+0x14],edx
   17901:	mov    QWORD PTR [rbx+0x58],rbp
   17905:	mov    r13,QWORD PTR [rbx+0x8]
   17909:	test   BYTE PTR [rip+0x13790],0x40        # 2b0a0 <opt>
   17910:	je     179c4 <vcpu_next_update+0x164>
   17916:	mov    rax,QWORD PTR [rip+0x178a3]        # 2f1c0 <P+0x20>
   1791d:	cmp    rbp,rax
   17920:	jbe    17b50 <vcpu_next_update+0x2f0>
   17926:	movabs rcx,0x44b82fa09b5a53
   17930:	mov    r14,rbp
   17933:	xor    edx,edx
   17935:	sub    r14,rax
   17938:	shl    r14,0xa
   1793c:	mov    rax,r14
   1793f:	div    QWORD PTR [rip+0x13762]        # 2b0a8 <opt+0x8>
   17946:	mov    rdx,rax
   17949:	mov    r14,rax
   1794c:	shr    rdx,0x9
   17950:	mov    rax,rdx
   17953:	mul    rcx
   17956:	shr    rdx,0xb
   1795a:	mov    r15d,edx
   1795d:	imul   edx,edx,0x3b9aca00
   17963:	sub    r14d,edx
   17966:	movsxd rcx,DWORD PTR [rbx+0x18]
   1796a:	sub    rsp,0x8
   1796e:	mov    edx,DWORD PTR [r13+0x8]
   17972:	mov    r9d,r14d
   17975:	lea    rax,[rip+0x13704]        # 2b080 <runstate_graph>
   1797c:	mov    r8d,r15d
   1797f:	mov    edi,0x1
   17984:	mov    eax,DWORD PTR [rax+rcx*4]
   17987:	lea    rsi,[rip+0x6be3]        # 1e571 <_IO_stdin_used+0x571>
   1798e:	push   rax
   1798f:	mov    ecx,DWORD PTR [rbx]
   17991:	xor    eax,eax
   17993:	call   5200 <__printf_chk@plt>
   17998:	mov    edx,DWORD PTR [r13+0x8]
   1799c:	mov    r9d,r14d
   1799f:	mov    r8d,r15d
   179a2:	mov    eax,DWORD PTR [rip+0x136d8]        # 2b080 <runstate_graph>
   179a8:	lea    rsi,[rip+0x6bc2]        # 1e571 <_IO_stdin_used+0x571>
   179af:	mov    edi,0x1
   179b4:	mov    DWORD PTR [rsp],eax
   179b7:	mov    ecx,DWORD PTR [rbx]
   179b9:	xor    eax,eax
   179bb:	call   5200 <__printf_chk@plt>
   179c0:	pop    r14
   179c2:	pop    r15
   179c4:	mov    rax,QWORD PTR [rbx+0x20]
   179c8:	test   rax,rax
   179cb:	je     179d6 <vcpu_next_update+0x176>
   179cd:	cmp    rbp,rax
   179d0:	ja     17c90 <vcpu_next_update+0x430>
   179d6:	mov    QWORD PTR [rbx+0x18],0x0
   179de:	mov    QWORD PTR [rbx+0x20],rbp
   179e2:	mov    rax,QWORD PTR [r13+0x818]
   179e9:	cmp    rbp,rax
   179ec:	jbe    179f7 <vcpu_next_update+0x197>
   179ee:	test   rax,rax
   179f1:	jne    17c60 <vcpu_next_update+0x400>
   179f7:	mov    rdi,r13
   179fa:	call   11250 <domain_runstate>
   179ff:	mov    QWORD PTR [r13+0x818],rbp
   17a06:	mov    DWORD PTR [r13+0x814],eax
   17a0d:	test   BYTE PTR [rip+0x1368d],0x1        # 2b0a1 <opt+0x1>
   17a14:	je     17a2c <vcpu_next_update+0x1cc>
   17a16:	mov    rax,QWORD PTR [rbx+0x8]
   17a1a:	mov    esi,DWORD PTR [rax+0x8]
   17a1d:	lea    eax,[rsi-0x7fff]
   17a23:	cmp    eax,0x1
   17a26:	ja     17b60 <vcpu_next_update+0x300>
   17a2c:	mov    QWORD PTR [rbx+0x50],r12
   17a30:	mov    rdi,r12
   17a33:	mov    QWORD PTR [r12+0x1a8],rbx
   17a3b:	call   171c0 <pcpu_string_draw>
   17a40:	mov    QWORD PTR [r12+0x2d0],rbp
   17a48:	or     BYTE PTR [r12+0x1b0],0x4
   17a51:	add    rsp,0x8
   17a55:	pop    rbx
   17a56:	pop    rbp
   17a57:	pop    r12
   17a59:	pop    r13
   17a5b:	pop    r14
   17a5d:	pop    r15
   17a5f:	ret    
   17a60:	mov    edx,DWORD PTR [rbx+0x18]
   17a63:	mov    rax,QWORD PTR [rbx+0x50]
   17a67:	test   edx,edx
   17a69:	jne    17a7e <vcpu_next_update+0x21e>
   17a6b:	mov    rdx,QWORD PTR [rbx+0x8]
   17a6f:	mov    ecx,DWORD PTR [rdx+0x8]
   17a72:	cmp    ecx,0x8000
   17a78:	jne    17be0 <vcpu_next_update+0x380>
   17a7e:	cmp    r12,rax
   17a81:	je     17905 <vcpu_next_update+0xa5>
   17a87:	mov    rax,QWORD PTR [rbx+0x58]
   17a8b:	test   rax,rax
   17a8e:	je     17901 <vcpu_next_update+0xa1>
   17a94:	mov    rsi,rbp
   17a97:	add    DWORD PTR [rbx+0x3b8],0x1
   17a9e:	sub    rsi,rax
   17aa1:	je     17df0 <vcpu_next_update+0x590>
   17aa7:	lea    rdi,[rbx+0x3b8]
   17aae:	call   56e0 <update_cycles.part.5>
   17ab3:	movsxd rdx,DWORD PTR [r12+0x4]
   17ab8:	mov    rsi,rbp
   17abb:	sub    rsi,QWORD PTR [rbx+0x58]
   17abf:	lea    rax,[rdx*8+0x0]
   17ac7:	sub    rax,rdx
   17aca:	shl    rax,0x3
   17ace:	lea    rdi,[rbx+rax*1+0x3f0]
   17ad6:	add    DWORD PTR [rbx+rax*1+0x3f0],0x1
   17ade:	test   rsi,rsi
   17ae1:	je     17901 <vcpu_next_update+0xa1>
   17ae7:	call   56e0 <update_cycles.part.5>
   17aec:	jmp    17901 <vcpu_next_update+0xa1>
   17af1:	nop    DWORD PTR [rax+0x0]
   17af8:	mov    rdx,QWORD PTR [rax+0x8]
   17afc:	movsxd rcx,DWORD PTR [rax+0x18]
   17b00:	sub    rsp,0x8
   17b04:	mov    esi,0x1
   17b09:	mov    r8d,DWORD PTR [rdx+0x8]
   17b0d:	lea    rdx,[rip+0x1392c]        # 2b440 <runstate_name>
   17b14:	push   QWORD PTR [rdx+rcx*8]
   17b17:	mov    r9d,DWORD PTR [rax]
   17b1a:	xor    eax,eax
   17b1c:	lea    rcx,[rip+0xc89d]        # 243c0 <__func__.7525>
   17b23:	lea    rdx,[rip+0xa2fe]        # 21e28 <_IO_stdin_used+0x3e28>
   17b2a:	call   5270 <__fprintf_chk@plt>
   17b2f:	cmp    DWORD PTR [rip+0x135aa],0x6        # 2b0e0 <opt+0x40>
   17b36:	pop    rcx
   17b37:	pop    rsi
   17b38:	ja     178e6 <vcpu_next_update+0x86>
   17b3e:	mov    edi,0x1
   17b43:	call   5250 <exit@plt>
   17b48:	nop    DWORD PTR [rax+rax*1+0x0]
   17b50:	xor    r14d,r14d
   17b53:	xor    r15d,r15d
   17b56:	jmp    17966 <vcpu_next_update+0x106>
   17b5b:	nop    DWORD PTR [rax+rax*1+0x0]
   17b60:	mov    rax,QWORD PTR [rip+0x17659]        # 2f1c0 <P+0x20>
   17b67:	cmp    rbp,rax
   17b6a:	ja     17c18 <vcpu_next_update+0x3b8>
   17b70:	xor    r13d,r13d
   17b73:	xor    r14d,r14d
   17b76:	mov    rax,QWORD PTR [rbx+0x50]
   17b7a:	mov    ecx,DWORD PTR [rbx]
   17b7c:	test   rax,rax
   17b7f:	je     17bb0 <vcpu_next_update+0x350>
   17b81:	mov    eax,DWORD PTR [rax+0x4]
   17b84:	sub    rsp,0x8
   17b88:	mov    r8d,r14d
   17b8b:	mov    edx,esi
   17b8d:	mov    edi,0x1
   17b92:	lea    rsi,[rip+0x69d8]        # 1e571 <_IO_stdin_used+0x571>
   17b99:	mov    r9d,r13d
   17b9c:	push   rax
   17b9d:	xor    eax,eax
   17b9f:	call   5200 <__printf_chk@plt>
   17ba4:	mov    rax,QWORD PTR [rbx+0x8]
   17ba8:	mov    ecx,DWORD PTR [rbx]
   17baa:	pop    rdi
   17bab:	pop    r8
   17bad:	mov    esi,DWORD PTR [rax+0x8]
   17bb0:	mov    eax,DWORD PTR [r12+0x4]
   17bb5:	sub    rsp,0x8
   17bb9:	mov    edx,esi
   17bbb:	mov    r9d,r13d
   17bbe:	mov    r8d,r14d
   17bc1:	lea    rsi,[rip+0x69a9]        # 1e571 <_IO_stdin_used+0x571>
   17bc8:	mov    edi,0x1
   17bcd:	push   rax
   17bce:	xor    eax,eax
   17bd0:	call   5200 <__printf_chk@plt>
   17bd5:	pop    rax
   17bd6:	pop    rdx
   17bd7:	jmp    17a2c <vcpu_next_update+0x1cc>
   17bdc:	nop    DWORD PTR [rax+0x0]
   17be0:	mov    r9d,DWORD PTR [rax+0x4]
   17be4:	mov    r8d,DWORD PTR [rbx]
   17be7:	xor    eax,eax
   17be9:	lea    rdx,[rip+0xa270]        # 21e60 <_IO_stdin_used+0x3e60>
   17bf0:	mov    rdi,QWORD PTR [rip+0x4f661]        # 67258 <warn>
   17bf7:	mov    esi,0x1
   17bfc:	call   5270 <__fprintf_chk@plt>
   17c01:	mov    QWORD PTR [rbx+0x20],0x0
   17c09:	mov    rax,QWORD PTR [rbx+0x50]
   17c0d:	jmp    17a7e <vcpu_next_update+0x21e>
   17c12:	nop    WORD PTR [rax+rax*1+0x0]
   17c18:	movabs rcx,0x44b82fa09b5a53
   17c22:	mov    r13,rbp
   17c25:	xor    edx,edx
   17c27:	sub    r13,rax
   17c2a:	shl    r13,0xa
   17c2e:	mov    rax,r13
   17c31:	div    QWORD PTR [rip+0x13470]        # 2b0a8 <opt+0x8>
   17c38:	mov    rdx,rax
   17c3b:	mov    r13,rax
   17c3e:	shr    rdx,0x9
   17c42:	mov    rax,rdx
   17c45:	mul    rcx
   17c48:	shr    rdx,0xb
   17c4c:	mov    r14d,edx
   17c4f:	imul   edx,edx,0x3b9aca00
   17c55:	sub    r13d,edx
   17c58:	jmp    17b76 <vcpu_next_update+0x316>
   17c5d:	nop    DWORD PTR [rax]
   17c60:	movsxd rcx,DWORD PTR [r13+0x814]
   17c67:	mov    rsi,rbp
   17c6a:	sub    rsi,rax
   17c6d:	lea    rdx,[rcx*8+0x0]
   17c75:	sub    rdx,rcx
   17c78:	lea    rdi,[r13+rdx*8+0x858]
   17c80:	add    DWORD PTR [rdi],0x1
   17c83:	call   56e0 <update_cycles.part.5>
   17c88:	jmp    179f7 <vcpu_next_update+0x197>
   17c8d:	nop    DWORD PTR [rax]
   17c90:	movsxd rcx,DWORD PTR [rbx+0x18]
   17c94:	mov    rsi,rbp
   17c97:	sub    rsi,rax
   17c9a:	lea    rdx,[rcx*8+0x0]
   17ca2:	sub    rdx,rcx
   17ca5:	lea    rdi,[rbx+rdx*8+0x150]
   17cad:	add    DWORD PTR [rdi],0x1
   17cb0:	call   56e0 <update_cycles.part.5>
   17cb5:	cmp    BYTE PTR [rip+0x133e4],0x0        # 2b0a0 <opt>
   17cbc:	js     17d70 <vcpu_next_update+0x510>
   17cc2:	mov    eax,DWORD PTR [rbx+0x18]
   17cc5:	test   eax,eax
   17cc7:	jne    17cef <vcpu_next_update+0x48f>
   17cc9:	mov    rdi,QWORD PTR [rbx+0x8]
   17ccd:	mov    rsi,rbp
   17cd0:	sub    rsi,QWORD PTR [rbx+0x20]
   17cd4:	add    DWORD PTR [rdi+0x820],0x1
   17cdb:	test   rsi,rsi
   17cde:	je     17cec <vcpu_next_update+0x48c>
   17ce0:	add    rdi,0x820
   17ce7:	call   56e0 <update_cycles.part.5>
   17cec:	mov    eax,DWORD PTR [rbx+0x18]
   17cef:	cmp    eax,0x1
   17cf2:	je     17e10 <vcpu_next_update+0x5b0>
   17cf8:	mov    rax,QWORD PTR [rbx+0x8]
   17cfc:	mov    r9d,DWORD PTR [rax+0x8]
   17d00:	test   r9d,r9d
   17d03:	jne    179d6 <vcpu_next_update+0x176>
   17d09:	lea    rax,[rip+0x174d0]        # 2f1e0 <P+0x40>
   17d10:	lea    rsi,[rax+0x38000]
   17d17:	nop    WORD PTR [rax+rax*1+0x0]
   17d20:	test   BYTE PTR [rax],0x1
   17d23:	je     17d58 <vcpu_next_update+0x4f8>
   17d25:	movsxd rcx,DWORD PTR [rbx+0x18]
   17d29:	mov    rdx,QWORD PTR [rax+0x1c0]
   17d30:	mov    rdi,rbp
   17d33:	cmp    QWORD PTR [rbx+0x20],rdx
   17d37:	cmovae rdx,QWORD PTR [rbx+0x20]
   17d3c:	sub    rdi,rdx
   17d3f:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   17d47:	mov    DWORD PTR [rax+0x208],0x0
   17d51:	mov    QWORD PTR [rax+0x1c8],rbp
   17d58:	add    rax,0x380
   17d5e:	cmp    rsi,rax
   17d61:	jne    17d20 <vcpu_next_update+0x4c0>
   17d63:	jmp    179d6 <vcpu_next_update+0x176>
   17d68:	nop    DWORD PTR [rax+rax*1+0x0]
   17d70:	mov    rax,QWORD PTR [rip+0x17449]        # 2f1c0 <P+0x20>
   17d77:	mov    rcx,rbp
   17d7a:	mov    rsi,QWORD PTR [rip+0x13327]        # 2b0a8 <opt+0x8>
   17d81:	sub    rcx,rax
   17d84:	cmp    rbp,rax
   17d87:	ja     17e48 <vcpu_next_update+0x5e8>
   17d8d:	xor    r9d,r9d
   17d90:	xor    r8d,r8d
   17d93:	mov    rax,rcx
   17d96:	sub    rax,QWORD PTR [rbx+0x20]
   17d9a:	xor    edx,edx
   17d9c:	mov    edi,0x1
   17da1:	movabs rcx,0x44b82fa09b5a53
   17dab:	shl    rax,0xa
   17daf:	div    rsi
   17db2:	mov    rdx,rax
   17db5:	mov    rsi,rax
   17db8:	shr    rdx,0x9
   17dbc:	mov    rax,rdx
   17dbf:	mul    rcx
   17dc2:	mov    rcx,rdx
   17dc5:	mov    edx,DWORD PTR [r13+0x8]
   17dc9:	shr    rcx,0xb
   17dcd:	imul   eax,ecx,0x3b9aca00
   17dd3:	sub    esi,eax
   17dd5:	xor    eax,eax
   17dd7:	push   rsi
   17dd8:	lea    rsi,[rip+0x67a4]        # 1e583 <_IO_stdin_used+0x583>
   17ddf:	push   rcx
   17de0:	mov    ecx,DWORD PTR [rbx]
   17de2:	call   5200 <__printf_chk@plt>
   17de7:	pop    r10
   17de9:	pop    r11
   17deb:	jmp    17cc2 <vcpu_next_update+0x462>
   17df0:	movsxd rdx,DWORD PTR [r12+0x4]
   17df5:	lea    rax,[rdx*8+0x0]
   17dfd:	sub    rax,rdx
   17e00:	add    DWORD PTR [rbx+rax*8+0x3f0],0x1
   17e08:	jmp    17901 <vcpu_next_update+0xa1>
   17e0d:	nop    DWORD PTR [rax]
   17e10:	movsxd rdx,DWORD PTR [rbx+0x1c]
   17e14:	mov    rsi,rbp
   17e17:	sub    rsi,QWORD PTR [rbx+0x20]
   17e1b:	lea    rax,[rdx*8+0x0]
   17e23:	sub    rax,rdx
   17e26:	lea    rdi,[rbx+rax*8+0x2d8]
   17e2e:	add    DWORD PTR [rdi],0x1
   17e31:	test   rsi,rsi
   17e34:	je     17cf8 <vcpu_next_update+0x498>
   17e3a:	call   56e0 <update_cycles.part.5>
   17e3f:	jmp    17cf8 <vcpu_next_update+0x498>
   17e44:	nop    DWORD PTR [rax+0x0]
   17e48:	movabs rdi,0x44b82fa09b5a53
   17e52:	mov    rax,rcx
   17e55:	xor    edx,edx
   17e57:	shl    rax,0xa
   17e5b:	div    rsi
   17e5e:	mov    rdx,rax
   17e61:	mov    r9,rax
   17e64:	shr    rdx,0x9
   17e68:	mov    rax,rdx
   17e6b:	mul    rdi
   17e6e:	shr    rdx,0xb
   17e72:	mov    r8d,edx
   17e75:	imul   edx,edx,0x3b9aca00
   17e7b:	sub    r9d,edx
   17e7e:	jmp    17d93 <vcpu_next_update+0x533>
   17e83:	lea    rcx,[rip+0xc556]        # 243e0 <__PRETTY_FUNCTION__.7524>
   17e8a:	mov    edx,0x1a94
   17e8f:	lea    rsi,[rip+0x6232]        # 1e0c8 <_IO_stdin_used+0xc8>
   17e96:	lea    rdi,[rip+0x9f23]        # 21dc0 <_IO_stdin_used+0x3dc0>
   17e9d:	call   5110 <__assert_fail@plt>
   17ea2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   17ead:	nop    DWORD PTR [rax]

0000000000017eb0 <sched_switch_process>:
   17eb0:	push   r12
   17eb2:	push   rbp
   17eb3:	push   rbx
   17eb4:	mov    rbx,rdi
   17eb7:	mov    rbp,QWORD PTR [rdi+0x50]
   17ebb:	test   BYTE PTR [rip+0x131df],0x40        # 2b0a1 <opt+0x1>
   17ec2:	jne    17f20 <sched_switch_process+0x70>
   17ec4:	mov    esi,DWORD PTR [rbp+0x4]
   17ec7:	cmp    esi,0x100
   17ecd:	ja     17f34 <sched_switch_process+0x84>
   17ecf:	mov    r8d,DWORD PTR [rbp+0xc]
   17ed3:	cmp    r8d,0x100
   17eda:	ja     17f50 <sched_switch_process+0xa0>
   17edc:	mov    edi,DWORD PTR [rbp+0x0]
   17edf:	call   12e70 <vcpu_find>
   17ee4:	mov    esi,DWORD PTR [rbp+0xc]
   17ee7:	mov    edi,DWORD PTR [rbp+0x8]
   17eea:	mov    r12,rax
   17eed:	call   12e70 <vcpu_find>
   17ef2:	mov    rdx,QWORD PTR [rbx+0x38]
   17ef6:	mov    rsi,r12
   17ef9:	mov    rdi,rbx
   17efc:	mov    ecx,0x5
   17f01:	mov    rbp,rax
   17f04:	call   17240 <vcpu_prev_update>
   17f09:	mov    rdx,QWORD PTR [rbx+0x38]
   17f0d:	mov    rsi,rbp
   17f10:	mov    rdi,rbx
   17f13:	pop    rbx
   17f14:	pop    rbp
   17f15:	pop    r12
   17f17:	jmp    17860 <vcpu_next_update>
   17f1c:	nop    DWORD PTR [rax+0x0]
   17f20:	lea    rdi,[rdi+0x30]
   17f24:	call   13180 <dump_sched_switch>
   17f29:	mov    esi,DWORD PTR [rbp+0x4]
   17f2c:	cmp    esi,0x100
   17f32:	jbe    17ecf <sched_switch_process+0x1f>
   17f34:	mov    r9d,0x100
   17f3a:	mov    r8d,esi
   17f3d:	lea    rcx,[rip+0xc43c]        # 24380 <__func__.7608>
   17f44:	lea    rdx,[rip+0x9f4d]        # 21e98 <_IO_stdin_used+0x3e98>
   17f4b:	jmp    17f64 <sched_switch_process+0xb4>
   17f4d:	nop    DWORD PTR [rax]
   17f50:	mov    r9d,0x100
   17f56:	lea    rcx,[rip+0xc423]        # 24380 <__func__.7608>
   17f5d:	lea    rdx,[rip+0x9f5c]        # 21ec0 <_IO_stdin_used+0x3ec0>
   17f64:	mov    rdi,QWORD PTR [rip+0x4f2ed]        # 67258 <warn>
   17f6b:	pop    rbx
   17f6c:	mov    esi,0x1
   17f71:	xor    eax,eax
   17f73:	pop    rbp
   17f74:	pop    r12
   17f76:	jmp    5270 <__fprintf_chk@plt>
   17f7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017f80 <vcpu_start>:
   17f80:	push   r15
   17f82:	push   r14
   17f84:	push   r13
   17f86:	push   r12
   17f88:	push   rbp
   17f89:	push   rbx
   17f8a:	sub    rsp,0x18
   17f8e:	mov    rbx,QWORD PTR [rdi+0x1a8]
   17f95:	test   rbx,rbx
   17f98:	je     17fa7 <vcpu_start+0x27>
   17f9a:	mov    rax,QWORD PTR [rbx+0x8]
   17f9e:	cmp    DWORD PTR [rax+0x8],0x8000
   17fa5:	je     17fe0 <vcpu_start+0x60>
   17fa7:	mov    rcx,QWORD PTR [rip+0x16492]        # 2e440 <stderr@@GLIBC_2.2.5>
   17fae:	mov    edx,0x28
   17fb3:	mov    esi,0x1
   17fb8:	lea    rdi,[rip+0x9f29]        # 21ee8 <_IO_stdin_used+0x3ee8>
   17fbf:	call   5260 <fwrite@plt>
   17fc4:	cmp    DWORD PTR [rip+0x13115],0x4        # 2b0e0 <opt+0x40>
   17fcb:	jbe    18702 <vcpu_start+0x782>
   17fd1:	add    rsp,0x18
   17fd5:	pop    rbx
   17fd6:	pop    rbp
   17fd7:	pop    r12
   17fd9:	pop    r13
   17fdb:	pop    r14
   17fdd:	pop    r15
   17fdf:	ret    
   17fe0:	mov    r13,QWORD PTR [rdi+0x8]
   17fe4:	mov    r12,rdi
   17fe7:	mov    rbp,rsi
   17fea:	test   r13,r13
   17fed:	je     182b8 <vcpu_start+0x338>
   17ff3:	mov    r8,QWORD PTR [rbx+0x20]
   17ff7:	cmp    r8,r13
   17ffa:	jb     18033 <vcpu_start+0xb3>
   17ffc:	mov    rdi,QWORD PTR [rip+0x1643d]        # 2e440 <stderr@@GLIBC_2.2.5>
   18003:	xor    eax,eax
   18005:	mov    rcx,r13
   18008:	lea    rdx,[rip+0x9f09]        # 21f18 <_IO_stdin_used+0x3f18>
   1800f:	mov    esi,0x1
   18014:	call   5270 <__fprintf_chk@plt>
   18019:	cmp    DWORD PTR [rip+0x130c0],0x4        # 2b0e0 <opt+0x40>
   18020:	jbe    18702 <vcpu_start+0x782>
   18026:	mov    r13,QWORD PTR [r12+0x8]
   1802b:	mov    rbx,QWORD PTR [r12+0x1a8]
   18033:	mov    r14,QWORD PTR [rbx+0x8]
   18037:	test   BYTE PTR [rip+0x13062],0x40        # 2b0a0 <opt>
   1803e:	je     180fc <vcpu_start+0x17c>
   18044:	mov    rax,QWORD PTR [rip+0x17175]        # 2f1c0 <P+0x20>
   1804b:	cmp    rax,r13
   1804e:	jae    18308 <vcpu_start+0x388>
   18054:	movabs rcx,0x44b82fa09b5a53
   1805e:	mov    r15,r13
   18061:	xor    edx,edx
   18063:	sub    r15,rax
   18066:	shl    r15,0xa
   1806a:	mov    rax,r15
   1806d:	div    QWORD PTR [rip+0x13034]        # 2b0a8 <opt+0x8>
   18074:	mov    rdx,rax
   18077:	mov    r15,rax
   1807a:	shr    rdx,0x9
   1807e:	mov    rax,rdx
   18081:	mul    rcx
   18084:	shr    rdx,0xb
   18088:	mov    r10d,edx
   1808b:	imul   edx,edx,0x3b9aca00
   18091:	sub    r15d,edx
   18094:	movsxd rcx,DWORD PTR [rbx+0x18]
   18098:	sub    rsp,0x8
   1809c:	mov    edx,DWORD PTR [r14+0x8]
   180a0:	mov    r9d,r15d
   180a3:	lea    rax,[rip+0x12fd6]        # 2b080 <runstate_graph>
   180aa:	mov    r8d,r10d
   180ad:	mov    edi,0x1
   180b2:	mov    eax,DWORD PTR [rax+rcx*4]
   180b5:	lea    rsi,[rip+0x64b5]        # 1e571 <_IO_stdin_used+0x571>
   180bc:	push   rax
   180bd:	mov    ecx,DWORD PTR [rbx]
   180bf:	xor    eax,eax
   180c1:	mov    DWORD PTR [rsp+0x1c],r10d
   180c6:	call   5200 <__printf_chk@plt>
   180cb:	mov    eax,DWORD PTR [rip+0x12fc3]        # 2b094 <runstate_graph+0x14>
   180d1:	mov    r10d,DWORD PTR [rsp+0x1c]
   180d6:	mov    r9d,r15d
   180d9:	mov    edx,DWORD PTR [r14+0x8]
   180dd:	lea    rsi,[rip+0x648d]        # 1e571 <_IO_stdin_used+0x571>
   180e4:	mov    edi,0x1
   180e9:	mov    DWORD PTR [rsp],eax
   180ec:	mov    ecx,DWORD PTR [rbx]
   180ee:	mov    r8d,r10d
   180f1:	xor    eax,eax
   180f3:	call   5200 <__printf_chk@plt>
   180f8:	pop    r11
   180fa:	pop    r15
   180fc:	mov    rax,QWORD PTR [rbx+0x20]
   18100:	test   rax,rax
   18103:	je     1810e <vcpu_start+0x18e>
   18105:	cmp    rax,r13
   18108:	jb     18318 <vcpu_start+0x398>
   1810e:	mov    QWORD PTR [rbx+0x18],0x5
   18116:	mov    QWORD PTR [rbx+0x20],r13
   1811a:	mov    rax,QWORD PTR [r14+0x818]
   18121:	cmp    rax,r13
   18124:	jae    1812f <vcpu_start+0x1af>
   18126:	test   rax,rax
   18129:	jne    183f0 <vcpu_start+0x470>
   1812f:	mov    rdi,r14
   18132:	call   11250 <domain_runstate>
   18137:	mov    QWORD PTR [r14+0x818],r13
   1813e:	mov    esi,0x1
   18143:	mov    rdi,QWORD PTR [rip+0x4f10e]        # 67258 <warn>
   1814a:	mov    DWORD PTR [r14+0x814],eax
   18151:	mov    rax,QWORD PTR [rbp+0x8]
   18155:	lea    rdx,[rip+0x9dfc]        # 21f58 <_IO_stdin_used+0x3f58>
   1815c:	mov    r8d,DWORD PTR [rbp+0x0]
   18160:	mov    r9,QWORD PTR [r12+0x10]
   18165:	mov    ecx,DWORD PTR [rax+0x8]
   18168:	sub    r9,QWORD PTR [r12+0x8]
   1816d:	xor    eax,eax
   1816f:	call   5270 <__fprintf_chk@plt>
   18174:	mov    rbx,QWORD PTR [r12+0x8]
   18179:	mov    r13,QWORD PTR [rbp+0x8]
   1817d:	test   BYTE PTR [rip+0x12f1c],0x40        # 2b0a0 <opt>
   18184:	je     18238 <vcpu_start+0x2b8>
   1818a:	mov    rax,QWORD PTR [rip+0x1702f]        # 2f1c0 <P+0x20>
   18191:	cmp    rbx,rax
   18194:	jbe    182f8 <vcpu_start+0x378>
   1819a:	movabs rcx,0x44b82fa09b5a53
   181a4:	mov    r14,rbx
   181a7:	xor    edx,edx
   181a9:	sub    r14,rax
   181ac:	shl    r14,0xa
   181b0:	mov    rax,r14
   181b3:	div    QWORD PTR [rip+0x12eee]        # 2b0a8 <opt+0x8>
   181ba:	mov    rdx,rax
   181bd:	mov    r14,rax
   181c0:	shr    rdx,0x9
   181c4:	mov    rax,rdx
   181c7:	mul    rcx
   181ca:	shr    rdx,0xb
   181ce:	mov    r15d,edx
   181d1:	imul   edx,edx,0x3b9aca00
   181d7:	sub    r14d,edx
   181da:	movsxd rcx,DWORD PTR [rbp+0x18]
   181de:	sub    rsp,0x8
   181e2:	mov    edx,DWORD PTR [r13+0x8]
   181e6:	mov    r9d,r14d
   181e9:	lea    rax,[rip+0x12e90]        # 2b080 <runstate_graph>
   181f0:	mov    r8d,r15d
   181f3:	mov    edi,0x1
   181f8:	mov    eax,DWORD PTR [rax+rcx*4]
   181fb:	lea    rsi,[rip+0x636f]        # 1e571 <_IO_stdin_used+0x571>
   18202:	push   rax
   18203:	mov    ecx,DWORD PTR [rbp+0x0]
   18206:	xor    eax,eax
   18208:	call   5200 <__printf_chk@plt>
   1820d:	mov    edx,DWORD PTR [r13+0x8]
   18211:	mov    r9d,r14d
   18214:	mov    r8d,r15d
   18217:	mov    eax,DWORD PTR [rip+0x12e63]        # 2b080 <runstate_graph>
   1821d:	lea    rsi,[rip+0x634d]        # 1e571 <_IO_stdin_used+0x571>
   18224:	mov    edi,0x1
   18229:	mov    DWORD PTR [rsp],eax
   1822c:	mov    ecx,DWORD PTR [rbp+0x0]
   1822f:	xor    eax,eax
   18231:	call   5200 <__printf_chk@plt>
   18236:	pop    rsi
   18237:	pop    rdi
   18238:	mov    rax,QWORD PTR [rbp+0x20]
   1823c:	test   rax,rax
   1823f:	je     1824a <vcpu_start+0x2ca>
   18241:	cmp    rbx,rax
   18244:	ja     18420 <vcpu_start+0x4a0>
   1824a:	mov    QWORD PTR [rbp+0x18],0x0
   18252:	mov    QWORD PTR [rbp+0x20],rbx
   18256:	mov    rax,QWORD PTR [r13+0x818]
   1825d:	cmp    rbx,rax
   18260:	jbe    1826b <vcpu_start+0x2eb>
   18262:	test   rax,rax
   18265:	jne    184f0 <vcpu_start+0x570>
   1826b:	mov    rdi,r13
   1826e:	call   11250 <domain_runstate>
   18273:	mov    QWORD PTR [r13+0x818],rbx
   1827a:	mov    rdi,r12
   1827d:	mov    DWORD PTR [r13+0x814],eax
   18284:	mov    rax,QWORD PTR [r12+0x8]
   18289:	mov    QWORD PTR [r12+0x1a8],rbp
   18291:	mov    QWORD PTR [r12+0x2d0],rax
   18299:	call   171c0 <pcpu_string_draw>
   1829e:	mov    QWORD PTR [rbp+0x50],r12
   182a2:	add    rsp,0x18
   182a6:	pop    rbx
   182a7:	pop    rbp
   182a8:	pop    r12
   182aa:	pop    r13
   182ac:	pop    r14
   182ae:	pop    r15
   182b0:	ret    
   182b1:	nop    DWORD PTR [rax+0x0]
   182b8:	mov    ecx,DWORD PTR [rdi+0x4]
   182bb:	mov    rdi,QWORD PTR [rip+0x1617e]        # 2e440 <stderr@@GLIBC_2.2.5>
   182c2:	xor    eax,eax
   182c4:	lea    rdx,[rip+0x67e0]        # 1eaab <_IO_stdin_used+0xaab>
   182cb:	mov    esi,0x1
   182d0:	call   5270 <__fprintf_chk@plt>
   182d5:	cmp    DWORD PTR [rip+0x12e04],0x4        # 2b0e0 <opt+0x40>
   182dc:	jbe    18702 <vcpu_start+0x782>
   182e2:	mov    r13,QWORD PTR [r12+0x8]
   182e7:	mov    rbx,QWORD PTR [r12+0x1a8]
   182ef:	jmp    17ff3 <vcpu_start+0x73>
   182f4:	nop    DWORD PTR [rax+0x0]
   182f8:	xor    r14d,r14d
   182fb:	xor    r15d,r15d
   182fe:	jmp    181da <vcpu_start+0x25a>
   18303:	nop    DWORD PTR [rax+rax*1+0x0]
   18308:	xor    r15d,r15d
   1830b:	xor    r10d,r10d
   1830e:	jmp    18094 <vcpu_start+0x114>
   18313:	nop    DWORD PTR [rax+rax*1+0x0]
   18318:	movsxd rcx,DWORD PTR [rbx+0x18]
   1831c:	mov    rsi,r13
   1831f:	sub    rsi,rax
   18322:	lea    rdx,[rcx*8+0x0]
   1832a:	sub    rdx,rcx
   1832d:	lea    rdi,[rbx+rdx*8+0x150]
   18335:	add    DWORD PTR [rdi],0x1
   18338:	call   56e0 <update_cycles.part.5>
   1833d:	cmp    BYTE PTR [rip+0x12d5c],0x0        # 2b0a0 <opt>
   18344:	js     185d0 <vcpu_start+0x650>
   1834a:	mov    eax,DWORD PTR [rbx+0x18]
   1834d:	test   eax,eax
   1834f:	jne    18377 <vcpu_start+0x3f7>
   18351:	mov    rax,QWORD PTR [rbx+0x8]
   18355:	mov    rsi,r13
   18358:	sub    rsi,QWORD PTR [rbx+0x20]
   1835c:	add    DWORD PTR [rax+0x820],0x1
   18363:	test   rsi,rsi
   18366:	je     18374 <vcpu_start+0x3f4>
   18368:	lea    rdi,[rax+0x820]
   1836f:	call   56e0 <update_cycles.part.5>
   18374:	mov    eax,DWORD PTR [rbx+0x18]
   18377:	cmp    eax,0x1
   1837a:	je     186b8 <vcpu_start+0x738>
   18380:	mov    rax,QWORD PTR [rbx+0x8]
   18384:	mov    r8d,DWORD PTR [rax+0x8]
   18388:	test   r8d,r8d
   1838b:	jne    1810e <vcpu_start+0x18e>
   18391:	lea    rax,[rip+0x16e48]        # 2f1e0 <P+0x40>
   18398:	lea    rsi,[rax+0x38000]
   1839f:	nop
   183a0:	test   BYTE PTR [rax],0x1
   183a3:	je     183d8 <vcpu_start+0x458>
   183a5:	movsxd rcx,DWORD PTR [rbx+0x18]
   183a9:	mov    rdx,QWORD PTR [rax+0x1c0]
   183b0:	mov    rdi,r13
   183b3:	cmp    QWORD PTR [rbx+0x20],rdx
   183b7:	cmovae rdx,QWORD PTR [rbx+0x20]
   183bc:	sub    rdi,rdx
   183bf:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   183c7:	mov    DWORD PTR [rax+0x208],0x5
   183d1:	mov    QWORD PTR [rax+0x1c8],r13
   183d8:	add    rax,0x380
   183de:	cmp    rsi,rax
   183e1:	jne    183a0 <vcpu_start+0x420>
   183e3:	jmp    1810e <vcpu_start+0x18e>
   183e8:	nop    DWORD PTR [rax+rax*1+0x0]
   183f0:	movsxd rcx,DWORD PTR [r14+0x814]
   183f7:	mov    rsi,r13
   183fa:	sub    rsi,rax
   183fd:	lea    rdx,[rcx*8+0x0]
   18405:	sub    rdx,rcx
   18408:	lea    rdi,[r14+rdx*8+0x858]
   18410:	add    DWORD PTR [rdi],0x1
   18413:	call   56e0 <update_cycles.part.5>
   18418:	jmp    1812f <vcpu_start+0x1af>
   1841d:	nop    DWORD PTR [rax]
   18420:	movsxd rcx,DWORD PTR [rbp+0x18]
   18424:	mov    rsi,rbx
   18427:	sub    rsi,rax
   1842a:	lea    rdx,[rcx*8+0x0]
   18432:	sub    rdx,rcx
   18435:	lea    rdi,[rbp+rdx*8+0x150]
   1843d:	add    DWORD PTR [rdi],0x1
   18440:	call   56e0 <update_cycles.part.5>
   18445:	cmp    BYTE PTR [rip+0x12c54],0x0        # 2b0a0 <opt>
   1844c:	js     18520 <vcpu_start+0x5a0>
   18452:	mov    eax,DWORD PTR [rbp+0x18]
   18455:	test   eax,eax
   18457:	jne    1847f <vcpu_start+0x4ff>
   18459:	mov    rax,QWORD PTR [rbp+0x8]
   1845d:	mov    rsi,rbx
   18460:	sub    rsi,QWORD PTR [rbp+0x20]
   18464:	add    DWORD PTR [rax+0x820],0x1
   1846b:	test   rsi,rsi
   1846e:	je     1847c <vcpu_start+0x4fc>
   18470:	lea    rdi,[rax+0x820]
   18477:	call   56e0 <update_cycles.part.5>
   1847c:	mov    eax,DWORD PTR [rbp+0x18]
   1847f:	cmp    eax,0x1
   18482:	je     18680 <vcpu_start+0x700>
   18488:	mov    rax,QWORD PTR [rbp+0x8]
   1848c:	mov    eax,DWORD PTR [rax+0x8]
   1848f:	test   eax,eax
   18491:	jne    1824a <vcpu_start+0x2ca>
   18497:	lea    rax,[rip+0x16d42]        # 2f1e0 <P+0x40>
   1849e:	lea    rsi,[rax+0x38000]
   184a5:	nop    DWORD PTR [rax]
   184a8:	test   BYTE PTR [rax],0x1
   184ab:	je     184e0 <vcpu_start+0x560>
   184ad:	movsxd rcx,DWORD PTR [rbp+0x18]
   184b1:	mov    rdx,QWORD PTR [rax+0x1c0]
   184b8:	mov    rdi,rbx
   184bb:	cmp    QWORD PTR [rbp+0x20],rdx
   184bf:	cmovae rdx,QWORD PTR [rbp+0x20]
   184c4:	sub    rdi,rdx
   184c7:	add    QWORD PTR [rax+rcx*8+0x1d0],rdi
   184cf:	mov    DWORD PTR [rax+0x208],0x0
   184d9:	mov    QWORD PTR [rax+0x1c8],rbx
   184e0:	add    rax,0x380
   184e6:	cmp    rsi,rax
   184e9:	jne    184a8 <vcpu_start+0x528>
   184eb:	jmp    1824a <vcpu_start+0x2ca>
   184f0:	movsxd rcx,DWORD PTR [r13+0x814]
   184f7:	mov    rsi,rbx
   184fa:	sub    rsi,rax
   184fd:	lea    rdx,[rcx*8+0x0]
   18505:	sub    rdx,rcx
   18508:	lea    rdi,[r13+rdx*8+0x858]
   18510:	add    DWORD PTR [rdi],0x1
   18513:	call   56e0 <update_cycles.part.5>
   18518:	jmp    1826b <vcpu_start+0x2eb>
   1851d:	nop    DWORD PTR [rax]
   18520:	mov    rsi,QWORD PTR [rip+0x16c99]        # 2f1c0 <P+0x20>
   18527:	mov    rcx,QWORD PTR [rip+0x12b7a]        # 2b0a8 <opt+0x8>
   1852e:	cmp    rbx,rsi
   18531:	jbe    186ec <vcpu_start+0x76c>
   18537:	movabs rdi,0x44b82fa09b5a53
   18541:	mov    rax,rbx
   18544:	xor    edx,edx
   18546:	sub    rax,rsi
   18549:	shl    rax,0xa
   1854d:	div    rcx
   18550:	mov    rdx,rax
   18553:	mov    r9,rax
   18556:	shr    rdx,0x9
   1855a:	mov    rax,rdx
   1855d:	mul    rdi
   18560:	shr    rdx,0xb
   18564:	mov    r8d,edx
   18567:	imul   edx,edx,0x3b9aca00
   1856d:	sub    r9d,edx
   18570:	mov    rax,rbx
   18573:	sub    rax,QWORD PTR [rbp+0x20]
   18577:	xor    edx,edx
   18579:	mov    edi,0x1
   1857e:	sub    rax,rsi
   18581:	shl    rax,0xa
   18585:	div    rcx
   18588:	movabs rcx,0x44b82fa09b5a53
   18592:	mov    rdx,rax
   18595:	mov    rsi,rax
   18598:	shr    rdx,0x9
   1859c:	mov    rax,rdx
   1859f:	mul    rcx
   185a2:	mov    rcx,rdx
   185a5:	mov    edx,DWORD PTR [r13+0x8]
   185a9:	shr    rcx,0xb
   185ad:	imul   eax,ecx,0x3b9aca00
   185b3:	sub    esi,eax
   185b5:	xor    eax,eax
   185b7:	push   rsi
   185b8:	lea    rsi,[rip+0x5fc4]        # 1e583 <_IO_stdin_used+0x583>
   185bf:	push   rcx
   185c0:	mov    ecx,DWORD PTR [rbp+0x0]
   185c3:	call   5200 <__printf_chk@plt>
   185c8:	pop    rdx
   185c9:	pop    rcx
   185ca:	jmp    18452 <vcpu_start+0x4d2>
   185cf:	nop
   185d0:	mov    rax,QWORD PTR [rip+0x16be9]        # 2f1c0 <P+0x20>
   185d7:	mov    rcx,r13
   185da:	mov    rsi,QWORD PTR [rip+0x12ac7]        # 2b0a8 <opt+0x8>
   185e1:	sub    rcx,rax
   185e4:	cmp    rax,r13
   185e7:	jae    186f7 <vcpu_start+0x777>
   185ed:	movabs rdi,0x44b82fa09b5a53
   185f7:	mov    rax,rcx
   185fa:	xor    edx,edx
   185fc:	shl    rax,0xa
   18600:	div    rsi
   18603:	mov    rdx,rax
   18606:	mov    r9,rax
   18609:	shr    rdx,0x9
   1860d:	mov    rax,rdx
   18610:	mul    rdi
   18613:	shr    rdx,0xb
   18617:	mov    r8d,edx
   1861a:	imul   edx,edx,0x3b9aca00
   18620:	sub    r9d,edx
   18623:	mov    rax,rcx
   18626:	sub    rax,QWORD PTR [rbx+0x20]
   1862a:	xor    edx,edx
   1862c:	mov    edi,0x1
   18631:	movabs rcx,0x44b82fa09b5a53
   1863b:	shl    rax,0xa
   1863f:	div    rsi
   18642:	mov    rdx,rax
   18645:	mov    rsi,rax
   18648:	shr    rdx,0x9
   1864c:	mov    rax,rdx
   1864f:	mul    rcx
   18652:	mov    rcx,rdx
   18655:	mov    edx,DWORD PTR [r14+0x8]
   18659:	shr    rcx,0xb
   1865d:	imul   eax,ecx,0x3b9aca00
   18663:	sub    esi,eax
   18665:	xor    eax,eax
   18667:	push   rsi
   18668:	lea    rsi,[rip+0x5f14]        # 1e583 <_IO_stdin_used+0x583>
   1866f:	push   rcx
   18670:	mov    ecx,DWORD PTR [rbx]
   18672:	call   5200 <__printf_chk@plt>
   18677:	pop    r9
   18679:	pop    r10
   1867b:	jmp    1834a <vcpu_start+0x3ca>
   18680:	movsxd rdx,DWORD PTR [rbp+0x1c]
   18684:	mov    rsi,rbx
   18687:	sub    rsi,QWORD PTR [rbp+0x20]
   1868b:	lea    rax,[rdx*8+0x0]
   18693:	sub    rax,rdx
   18696:	lea    rdi,[rbp+rax*8+0x2d8]
   1869e:	add    DWORD PTR [rdi],0x1
   186a1:	test   rsi,rsi
   186a4:	je     18488 <vcpu_start+0x508>
   186aa:	call   56e0 <update_cycles.part.5>
   186af:	jmp    18488 <vcpu_start+0x508>
   186b4:	nop    DWORD PTR [rax+0x0]
   186b8:	movsxd rdx,DWORD PTR [rbx+0x1c]
   186bc:	mov    rsi,r13
   186bf:	sub    rsi,QWORD PTR [rbx+0x20]
   186c3:	lea    rax,[rdx*8+0x0]
   186cb:	sub    rax,rdx
   186ce:	lea    rdi,[rbx+rax*8+0x2d8]
   186d6:	add    DWORD PTR [rdi],0x1
   186d9:	test   rsi,rsi
   186dc:	je     18380 <vcpu_start+0x400>
   186e2:	call   56e0 <update_cycles.part.5>
   186e7:	jmp    18380 <vcpu_start+0x400>
   186ec:	xor    r9d,r9d
   186ef:	xor    r8d,r8d
   186f2:	jmp    18570 <vcpu_start+0x5f0>
   186f7:	xor    r9d,r9d
   186fa:	xor    r8d,r8d
   186fd:	jmp    18623 <vcpu_start+0x6a3>
   18702:	mov    edi,0x1
   18707:	call   5250 <exit@plt>
   1870c:	nop    DWORD PTR [rax+0x0]

0000000000018710 <sched_runstate_process>:
   18710:	push   r15
   18712:	push   r14
   18714:	push   r13
   18716:	push   r12
   18718:	mov    r12,rdi
   1871b:	push   rbp
   1871c:	push   rbx
   1871d:	sub    rsp,0x38
   18721:	mov    ebx,DWORD PTR [rdi+0x40]
   18724:	mov    r13,QWORD PTR [rdi+0x50]
   18728:	mov    ecx,ebx
   1872a:	and    ecx,0xf
   1872d:	cmp    cl,0x1
   18730:	je     18778 <sched_runstate_process+0x68>
   18732:	cmp    cl,0x2
   18735:	je     187d8 <sched_runstate_process+0xc8>
   1873b:	mov    rdi,QWORD PTR [rip+0x4eb16]        # 67258 <warn>
   18742:	xor    eax,eax
   18744:	movzx  ecx,cl
   18747:	lea    rdx,[rip+0x983a]        # 21f88 <_IO_stdin_used+0x3f88>
   1874e:	mov    esi,0x1
   18753:	call   5270 <__fprintf_chk@plt>
   18758:	cmp    DWORD PTR [rip+0x12981],0x3        # 2b0e0 <opt+0x40>
   1875f:	jbe    18b8b <sched_runstate_process+0x47b>
   18765:	add    rsp,0x38
   18769:	pop    rbx
   1876a:	pop    rbp
   1876b:	pop    r12
   1876d:	pop    r13
   1876f:	pop    r14
   18771:	pop    r15
   18773:	ret    
   18774:	nop    DWORD PTR [rax+0x0]
   18778:	mov    r14d,ebx
   1877b:	mov    eax,DWORD PTR [rdi+0x44]
   1877e:	movzx  esi,WORD PTR [r13+0x0]
   18783:	shr    ebx,0x8
   18786:	shr    r14b,0x4
   1878a:	and    ebx,0xf
   1878d:	mov    DWORD PTR [rsp+0x8],eax
   18791:	movzx  r14d,r14b
   18795:	mov    eax,esi
   18797:	test   BYTE PTR [rip+0x12903],0x40        # 2b0a1 <opt+0x1>
   1879e:	je     1884c <sched_runstate_process+0x13c>
   187a4:	lea    rax,[rip+0x12c95]        # 2b440 <runstate_name>
   187ab:	movsxd rdx,ebx
   187ae:	cmp    DWORD PTR [rsp+0x8],0x5
   187b3:	movzx  r8d,WORD PTR [r13+0x2]
   187b8:	mov    rdi,QWORD PTR [rax+rdx*8]
   187bc:	movsxd rdx,r14d
   187bf:	mov    rax,QWORD PTR [rax+rdx*8]
   187c3:	je     18c80 <sched_runstate_process+0x570>
   187c9:	xor    r15d,r15d
   187cc:	lea    rcx,[rip+0x62f3]        # 1eac6 <_IO_stdin_used+0xac6>
   187d3:	jmp    1881f <sched_runstate_process+0x10f>
   187d5:	nop    DWORD PTR [rax]
   187d8:	mov    eax,DWORD PTR [rdi+0x44]
   187db:	movzx  esi,WORD PTR [r13+0x0]
   187e0:	mov    DWORD PTR [rsp+0x8],eax
   187e4:	mov    eax,esi
   187e6:	test   BYTE PTR [rip+0x128b4],0x40        # 2b0a1 <opt+0x1>
   187ed:	je     188a8 <sched_runstate_process+0x198>
   187f3:	cmp    DWORD PTR [rsp+0x8],0x5
   187f8:	mov    rax,QWORD PTR [rip+0x12c41]        # 2b440 <runstate_name>
   187ff:	movzx  r8d,WORD PTR [r13+0x2]
   18804:	je     18c30 <sched_runstate_process+0x520>
   1880a:	mov    rdi,rax
   1880d:	xor    r14d,r14d
   18810:	xor    ebx,ebx
   18812:	mov    r15d,0x1
   18818:	lea    rcx,[rip+0x62b7]        # 1ead6 <_IO_stdin_used+0xad6>
   1881f:	push   rax
   18820:	mov    r9d,esi
   18823:	lea    rdx,[r12+0x58]
   18828:	lea    rsi,[rip+0x62b9]        # 1eae8 <_IO_stdin_used+0xae8>
   1882f:	push   rdi
   18830:	xor    eax,eax
   18832:	mov    edi,0x1
   18837:	call   5200 <__printf_chk@plt>
   1883c:	pop    r9
   1883e:	pop    r10
   18840:	movzx  esi,WORD PTR [r13+0x0]
   18845:	mov    eax,esi
   18847:	test   r15d,r15d
   1884a:	jne    188b3 <sched_runstate_process+0x1a3>
   1884c:	test   r14d,r14d
   1884f:	je     18a10 <sched_runstate_process+0x300>
   18855:	cmp    ebx,0x1
   18858:	jne    18864 <sched_runstate_process+0x154>
   1885a:	cmp    r14d,0x2
   1885e:	je     18a19 <sched_runstate_process+0x309>
   18864:	xor    r15d,r15d
   18867:	cmp    ax,0x100
   1886b:	jbe    188b9 <sched_runstate_process+0x1a9>
   1886d:	mov    rdi,QWORD PTR [rip+0x4e9e4]        # 67258 <warn>
   18874:	add    rsp,0x38
   18878:	mov    r8d,esi
   1887b:	xor    eax,eax
   1887d:	pop    rbx
   1887e:	mov    r9d,0x100
   18884:	pop    rbp
   18885:	mov    esi,0x1
   1888a:	pop    r12
   1888c:	lea    rcx,[rip+0xbb0d]        # 243a0 <__func__.7569>
   18893:	lea    rdx,[rip+0x6264]        # 1eafe <_IO_stdin_used+0xafe>
   1889a:	pop    r13
   1889c:	pop    r14
   1889e:	pop    r15
   188a0:	jmp    5270 <__fprintf_chk@plt>
   188a5:	nop    DWORD PTR [rax]
   188a8:	xor    r14d,r14d
   188ab:	xor    ebx,ebx
   188ad:	mov    r15d,0x1
   188b3:	cmp    ax,0x100
   188b7:	ja     1886d <sched_runstate_process+0x15d>
   188b9:	movzx  edi,WORD PTR [r13+0x2]
   188be:	call   12e70 <vcpu_find>
   188c3:	mov    rbp,rax
   188c6:	mov    eax,DWORD PTR [rax+0x28]
   188c9:	mov    DWORD PTR [rbp+0x28],0x6
   188d0:	mov    DWORD PTR [rsp+0xc],eax
   188d4:	mov    eax,DWORD PTR [rbp+0x2c]
   188d7:	mov    DWORD PTR [rsp+0x18],eax
   188db:	mov    eax,DWORD PTR [rbp+0x30]
   188de:	mov    DWORD PTR [rsp+0x1c],eax
   188e2:	mov    rax,QWORD PTR [rbp+0x38]
   188e6:	mov    QWORD PTR [rsp+0x10],rax
   188eb:	cmp    r14d,0x1
   188ef:	je     18a68 <sched_runstate_process+0x358>
   188f5:	movsxd rax,DWORD PTR [rbp+0x18]
   188f9:	cmp    DWORD PTR [rbp+0x3bf0],0x1
   18900:	movsxd rdx,eax
   18903:	je     18a88 <sched_runstate_process+0x378>
   18909:	cmp    ebx,eax
   1890b:	je     18991 <sched_runstate_process+0x281>
   18911:	cmp    eax,0x6
   18914:	je     18991 <sched_runstate_process+0x281>
   18916:	cmp    eax,0x4
   18919:	je     18ba1 <sched_runstate_process+0x491>
   1891f:	cmp    DWORD PTR [rsp+0xc],r14d
   18924:	jne    18930 <sched_runstate_process+0x220>
   18926:	cmp    DWORD PTR [rsp+0x18],ebx
   1892a:	je     19060 <sched_runstate_process+0x950>
   18930:	mov    rdx,QWORD PTR [rbp+0x8]
   18934:	movsxd rcx,ebx
   18937:	sub    rsp,0x8
   1893b:	mov    esi,0x1
   18940:	mov    rdi,QWORD PTR [rip+0x4e911]        # 67258 <warn>
   18947:	mov    r8d,DWORD PTR [rdx+0x8]
   1894b:	lea    rdx,[rip+0x12aee]        # 2b440 <runstate_name>
   18952:	mov    rcx,QWORD PTR [rdx+rcx*8]
   18956:	push   QWORD PTR [rdx+rax*8]
   18959:	lea    rdx,[rip+0x9860]        # 221c0 <_IO_stdin_used+0x41c0>
   18960:	xor    eax,eax
   18962:	mov    r9d,DWORD PTR [rbp+0x0]
   18966:	call   5270 <__fprintf_chk@plt>
   1896b:	movsxd rdx,DWORD PTR [rbp+0x18]
   1896f:	mov    DWORD PTR [rbp+0x28],ebx
   18972:	mov    DWORD PTR [rbp+0x2c],edx
   18975:	mov    rax,QWORD PTR [r12+0x38]
   1897a:	mov    QWORD PTR [rbp+0x38],rax
   1897e:	mov    eax,DWORD PTR [r12+0x4]
   18983:	mov    DWORD PTR [rbp+0x30],eax
   18986:	pop    rdi
   18987:	pop    r8
   18989:	test   edx,edx
   1898b:	je     18f10 <sched_runstate_process+0x800>
   18991:	cmp    r15d,0x1
   18995:	je     18b18 <sched_runstate_process+0x408>
   1899b:	test   ebx,ebx
   1899d:	je     18ae8 <sched_runstate_process+0x3d8>
   189a3:	test   edx,edx
   189a5:	jne    18ef8 <sched_runstate_process+0x7e8>
   189ab:	mov    rdx,QWORD PTR [r12+0x38]
   189b0:	mov    rdi,QWORD PTR [rbp+0x50]
   189b4:	mov    ecx,r14d
   189b7:	mov    rsi,rbp
   189ba:	call   17240 <vcpu_prev_update>
   189bf:	mov    r8d,DWORD PTR [rip+0x167ee]        # 2f1b4 <P+0x14>
   189c6:	test   r8d,r8d
   189c9:	je     18765 <sched_runstate_process+0x55>
   189cf:	mov    rax,QWORD PTR [rbp+0x8]
   189d3:	mov    r9d,DWORD PTR [rax+0x8]
   189d7:	cmp    r9d,0x7fff
   189de:	je     18765 <sched_runstate_process+0x55>
   189e4:	test   BYTE PTR [rip+0x126b6],0x40        # 2b0a1 <opt+0x1>
   189eb:	jne    18e80 <sched_runstate_process+0x770>
   189f1:	mov    rsi,QWORD PTR [r12+0x38]
   189f6:	add    rsp,0x38
   189fa:	mov    rdi,rbp
   189fd:	pop    rbx
   189fe:	pop    rbp
   189ff:	pop    r12
   18a01:	pop    r13
   18a03:	pop    r14
   18a05:	pop    r15
   18a07:	jmp    164a0 <lose_vcpu>
   18a0c:	nop    DWORD PTR [rax+0x0]
   18a10:	cmp    ebx,0x1
   18a13:	je     18864 <sched_runstate_process+0x154>
   18a19:	lea    rdx,[rip+0x12a20]        # 2b440 <runstate_name>
   18a20:	movsxd rdi,r14d
   18a23:	movsxd rax,ebx
   18a26:	mov    r8d,esi
   18a29:	sub    rsp,0x8
   18a2d:	movzx  ecx,WORD PTR [r13+0x2]
   18a32:	push   QWORD PTR [rdx+rdi*8]
   18a35:	mov    esi,0x1
   18a3a:	mov    r9,QWORD PTR [rdx+rax*8]
   18a3e:	lea    rdx,[rip+0x959b]        # 21fe0 <_IO_stdin_used+0x3fe0>
   18a45:	xor    eax,eax
   18a47:	xor    r15d,r15d
   18a4a:	mov    rdi,QWORD PTR [rip+0x4e807]        # 67258 <warn>
   18a51:	call   5270 <__fprintf_chk@plt>
   18a56:	movzx  esi,WORD PTR [r13+0x0]
   18a5b:	pop    rdi
   18a5c:	pop    r8
   18a5e:	mov    eax,esi
   18a60:	jmp    188b3 <sched_runstate_process+0x1a3>
   18a65:	nop    DWORD PTR [rax]
   18a68:	cmp    DWORD PTR [rbp+0x3bf0],0x1
   18a6f:	je     18c98 <sched_runstate_process+0x588>
   18a75:	movsxd rax,DWORD PTR [rbp+0x18]
   18a79:	movsxd rdx,eax
   18a7c:	jmp    18909 <sched_runstate_process+0x1f9>
   18a81:	nop    DWORD PTR [rax+0x0]
   18a88:	cmp    eax,0x4
   18a8b:	je     18b98 <sched_runstate_process+0x488>
   18a91:	cmp    r14d,0x1
   18a95:	je     18cb6 <sched_runstate_process+0x5a6>
   18a9b:	test   r14d,r14d
   18a9e:	jne    18ac0 <sched_runstate_process+0x3b0>
   18aa0:	cmp    ebx,0x1
   18aa3:	jne    18ac0 <sched_runstate_process+0x3b0>
   18aa5:	cmp    eax,ebx
   18aa7:	je     18991 <sched_runstate_process+0x281>
   18aad:	cmp    eax,0x6
   18ab0:	jne    1891f <sched_runstate_process+0x20f>
   18ab6:	jmp    18991 <sched_runstate_process+0x281>
   18abb:	nop    DWORD PTR [rax+rax*1+0x0]
   18ac0:	test   ebx,ebx
   18ac2:	sete   cl
   18ac5:	mov    esi,ecx
   18ac7:	test   BYTE PTR [rbp+0x2c010],0x1
   18ace:	jne    18cd2 <sched_runstate_process+0x5c2>
   18ad4:	cmp    r14d,0x2
   18ad8:	jne    18aa5 <sched_runstate_process+0x395>
   18ada:	test   cl,cl
   18adc:	je     18aa5 <sched_runstate_process+0x395>
   18ade:	jmp    18cfe <sched_runstate_process+0x5ee>
   18ae3:	nop    DWORD PTR [rax+rax*1+0x0]
   18ae8:	cmp    edx,0x6
   18aeb:	je     19048 <sched_runstate_process+0x938>
   18af1:	test   edx,0xfffffffb
   18af7:	jne    18f40 <sched_runstate_process+0x830>
   18afd:	mov    rdx,QWORD PTR [r12+0x38]
   18b02:	mov    ecx,r14d
   18b05:	mov    rsi,rbp
   18b08:	mov    rdi,r12
   18b0b:	call   17240 <vcpu_prev_update>
   18b10:	jmp    189bf <sched_runstate_process+0x2af>
   18b15:	nop    DWORD PTR [rax]
   18b18:	cmp    edx,0x6
   18b1b:	je     19028 <sched_runstate_process+0x918>
   18b21:	cmp    edx,0x4
   18b24:	je     18bb9 <sched_runstate_process+0x4a9>
   18b2a:	test   edx,edx
   18b2c:	jne    18fe0 <sched_runstate_process+0x8d0>
   18b32:	mov    rax,QWORD PTR [rbp+0x50]
   18b36:	cmp    rax,r12
   18b39:	je     18c0d <sched_runstate_process+0x4fd>
   18b3f:	mov    edx,0xffffffff
   18b44:	test   rax,rax
   18b47:	je     18b4c <sched_runstate_process+0x43c>
   18b49:	mov    edx,DWORD PTR [rax+0x4]
   18b4c:	mov    rax,QWORD PTR [rbp+0x8]
   18b50:	sub    rsp,0x8
   18b54:	mov    ecx,DWORD PTR [r12+0x4]
   18b59:	mov    esi,0x1
   18b5e:	mov    rdi,QWORD PTR [rip+0x4e6f3]        # 67258 <warn>
   18b65:	mov    r8d,DWORD PTR [rax+0x8]
   18b69:	push   rdx
   18b6a:	xor    eax,eax
   18b6c:	lea    rdx,[rip+0x9725]        # 22298 <_IO_stdin_used+0x4298>
   18b73:	mov    r9d,DWORD PTR [rbp+0x0]
   18b77:	call   5270 <__fprintf_chk@plt>
   18b7c:	cmp    DWORD PTR [rip+0x1255d],0x4        # 2b0e0 <opt+0x40>
   18b83:	pop    rcx
   18b84:	pop    rsi
   18b85:	ja     18c0d <sched_runstate_process+0x4fd>
   18b8b:	mov    edi,0x1
   18b90:	call   5250 <exit@plt>
   18b95:	nop    DWORD PTR [rax]
   18b98:	cmp    ebx,0x4
   18b9b:	je     18e60 <sched_runstate_process+0x750>
   18ba1:	test   r14d,r14d
   18ba4:	jne    18e08 <sched_runstate_process+0x6f8>
   18baa:	mov    edx,0x4
   18baf:	cmp    r15d,0x1
   18bb3:	jne    1899b <sched_runstate_process+0x28b>
   18bb9:	mov    rax,QWORD PTR [rbp+0x8]
   18bbd:	mov    r8d,DWORD PTR [rbp+0x0]
   18bc1:	mov    esi,0x1
   18bc6:	lea    rdx,[rip+0x9643]        # 22210 <_IO_stdin_used+0x4210>
   18bcd:	mov    rdi,QWORD PTR [rip+0x4e684]        # 67258 <warn>
   18bd4:	mov    ecx,DWORD PTR [rax+0x8]
   18bd7:	xor    eax,eax
   18bd9:	call   5270 <__fprintf_chk@plt>
   18bde:	mov    rsi,QWORD PTR [r12+0x1a8]
   18be6:	test   rsi,rsi
   18be9:	je     18bfd <sched_runstate_process+0x4ed>
   18beb:	mov    rdx,QWORD PTR [r12+0x38]
   18bf0:	mov    ecx,0x4
   18bf5:	mov    rdi,r12
   18bf8:	call   17240 <vcpu_prev_update>
   18bfd:	mov    rdx,QWORD PTR [r12+0x38]
   18c02:	mov    rsi,rbp
   18c05:	mov    rdi,r12
   18c08:	call   17860 <vcpu_next_update>
   18c0d:	mov    rdx,QWORD PTR [r12+0x38]
   18c12:	xor    esi,esi
   18c14:	add    rsp,0x38
   18c18:	mov    rdi,rbp
   18c1b:	pop    rbx
   18c1c:	pop    rbp
   18c1d:	pop    r12
   18c1f:	pop    r13
   18c21:	pop    r14
   18c23:	pop    r15
   18c25:	jmp    11480 <runstate_update>
   18c2a:	nop    WORD PTR [rax+rax*1+0x0]
   18c30:	mov    r9,QWORD PTR [r13+0xc]
   18c34:	mov    r10,QWORD PTR [r13+0x4]
   18c38:	mov    rdi,rax
   18c3b:	xor    r14d,r14d
   18c3e:	xor    ebx,ebx
   18c40:	mov    r15d,0x1
   18c46:	lea    rcx,[rip+0x5e89]        # 1ead6 <_IO_stdin_used+0xad6>
   18c4d:	push   rax
   18c4e:	lea    rdx,[r12+0x58]
   18c53:	xor    eax,eax
   18c55:	push   rdi
   18c56:	mov    edi,0x1
   18c5b:	push   rsi
   18c5c:	lea    rsi,[rip+0x9355]        # 21fb8 <_IO_stdin_used+0x3fb8>
   18c63:	push   r8
   18c65:	mov    r8,r10
   18c68:	call   5200 <__printf_chk@plt>
   18c6d:	add    rsp,0x20
   18c71:	mov    DWORD PTR [rsp+0x8],0x5
   18c79:	jmp    18840 <sched_runstate_process+0x130>
   18c7e:	xchg   ax,ax
   18c80:	mov    r9,QWORD PTR [r13+0xc]
   18c84:	mov    r10,QWORD PTR [r13+0x4]
   18c88:	xor    r15d,r15d
   18c8b:	lea    rcx,[rip+0x5e34]        # 1eac6 <_IO_stdin_used+0xac6>
   18c92:	jmp    18c4d <sched_runstate_process+0x53d>
   18c94:	nop    DWORD PTR [rax+0x0]
   18c98:	mov    ecx,DWORD PTR [rbp+0x3bfc]
   18c9e:	test   ecx,ecx
   18ca0:	jne    18eb0 <sched_runstate_process+0x7a0>
   18ca6:	movsxd rax,DWORD PTR [rbp+0x18]
   18caa:	movsxd rdx,eax
   18cad:	cmp    eax,0x4
   18cb0:	je     18b98 <sched_runstate_process+0x488>
   18cb6:	cmp    ebx,0x2
   18cb9:	je     19158 <sched_runstate_process+0xa48>
   18cbf:	test   ebx,ebx
   18cc1:	sete   sil
   18cc5:	test   BYTE PTR [rbp+0x2c010],0x1
   18ccc:	je     18aa5 <sched_runstate_process+0x395>
   18cd2:	cmp    r14d,0x3
   18cd6:	je     18aa5 <sched_runstate_process+0x395>
   18cdc:	test   sil,sil
   18cdf:	je     18aa5 <sched_runstate_process+0x395>
   18ce5:	test   eax,eax
   18ce7:	jne    191e1 <sched_runstate_process+0xad1>
   18ced:	and    BYTE PTR [rbp+0x2c010],0xfe
   18cf4:	cmp    r14d,0x2
   18cf8:	jne    18a75 <sched_runstate_process+0x365>
   18cfe:	mov    eax,DWORD PTR [rbp+0x2c018]
   18d04:	test   eax,eax
   18d06:	je     18a75 <sched_runstate_process+0x365>
   18d0c:	lea    r9,[rbp+0x16730]
   18d13:	xor    r10d,r10d
   18d16:	mov    QWORD PTR [rsp+0x20],r13
   18d1b:	mov    r13,r12
   18d1e:	mov    DWORD PTR [rsp+0x28],ebx
   18d22:	mov    r12d,r10d
   18d25:	mov    rbx,r9
   18d28:	mov    DWORD PTR [rsp+0x2c],r14d
   18d2d:	jmp    18d8d <sched_runstate_process+0x67d>
   18d2f:	nop
   18d30:	test   r14,r14
   18d33:	je     18d60 <sched_runstate_process+0x650>
   18d35:	mov    eax,DWORD PTR [rbx+0xa8]
   18d3b:	test   eax,eax
   18d3d:	jne    18fc0 <sched_runstate_process+0x8b0>
   18d43:	test   BYTE PTR [rip+0x12359],0x20        # 2b0a3 <opt+0x3>
   18d4a:	je     18d60 <sched_runstate_process+0x650>
   18d4c:	add    DWORD PTR [rbx+0x70],0x1
   18d50:	lea    rdi,[rbx+0x70]
   18d54:	mov    rsi,r14
   18d57:	call   56e0 <update_cycles.part.5>
   18d5c:	nop    DWORD PTR [rax+0x0]
   18d60:	mov    QWORD PTR [rbx+0xb0],0x0
   18d6b:	mov    DWORD PTR [rbx+0xa8],0x0
   18d75:	add    r12d,0x1
   18d79:	add    rbx,0xf8
   18d80:	cmp    r12d,0x15e
   18d87:	je     19190 <sched_runstate_process+0xa80>
   18d8d:	mov    rax,QWORD PTR [rbx+0xb0]
   18d94:	test   rax,rax
   18d97:	je     18d75 <sched_runstate_process+0x665>
   18d99:	xor    r14d,r14d
   18d9c:	cmp    rax,0x1
   18da0:	je     18da9 <sched_runstate_process+0x699>
   18da2:	mov    r14,QWORD PTR [r13+0x38]
   18da6:	sub    r14,rax
   18da9:	test   BYTE PTR [rip+0x122f1],0x40        # 2b0a1 <opt+0x1>
   18db0:	jne    18ed0 <sched_runstate_process+0x7c0>
   18db6:	test   BYTE PTR [rip+0x122e3],0x8        # 2b0a0 <opt>
   18dbd:	jne    18d30 <sched_runstate_process+0x620>
   18dc3:	test   BYTE PTR [rip+0x122d9],0x20        # 2b0a3 <opt+0x3>
   18dca:	je     18d60 <sched_runstate_process+0x650>
   18dcc:	test   r14,r14
   18dcf:	je     18d60 <sched_runstate_process+0x650>
   18dd1:	mov    r11d,DWORD PTR [rbx+0xa8]
   18dd8:	test   r11d,r11d
   18ddb:	je     18d4c <sched_runstate_process+0x63c>
   18de1:	cmp    DWORD PTR [rbp+0x2c018],0x1
   18de8:	je     19178 <sched_runstate_process+0xa68>
   18dee:	add    DWORD PTR [rbx+0x38],0x1
   18df2:	lea    rdi,[rbx+0x38]
   18df6:	mov    rsi,r14
   18df9:	call   56e0 <update_cycles.part.5>
   18dfe:	jmp    18d60 <sched_runstate_process+0x650>
   18e03:	nop    DWORD PTR [rax+rax*1+0x0]
   18e08:	test   BYTE PTR [rip+0x12292],0x40        # 2b0a1 <opt+0x1>
   18e0f:	je     18765 <sched_runstate_process+0x55>
   18e15:	mov    rax,QWORD PTR [rbp+0x8]
   18e19:	sub    rsp,0x8
   18e1d:	mov    rdi,QWORD PTR [rip+0x4e434]        # 67258 <warn>
   18e24:	lea    rcx,[rip+0xb575]        # 243a0 <__func__.7569>
   18e2b:	lea    rdx,[rip+0x9256]        # 22088 <_IO_stdin_used+0x4088>
   18e32:	mov    esi,0x1
   18e37:	mov    r8d,DWORD PTR [rax+0x8]
   18e3b:	lea    rax,[rip+0x125fe]        # 2b440 <runstate_name>
   18e42:	push   QWORD PTR [rax+r14*8]
   18e46:	mov    r9d,DWORD PTR [rbp+0x0]
   18e4a:	xor    eax,eax
   18e4c:	call   5270 <__fprintf_chk@plt>
   18e51:	pop    r9
   18e53:	pop    r10
   18e55:	jmp    18765 <sched_runstate_process+0x55>
   18e5a:	nop    WORD PTR [rax+rax*1+0x0]
   18e60:	cmp    r15d,0x1
   18e64:	je     18bb9 <sched_runstate_process+0x4a9>
   18e6a:	test   r14d,r14d
   18e6d:	je     18f88 <sched_runstate_process+0x878>
   18e73:	mov    rdx,QWORD PTR [r12+0x38]
   18e78:	mov    esi,r14d
   18e7b:	jmp    18c14 <sched_runstate_process+0x504>
   18e80:	mov    eax,DWORD PTR [rbp+0x0]
   18e83:	sub    rsp,0x8
   18e87:	mov    rdi,QWORD PTR [rip+0x4e3ca]        # 67258 <warn>
   18e8e:	lea    rdx,[rip+0x9433]        # 222c8 <_IO_stdin_used+0x42c8>
   18e95:	lea    rcx,[rip+0xb504]        # 243a0 <__func__.7569>
   18e9c:	mov    esi,0x1
   18ea1:	push   rax
   18ea2:	xor    eax,eax
   18ea4:	call   5270 <__fprintf_chk@plt>
   18ea9:	pop    rax
   18eaa:	pop    rdx
   18eab:	jmp    189f1 <sched_runstate_process+0x2e1>
   18eb0:	mov    rsi,QWORD PTR [r12+0x38]
   18eb5:	lea    rdi,[rbp+0x3bf8]
   18ebc:	call   119f0 <hvm_close_vmexit>
   18ec1:	jmp    188f5 <sched_runstate_process+0x1e5>
   18ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   18ed0:	mov    ecx,DWORD PTR [rbx+0xa8]
   18ed6:	mov    r8,r14
   18ed9:	mov    edx,r12d
   18edc:	xor    eax,eax
   18ede:	lea    rsi,[rip+0x9173]        # 22058 <_IO_stdin_used+0x4058>
   18ee5:	mov    edi,0x1
   18eea:	call   5200 <__printf_chk@plt>
   18eef:	jmp    18db6 <sched_runstate_process+0x6a6>
   18ef4:	nop    DWORD PTR [rax+0x0]
   18ef8:	test   r14d,r14d
   18efb:	je     18f88 <sched_runstate_process+0x878>
   18f01:	cmp    edx,0x6
   18f04:	je     18765 <sched_runstate_process+0x55>
   18f0a:	jmp    18e73 <sched_runstate_process+0x763>
   18f0f:	nop
   18f10:	mov    rcx,QWORD PTR [rip+0x4e341]        # 67258 <warn>
   18f17:	add    rsp,0x38
   18f1b:	mov    edx,0xf
   18f20:	mov    esi,0x1
   18f25:	pop    rbx
   18f26:	lea    rdi,[rip+0x5c0c]        # 1eb39 <_IO_stdin_used+0xb39>
   18f2d:	pop    rbp
   18f2e:	pop    r12
   18f30:	pop    r13
   18f32:	pop    r14
   18f34:	pop    r15
   18f36:	jmp    5260 <fwrite@plt>
   18f3b:	nop    DWORD PTR [rax+rax*1+0x0]
   18f40:	mov    rax,QWORD PTR [rbp+0x8]
   18f44:	mov    r8d,DWORD PTR [rbp+0x0]
   18f48:	mov    esi,0x1
   18f4d:	mov    rdi,QWORD PTR [rip+0x4e304]        # 67258 <warn>
   18f54:	mov    ecx,DWORD PTR [rax+0x8]
   18f57:	lea    rax,[rip+0x124e2]        # 2b440 <runstate_name>
   18f5e:	mov    r9,QWORD PTR [rax+rdx*8]
   18f62:	xor    eax,eax
   18f64:	lea    rdx,[rip+0x92ed]        # 22258 <_IO_stdin_used+0x4258>
   18f6b:	call   5270 <__fprintf_chk@plt>
   18f70:	cmp    DWORD PTR [rip+0x12169],0x4        # 2b0e0 <opt+0x40>
   18f77:	ja     18afd <sched_runstate_process+0x3ed>
   18f7d:	jmp    18b8b <sched_runstate_process+0x47b>
   18f82:	nop    WORD PTR [rax+rax*1+0x0]
   18f88:	cmp    DWORD PTR [rsp+0x8],0x5
   18f8d:	jne    18f9f <sched_runstate_process+0x88f>
   18f8f:	mov    rax,QWORD PTR [r13+0x4]
   18f93:	mov    QWORD PTR [rbp+0x40],rax
   18f97:	mov    rax,QWORD PTR [r13+0xc]
   18f9b:	mov    QWORD PTR [rbp+0x48],rax
   18f9f:	mov    rdx,QWORD PTR [r12+0x38]
   18fa4:	add    rsp,0x38
   18fa8:	mov    rsi,rbp
   18fab:	mov    rdi,r12
   18fae:	pop    rbx
   18faf:	pop    rbp
   18fb0:	pop    r12
   18fb2:	pop    r13
   18fb4:	pop    r14
   18fb6:	pop    r15
   18fb8:	jmp    17860 <vcpu_next_update>
   18fbd:	nop    DWORD PTR [rax]
   18fc0:	mov    rdi,QWORD PTR [r13+0x38]
   18fc4:	mov    rsi,r14
   18fc7:	call   8200 <scatterplot_vs_time>
   18fcc:	test   BYTE PTR [rip+0x120d0],0x20        # 2b0a3 <opt+0x3>
   18fd3:	jne    18dd1 <sched_runstate_process+0x6c1>
   18fd9:	jmp    18d60 <sched_runstate_process+0x650>
   18fde:	xchg   ax,ax
   18fe0:	mov    rax,QWORD PTR [rbp+0x8]
   18fe4:	mov    r8d,DWORD PTR [rbp+0x0]
   18fe8:	mov    esi,0x1
   18fed:	mov    rdi,QWORD PTR [rip+0x4e264]        # 67258 <warn>
   18ff4:	mov    ecx,DWORD PTR [rax+0x8]
   18ff7:	lea    rax,[rip+0x12442]        # 2b440 <runstate_name>
   18ffe:	mov    r9,QWORD PTR [rax+rdx*8]
   19002:	xor    eax,eax
   19004:	lea    rdx,[rip+0x924d]        # 22258 <_IO_stdin_used+0x4258>
   1900b:	call   5270 <__fprintf_chk@plt>
   19010:	cmp    DWORD PTR [rip+0x120c9],0x4        # 2b0e0 <opt+0x40>
   19017:	ja     18c0d <sched_runstate_process+0x4fd>
   1901d:	jmp    18b8b <sched_runstate_process+0x47b>
   19022:	nop    WORD PTR [rax+rax*1+0x0]
   19028:	add    rsp,0x38
   1902c:	mov    rsi,rbp
   1902f:	mov    rdi,r12
   19032:	pop    rbx
   19033:	pop    rbp
   19034:	pop    r12
   19036:	pop    r13
   19038:	pop    r14
   1903a:	pop    r15
   1903c:	jmp    17f80 <vcpu_start>
   19041:	nop    DWORD PTR [rax+0x0]
   19048:	mov    rsi,rbp
   1904b:	mov    rdi,r12
   1904e:	call   17f80 <vcpu_start>
   19053:	jmp    18afd <sched_runstate_process+0x3ed>
   19058:	nop    DWORD PTR [rax+rax*1+0x0]
   19060:	mov    rbp,QWORD PTR [r12+0x38]
   19065:	cmp    rbp,QWORD PTR [rsp+0x10]
   1906a:	jb     191b1 <sched_runstate_process+0xaa1>
   19070:	movsxd rax,DWORD PTR [rsp+0x1c]
   19075:	mov    edx,0x1
   1907a:	sub    rbp,QWORD PTR [rsp+0x10]
   1907f:	lea    rbx,[rax*8+0x0]
   19087:	sub    rbx,rax
   1908a:	lea    rax,[rip+0x1614f]        # 2f1e0 <P+0x40>
   19091:	shl    rbx,0x7
   19095:	add    rbx,rax
   19098:	mov    eax,DWORD PTR [rbx+0x1a0]
   1909e:	or     eax,DWORD PTR [r12+0x1a0]
   190a6:	mov    DWORD PTR [rbx+0x1a0],eax
   190ac:	mov    ecx,DWORD PTR [r12+0x4]
   190b1:	mov    r8d,DWORD PTR [rbx+0x4]
   190b5:	mov    r13,QWORD PTR [rbx+0x198]
   190bc:	shl    rdx,cl
   190bf:	or     eax,edx
   190c1:	bt     rax,r8
   190c5:	mov    DWORD PTR [rbx+0x1a0],eax
   190cb:	jae    1918b <sched_runstate_process+0xa7b>
   190d1:	cmp    BYTE PTR [rip+0x11fcb],0x0        # 2b0a3 <opt+0x3>
   190d8:	jns    1924e <sched_runstate_process+0xb3e>
   190de:	mov    rcx,QWORD PTR [rip+0x1535b]        # 2e440 <stderr@@GLIBC_2.2.5>
   190e5:	mov    edx,0x2a
   190ea:	mov    esi,0x1
   190ef:	lea    rdi,[rip+0x9012]        # 22108 <_IO_stdin_used+0x4108>
   190f6:	call   5260 <fwrite@plt>
   190fb:	cmp    DWORD PTR [rip+0x11fde],0x4        # 2b0e0 <opt+0x40>
   19102:	jbe    18b8b <sched_runstate_process+0x47b>
   19108:	mov    rax,QWORD PTR [rbx+0x198]
   1910f:	mov    r8d,DWORD PTR [rbx+0x4]
   19113:	sub    rsp,0x8
   19117:	lea    rax,[rax+rbp*2]
   1911b:	mov    r9,rbp
   1911e:	mov    esi,0x1
   19123:	mov    QWORD PTR [rbx+0x198],rax
   1912a:	mov    ecx,DWORD PTR [r12+0x4]
   1912f:	lea    rdx,[rip+0x903a]        # 22170 <_IO_stdin_used+0x4170>
   19136:	push   rax
   19137:	mov    rdi,QWORD PTR [rip+0x4e11a]        # 67258 <warn>
   1913e:	xor    eax,eax
   19140:	push   r13
   19142:	push   r8
   19144:	call   5270 <__fprintf_chk@plt>
   19149:	add    rsp,0x20
   1914d:	jmp    18765 <sched_runstate_process+0x55>
   19152:	nop    WORD PTR [rax+rax*1+0x0]
   19158:	test   BYTE PTR [rip+0x11f42],0x40        # 2b0a1 <opt+0x1>
   1915f:	jne    19225 <sched_runstate_process+0xb15>
   19165:	or     BYTE PTR [rbp+0x2c010],0x1
   1916c:	jmp    18909 <sched_runstate_process+0x1f9>
   19171:	nop    DWORD PTR [rax+0x0]
   19178:	add    DWORD PTR [rbx],0x1
   1917b:	mov    rsi,r14
   1917e:	mov    rdi,rbx
   19181:	call   56e0 <update_cycles.part.5>
   19186:	jmp    18dee <sched_runstate_process+0x6de>
   1918b:	mov    rax,r13
   1918e:	jmp    19113 <sched_runstate_process+0xa03>
   19190:	mov    r12,r13
   19193:	mov    ebx,DWORD PTR [rsp+0x28]
   19197:	movsxd r14,DWORD PTR [rsp+0x2c]
   1919c:	mov    QWORD PTR [rbp+0x2c014],0x0
   191a7:	mov    r13,QWORD PTR [rsp+0x20]
   191ac:	jmp    18a75 <sched_runstate_process+0x365>
   191b1:	mov    r8,QWORD PTR [rsp+0x10]
   191b6:	mov    rcx,rbp
   191b9:	mov    esi,0x1
   191be:	xor    eax,eax
   191c0:	mov    rdi,QWORD PTR [rip+0x4e091]        # 67258 <warn>
   191c7:	add    rsp,0x38
   191cb:	lea    rdx,[rip+0x8eee]        # 220c0 <_IO_stdin_used+0x40c0>
   191d2:	pop    rbx
   191d3:	pop    rbp
   191d4:	pop    r12
   191d6:	pop    r13
   191d8:	pop    r14
   191da:	pop    r15
   191dc:	jmp    5270 <__fprintf_chk@plt>
   191e1:	mov    rax,QWORD PTR [rbp+0x8]
   191e5:	sub    rsp,0x8
   191e9:	lea    rdx,[rip+0x12250]        # 2b440 <runstate_name>
   191f0:	mov    r9,QWORD PTR [rip+0x12249]        # 2b440 <runstate_name>
   191f7:	mov    rdi,QWORD PTR [rip+0x4e05a]        # 67258 <warn>
   191fe:	mov    esi,0x1
   19203:	mov    ecx,DWORD PTR [rax+0x8]
   19206:	movsxd rax,r14d
   19209:	push   QWORD PTR [rdx+rax*8]
   1920c:	mov    r8d,DWORD PTR [rbp+0x0]
   19210:	lea    rdx,[rip+0x8e01]        # 22018 <_IO_stdin_used+0x4018>
   19217:	xor    eax,eax
   19219:	call   5270 <__fprintf_chk@plt>
   1921e:	pop    rax
   1921f:	pop    rdx
   19220:	jmp    18ced <sched_runstate_process+0x5dd>
   19225:	mov    rax,QWORD PTR [rbp+0x8]
   19229:	mov    ecx,DWORD PTR [rbp+0x0]
   1922c:	mov    edi,0x1
   19231:	lea    rsi,[rip+0x58e3]        # 1eb1b <_IO_stdin_used+0xb1b>
   19238:	mov    edx,DWORD PTR [rax+0x8]
   1923b:	xor    eax,eax
   1923d:	call   5200 <__printf_chk@plt>
   19242:	movsxd rax,DWORD PTR [rbp+0x18]
   19246:	movsxd rdx,eax
   19249:	jmp    19165 <sched_runstate_process+0xa55>
   1924e:	mov    rcx,QWORD PTR [rip+0x4e003]        # 67258 <warn>
   19255:	mov    edx,0x31
   1925a:	mov    esi,0x1
   1925f:	lea    rdi,[rip+0x8ed2]        # 22138 <_IO_stdin_used+0x4138>
   19266:	call   5260 <fwrite@plt>
   1926b:	movsxd rcx,DWORD PTR [rip+0x15f2e]        # 2f1a0 <P>
   19272:	test   ecx,ecx
   19274:	js     18765 <sched_runstate_process+0x55>
   1927a:	lea    rdx,[rcx*8+0x0]
   19282:	lea    rax,[rip+0x160ef]        # 2f378 <P+0x1d8>
   19289:	sub    rdx,rcx
   1928c:	shl    rdx,0x7
   19290:	mov    rcx,rdx
   19293:	lea    rdx,[rax+0x380]
   1929a:	add    rdx,rcx
   1929d:	nop    DWORD PTR [rax]
   192a0:	mov    QWORD PTR [rax],0x0
   192a7:	add    rax,0x380
   192ad:	mov    DWORD PTR [rax-0x378],0x0
   192b7:	cmp    rax,rdx
   192ba:	jne    192a0 <sched_runstate_process+0xb90>
   192bc:	jmp    18765 <sched_runstate_process+0x55>
   192c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   192cc:	nop    DWORD PTR [rax+0x0]

00000000000192d0 <sched_process>:
   192d0:	movzx  eax,BYTE PTR [rdi+0x41]
   192d4:	lea    rdx,[rdi+0x30]
   192d8:	and    eax,0xfffffff0
   192db:	cmp    al,0xf0
   192dd:	je     19910 <sched_process+0x640>
   192e3:	cmp    al,0x10
   192e5:	je     19930 <sched_process+0x660>
   192eb:	push   rbp
   192ec:	mov    rsi,rdi
   192ef:	push   rbx
   192f0:	sub    rsp,0x8
   192f4:	cmp    al,0x80
   192f6:	je     19370 <sched_process+0xa0>
   192f8:	cmp    al,0x20
   192fa:	jne    198f0 <sched_process+0x620>
   19300:	mov    eax,DWORD PTR [rdi+0x40]
   19303:	cmp    eax,0x2220c
   19308:	je     1a36a <sched_process+0x109a>
   1930e:	jbe    195c0 <sched_process+0x2f0>
   19314:	cmp    eax,0x22801
   19319:	je     1a410 <sched_process+0x1140>
   1931f:	jbe    194e8 <sched_process+0x218>
   19325:	cmp    eax,0x22a01
   1932a:	je     19fe0 <sched_process+0xd10>
   19330:	jbe    193e0 <sched_process+0x110>
   19336:	cmp    eax,0x22a04
   1933b:	je     19e38 <sched_process+0xb68>
   19341:	jbe    19398 <sched_process+0xc8>
   19343:	cmp    eax,0x22a05
   19348:	je     19b40 <sched_process+0x870>
   1934e:	cmp    eax,0x22a06
   19353:	jne    19902 <sched_process+0x632>
   19359:	test   BYTE PTR [rip+0x11d41],0x40        # 2b0a1 <opt+0x1>
   19360:	jne    1a30a <sched_process+0x103a>
   19366:	add    rsp,0x8
   1936a:	pop    rbx
   1936b:	pop    rbp
   1936c:	ret    
   1936d:	nop    DWORD PTR [rax]
   19370:	mov    edi,DWORD PTR [rdi+0x40]
   19373:	lea    eax,[rdi-0x28001]
   19379:	cmp    eax,0x10
   1937c:	ja     19902 <sched_process+0x632>
   19382:	lea    rcx,[rip+0xadb3]        # 2413c <_IO_stdin_used+0x613c>
   19389:	movsxd rax,DWORD PTR [rcx+rax*4]
   1938d:	add    rax,rcx
   19390:	jmp    rax
   19392:	nop    WORD PTR [rax+rax*1+0x0]
   19398:	cmp    eax,0x22a02
   1939d:	je     19bb0 <sched_process+0x8e0>
   193a3:	cmp    eax,0x22a03
   193a8:	jne    19902 <sched_process+0x632>
   193ae:	test   BYTE PTR [rip+0x11cec],0x40        # 2b0a1 <opt+0x1>
   193b5:	je     19366 <sched_process+0x96>
   193b7:	mov    rax,QWORD PTR [rdi+0x50]
   193bb:	lea    rdx,[rdi+0x58]
   193bf:	lea    rsi,[rip+0x962a]        # 229f0 <_IO_stdin_used+0x49f0>
   193c6:	movzx  ecx,WORD PTR [rax+0x2]
   193ca:	mov    r9d,DWORD PTR [rax+0x4]
   193ce:	movzx  r8d,WORD PTR [rax]
   193d2:	jmp    1988f <sched_process+0x5bf>
   193d7:	nop    WORD PTR [rax+rax*1+0x0]
   193e0:	cmp    eax,0x22804
   193e5:	je     19df0 <sched_process+0xb20>
   193eb:	jbe    19488 <sched_process+0x1b8>
   193f1:	cmp    eax,0x22805
   193f6:	je     19be0 <sched_process+0x910>
   193fc:	cmp    eax,0x22806
   19401:	jne    19902 <sched_process+0x632>
   19407:	test   BYTE PTR [rip+0x11c93],0x40        # 2b0a1 <opt+0x1>
   1940e:	je     19366 <sched_process+0x96>
   19414:	mov    rdx,QWORD PTR [rdi+0x50]
   19418:	lea    rax,[rip+0x578c]        # 1ebab <_IO_stdin_used+0xbab>
   1941f:	lea    rdi,[rip+0x578f]        # 1ebb5 <_IO_stdin_used+0xbb5>
   19426:	lea    r9,[rip+0x574a]        # 1eb77 <_IO_stdin_used+0xb77>
   1942d:	lea    r8,[rip+0x5751]        # 1eb85 <_IO_stdin_used+0xb85>
   19434:	movzx  ecx,BYTE PTR [rdx+0x3]
   19438:	test   cl,0xf0
   1943b:	cmove  rax,rdi
   1943f:	and    ecx,0xf
   19442:	lea    rcx,[rip+0x5735]        # 1eb7e <_IO_stdin_used+0xb7e>
   19449:	mov    edi,0x1
   1944e:	cmove  r9,rcx
   19452:	lea    rcx,[rip+0x566c]        # 1eac5 <_IO_stdin_used+0xac5>
   19459:	cmp    BYTE PTR [rdx+0x2],0x0
   1945d:	cmove  r8,rcx
   19461:	sub    rsp,0x8
   19465:	movzx  ecx,WORD PTR [rdx]
   19468:	push   rax
   19469:	lea    rdx,[rsi+0x58]
   1946d:	lea    rsi,[rip+0x9504]        # 22978 <_IO_stdin_used+0x4978>
   19474:	xor    eax,eax
   19476:	call   5200 <__printf_chk@plt>
   1947b:	pop    rsi
   1947c:	pop    rdi
   1947d:	jmp    19366 <sched_process+0x96>
   19482:	nop    WORD PTR [rax+rax*1+0x0]
   19488:	cmp    eax,0x22802
   1948d:	je     19a18 <sched_process+0x748>
   19493:	cmp    eax,0x22803
   19498:	jne    19902 <sched_process+0x632>
   1949e:	test   BYTE PTR [rip+0x11bfc],0x40        # 2b0a1 <opt+0x1>
   194a5:	je     19366 <sched_process+0x96>
   194ab:	mov    rax,QWORD PTR [rdi+0x50]
   194af:	sub    rsp,0x8
   194b3:	lea    rdx,[rdi+0x58]
   194b7:	lea    rsi,[rip+0x9442]        # 22900 <_IO_stdin_used+0x4900>
   194be:	mov    edi,0x1
   194c3:	mov    r9,QWORD PTR [rax+0x4]
   194c7:	movzx  r8d,WORD PTR [rax]
   194cb:	movzx  ecx,WORD PTR [rax+0x2]
   194cf:	mov    eax,DWORD PTR [rax+0xc]
   194d2:	push   rax
   194d3:	xor    eax,eax
   194d5:	call   5200 <__printf_chk@plt>
   194da:	pop    r10
   194dc:	pop    r11
   194de:	jmp    19366 <sched_process+0x96>
   194e3:	nop    DWORD PTR [rax+rax*1+0x0]
   194e8:	cmp    eax,0x22211
   194ed:	je     19f70 <sched_process+0xca0>
   194f3:	jbe    19840 <sched_process+0x570>
   194f9:	cmp    eax,0x22215
   194fe:	je     19e80 <sched_process+0xbb0>
   19504:	jbe    19548 <sched_process+0x278>
   19506:	cmp    eax,0x22216
   1950b:	je     19a60 <sched_process+0x790>
   19511:	cmp    eax,0x22217
   19516:	jne    19902 <sched_process+0x632>
   1951c:	test   BYTE PTR [rip+0x11b7e],0x40        # 2b0a1 <opt+0x1>
   19523:	je     19366 <sched_process+0x96>
   19529:	mov    rax,QWORD PTR [rdi+0x50]
   1952d:	lea    rdx,[rdi+0x58]
   19531:	lea    rsi,[rip+0x9360]        # 22898 <_IO_stdin_used+0x4898>
   19538:	movzx  ecx,WORD PTR [rax+0x2]
   1953c:	movzx  r8d,WORD PTR [rax]
   19540:	jmp    19d3c <sched_process+0xa6c>
   19545:	nop    DWORD PTR [rax]
   19548:	cmp    eax,0x22213
   1954d:	je     19ac0 <sched_process+0x7f0>
   19553:	cmp    eax,0x22214
   19558:	jne    19902 <sched_process+0x632>
   1955e:	test   BYTE PTR [rip+0x11b3c],0x40        # 2b0a1 <opt+0x1>
   19565:	je     19366 <sched_process+0x96>
   1956b:	mov    rbx,QWORD PTR [rdi+0x50]
   1956f:	sub    rsp,0x8
   19573:	lea    rdx,[rdi+0x58]
   19577:	lea    rsi,[rip+0x9272]        # 227f0 <_IO_stdin_used+0x47f0>
   1957e:	mov    edi,0x1
   19583:	mov    eax,DWORD PTR [rbx+0x8]
   19586:	mov    r9d,DWORD PTR [rbx+0xc]
   1958a:	movzx  r8d,WORD PTR [rbx]
   1958e:	movzx  ecx,WORD PTR [rbx+0x2]
   19592:	push   rax
   19593:	xor    eax,eax
   19595:	call   5200 <__printf_chk@plt>
   1959a:	mov    edx,DWORD PTR [rbx+0x4]
   1959d:	pop    rsi
   1959e:	lea    rsi,[rip+0x57cc]        # 1ed71 <_IO_stdin_used+0xd71>
   195a5:	pop    rdi
   195a6:	cmp    edx,0xffffffff
   195a9:	jne    19dac <sched_process+0xadc>
   195af:	pop    rcx
   195b0:	lea    rdi,[rip+0x57a7]        # 1ed5e <_IO_stdin_used+0xd5e>
   195b7:	pop    rbx
   195b8:	pop    rbp
   195b9:	jmp    5090 <puts@plt>
   195be:	xchg   ax,ax
   195c0:	cmp    eax,0x2200b
   195c5:	je     1a320 <sched_process+0x1050>
   195cb:	jbe    196c0 <sched_process+0x3f0>
   195d1:	cmp    eax,0x22206
   195d6:	je     19fb8 <sched_process+0xce8>
   195dc:	jbe    19790 <sched_process+0x4c0>
   195e2:	cmp    eax,0x22209
   195e7:	je     19f20 <sched_process+0xc50>
   195ed:	jbe    19688 <sched_process+0x3b8>
   195f3:	cmp    eax,0x2220a
   195f8:	je     19b10 <sched_process+0x840>
   195fe:	cmp    eax,0x2220b
   19603:	jne    19902 <sched_process+0x632>
   19609:	test   BYTE PTR [rip+0x11a91],0x40        # 2b0a1 <opt+0x1>
   19610:	je     19366 <sched_process+0x96>
   19616:	mov    r8,QWORD PTR [rdi+0x50]
   1961a:	mov    r9,QWORD PTR [r8]
   1961d:	test   r9,r9
   19620:	js     1a4bc <sched_process+0x11ec>
   19626:	pxor   xmm0,xmm0
   1962a:	cvtsi2sd xmm0,r9
   1962f:	mov    ecx,DWORD PTR [r8+0xc]
   19633:	mov    edx,0x1
   19638:	mulsd  xmm0,QWORD PTR [rip+0xb2a8]        # 248e8 <__PRETTY_FUNCTION__.5821+0x18>
   19640:	shl    rdx,cl
   19643:	test   rdx,rdx
   19646:	js     1a49e <sched_process+0x11ce>
   1964c:	pxor   xmm1,xmm1
   19650:	cvtsi2sd xmm1,rdx
   19655:	divsd  xmm0,xmm1
   19659:	movzx  ecx,WORD PTR [r8+0xa]
   1965e:	movzx  r8d,WORD PTR [r8+0x8]
   19663:	add    rsp,0x8
   19667:	lea    rdx,[rsi+0x58]
   1966b:	pop    rbx
   1966c:	lea    rsi,[rip+0x8f5d]        # 225d0 <_IO_stdin_used+0x45d0>
   19673:	pop    rbp
   19674:	mov    edi,0x1
   19679:	mov    eax,0x1
   1967e:	jmp    5200 <__printf_chk@plt>
   19683:	nop    DWORD PTR [rax+rax*1+0x0]
   19688:	cmp    eax,0x22207
   1968d:	je     19970 <sched_process+0x6a0>
   19693:	cmp    eax,0x22208
   19698:	jne    19902 <sched_process+0x632>
   1969e:	lea    rdx,[rdi+0x58]
   196a2:	lea    rsi,[rip+0x5681]        # 1ed2a <_IO_stdin_used+0xd2a>
   196a9:	test   BYTE PTR [rip+0x119f1],0x40        # 2b0a1 <opt+0x1>
   196b0:	je     19366 <sched_process+0x96>
   196b6:	jmp    198dd <sched_process+0x60d>
   196bb:	nop    DWORD PTR [rax+rax*1+0x0]
   196c0:	cmp    eax,0x22005
   196c5:	je     19f40 <sched_process+0xc70>
   196cb:	jbe    198a8 <sched_process+0x5d8>
   196d1:	cmp    eax,0x22008
   196d6:	je     19dc0 <sched_process+0xaf0>
   196dc:	jbe    19750 <sched_process+0x480>
   196de:	cmp    eax,0x22009
   196e3:	je     199b8 <sched_process+0x6e8>
   196e9:	cmp    eax,0x2200a
   196ee:	jne    19902 <sched_process+0x632>
   196f4:	test   BYTE PTR [rip+0x119a6],0x40        # 2b0a1 <opt+0x1>
   196fb:	je     19366 <sched_process+0x96>
   19701:	mov    rcx,QWORD PTR [rdi+0x50]
   19705:	mov    edx,0x10624dd3
   1970a:	sub    rsp,0x8
   1970e:	lea    rsi,[rip+0x8d23]        # 22438 <_IO_stdin_used+0x4438>
   19715:	mov    r10d,DWORD PTR [rcx+0x4]
   19719:	movzx  r8d,WORD PTR [rcx]
   1971d:	movzx  ecx,WORD PTR [rcx+0x2]
   19721:	mov    eax,r10d
   19724:	mul    edx
   19726:	shr    edx,0x6
   19729:	mov    r9d,edx
   1972c:	lea    rdx,[rdi+0x58]
   19730:	mov    edi,0x1
   19735:	imul   eax,r9d,0x3e8
   1973c:	sub    r10d,eax
   1973f:	xor    eax,eax
   19741:	push   r10
   19743:	call   5200 <__printf_chk@plt>
   19748:	pop    rbx
   19749:	pop    rbp
   1974a:	jmp    19366 <sched_process+0x96>
   1974f:	nop
   19750:	cmp    eax,0x22006
   19755:	je     19938 <sched_process+0x668>
   1975b:	cmp    eax,0x22007
   19760:	jne    19902 <sched_process+0x632>
   19766:	test   BYTE PTR [rip+0x11934],0x40        # 2b0a1 <opt+0x1>
   1976d:	je     19366 <sched_process+0x96>
   19773:	mov    rax,QWORD PTR [rdi+0x50]
   19777:	lea    rdx,[rdi+0x58]
   1977b:	lea    rsi,[rip+0x5554]        # 1ecd6 <_IO_stdin_used+0xcd6>
   19782:	mov    r8d,DWORD PTR [rax+0x4]
   19786:	mov    ecx,DWORD PTR [rax]
   19788:	jmp    19d3c <sched_process+0xa6c>
   1978d:	nop    DWORD PTR [rax]
   19790:	cmp    eax,0x22203
   19795:	je     19d50 <sched_process+0xa80>
   1979b:	jbe    19800 <sched_process+0x530>
   1979d:	cmp    eax,0x22204
   197a2:	je     19366 <sched_process+0x96>
   197a8:	cmp    eax,0x22205
   197ad:	jne    19902 <sched_process+0x632>
   197b3:	test   BYTE PTR [rip+0x118e7],0x40        # 2b0a1 <opt+0x1>
   197ba:	je     19366 <sched_process+0x96>
   197c0:	mov    rax,QWORD PTR [rdi+0x50]
   197c4:	sub    rsp,0x8
   197c8:	lea    rdx,[rdi+0x58]
   197cc:	lea    rsi,[rip+0x8d15]        # 224e8 <_IO_stdin_used+0x44e8>
   197d3:	mov    edi,0x1
   197d8:	mov    r9d,DWORD PTR [rax+0x4]
   197dc:	movzx  r8d,WORD PTR [rax]
   197e0:	movzx  ecx,WORD PTR [rax+0x2]
   197e4:	mov    eax,DWORD PTR [rax+0x8]
   197e7:	push   rax
   197e8:	xor    eax,eax
   197ea:	call   5200 <__printf_chk@plt>
   197ef:	pop    r9
   197f1:	pop    r10
   197f3:	jmp    19366 <sched_process+0x96>
   197f8:	nop    DWORD PTR [rax+rax*1+0x0]
   19800:	cmp    eax,0x22201
   19805:	je     19366 <sched_process+0x96>
   1980b:	cmp    eax,0x22202
   19810:	jne    19902 <sched_process+0x632>
   19816:	test   BYTE PTR [rip+0x11884],0x40        # 2b0a1 <opt+0x1>
   1981d:	je     19366 <sched_process+0x96>
   19823:	mov    rax,QWORD PTR [rdi+0x50]
   19827:	lea    rdx,[rdi+0x58]
   1982b:	lea    rsi,[rip+0x8c56]        # 22488 <_IO_stdin_used+0x4488>
   19832:	movzx  ecx,WORD PTR [rax+0x2]
   19836:	mov    r9d,DWORD PTR [rax+0x4]
   1983a:	movzx  r8d,WORD PTR [rax]
   1983e:	jmp    1988f <sched_process+0x5bf>
   19840:	cmp    eax,0x2220e
   19845:	je     19d18 <sched_process+0xa48>
   1984b:	jb     19cd0 <sched_process+0xa00>
   19851:	cmp    eax,0x2220f
   19856:	je     19c00 <sched_process+0x930>
   1985c:	cmp    eax,0x22210
   19861:	jne    19902 <sched_process+0x632>
   19867:	test   BYTE PTR [rip+0x11833],0x40        # 2b0a1 <opt+0x1>
   1986e:	je     19366 <sched_process+0x96>
   19874:	mov    rax,QWORD PTR [rdi+0x50]
   19878:	lea    rdx,[rdi+0x58]
   1987c:	lea    rsi,[rip+0x8ea5]        # 22728 <_IO_stdin_used+0x4728>
   19883:	movzx  ecx,WORD PTR [rax]
   19886:	mov    r9d,DWORD PTR [rax+0x4]
   1988a:	movzx  r8d,WORD PTR [rax+0x2]
   1988f:	add    rsp,0x8
   19893:	mov    edi,0x1
   19898:	xor    eax,eax
   1989a:	pop    rbx
   1989b:	pop    rbp
   1989c:	jmp    5200 <__printf_chk@plt>
   198a1:	nop    DWORD PTR [rax+0x0]
   198a8:	cmp    eax,0x22003
   198ad:	ja     19c48 <sched_process+0x978>
   198b3:	cmp    eax,0x22002
   198b8:	jae    19c78 <sched_process+0x9a8>
   198be:	cmp    eax,0x22001
   198c3:	jne    19902 <sched_process+0x632>
   198c5:	lea    rdx,[rdi+0x58]
   198c9:	lea    rsi,[rip+0x53ec]        # 1ecbc <_IO_stdin_used+0xcbc>
   198d0:	test   BYTE PTR [rip+0x117ca],0x40        # 2b0a1 <opt+0x1>
   198d7:	je     19366 <sched_process+0x96>
   198dd:	add    rsp,0x8
   198e1:	mov    edi,0x1
   198e6:	xor    eax,eax
   198e8:	pop    rbx
   198e9:	pop    rbp
   198ea:	jmp    5200 <__printf_chk@plt>
   198ef:	nop
   198f0:	movsxd rax,DWORD PTR [rdi+0x48]
   198f4:	add    QWORD PTR [rdi+0x250],rax
   198fb:	add    QWORD PTR [rdi+0x2b0],rax
   19902:	add    rsp,0x8
   19906:	mov    rdi,rdx
   19909:	pop    rbx
   1990a:	pop    rbp
   1990b:	jmp    16030 <process_generic>
   19910:	cmp    DWORD PTR [rdi+0x40],0x2800a
   19917:	je     19928 <sched_process+0x658>
   19919:	mov    rdi,rdx
   1991c:	jmp    16030 <process_generic>
   19921:	nop    DWORD PTR [rax+0x0]
   19928:	jmp    17eb0 <sched_switch_process>
   1992d:	nop    DWORD PTR [rax]
   19930:	jmp    18710 <sched_runstate_process>
   19935:	nop    DWORD PTR [rax]
   19938:	test   BYTE PTR [rip+0x11762],0x40        # 2b0a1 <opt+0x1>
   1993f:	je     19366 <sched_process+0x96>
   19945:	mov    rax,QWORD PTR [rdi+0x50]
   19949:	lea    rdx,[rdi+0x58]
   1994d:	lea    rsi,[rip+0x8aa4]        # 223f8 <_IO_stdin_used+0x43f8>
   19954:	mov    ecx,DWORD PTR [rax]
   19956:	add    rsp,0x8
   1995a:	mov    edi,0x1
   1995f:	xor    eax,eax
   19961:	pop    rbx
   19962:	pop    rbp
   19963:	jmp    5200 <__printf_chk@plt>
   19968:	nop    DWORD PTR [rax+rax*1+0x0]
   19970:	test   BYTE PTR [rip+0x1172a],0x40        # 2b0a1 <opt+0x1>
   19977:	je     19366 <sched_process+0x96>
   1997d:	mov    rax,QWORD PTR [rdi+0x50]
   19981:	lea    rdx,[rdi+0x58]
   19985:	mov    edi,0x1
   1998a:	mov    esi,DWORD PTR [rax+0xc]
   1998d:	movzx  r8d,WORD PTR [rax]
   19991:	mov    r9d,DWORD PTR [rax+0x4]
   19995:	movzx  ecx,WORD PTR [rax+0x2]
   19999:	push   rsi
   1999a:	mov    eax,DWORD PTR [rax+0x8]
   1999d:	lea    rsi,[rip+0x8ba4]        # 22548 <_IO_stdin_used+0x4548>
   199a4:	push   rax
   199a5:	xor    eax,eax
   199a7:	call   5200 <__printf_chk@plt>
   199ac:	pop    rdi
   199ad:	pop    r8
   199af:	jmp    19366 <sched_process+0x96>
   199b4:	nop    DWORD PTR [rax+0x0]
   199b8:	test   BYTE PTR [rip+0x116e2],0x40        # 2b0a1 <opt+0x1>
   199bf:	je     19366 <sched_process+0x96>
   199c5:	mov    rax,QWORD PTR [rdi+0x50]
   199c9:	lea    rdx,[rip+0x51ae]        # 1eb7e <_IO_stdin_used+0xb7e>
   199d0:	lea    r9,[rip+0x51a0]        # 1eb77 <_IO_stdin_used+0xb77>
   199d7:	lea    r8,[rip+0x51a7]        # 1eb85 <_IO_stdin_used+0xb85>
   199de:	lea    rsi,[rip+0x8a33]        # 22418 <_IO_stdin_used+0x4418>
   199e5:	cmp    BYTE PTR [rax+0x3],0x0
   199e9:	movzx  ecx,WORD PTR [rax]
   199ec:	cmove  r9,rdx
   199f0:	cmp    BYTE PTR [rax+0x2],0x0
   199f4:	lea    rdx,[rip+0x50ca]        # 1eac5 <_IO_stdin_used+0xac5>
   199fb:	cmove  r8,rdx
   199ff:	add    rsp,0x8
   19a03:	xor    eax,eax
   19a05:	lea    rdx,[rdi+0x58]
   19a09:	pop    rbx
   19a0a:	mov    edi,0x1
   19a0f:	pop    rbp
   19a10:	jmp    5200 <__printf_chk@plt>
   19a15:	nop    DWORD PTR [rax]
   19a18:	test   BYTE PTR [rip+0x11682],0x40        # 2b0a1 <opt+0x1>
   19a1f:	je     19366 <sched_process+0x96>
   19a25:	mov    rax,QWORD PTR [rdi+0x50]
   19a29:	sub    rsp,0x8
   19a2d:	lea    rdx,[rdi+0x58]
   19a31:	lea    rsi,[rip+0x8e88]        # 228c0 <_IO_stdin_used+0x48c0>
   19a38:	mov    edi,0x1
   19a3d:	mov    r9,QWORD PTR [rax+0x4]
   19a41:	movzx  r8d,WORD PTR [rax]
   19a45:	movzx  ecx,WORD PTR [rax+0x2]
   19a49:	push   QWORD PTR [rax+0xc]
   19a4c:	xor    eax,eax
   19a4e:	call   5200 <__printf_chk@plt>
   19a53:	pop    rbx
   19a54:	pop    rbp
   19a55:	jmp    19366 <sched_process+0x96>
   19a5a:	nop    WORD PTR [rax+rax*1+0x0]
   19a60:	test   BYTE PTR [rip+0x1163a],0x40        # 2b0a1 <opt+0x1>
   19a67:	je     19366 <sched_process+0x96>
   19a6d:	mov    rcx,QWORD PTR [rdi+0x50]
   19a71:	mov    edx,0x10624dd3
   19a76:	sub    rsp,0x8
   19a7a:	lea    rsi,[rip+0x8de7]        # 22868 <_IO_stdin_used+0x4868>
   19a81:	mov    r10d,DWORD PTR [rcx+0x4]
   19a85:	movzx  r8d,WORD PTR [rcx]
   19a89:	movzx  ecx,WORD PTR [rcx+0x2]
   19a8d:	mov    eax,r10d
   19a90:	mul    edx
   19a92:	shr    edx,0x6
   19a95:	mov    r9d,edx
   19a98:	lea    rdx,[rdi+0x58]
   19a9c:	mov    edi,0x1
   19aa1:	imul   eax,r9d,0x3e8
   19aa8:	sub    r10d,eax
   19aab:	xor    eax,eax
   19aad:	push   r10
   19aaf:	call   5200 <__printf_chk@plt>
   19ab4:	pop    rax
   19ab5:	pop    rdx
   19ab6:	jmp    19366 <sched_process+0x96>
   19abb:	nop    DWORD PTR [rax+rax*1+0x0]
   19ac0:	test   BYTE PTR [rip+0x115da],0x40        # 2b0a1 <opt+0x1>
   19ac7:	je     19366 <sched_process+0x96>
   19acd:	mov    rax,QWORD PTR [rdi+0x50]
   19ad1:	sub    rsp,0x8
   19ad5:	lea    rdx,[rdi+0x58]
   19ad9:	lea    rsi,[rip+0x8ce0]        # 227c0 <_IO_stdin_used+0x47c0>
   19ae0:	mov    edi,0x1
   19ae5:	movzx  r9d,WORD PTR [rax+0xc]
   19aea:	movzx  r8d,WORD PTR [rax+0x8]
   19aef:	movzx  ecx,WORD PTR [rax+0xa]
   19af3:	movzx  eax,WORD PTR [rax+0xe]
   19af7:	push   rax
   19af8:	xor    eax,eax
   19afa:	call   5200 <__printf_chk@plt>
   19aff:	pop    r8
   19b01:	pop    r9
   19b03:	jmp    19366 <sched_process+0x96>
   19b08:	nop    DWORD PTR [rax+rax*1+0x0]
   19b10:	test   BYTE PTR [rip+0x1158a],0x40        # 2b0a1 <opt+0x1>
   19b17:	je     19366 <sched_process+0x96>
   19b1d:	mov    rax,QWORD PTR [rdi+0x50]
   19b21:	lea    rdx,[rdi+0x58]
   19b25:	lea    rsi,[rip+0x8a74]        # 225a0 <_IO_stdin_used+0x45a0>
   19b2c:	movzx  ecx,WORD PTR [rax+0x2]
   19b30:	movzx  r9d,WORD PTR [rax+0x4]
   19b35:	movzx  r8d,WORD PTR [rax]
   19b39:	jmp    1988f <sched_process+0x5bf>
   19b3e:	xchg   ax,ax
   19b40:	test   BYTE PTR [rip+0x1155a],0x40        # 2b0a1 <opt+0x1>
   19b47:	je     19366 <sched_process+0x96>
   19b4d:	mov    rbx,QWORD PTR [rdi+0x50]
   19b51:	lea    rax,[rip+0x4f6d]        # 1eac5 <_IO_stdin_used+0xac5>
   19b58:	lea    rdx,[rdi+0x58]
   19b5c:	mov    edi,0x1
   19b61:	lea    r8,[rip+0x501d]        # 1eb85 <_IO_stdin_used+0xb85>
   19b68:	lea    rsi,[rip+0x524b]        # 1edba <_IO_stdin_used+0xdba>
   19b6f:	cmp    WORD PTR [rbx],0x0
   19b73:	movzx  ecx,WORD PTR [rbx+0x2]
   19b77:	cmove  r8,rax
   19b7b:	xor    eax,eax
   19b7d:	call   5200 <__printf_chk@plt>
   19b82:	movzx  eax,WORD PTR [rbx+0x4]
   19b86:	cmp    ax,0xffff
   19b8a:	je     1a46e <sched_process+0x119e>
   19b90:	movsx  edx,WORD PTR [rbx+0x6]
   19b94:	add    rsp,0x8
   19b98:	movsx  ecx,ax
   19b9b:	lea    rsi,[rip+0x5233]        # 1edd5 <_IO_stdin_used+0xdd5>
   19ba2:	pop    rbx
   19ba3:	mov    edi,0x1
   19ba8:	xor    eax,eax
   19baa:	pop    rbp
   19bab:	jmp    5200 <__printf_chk@plt>
   19bb0:	test   BYTE PTR [rip+0x114ea],0x40        # 2b0a1 <opt+0x1>
   19bb7:	je     19366 <sched_process+0x96>
   19bbd:	mov    rax,QWORD PTR [rdi+0x50]
   19bc1:	lea    rdx,[rdi+0x58]
   19bc5:	lea    rsi,[rip+0x8dfc]        # 229c8 <_IO_stdin_used+0x49c8>
   19bcc:	movzx  ecx,WORD PTR [rax+0x2]
   19bd0:	mov    r9d,DWORD PTR [rax+0x4]
   19bd4:	movzx  r8d,WORD PTR [rax]
   19bd8:	jmp    1988f <sched_process+0x5bf>
   19bdd:	nop    DWORD PTR [rax]
   19be0:	lea    rdx,[rdi+0x58]
   19be4:	lea    rsi,[rip+0x51b7]        # 1eda2 <_IO_stdin_used+0xda2>
   19beb:	test   BYTE PTR [rip+0x114af],0x40        # 2b0a1 <opt+0x1>
   19bf2:	je     19366 <sched_process+0x96>
   19bf8:	jmp    198dd <sched_process+0x60d>
   19bfd:	nop    DWORD PTR [rax]
   19c00:	test   BYTE PTR [rip+0x1149a],0x40        # 2b0a1 <opt+0x1>
   19c07:	je     19366 <sched_process+0x96>
   19c0d:	mov    rax,QWORD PTR [rdi+0x50]
   19c11:	sub    rsp,0x8
   19c15:	lea    rdx,[rdi+0x58]
   19c19:	lea    rsi,[rip+0x8ad8]        # 226f8 <_IO_stdin_used+0x46f8>
   19c20:	mov    edi,0x1
   19c25:	movzx  r9d,WORD PTR [rax+0x4]
   19c2a:	movzx  r8d,WORD PTR [rax]
   19c2e:	movzx  ecx,WORD PTR [rax+0x2]
   19c32:	movzx  eax,WORD PTR [rax+0x6]
   19c36:	push   rax
   19c37:	xor    eax,eax
   19c39:	call   5200 <__printf_chk@plt>
   19c3e:	pop    rbx
   19c3f:	pop    rbp
   19c40:	jmp    19366 <sched_process+0x96>
   19c45:	nop    DWORD PTR [rax]
   19c48:	test   BYTE PTR [rip+0x11452],0x40        # 2b0a1 <opt+0x1>
   19c4f:	je     19366 <sched_process+0x96>
   19c55:	mov    rax,QWORD PTR [rdi+0x50]
   19c59:	lea    rdx,[rdi+0x58]
   19c5d:	lea    rsi,[rip+0x873c]        # 223a0 <_IO_stdin_used+0x43a0>
   19c64:	mov    ecx,DWORD PTR [rax+0x4]
   19c67:	mov    r9d,DWORD PTR [rax]
   19c6a:	mov    r8d,DWORD PTR [rax+0x8]
   19c6e:	jmp    1988f <sched_process+0x5bf>
   19c73:	nop    DWORD PTR [rax+rax*1+0x0]
   19c78:	test   BYTE PTR [rip+0x11422],0x40        # 2b0a1 <opt+0x1>
   19c7f:	je     19366 <sched_process+0x96>
   19c85:	mov    rdx,QWORD PTR [rdi+0x50]
   19c89:	cmp    eax,0x22002
   19c8e:	lea    rcx,[rip+0x4ed7]        # 1eb6c <_IO_stdin_used+0xb6c>
   19c95:	lea    rax,[rip+0x4ed6]        # 1eb72 <_IO_stdin_used+0xb72>
   19c9c:	cmovne rcx,rax
   19ca0:	sub    rsp,0x8
   19ca4:	xor    eax,eax
   19ca6:	mov    edi,DWORD PTR [rdx+0x8]
   19ca9:	mov    r9d,DWORD PTR [rdx+0x4]
   19cad:	mov    r8d,DWORD PTR [rdx]
   19cb0:	lea    rdx,[rsi+0x58]
   19cb4:	lea    rsi,[rip+0x86b5]        # 22370 <_IO_stdin_used+0x4370>
   19cbb:	push   rdi
   19cbc:	mov    edi,0x1
   19cc1:	call   5200 <__printf_chk@plt>
   19cc6:	pop    rax
   19cc7:	pop    rdx
   19cc8:	jmp    19366 <sched_process+0x96>
   19ccd:	nop    DWORD PTR [rax]
   19cd0:	test   BYTE PTR [rip+0x113ca],0x40        # 2b0a1 <opt+0x1>
   19cd7:	je     19366 <sched_process+0x96>
   19cdd:	mov    rax,QWORD PTR [rdi+0x50]
   19ce1:	sub    rsp,0x8
   19ce5:	lea    rdx,[rdi+0x58]
   19ce9:	lea    rsi,[rip+0x8988]        # 22678 <_IO_stdin_used+0x4678>
   19cf0:	mov    edi,0x1
   19cf5:	mov    r9d,DWORD PTR [rax+0x4]
   19cf9:	movzx  r8d,WORD PTR [rax]
   19cfd:	movzx  ecx,WORD PTR [rax+0x2]
   19d01:	mov    eax,DWORD PTR [rax+0x8]
   19d04:	push   rax
   19d05:	xor    eax,eax
   19d07:	call   5200 <__printf_chk@plt>
   19d0c:	pop    rax
   19d0d:	pop    rdx
   19d0e:	jmp    19366 <sched_process+0x96>
   19d13:	nop    DWORD PTR [rax+rax*1+0x0]
   19d18:	test   BYTE PTR [rip+0x11382],0x40        # 2b0a1 <opt+0x1>
   19d1f:	je     19366 <sched_process+0x96>
   19d25:	mov    rax,QWORD PTR [rdi+0x50]
   19d29:	lea    rdx,[rdi+0x58]
   19d2d:	lea    rsi,[rip+0x898c]        # 226c0 <_IO_stdin_used+0x46c0>
   19d34:	movzx  ecx,WORD PTR [rax]
   19d37:	movzx  r8d,WORD PTR [rax+0x2]
   19d3c:	add    rsp,0x8
   19d40:	mov    edi,0x1
   19d45:	xor    eax,eax
   19d47:	pop    rbx
   19d48:	pop    rbp
   19d49:	jmp    5200 <__printf_chk@plt>
   19d4e:	xchg   ax,ax
   19d50:	test   BYTE PTR [rip+0x1134a],0x40        # 2b0a1 <opt+0x1>
   19d57:	je     19366 <sched_process+0x96>
   19d5d:	mov    rbx,QWORD PTR [rdi+0x50]
   19d61:	lea    rdx,[rdi+0x58]
   19d65:	lea    rsi,[rip+0x874c]        # 224b8 <_IO_stdin_used+0x44b8>
   19d6c:	xor    eax,eax
   19d6e:	mov    edi,0x1
   19d73:	movzx  ecx,WORD PTR [rbx+0x2]
   19d77:	mov    r9d,DWORD PTR [rbx+0x4]
   19d7b:	movzx  r8d,WORD PTR [rbx]
   19d7f:	call   5200 <__printf_chk@plt>
   19d84:	mov    edx,DWORD PTR [rbx+0x8]
   19d87:	cmp    edx,0x80000000
   19d8d:	je     19da2 <sched_process+0xad2>
   19d8f:	lea    rsi,[rip+0x4f7a]        # 1ed10 <_IO_stdin_used+0xd10>
   19d96:	mov    edi,0x1
   19d9b:	xor    eax,eax
   19d9d:	call   5200 <__printf_chk@plt>
   19da2:	mov    edx,DWORD PTR [rbx+0xc]
   19da5:	lea    rsi,[rip+0x4f72]        # 1ed1e <_IO_stdin_used+0xd1e>
   19dac:	add    rsp,0x8
   19db0:	mov    edi,0x1
   19db5:	xor    eax,eax
   19db7:	pop    rbx
   19db8:	pop    rbp
   19db9:	jmp    5200 <__printf_chk@plt>
   19dbe:	xchg   ax,ax
   19dc0:	test   BYTE PTR [rip+0x112da],0x40        # 2b0a1 <opt+0x1>
   19dc7:	je     19366 <sched_process+0x96>
   19dcd:	mov    rax,QWORD PTR [rdi+0x50]
   19dd1:	lea    rdx,[rdi+0x58]
   19dd5:	lea    rsi,[rip+0x4f16]        # 1ecf2 <_IO_stdin_used+0xcf2>
   19ddc:	mov    r8d,DWORD PTR [rax+0x4]
   19de0:	mov    ecx,DWORD PTR [rax]
   19de2:	jmp    19d3c <sched_process+0xa6c>
   19de7:	nop    WORD PTR [rax+rax*1+0x0]
   19df0:	test   BYTE PTR [rip+0x112aa],0x40        # 2b0a1 <opt+0x1>
   19df7:	je     19366 <sched_process+0x96>
   19dfd:	mov    rax,QWORD PTR [rdi+0x50]
   19e01:	sub    rsp,0x8
   19e05:	lea    rdx,[rdi+0x58]
   19e09:	lea    rsi,[rip+0x8b28]        # 22938 <_IO_stdin_used+0x4938>
   19e10:	mov    edi,0x1
   19e15:	mov    r9,QWORD PTR [rax+0x4]
   19e19:	movzx  r8d,WORD PTR [rax]
   19e1d:	movzx  ecx,WORD PTR [rax+0x2]
   19e21:	push   QWORD PTR [rax+0xc]
   19e24:	xor    eax,eax
   19e26:	call   5200 <__printf_chk@plt>
   19e2b:	pop    r8
   19e2d:	pop    r9
   19e2f:	jmp    19366 <sched_process+0x96>
   19e34:	nop    DWORD PTR [rax+0x0]
   19e38:	test   BYTE PTR [rip+0x11262],0x40        # 2b0a1 <opt+0x1>
   19e3f:	je     19366 <sched_process+0x96>
   19e45:	mov    rax,QWORD PTR [rdi+0x50]
   19e49:	sub    rsp,0x8
   19e4d:	lea    rdx,[rdi+0x58]
   19e51:	lea    rsi,[rip+0x8bc8]        # 22a20 <_IO_stdin_used+0x4a20>
   19e58:	mov    edi,0x1
   19e5d:	movzx  ecx,WORD PTR [rax+0x2]
   19e61:	movzx  r9d,WORD PTR [rax+0x4]
   19e66:	movzx  r8d,WORD PTR [rax]
   19e6a:	movzx  eax,WORD PTR [rax+0x6]
   19e6e:	push   rax
   19e6f:	xor    eax,eax
   19e71:	call   5200 <__printf_chk@plt>
   19e76:	pop    rdx
   19e77:	pop    rcx
   19e78:	jmp    19366 <sched_process+0x96>
   19e7d:	nop    DWORD PTR [rax]
   19e80:	test   BYTE PTR [rip+0x1121a],0x40        # 2b0a1 <opt+0x1>
   19e87:	je     19366 <sched_process+0x96>
   19e8d:	mov    rax,QWORD PTR [rdi+0x50]
   19e91:	lea    r10,[rip+0x4d13]        # 1ebab <_IO_stdin_used+0xbab>
   19e98:	lea    rdx,[rip+0x4d16]        # 1ebb5 <_IO_stdin_used+0xbb5>
   19e9f:	lea    r11,[rip+0x4c1f]        # 1eac5 <_IO_stdin_used+0xac5>
   19ea6:	lea    rbx,[rip+0x4cd1]        # 1eb7e <_IO_stdin_used+0xb7e>
   19ead:	cmp    BYTE PTR [rax+0x7],0x0
   19eb1:	cmove  r10,rdx
   19eb5:	cmp    BYTE PTR [rax+0x5],0x0
   19eb9:	je     19ed8 <sched_process+0xc08>
   19ebb:	cmp    BYTE PTR [rax+0x6],0x0
   19ebf:	lea    r11,[rip+0x4cfd]        # 1ebc3 <_IO_stdin_used+0xbc3>
   19ec6:	lea    rdx,[rip+0x4d01]        # 1ebce <_IO_stdin_used+0xbce>
   19ecd:	cmove  r11,rdx
   19ed1:	lea    rbx,[rip+0x4c9f]        # 1eb77 <_IO_stdin_used+0xb77>
   19ed8:	cmp    BYTE PTR [rax+0x4],0x0
   19edc:	lea    rdx,[rip+0x4be2]        # 1eac5 <_IO_stdin_used+0xac5>
   19ee3:	movzx  ecx,WORD PTR [rax]
   19ee6:	mov    edi,0x1
   19eeb:	lea    r9,[rip+0x4c93]        # 1eb85 <_IO_stdin_used+0xb85>
   19ef2:	movzx  r8d,WORD PTR [rax+0x2]
   19ef7:	cmove  r9,rdx
   19efb:	sub    rsp,0x8
   19eff:	lea    rdx,[rsi+0x58]
   19f03:	xor    eax,eax
   19f05:	push   r10
   19f07:	lea    rsi,[rip+0x892a]        # 22838 <_IO_stdin_used+0x4838>
   19f0e:	push   r11
   19f10:	push   rbx
   19f11:	call   5200 <__printf_chk@plt>
   19f16:	add    rsp,0x20
   19f1a:	jmp    19366 <sched_process+0x96>
   19f1f:	nop
   19f20:	lea    rdx,[rdi+0x58]
   19f24:	lea    rsi,[rip+0x4e1a]        # 1ed45 <_IO_stdin_used+0xd45>
   19f2b:	test   BYTE PTR [rip+0x1116f],0x40        # 2b0a1 <opt+0x1>
   19f32:	je     19366 <sched_process+0x96>
   19f38:	jmp    198dd <sched_process+0x60d>
   19f3d:	nop    DWORD PTR [rax]
   19f40:	test   BYTE PTR [rip+0x1115a],0x40        # 2b0a1 <opt+0x1>
   19f47:	je     19366 <sched_process+0x96>
   19f4d:	mov    rax,QWORD PTR [rdi+0x50]
   19f51:	lea    rdx,[rdi+0x58]
   19f55:	lea    rsi,[rip+0x8474]        # 223d0 <_IO_stdin_used+0x43d0>
   19f5c:	mov    ecx,DWORD PTR [rax+0x8]
   19f5f:	mov    r9d,DWORD PTR [rax+0x4]
   19f63:	mov    r8d,DWORD PTR [rax]
   19f66:	jmp    1988f <sched_process+0x5bf>
   19f6b:	nop    DWORD PTR [rax+rax*1+0x0]
   19f70:	test   BYTE PTR [rip+0x1112a],0x40        # 2b0a1 <opt+0x1>
   19f77:	je     19366 <sched_process+0x96>
   19f7d:	mov    rax,QWORD PTR [rdi+0x50]
   19f81:	sub    rsp,0x8
   19f85:	lea    rdx,[rdi+0x58]
   19f89:	lea    rsi,[rip+0x87d8]        # 22768 <_IO_stdin_used+0x4768>
   19f90:	mov    edi,0x1
   19f95:	movzx  r9d,WORD PTR [rax+0x12]
   19f9a:	movzx  ecx,WORD PTR [rax+0x10]
   19f9e:	push   QWORD PTR [rax+0x8]
   19fa1:	mov    r8,QWORD PTR [rax]
   19fa4:	xor    eax,eax
   19fa6:	call   5200 <__printf_chk@plt>
   19fab:	pop    r10
   19fad:	pop    r11
   19faf:	jmp    19366 <sched_process+0x96>
   19fb4:	nop    DWORD PTR [rax+0x0]
   19fb8:	test   BYTE PTR [rip+0x110e2],0x40        # 2b0a1 <opt+0x1>
   19fbf:	je     19366 <sched_process+0x96>
   19fc5:	mov    rax,QWORD PTR [rdi+0x50]
   19fc9:	lea    rdx,[rdi+0x58]
   19fcd:	lea    rsi,[rip+0x8554]        # 22528 <_IO_stdin_used+0x4528>
   19fd4:	movzx  ecx,WORD PTR [rax]
   19fd7:	jmp    19956 <sched_process+0x686>
   19fdc:	nop    DWORD PTR [rax+0x0]
   19fe0:	test   BYTE PTR [rip+0x110ba],0x40        # 2b0a1 <opt+0x1>
   19fe7:	je     19366 <sched_process+0x96>
   19fed:	mov    rax,QWORD PTR [rdi+0x50]
   19ff1:	lea    rdx,[rdi+0x58]
   19ff5:	lea    rsi,[rip+0x89a4]        # 229a0 <_IO_stdin_used+0x49a0>
   19ffc:	movzx  ecx,WORD PTR [rax+0x2]
   1a000:	mov    r9d,DWORD PTR [rax+0x4]
   1a004:	movzx  r8d,WORD PTR [rax]
   1a008:	jmp    1988f <sched_process+0x5bf>
   1a00d:	nop    DWORD PTR [rax]
   1a010:	test   BYTE PTR [rip+0x1108a],0x40        # 2b0a1 <opt+0x1>
   1a017:	je     19366 <sched_process+0x96>
   1a01d:	mov    rbx,QWORD PTR [rsi+0x50]
   1a021:	lea    rdx,[rsi+0x58]
   1a025:	mov    edi,0x1
   1a02a:	xor    eax,eax
   1a02c:	lea    rsi,[rip+0x4c3c]        # 1ec6f <_IO_stdin_used+0xc6f>
   1a033:	mov    ecx,DWORD PTR [rbx]
   1a035:	mov    r8d,DWORD PTR [rbx+0x4]
   1a039:	call   5200 <__printf_chk@plt>
   1a03e:	mov    ecx,DWORD PTR [rbx+0x8]
   1a041:	test   ecx,ecx
   1a043:	jne    1a442 <sched_process+0x1172>
   1a049:	mov    ecx,DWORD PTR [rbx+0xc]
   1a04c:	test   ecx,ecx
   1a04e:	jg     1a434 <sched_process+0x1164>
   1a054:	add    rsp,0x8
   1a058:	mov    edi,0xa
   1a05d:	pop    rbx
   1a05e:	pop    rbp
   1a05f:	jmp    5050 <putchar@plt>
   1a064:	nop    DWORD PTR [rax+0x0]
   1a068:	test   BYTE PTR [rip+0x11032],0x40        # 2b0a1 <opt+0x1>
   1a06f:	je     19366 <sched_process+0x96>
   1a075:	mov    r10,QWORD PTR [rsi+0x50]
   1a079:	mov    edx,0x10624dd3
   1a07e:	sub    rsp,0x8
   1a082:	mov    edi,0x1
   1a087:	mov    ecx,DWORD PTR [r10+0x8]
   1a08b:	mov    r8d,DWORD PTR [r10+0x4]
   1a08f:	mov    eax,ecx
   1a091:	mul    edx
   1a093:	shr    edx,0x6
   1a096:	mov    r9d,edx
   1a099:	lea    rdx,[rsi+0x58]
   1a09d:	lea    rsi,[rip+0x8264]        # 22308 <_IO_stdin_used+0x4308>
   1a0a4:	imul   eax,r9d,0x3e8
   1a0ab:	sub    ecx,eax
   1a0ad:	xor    eax,eax
   1a0af:	push   rcx
   1a0b0:	mov    ecx,DWORD PTR [r10]
   1a0b3:	call   5200 <__printf_chk@plt>
   1a0b8:	pop    r8
   1a0ba:	pop    r9
   1a0bc:	jmp    19366 <sched_process+0x96>
   1a0c1:	nop    DWORD PTR [rax+0x0]
   1a0c8:	test   BYTE PTR [rip+0x10fd2],0x40        # 2b0a1 <opt+0x1>
   1a0cf:	je     19366 <sched_process+0x96>
   1a0d5:	add    rsp,0x8
   1a0d9:	mov    rdi,rdx
   1a0dc:	pop    rbx
   1a0dd:	pop    rbp
   1a0de:	jmp    13180 <dump_sched_switch>
   1a0e3:	nop    DWORD PTR [rax+rax*1+0x0]
   1a0e8:	test   BYTE PTR [rip+0x10fb2],0x40        # 2b0a1 <opt+0x1>
   1a0ef:	je     19366 <sched_process+0x96>
   1a0f5:	mov    rax,QWORD PTR [rsi+0x50]
   1a0f9:	lea    rdx,[rsi+0x58]
   1a0fd:	lea    rsi,[rip+0x4b55]        # 1ec59 <_IO_stdin_used+0xc59>
   1a104:	mov    ecx,DWORD PTR [rax]
   1a106:	jmp    19956 <sched_process+0x686>
   1a10b:	nop    DWORD PTR [rax+rax*1+0x0]
   1a110:	test   BYTE PTR [rip+0x10f8a],0x40        # 2b0a1 <opt+0x1>
   1a117:	je     19366 <sched_process+0x96>
   1a11d:	mov    rax,QWORD PTR [rsi+0x50]
   1a121:	cmp    edi,0x28007
   1a127:	lea    rcx,[rip+0x4a1b]        # 1eb49 <_IO_stdin_used+0xb49>
   1a12e:	lea    rdx,[rsi+0x58]
   1a132:	mov    edi,0x1
   1a137:	lea    rsi,[rip+0x4aff]        # 1ec3d <_IO_stdin_used+0xc3d>
   1a13e:	mov    r10d,DWORD PTR [rax+0x8]
   1a142:	mov    r9d,DWORD PTR [rax+0x4]
   1a146:	mov    r8d,DWORD PTR [rax]
   1a149:	lea    rax,[rip+0x4a08]        # 1eb58 <_IO_stdin_used+0xb58>
   1a150:	cmovne rcx,rax
   1a154:	sub    rsp,0x8
   1a158:	xor    eax,eax
   1a15a:	push   r10
   1a15c:	call   5200 <__printf_chk@plt>
   1a161:	pop    r10
   1a163:	pop    r11
   1a165:	jmp    19366 <sched_process+0x96>
   1a16a:	nop    WORD PTR [rax+rax*1+0x0]
   1a170:	test   BYTE PTR [rip+0x10f2a],0x40        # 2b0a1 <opt+0x1>
   1a177:	je     19366 <sched_process+0x96>
   1a17d:	mov    rax,QWORD PTR [rsi+0x50]
   1a181:	lea    rdx,[rsi+0x58]
   1a185:	lea    rcx,[rip+0x4aa6]        # 1ec32 <_IO_stdin_used+0xc32>
   1a18c:	mov    r9d,DWORD PTR [rax+0x4]
   1a190:	mov    r8d,DWORD PTR [rax]
   1a193:	add    rsp,0x8
   1a197:	lea    rsi,[rip+0x4643]        # 1e7e1 <_IO_stdin_used+0x7e1>
   1a19e:	mov    edi,0x1
   1a1a3:	xor    eax,eax
   1a1a5:	pop    rbx
   1a1a6:	pop    rbp
   1a1a7:	jmp    5200 <__printf_chk@plt>
   1a1ac:	nop    DWORD PTR [rax+0x0]
   1a1b0:	test   BYTE PTR [rip+0x10eea],0x40        # 2b0a1 <opt+0x1>
   1a1b7:	je     19366 <sched_process+0x96>
   1a1bd:	mov    rax,QWORD PTR [rsi+0x50]
   1a1c1:	lea    rdx,[rsi+0x58]
   1a1c5:	lea    rcx,[rip+0x4a5b]        # 1ec27 <_IO_stdin_used+0xc27>
   1a1cc:	mov    r9d,DWORD PTR [rax+0x4]
   1a1d0:	mov    r8d,DWORD PTR [rax]
   1a1d3:	jmp    1a193 <sched_process+0xec3>
   1a1d5:	nop    DWORD PTR [rax]
   1a1d8:	test   BYTE PTR [rip+0x10ec2],0x40        # 2b0a1 <opt+0x1>
   1a1df:	je     19366 <sched_process+0x96>
   1a1e5:	mov    rax,QWORD PTR [rsi+0x50]
   1a1e9:	lea    rdx,[rsi+0x58]
   1a1ed:	lea    rcx,[rip+0x4a29]        # 1ec1d <_IO_stdin_used+0xc1d>
   1a1f4:	mov    r9d,DWORD PTR [rax+0x4]
   1a1f8:	mov    r8d,DWORD PTR [rax]
   1a1fb:	jmp    1a193 <sched_process+0xec3>
   1a1fd:	nop    DWORD PTR [rax]
   1a200:	test   BYTE PTR [rip+0x10e9a],0x40        # 2b0a1 <opt+0x1>
   1a207:	je     19366 <sched_process+0x96>
   1a20d:	mov    rax,QWORD PTR [rsi+0x50]
   1a211:	lea    rdx,[rsi+0x58]
   1a215:	lea    rcx,[rip+0x49f6]        # 1ec12 <_IO_stdin_used+0xc12>
   1a21c:	mov    r9d,DWORD PTR [rax+0x4]
   1a220:	mov    r8d,DWORD PTR [rax]
   1a223:	jmp    1a193 <sched_process+0xec3>
   1a228:	nop    DWORD PTR [rax+rax*1+0x0]
   1a230:	test   BYTE PTR [rip+0x10e6a],0x40        # 2b0a1 <opt+0x1>
   1a237:	je     19366 <sched_process+0x96>
   1a23d:	mov    rax,QWORD PTR [rsi+0x50]
   1a241:	lea    rdx,[rsi+0x58]
   1a245:	lea    rsi,[rip+0x49a8]        # 1ebf4 <_IO_stdin_used+0xbf4>
   1a24c:	mov    ecx,DWORD PTR [rax]
   1a24e:	jmp    19956 <sched_process+0x686>
   1a253:	nop    DWORD PTR [rax+rax*1+0x0]
   1a258:	test   BYTE PTR [rip+0x10e42],0x40        # 2b0a1 <opt+0x1>
   1a25f:	je     19366 <sched_process+0x96>
   1a265:	mov    rax,QWORD PTR [rsi+0x50]
   1a269:	lea    rdx,[rsi+0x58]
   1a26d:	lea    rsi,[rip+0x4965]        # 1ebd9 <_IO_stdin_used+0xbd9>
   1a274:	mov    ecx,DWORD PTR [rax]
   1a276:	jmp    19956 <sched_process+0x686>
   1a27b:	nop    DWORD PTR [rax+rax*1+0x0]
   1a280:	test   BYTE PTR [rip+0x10e1a],0x40        # 2b0a1 <opt+0x1>
   1a287:	je     19366 <sched_process+0x96>
   1a28d:	mov    rbp,QWORD PTR [rsi+0x50]
   1a291:	mov    ebx,0x10624dd3
   1a296:	sub    rsp,0x8
   1a29a:	mov    edi,0x1
   1a29f:	mov    ecx,DWORD PTR [rbp+0x8]
   1a2a2:	mov    r8d,DWORD PTR [rbp+0x4]
   1a2a6:	mov    eax,ecx
   1a2a8:	mul    ebx
   1a2aa:	shr    edx,0x6
   1a2ad:	mov    r9d,edx
   1a2b0:	lea    rdx,[rsi+0x58]
   1a2b4:	lea    rsi,[rip+0x807d]        # 22338 <_IO_stdin_used+0x4338>
   1a2bb:	imul   eax,r9d,0x3e8
   1a2c2:	sub    ecx,eax
   1a2c4:	xor    eax,eax
   1a2c6:	push   rcx
   1a2c7:	mov    ecx,DWORD PTR [rbp+0x0]
   1a2ca:	call   5200 <__printf_chk@plt>
   1a2cf:	mov    ecx,DWORD PTR [rbp+0xc]
   1a2d2:	pop    rsi
   1a2d3:	pop    rdi
   1a2d4:	test   ecx,ecx
   1a2d6:	jle    1a054 <sched_process+0xd84>
   1a2dc:	mov    eax,ecx
   1a2de:	imul   ebx
   1a2e0:	mov    eax,ecx
   1a2e2:	sar    edx,0x6
   1a2e5:	mov    edi,0x1
   1a2ea:	lea    rsi,[rip+0x49b6]        # 1eca7 <_IO_stdin_used+0xca7>
   1a2f1:	sar    eax,0x1f
   1a2f4:	sub    edx,eax
   1a2f6:	imul   eax,edx,0x3e8
   1a2fc:	sub    ecx,eax
   1a2fe:	xor    eax,eax
   1a300:	call   5200 <__printf_chk@plt>
   1a305:	jmp    1a054 <sched_process+0xd84>
   1a30a:	lea    rdx,[rdi+0x58]
   1a30e:	lea    rsi,[rip+0x4ad9]        # 1edee <_IO_stdin_used+0xdee>
   1a315:	jmp    198dd <sched_process+0x60d>
   1a31a:	nop    WORD PTR [rax+rax*1+0x0]
   1a320:	test   BYTE PTR [rip+0x10d7a],0x40        # 2b0a1 <opt+0x1>
   1a327:	je     19366 <sched_process+0x96>
   1a32d:	mov    rax,QWORD PTR [rdi+0x50]
   1a331:	lea    rdx,[rip+0x486a]        # 1eba2 <_IO_stdin_used+0xba2>
   1a338:	lea    rcx,[rip+0x485a]        # 1eb99 <_IO_stdin_used+0xb99>
   1a33f:	lea    rsi,[rip+0x8122]        # 22468 <_IO_stdin_used+0x4468>
   1a346:	mov    r11d,DWORD PTR [rax+0x4]
   1a34a:	mov    r8d,DWORD PTR [rax]
   1a34d:	test   r11d,r11d
   1a350:	cmove  rcx,rdx
   1a354:	add    rsp,0x8
   1a358:	lea    rdx,[rdi+0x58]
   1a35c:	xor    eax,eax
   1a35e:	pop    rbx
   1a35f:	mov    edi,0x1
   1a364:	pop    rbp
   1a365:	jmp    5200 <__printf_chk@plt>
   1a36a:	test   BYTE PTR [rip+0x10d30],0x40        # 2b0a1 <opt+0x1>
   1a371:	je     19366 <sched_process+0x96>
   1a377:	mov    rdi,QWORD PTR [rdi+0x50]
   1a37b:	mov    edx,0x1
   1a380:	movzx  ecx,BYTE PTR [rdi+0x13]
   1a384:	mov    r9,QWORD PTR [rdi]
   1a387:	shl    rdx,cl
   1a38a:	test   rdx,rdx
   1a38d:	js     1a4fe <sched_process+0x122e>
   1a393:	pxor   xmm2,xmm2
   1a397:	cvtsi2sd xmm2,rdx
   1a39c:	mov    r10,QWORD PTR [rdi+0x8]
   1a3a0:	test   r10,r10
   1a3a3:	js     1a4dd <sched_process+0x120d>
   1a3a9:	pxor   xmm0,xmm0
   1a3ad:	cvtsi2sd xmm0,r10
   1a3b2:	movsd  xmm3,QWORD PTR [rip+0xa52e]        # 248e8 <__PRETTY_FUNCTION__.5821+0x18>
   1a3ba:	mulsd  xmm0,xmm3
   1a3be:	movapd xmm1,xmm0
   1a3c2:	divsd  xmm1,xmm2
   1a3c6:	test   r9,r9
   1a3c9:	js     1a47d <sched_process+0x11ad>
   1a3cf:	pxor   xmm0,xmm0
   1a3d3:	cvtsi2sd xmm0,r9
   1a3d8:	mulsd  xmm0,xmm3
   1a3dc:	sub    rsp,0x8
   1a3e0:	movzx  ecx,BYTE PTR [rdi+0x12]
   1a3e4:	lea    rdx,[rsi+0x58]
   1a3e8:	movzx  r8d,WORD PTR [rdi+0x10]
   1a3ed:	push   r10
   1a3ef:	lea    rsi,[rip+0x821a]        # 22610 <_IO_stdin_used+0x4610>
   1a3f6:	mov    edi,0x1
   1a3fb:	mov    eax,0x2
   1a400:	divsd  xmm0,xmm2
   1a404:	call   5200 <__printf_chk@plt>
   1a409:	pop    rcx
   1a40a:	pop    rsi
   1a40b:	jmp    19366 <sched_process+0x96>
   1a410:	test   BYTE PTR [rip+0x10c8a],0x40        # 2b0a1 <opt+0x1>
   1a417:	je     19366 <sched_process+0x96>
   1a41d:	mov    rax,QWORD PTR [rdi+0x50]
   1a421:	lea    rdx,[rdi+0x58]
   1a425:	lea    rsi,[rip+0x4959]        # 1ed85 <_IO_stdin_used+0xd85>
   1a42c:	movzx  ecx,WORD PTR [rax]
   1a42f:	jmp    19956 <sched_process+0x686>
   1a434:	mov    edx,0x10624dd3
   1a439:	mov    eax,ecx
   1a43b:	imul   edx
   1a43d:	jmp    1a2e0 <sched_process+0x1010>
   1a442:	mov    eax,ecx
   1a444:	mov    edx,0x10624dd3
   1a449:	mov    edi,0x1
   1a44e:	mul    edx
   1a450:	lea    rsi,[rip+0x4835]        # 1ec8c <_IO_stdin_used+0xc8c>
   1a457:	shr    edx,0x6
   1a45a:	imul   eax,edx,0x3e8
   1a460:	sub    ecx,eax
   1a462:	xor    eax,eax
   1a464:	call   5200 <__printf_chk@plt>
   1a469:	jmp    1a049 <sched_process+0xd79>
   1a46e:	pop    rax
   1a46f:	lea    rdi,[rip+0x496e]        # 1ede4 <_IO_stdin_used+0xde4>
   1a476:	pop    rbx
   1a477:	pop    rbp
   1a478:	jmp    5090 <puts@plt>
   1a47d:	mov    rax,r9
   1a480:	mov    rdx,r9
   1a483:	pxor   xmm0,xmm0
   1a487:	shr    rax,1
   1a48a:	and    edx,0x1
   1a48d:	or     rax,rdx
   1a490:	cvtsi2sd xmm0,rax
   1a495:	addsd  xmm0,xmm0
   1a499:	jmp    1a3d8 <sched_process+0x1108>
   1a49e:	mov    rax,rdx
   1a4a1:	and    edx,0x1
   1a4a4:	pxor   xmm1,xmm1
   1a4a8:	shr    rax,1
   1a4ab:	or     rax,rdx
   1a4ae:	cvtsi2sd xmm1,rax
   1a4b3:	addsd  xmm1,xmm1
   1a4b7:	jmp    19655 <sched_process+0x385>
   1a4bc:	mov    rax,r9
   1a4bf:	mov    rdx,r9
   1a4c2:	pxor   xmm0,xmm0
   1a4c6:	shr    rax,1
   1a4c9:	and    edx,0x1
   1a4cc:	or     rax,rdx
   1a4cf:	cvtsi2sd xmm0,rax
   1a4d4:	addsd  xmm0,xmm0
   1a4d8:	jmp    1962f <sched_process+0x35f>
   1a4dd:	mov    rax,r10
   1a4e0:	mov    rdx,r10
   1a4e3:	pxor   xmm0,xmm0
   1a4e7:	shr    rax,1
   1a4ea:	and    edx,0x1
   1a4ed:	or     rax,rdx
   1a4f0:	cvtsi2sd xmm0,rax
   1a4f5:	addsd  xmm0,xmm0
   1a4f9:	jmp    1a3b2 <sched_process+0x10e2>
   1a4fe:	mov    rax,rdx
   1a501:	and    edx,0x1
   1a504:	pxor   xmm2,xmm2
   1a508:	shr    rax,1
   1a50b:	or     rax,rdx
   1a50e:	cvtsi2sd xmm2,rax
   1a513:	addsd  xmm2,xmm2
   1a517:	jmp    1a39c <sched_process+0x10cc>
   1a51c:	nop    DWORD PTR [rax+0x0]

000000000001a520 <sched_default_vcpu_activate>:
   1a520:	push   rbx
   1a521:	movsxd rax,DWORD PTR [rdi+0x4]
   1a525:	mov    rbx,rdi
   1a528:	lea    rdi,[rip+0x51011]        # 6b540 <default_domain>
   1a52f:	mov    rsi,rax
   1a532:	mov    rax,QWORD PTR [rdi+rax*8+0x10]
   1a537:	test   rax,rax
   1a53a:	je     1a578 <sched_default_vcpu_activate+0x58>
   1a53c:	mov    rdx,QWORD PTR [rax+0x8]
   1a540:	movsxd rcx,DWORD PTR [rax]
   1a543:	cmp    QWORD PTR [rdx+rcx*8+0x10],rax
   1a548:	jne    1a57f <sched_default_vcpu_activate+0x5f>
   1a54a:	or     BYTE PTR [rax+0x10],0x1
   1a54e:	mov    edx,DWORD PTR [rip+0x10b80]        # 2b0d4 <opt+0x34>
   1a554:	mov    rdi,rbx
   1a557:	mov    QWORD PTR [rax+0x50],rbx
   1a55b:	mov    DWORD PTR [rax+0x14],edx
   1a55e:	mov    DWORD PTR [rax+0x18],0x0
   1a565:	mov    QWORD PTR [rbx+0x1a8],rax
   1a56c:	pop    rbx
   1a56d:	jmp    171c0 <pcpu_string_draw>
   1a572:	nop    WORD PTR [rax+rax*1+0x0]
   1a578:	call   12c10 <vcpu_create>
   1a57d:	jmp    1a53c <sched_default_vcpu_activate+0x1c>
   1a57f:	lea    rcx,[rip+0x9dda]        # 24360 <__PRETTY_FUNCTION__.7613>
   1a586:	mov    edx,0x1c9f
   1a58b:	lea    rsi,[rip+0x3b36]        # 1e0c8 <_IO_stdin_used+0xc8>
   1a592:	lea    rdi,[rip+0x486d]        # 1ee06 <_IO_stdin_used+0xe06>
   1a599:	call   5110 <__assert_fail@plt>
   1a59e:	xchg   ax,ax

000000000001a5a0 <pm_process>:
   1a5a0:	push   rbx
   1a5a1:	movzx  eax,BYTE PTR [rip+0x10af9]        # 2b0a1 <opt+0x1>
   1a5a8:	mov    rbx,rdi
   1a5ab:	mov    edx,DWORD PTR [rdi+0x40]
   1a5ae:	and    eax,0x40
   1a5b1:	cmp    edx,0x801002
   1a5b7:	je     1a658 <pm_process+0xb8>
   1a5bd:	cmp    edx,0x801003
   1a5c3:	je     1a610 <pm_process+0x70>
   1a5c5:	cmp    edx,0x801001
   1a5cb:	je     1a5e0 <pm_process+0x40>
   1a5cd:	test   al,al
   1a5cf:	jne    1a6a8 <pm_process+0x108>
   1a5d5:	pop    rbx
   1a5d6:	ret    
   1a5d7:	nop    WORD PTR [rax+rax*1+0x0]
   1a5e0:	test   al,al
   1a5e2:	je     1a5d5 <pm_process+0x35>
   1a5e4:	mov    rax,QWORD PTR [rdi+0x50]
   1a5e8:	lea    rdx,[rdi+0x58]
   1a5ec:	lea    rsi,[rip+0x482b]        # 1ee1e <_IO_stdin_used+0xe1e>
   1a5f3:	pop    rbx
   1a5f4:	mov    edi,0x1
   1a5f9:	mov    r8d,DWORD PTR [rax+0x4]
   1a5fd:	mov    ecx,DWORD PTR [rax]
   1a5ff:	xor    eax,eax
   1a601:	jmp    5200 <__printf_chk@plt>
   1a606:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a610:	mov    rdx,QWORD PTR [rdi+0x50]
   1a614:	mov    esi,DWORD PTR [rdx]
   1a616:	test   al,al
   1a618:	jne    1a680 <pm_process+0xe0>
   1a61a:	mov    ecx,DWORD PTR [rbx+0x194]
   1a620:	cmp    ecx,0x6
   1a623:	je     1a63e <pm_process+0x9e>
   1a625:	cmp    ecx,esi
   1a627:	je     1a63e <pm_process+0x9e>
   1a629:	mov    edx,esi
   1a62b:	mov    edi,0x1
   1a630:	lea    rsi,[rip+0x8419]        # 22a50 <_IO_stdin_used+0x4a50>
   1a637:	xor    eax,eax
   1a639:	call   5200 <__printf_chk@plt>
   1a63e:	mov    DWORD PTR [rbx+0x194],0x0
   1a648:	mov    rdi,rbx
   1a64b:	pop    rbx
   1a64c:	jmp    171c0 <pcpu_string_draw>
   1a651:	nop    DWORD PTR [rax+0x0]
   1a658:	mov    rdx,QWORD PTR [rdi+0x50]
   1a65c:	mov    ecx,DWORD PTR [rdx]
   1a65e:	test   al,al
   1a660:	jne    1a6c0 <pm_process+0x120>
   1a662:	cmp    ecx,0x5
   1a665:	ja     1a5d5 <pm_process+0x35>
   1a66b:	mov    DWORD PTR [rbx+0x194],ecx
   1a671:	mov    rdi,rbx
   1a674:	pop    rbx
   1a675:	jmp    171c0 <pcpu_string_draw>
   1a67a:	nop    WORD PTR [rax+rax*1+0x0]
   1a680:	lea    rdx,[rdi+0x58]
   1a684:	mov    ecx,esi
   1a686:	mov    edi,0x1
   1a68b:	xor    eax,eax
   1a68d:	lea    rsi,[rip+0x47bd]        # 1ee51 <_IO_stdin_used+0xe51>
   1a694:	call   5200 <__printf_chk@plt>
   1a699:	mov    rax,QWORD PTR [rbx+0x50]
   1a69d:	mov    esi,DWORD PTR [rax]
   1a69f:	jmp    1a61a <pm_process+0x7a>
   1a6a4:	nop    DWORD PTR [rax+0x0]
   1a6a8:	lea    rsi,[rdi+0x30]
   1a6ac:	mov    rdi,QWORD PTR [rip+0x13d6d]        # 2e420 <stdout@@GLIBC_2.2.5>
   1a6b3:	pop    rbx
   1a6b4:	jmp    141c0 <dump_generic>
   1a6b9:	nop    DWORD PTR [rax+0x0]
   1a6c0:	lea    rdx,[rdi+0x58]
   1a6c4:	lea    rsi,[rip+0x476f]        # 1ee3a <_IO_stdin_used+0xe3a>
   1a6cb:	mov    edi,0x1
   1a6d0:	xor    eax,eax
   1a6d2:	call   5200 <__printf_chk@plt>
   1a6d7:	mov    rax,QWORD PTR [rbx+0x50]
   1a6db:	mov    ecx,DWORD PTR [rax]
   1a6dd:	jmp    1a662 <pm_process+0xc2>
   1a6df:	nop

000000000001a6e0 <hw_process>:
   1a6e0:	movzx  eax,BYTE PTR [rdi+0x41]
   1a6e4:	shr    al,0x4
   1a6e7:	cmp    al,0x1
   1a6e9:	je     1a700 <hw_process+0x20>
   1a6eb:	cmp    al,0x2
   1a6ed:	jne    1a6f8 <hw_process+0x18>
   1a6ef:	jmp    14270 <irq_process>
   1a6f4:	nop    DWORD PTR [rax+0x0]
   1a6f8:	ret    
   1a6f9:	nop    DWORD PTR [rax+0x0]
   1a700:	jmp    1a5a0 <pm_process>
   1a705:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000001a710 <process_lost_records>:
   1a710:	push   r15
   1a712:	push   r14
   1a714:	push   r13
   1a716:	mov    r13,rdi
   1a719:	push   r12
   1a71b:	push   rbp
   1a71c:	push   rbx
   1a71d:	sub    rsp,0x8
   1a721:	mov    ecx,DWORD PTR [rdi+0x44]
   1a724:	cmp    ecx,0x4
   1a727:	jne    1a8ff <process_lost_records+0x1ef>
   1a72d:	mov    r14,QWORD PTR [rdi+0x50]
   1a731:	mov    rax,QWORD PTR [rdi+0x1a8]
   1a738:	mov    rbp,QWORD PTR [r14+0x8]
   1a73c:	test   BYTE PTR [rip+0x1095e],0x40        # 2b0a1 <opt+0x1>
   1a743:	je     1a78d <process_lost_records+0x7d>
   1a745:	movzx  r9d,WORD PTR [r14+0x6]
   1a74a:	movzx  r8d,WORD PTR [r14+0x4]
   1a74f:	lea    rdx,[rdi+0x58]
   1a753:	mov    ecx,DWORD PTR [r14]
   1a756:	test   rax,rax
   1a759:	je     1a953 <process_lost_records+0x243>
   1a75f:	sub    rsp,0x8
   1a763:	mov    edi,0x1
   1a768:	push   rbp
   1a769:	mov    esi,DWORD PTR [rax]
   1a76b:	push   rsi
   1a76c:	mov    rax,QWORD PTR [rax+0x8]
   1a770:	lea    rsi,[rip+0x8341]        # 22ab8 <_IO_stdin_used+0x4ab8>
   1a777:	mov    eax,DWORD PTR [rax+0x8]
   1a77a:	push   rax
   1a77b:	xor    eax,eax
   1a77d:	call   5200 <__printf_chk@plt>
   1a782:	mov    rax,QWORD PTR [r13+0x1a8]
   1a789:	add    rsp,0x20
   1a78d:	test   rax,rax
   1a790:	je     1a7e4 <process_lost_records+0xd4>
   1a792:	lea    rdi,[rax+0x80]
   1a799:	mov    QWORD PTR [rax+0x78],0x0
   1a7a1:	mov    QWORD PTR [rax+0x130],0x0
   1a7ac:	and    rdi,0xfffffffffffffff8
   1a7b0:	sub    eax,edi
   1a7b2:	lea    ecx,[rax+0x138]
   1a7b8:	xor    eax,eax
   1a7ba:	shr    ecx,0x3
   1a7bd:	rep stos QWORD PTR es:[rdi],rax
   1a7c0:	mov    rsi,QWORD PTR [r13+0x1a8]
   1a7c7:	cmp    DWORD PTR [rsi+0x3bf0],0x1
   1a7ce:	je     1a9b0 <process_lost_records+0x2a0>
   1a7d4:	mov    ecx,0x4
   1a7d9:	mov    rdx,rbp
   1a7dc:	mov    rdi,r13
   1a7df:	call   17240 <vcpu_prev_update>
   1a7e4:	test   BYTE PTR [r13+0x1b0],0x1
   1a7ec:	jne    1a930 <process_lost_records+0x220>
   1a7f2:	mov    eax,DWORD PTR [rip+0x149bc]        # 2f1b4 <P+0x14>
   1a7f8:	mov    edx,DWORD PTR [rip+0x149a2]        # 2f1a0 <P>
   1a7fe:	lea    ecx,[rax+0x1]
   1a801:	mov    DWORD PTR [rip+0x149ad],ecx        # 2f1b4 <P+0x14>
   1a807:	cmp    eax,edx
   1a809:	jg     1a979 <process_lost_records+0x269>
   1a80f:	or     BYTE PTR [r13+0x1b0],0x1
   1a817:	mov    rdi,r13
   1a81a:	lea    r12,[rip+0x9acf]        # 242f0 <__func__.8275>
   1a821:	mov    QWORD PTR [r13+0x1b8],rbp
   1a828:	call   171c0 <pcpu_string_draw>
   1a82d:	mov    r15,QWORD PTR [rip+0x4c9fc]        # 67230 <domain_list>
   1a834:	test   r15,r15
   1a837:	jne    1a848 <process_lost_records+0x138>
   1a839:	jmp    1a8ba <process_lost_records+0x1aa>
   1a83b:	nop    DWORD PTR [rax+rax*1+0x0]
   1a840:	mov    r15,QWORD PTR [r15]
   1a843:	test   r15,r15
   1a846:	je     1a8ba <process_lost_records+0x1aa>
   1a848:	cmp    DWORD PTR [r15+0x8],0x8000
   1a850:	je     1a840 <process_lost_records+0x130>
   1a852:	xor    ebx,ebx
   1a854:	jmp    1a875 <process_lost_records+0x165>
   1a856:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1a860:	mov    rsi,rbp
   1a863:	call   164a0 <lose_vcpu>
   1a868:	add    rbx,0x1
   1a86c:	cmp    rbx,0x100
   1a873:	je     1a840 <process_lost_records+0x130>
   1a875:	mov    rdi,QWORD PTR [r15+rbx*8+0x10]
   1a87a:	test   rdi,rdi
   1a87d:	je     1a868 <process_lost_records+0x158>
   1a87f:	mov    eax,DWORD PTR [rdi+0x18]
   1a882:	test   eax,eax
   1a884:	je     1a868 <process_lost_records+0x158>
   1a886:	test   BYTE PTR [rip+0x10814],0x40        # 2b0a1 <opt+0x1>
   1a88d:	je     1a860 <process_lost_records+0x150>
   1a88f:	mov    rdi,QWORD PTR [rip+0x4c9c2]        # 67258 <warn>
   1a896:	mov    r8d,DWORD PTR [r15+0x8]
   1a89a:	mov    r9d,ebx
   1a89d:	xor    eax,eax
   1a89f:	mov    rcx,r12
   1a8a2:	lea    rdx,[rip+0x830f]        # 22bb8 <_IO_stdin_used+0x4bb8>
   1a8a9:	mov    esi,0x1
   1a8ae:	call   5270 <__fprintf_chk@plt>
   1a8b3:	mov    rdi,QWORD PTR [r15+rbx*8+0x10]
   1a8b8:	jmp    1a860 <process_lost_records+0x150>
   1a8ba:	or     BYTE PTR [r13+0x1b0],0x2
   1a8c2:	movzx  eax,WORD PTR [r14+0x4]
   1a8c7:	lea    edx,[rax*8+0x0]
   1a8ce:	mov    eax,DWORD PTR [r13+0x1b0]
   1a8d5:	and    eax,0xfff80007
   1a8da:	or     eax,edx
   1a8dc:	mov    DWORD PTR [r13+0x1b0],eax
   1a8e3:	movzx  eax,WORD PTR [r14+0x6]
   1a8e8:	mov    WORD PTR [r13+0x1b4],ax
   1a8f0:	add    rsp,0x8
   1a8f4:	pop    rbx
   1a8f5:	pop    rbp
   1a8f6:	pop    r12
   1a8f8:	pop    r13
   1a8fa:	pop    r14
   1a8fc:	pop    r15
   1a8fe:	ret    
   1a8ff:	mov    rdi,QWORD PTR [rip+0x4c952]        # 67258 <warn>
   1a906:	xor    eax,eax
   1a908:	mov    esi,0x1
   1a90d:	lea    rdx,[rip+0x816c]        # 22a80 <_IO_stdin_used+0x4a80>
   1a914:	call   5270 <__fprintf_chk@plt>
   1a919:	cmp    DWORD PTR [rip+0x107c0],0x3        # 2b0e0 <opt+0x40>
   1a920:	ja     1a8f0 <process_lost_records+0x1e0>
   1a922:	lea    rdi,[r13+0x30]
   1a926:	call   146b0 <error.part.24>
   1a92b:	nop    DWORD PTR [rax+rax*1+0x0]
   1a930:	mov    ecx,DWORD PTR [r13+0x4]
   1a934:	mov    rdi,QWORD PTR [rip+0x4c91d]        # 67258 <warn>
   1a93b:	lea    rdx,[rip+0x822e]        # 22b70 <_IO_stdin_used+0x4b70>
   1a942:	xor    eax,eax
   1a944:	mov    esi,0x1
   1a949:	call   5270 <__fprintf_chk@plt>
   1a94e:	jmp    1a80f <process_lost_records+0xff>
   1a953:	sub    rsp,0x8
   1a957:	lea    rsi,[rip+0x819a]        # 22af8 <_IO_stdin_used+0x4af8>
   1a95e:	mov    edi,0x1
   1a963:	xor    eax,eax
   1a965:	push   rbp
   1a966:	call   5200 <__printf_chk@plt>
   1a96b:	pop    rdx
   1a96c:	mov    rax,QWORD PTR [r13+0x1a8]
   1a973:	pop    rcx
   1a974:	jmp    1a78d <process_lost_records+0x7d>
   1a979:	mov    rdi,QWORD PTR [rip+0x4c8d8]        # 67258 <warn>
   1a980:	lea    r8d,[rdx+0x1]
   1a984:	xor    eax,eax
   1a986:	mov    esi,0x1
   1a98b:	lea    rdx,[rip+0x81a6]        # 22b38 <_IO_stdin_used+0x4b38>
   1a992:	call   5270 <__fprintf_chk@plt>
   1a997:	cmp    DWORD PTR [rip+0x10742],0x6        # 2b0e0 <opt+0x40>
   1a99e:	ja     1a80f <process_lost_records+0xff>
   1a9a4:	mov    edi,0x1
   1a9a9:	call   5250 <exit@plt>
   1a9ae:	xchg   ax,ax
   1a9b0:	mov    DWORD PTR [rsi+0x3bfc],0x0
   1a9ba:	xor    edi,edi
   1a9bc:	mov    rax,QWORD PTR [r13+0x1a8]
   1a9c3:	lea    rsi,[rax+0x3bf8]
   1a9ca:	call   f4f0 <cr3_switch>
   1a9cf:	mov    rsi,QWORD PTR [r13+0x1a8]
   1a9d6:	jmp    1a7d4 <process_lost_records+0xc4>
   1a9db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001a9e0 <pcpu_string>:
   1a9e0:	sub    rsp,0x8
   1a9e4:	mov    eax,DWORD PTR [rip+0x147b6]        # 2f1a0 <P>
   1a9ea:	cmp    eax,0xff
   1a9ef:	jg     1aab8 <pcpu_string+0xd8>
   1a9f5:	mov    r9d,edi
   1a9f8:	cmp    eax,edi
   1a9fa:	jl     1aa99 <pcpu_string+0xb9>
   1aa00:	movsxd rdx,DWORD PTR [rip+0x1061d]        # 2b024 <last_pcpu.8448>
   1aa07:	test   edx,edx
   1aa09:	js     1aa2f <pcpu_string+0x4f>
   1aa0b:	lea    rdi,[rdx*8+0x0]
   1aa13:	lea    rax,[rip+0x147c6]        # 2f1e0 <P+0x40>
   1aa1a:	sub    rdi,rdx
   1aa1d:	shl    rdi,0x7
   1aa21:	add    rdi,rax
   1aa24:	call   171c0 <pcpu_string_draw>
   1aa29:	mov    eax,DWORD PTR [rip+0x14771]        # 2f1a0 <P>
   1aa2f:	movsxd rdx,DWORD PTR [rip+0x105ea]        # 2b020 <max_active_pcpu.8447>
   1aa36:	cmp    edx,eax
   1aa38:	jge    1aa7f <pcpu_string+0x9f>
   1aa3a:	lea    ecx,[rdx+0x1]
   1aa3d:	cmp    ecx,eax
   1aa3f:	jg     1aa79 <pcpu_string+0x99>
   1aa41:	lea    rax,[rdx*8+0x0]
   1aa49:	lea    r8,[rip+0x14750]        # 2f1a0 <P>
   1aa50:	sub    rax,rdx
   1aa53:	shl    rax,0x7
   1aa57:	lea    rsi,[r8+rax*1+0x3c0]
   1aa5f:	nop
   1aa60:	mov    rdi,rsi
   1aa63:	call   171c0 <pcpu_string_draw>
   1aa68:	mov    eax,DWORD PTR [r8]
   1aa6b:	add    ecx,0x1
   1aa6e:	add    rsi,0x380
   1aa75:	cmp    eax,ecx
   1aa77:	jge    1aa60 <pcpu_string+0x80>
   1aa79:	mov    DWORD PTR [rip+0x105a1],eax        # 2b020 <max_active_pcpu.8447>
   1aa7f:	lea    rax,[rip+0x141fa]        # 2ec80 <__pcpu_string>
   1aa86:	movsxd rdx,r9d
   1aa89:	mov    DWORD PTR [rip+0x10594],r9d        # 2b024 <last_pcpu.8448>
   1aa90:	mov    BYTE PTR [rax+rdx*1],0x78
   1aa94:	add    rsp,0x8
   1aa98:	ret    
   1aa99:	lea    rcx,[rip+0x9798]        # 24238 <__PRETTY_FUNCTION__.8449>
   1aaa0:	mov    edx,0x25f5
   1aaa5:	lea    rsi,[rip+0x361c]        # 1e0c8 <_IO_stdin_used+0xc8>
   1aaac:	lea    rdi,[rip+0x43d0]        # 1ee83 <_IO_stdin_used+0xe83>
   1aab3:	call   5110 <__assert_fail@plt>
   1aab8:	lea    rcx,[rip+0x9779]        # 24238 <__PRETTY_FUNCTION__.8449>
   1aabf:	mov    edx,0x25f4
   1aac4:	lea    rsi,[rip+0x35fd]        # 1e0c8 <_IO_stdin_used+0xc8>
   1aacb:	lea    rdi,[rip+0x4394]        # 1ee66 <_IO_stdin_used+0xe66>
   1aad2:	call   5110 <__assert_fail@plt>
   1aad7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001aae0 <hvm_inj_exc_process>:
   1aae0:	test   BYTE PTR [rip+0x105ba],0x40        # 2b0a1 <opt+0x1>
   1aae7:	je     1ab88 <hvm_inj_exc_process+0xa8>
   1aaed:	push   r12
   1aaef:	push   rbp
   1aaf0:	push   rbx
   1aaf1:	mov    rax,QWORD PTR [rsi+0x28410]
   1aaf8:	mov    rbx,rdi
   1aafb:	mov    edi,DWORD PTR [rdi]
   1aafd:	mov    ebp,DWORD PTR [rax]
   1aaff:	mov    r12d,DWORD PTR [rax+0x4]
   1ab03:	cmp    ebp,0x13
   1ab06:	jbe    1ab40 <hvm_inj_exc_process+0x60>
   1ab08:	call   1a9e0 <pcpu_string>
   1ab0d:	sub    rsp,0x8
   1ab11:	mov    r9d,ebp
   1ab14:	mov    edi,0x1
   1ab19:	mov    edx,DWORD PTR [rbx+0x130]
   1ab1f:	mov    ecx,DWORD PTR [rbx+0x134]
   1ab25:	push   r12
   1ab27:	mov    r8,rax
   1ab2a:	lea    rsi,[rip+0x80d7]        # 22c08 <_IO_stdin_used+0x4c08>
   1ab31:	xor    eax,eax
   1ab33:	call   5200 <__printf_chk@plt>
   1ab38:	pop    rax
   1ab39:	pop    rdx
   1ab3a:	pop    rbx
   1ab3b:	pop    rbp
   1ab3c:	pop    r12
   1ab3e:	ret    
   1ab3f:	nop
   1ab40:	lea    rax,[rip+0x10e59]        # 2b9a0 <hvm_trap_name>
   1ab47:	mov    rbp,QWORD PTR [rax+rbp*8]
   1ab4b:	call   1a9e0 <pcpu_string>
   1ab50:	sub    rsp,0x8
   1ab54:	mov    ecx,DWORD PTR [rbx+0x134]
   1ab5a:	mov    edx,DWORD PTR [rbx+0x130]
   1ab60:	push   r12
   1ab62:	mov    r8,rax
   1ab65:	mov    r9,rbp
   1ab68:	lea    rsi,[rip+0x8071]        # 22be0 <_IO_stdin_used+0x4be0>
   1ab6f:	mov    edi,0x1
   1ab74:	xor    eax,eax
   1ab76:	call   5200 <__printf_chk@plt>
   1ab7b:	pop    rcx
   1ab7c:	pop    rsi
   1ab7d:	pop    rbx
   1ab7e:	pop    rbp
   1ab7f:	pop    r12
   1ab81:	ret    
   1ab82:	nop    WORD PTR [rax+rax*1+0x0]
   1ab88:	ret    
   1ab89:	nop    DWORD PTR [rax+0x0]

000000000001ab90 <hvm_pf_inject_process>:
   1ab90:	push   r13
   1ab92:	push   r12
   1ab94:	push   rbp
   1ab95:	push   rbx
   1ab96:	sub    rsp,0x8
   1ab9a:	movzx  eax,BYTE PTR [rip+0x10500]        # 2b0a1 <opt+0x1>
   1aba1:	mov    rdx,QWORD PTR [rsi+0x28410]
   1aba8:	and    eax,0x40
   1abab:	test   BYTE PTR [rdi+0x11],0x1
   1abaf:	je     1ac08 <hvm_pf_inject_process+0x78>
   1abb1:	mov    rbp,QWORD PTR [rdx+0x4]
   1abb5:	test   al,al
   1abb7:	je     1abf7 <hvm_pf_inject_process+0x67>
   1abb9:	lea    r12,[rip+0x395c]        # 1e51c <_IO_stdin_used+0x51c>
   1abc0:	mov    rbx,rdi
   1abc3:	mov    r13d,DWORD PTR [rdx]
   1abc6:	mov    edi,DWORD PTR [rdi]
   1abc8:	call   1a9e0 <pcpu_string>
   1abcd:	mov    edx,DWORD PTR [rbx+0x130]
   1abd3:	mov    r9,r12
   1abd6:	mov    ecx,DWORD PTR [rbx+0x134]
   1abdc:	push   r13
   1abde:	mov    r8,rax
   1abe1:	mov    edi,0x1
   1abe6:	xor    eax,eax
   1abe8:	push   rbp
   1abe9:	lea    rsi,[rip+0x8040]        # 22c30 <_IO_stdin_used+0x4c30>
   1abf0:	call   5200 <__printf_chk@plt>
   1abf5:	pop    rax
   1abf6:	pop    rdx
   1abf7:	add    rsp,0x8
   1abfb:	pop    rbx
   1abfc:	pop    rbp
   1abfd:	pop    r12
   1abff:	pop    r13
   1ac01:	ret    
   1ac02:	nop    WORD PTR [rax+rax*1+0x0]
   1ac08:	mov    ebp,DWORD PTR [rdx+0x4]
   1ac0b:	lea    r12,[rip+0x3eb3]        # 1eac5 <_IO_stdin_used+0xac5>
   1ac12:	test   al,al
   1ac14:	jne    1abc0 <hvm_pf_inject_process+0x30>
   1ac16:	add    rsp,0x8
   1ac1a:	pop    rbx
   1ac1b:	pop    rbp
   1ac1c:	pop    r12
   1ac1e:	pop    r13
   1ac20:	ret    
   1ac21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1ac2c:	nop    DWORD PTR [rax+0x0]

000000000001ac30 <hvm_handler_process>:
   1ac30:	mov    ecx,DWORD PTR [rsi]
   1ac32:	test   ecx,ecx
   1ac34:	je     1ad18 <hvm_handler_process+0xe8>
   1ac3a:	push   r12
   1ac3c:	push   rbp
   1ac3d:	mov    rbp,rdi
   1ac40:	push   rbx
   1ac41:	mov    rdx,QWORD PTR [rdi+0x20]
   1ac45:	mov    rbx,rsi
   1ac48:	mov    QWORD PTR [rsi+0x28410],rdx
   1ac4f:	mov    eax,DWORD PTR [rdi+0x10]
   1ac52:	cmp    eax,0x82005
   1ac57:	je     1ae80 <hvm_handler_process+0x250>
   1ac5d:	jbe    1acf0 <hvm_handler_process+0xc0>
   1ac63:	cmp    eax,0x82100
   1ac68:	je     1ad60 <hvm_handler_process+0x130>
   1ac6e:	cmp    eax,0x82102
   1ac73:	je     1ad04 <hvm_handler_process+0xd4>
   1ac79:	cmp    eax,0x82020
   1ac7e:	je     1ad30 <hvm_handler_process+0x100>
   1ac84:	mov    edx,DWORD PTR [rbx+0x4]
   1ac87:	test   edx,edx
   1ac89:	je     1af50 <hvm_handler_process+0x320>
   1ac8f:	sub    eax,0x82000
   1ac94:	mov    DWORD PTR [rbx+0x28404],eax
   1ac9a:	mov    eax,DWORD PTR [rbp+0x10]
   1ac9d:	cmp    eax,0x82017
   1aca2:	je     1ae5b <hvm_handler_process+0x22b>
   1aca8:	ja     1adc8 <hvm_handler_process+0x198>
   1acae:	cmp    eax,0x8200d
   1acb3:	je     1afe0 <hvm_handler_process+0x3b0>
   1acb9:	jbe    1ada0 <hvm_handler_process+0x170>
   1acbf:	cmp    eax,0x82012
   1acc4:	je     1aed0 <hvm_handler_process+0x2a0>
   1acca:	cmp    eax,0x82016
   1accf:	je     1af08 <hvm_handler_process+0x2d8>
   1acd5:	cmp    eax,0x8200f
   1acda:	jne    1ae13 <hvm_handler_process+0x1e3>
   1ace0:	mov    rsi,rbx
   1ace3:	mov    rdi,rbp
   1ace6:	pop    rbx
   1ace7:	pop    rbp
   1ace8:	pop    r12
   1acea:	jmp    10b30 <hvm_intr_process>
   1acef:	nop
   1acf0:	cmp    eax,0x82003
   1acf5:	je     1ad50 <hvm_handler_process+0x120>
   1acf7:	ja     1ad40 <hvm_handler_process+0x110>
   1acf9:	cmp    eax,0x82002
   1acfe:	jne    1ac84 <hvm_handler_process+0x54>
   1ad04:	mov    rsi,rbx
   1ad07:	mov    rdi,rbp
   1ad0a:	pop    rbx
   1ad0b:	pop    rbp
   1ad0c:	pop    r12
   1ad0e:	jmp    1ab90 <hvm_pf_inject_process>
   1ad13:	nop    DWORD PTR [rax+rax*1+0x0]
   1ad18:	test   BYTE PTR [rip+0x10382],0x40        # 2b0a1 <opt+0x1>
   1ad1f:	jne    1af40 <hvm_handler_process+0x310>
   1ad25:	ret    
   1ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1ad30:	pop    rbx
   1ad31:	pop    rbp
   1ad32:	pop    r12
   1ad34:	jmp    10e30 <hvm_intr_window_process>
   1ad39:	nop    DWORD PTR [rax+0x0]
   1ad40:	pop    rbx
   1ad41:	pop    rbp
   1ad42:	pop    r12
   1ad44:	jmp    e780 <hvm_inj_virq_process>
   1ad49:	nop    DWORD PTR [rax+0x0]
   1ad50:	pop    rbx
   1ad51:	pop    rbp
   1ad52:	pop    r12
   1ad54:	jmp    1aae0 <hvm_inj_exc_process>
   1ad59:	nop    DWORD PTR [rax+0x0]
   1ad60:	mov    rax,QWORD PTR [rsi+0x10]
   1ad64:	mov    r12,QWORD PTR [rax+0x70]
   1ad68:	test   r12,r12
   1ad6b:	je     1afb0 <hvm_handler_process+0x380>
   1ad71:	test   BYTE PTR [r12+0x320],0x1
   1ad7a:	jne    1aee0 <hvm_handler_process+0x2b0>
   1ad80:	or     BYTE PTR [r12+0x320],0x1
   1ad89:	test   BYTE PTR [rip+0x10311],0x40        # 2b0a1 <opt+0x1>
   1ad90:	jne    1af70 <hvm_handler_process+0x340>
   1ad96:	pop    rbx
   1ad97:	pop    rbp
   1ad98:	pop    r12
   1ad9a:	ret    
   1ad9b:	nop    DWORD PTR [rax+rax*1+0x0]
   1ada0:	cmp    eax,0x82009
   1ada5:	je     1af30 <hvm_handler_process+0x300>
   1adab:	cmp    eax,0x8200c
   1adb0:	jne    1ae08 <hvm_handler_process+0x1d8>
   1adb2:	mov    rsi,rbx
   1adb5:	mov    rdi,rbp
   1adb8:	pop    rbx
   1adb9:	pop    rbp
   1adba:	pop    r12
   1adbc:	jmp    15a80 <hvm_msr_read_process>
   1adc1:	nop    DWORD PTR [rax+0x0]
   1adc8:	cmp    eax,0x82109
   1adcd:	je     1af30 <hvm_handler_process+0x300>
   1add3:	ja     1ae40 <hvm_handler_process+0x210>
   1add5:	cmp    eax,0x82021
   1adda:	je     1aec0 <hvm_handler_process+0x290>
   1ade0:	cmp    eax,0x82101
   1ade5:	je     1af20 <hvm_handler_process+0x2f0>
   1adeb:	cmp    eax,0x8201a
   1adf0:	jne    1ae13 <hvm_handler_process+0x1e3>
   1adf2:	mov    rsi,rbx
   1adf5:	mov    rdi,rbp
   1adf8:	pop    rbx
   1adf9:	pop    rbp
   1adfa:	pop    r12
   1adfc:	jmp    10f50 <hvm_rdtsc_process>
   1ae01:	nop    DWORD PTR [rax+0x0]
   1ae08:	cmp    eax,0x82001
   1ae0d:	je     1af20 <hvm_handler_process+0x2f0>
   1ae13:	test   BYTE PTR [rip+0x10287],0x40        # 2b0a1 <opt+0x1>
   1ae1a:	jne    1afef <hvm_handler_process+0x3bf>
   1ae20:	mov    eax,DWORD PTR [rip+0x1027e]        # 2b0a4 <opt+0x4>
   1ae26:	test   eax,eax
   1ae28:	je     1ad96 <hvm_handler_process+0x166>
   1ae2e:	mov    rsi,rbx
   1ae31:	mov    rdi,rbp
   1ae34:	pop    rbx
   1ae35:	pop    rbp
   1ae36:	pop    r12
   1ae38:	jmp    11050 <hvm_generic_postprocess_init>
   1ae3d:	nop    DWORD PTR [rax]
   1ae40:	cmp    eax,0x82216
   1ae45:	je     1af08 <hvm_handler_process+0x2d8>
   1ae4b:	jbe    1ae70 <hvm_handler_process+0x240>
   1ae4d:	cmp    eax,0x82217
   1ae52:	je     1ae5b <hvm_handler_process+0x22b>
   1ae54:	cmp    eax,0x82317
   1ae59:	jne    1ae13 <hvm_handler_process+0x1e3>
   1ae5b:	mov    rsi,rbx
   1ae5e:	mov    rdi,rbp
   1ae61:	pop    rbx
   1ae62:	pop    rbp
   1ae63:	pop    r12
   1ae65:	jmp    e630 <hvm_mmio_assist_process>
   1ae6a:	nop    WORD PTR [rax+rax*1+0x0]
   1ae70:	cmp    eax,0x82117
   1ae75:	je     1ae5b <hvm_handler_process+0x22b>
   1ae77:	jmp    1ae13 <hvm_handler_process+0x1e3>
   1ae79:	nop    DWORD PTR [rax+0x0]
   1ae80:	test   BYTE PTR [rip+0x1021a],0x40        # 2b0a1 <opt+0x1>
   1ae87:	je     1ad96 <hvm_handler_process+0x166>
   1ae8d:	mov    edi,DWORD PTR [rdi]
   1ae8f:	mov    ebx,DWORD PTR [rdx]
   1ae91:	call   1a9e0 <pcpu_string>
   1ae96:	mov    ecx,DWORD PTR [rbp+0x134]
   1ae9c:	mov    r9d,ebx
   1ae9f:	pop    rbx
   1aea0:	mov    edx,DWORD PTR [rbp+0x130]
   1aea6:	mov    r8,rax
   1aea9:	pop    rbp
   1aeaa:	lea    rsi,[rip+0x3fec]        # 1ee9d <_IO_stdin_used+0xe9d>
   1aeb1:	mov    edi,0x1
   1aeb6:	xor    eax,eax
   1aeb8:	pop    r12
   1aeba:	jmp    5200 <__printf_chk@plt>
   1aebf:	nop
   1aec0:	mov    rsi,rbx
   1aec3:	mov    rdi,rbp
   1aec6:	pop    rbx
   1aec7:	pop    rbp
   1aec8:	pop    r12
   1aeca:	jmp    110b0 <hvm_npf_process>
   1aecf:	nop
   1aed0:	mov    rsi,rbx
   1aed3:	mov    rdi,rbp
   1aed6:	pop    rbx
   1aed7:	pop    rbp
   1aed8:	pop    r12
   1aeda:	jmp    10a60 <hvm_vmcall_process>
   1aedf:	nop
   1aee0:	mov    rcx,QWORD PTR [r12+0x10]
   1aee5:	mov    rdi,QWORD PTR [rip+0x4c36c]        # 67258 <warn>
   1aeec:	lea    rdx,[rip+0x7d75]        # 22c68 <_IO_stdin_used+0x4c68>
   1aef3:	xor    eax,eax
   1aef5:	mov    esi,0x1
   1aefa:	call   5270 <__fprintf_chk@plt>
   1aeff:	jmp    1ad80 <hvm_handler_process+0x150>
   1af04:	nop    DWORD PTR [rax+0x0]
   1af08:	mov    rsi,rbx
   1af0b:	mov    rdi,rbp
   1af0e:	pop    rbx
   1af0f:	pop    rbp
   1af10:	pop    r12
   1af12:	jmp    146e0 <hvm_io_assist_process>
   1af17:	nop    WORD PTR [rax+rax*1+0x0]
   1af20:	mov    rsi,rbx
   1af23:	mov    rdi,rbp
   1af26:	pop    rbx
   1af27:	pop    rbp
   1af28:	pop    r12
   1af2a:	jmp    df50 <hvm_pf_xen_process>
   1af2f:	nop
   1af30:	mov    rsi,rbx
   1af33:	mov    rdi,rbp
   1af36:	pop    rbx
   1af37:	pop    rbp
   1af38:	pop    r12
   1af3a:	jmp    10920 <hvm_cr_write_process>
   1af3f:	nop
   1af40:	lea    rsi,[rip+0x3653]        # 1e59a <_IO_stdin_used+0x59a>
   1af47:	jmp    11130 <hvm_generic_dump>
   1af4c:	nop    DWORD PTR [rax+0x0]
   1af50:	test   BYTE PTR [rip+0x1014a],0x40        # 2b0a1 <opt+0x1>
   1af57:	je     1ad96 <hvm_handler_process+0x166>
   1af5d:	pop    rbx
   1af5e:	lea    rsi,[rip+0x3635]        # 1e59a <_IO_stdin_used+0x59a>
   1af65:	pop    rbp
   1af66:	pop    r12
   1af68:	jmp    11130 <hvm_generic_dump>
   1af6d:	nop    DWORD PTR [rax]
   1af70:	mov    rax,QWORD PTR [rbx+0x10]
   1af74:	mov    edi,DWORD PTR [rbp+0x0]
   1af77:	mov    rbx,QWORD PTR [rax+0x60]
   1af7b:	call   1a9e0 <pcpu_string>
   1af80:	mov    ecx,DWORD PTR [rbp+0x134]
   1af86:	mov    edx,DWORD PTR [rbp+0x130]
   1af8c:	lea    rsi,[rip+0x7d35]        # 22cc8 <_IO_stdin_used+0x4cc8>
   1af93:	mov    r8,rax
   1af96:	mov    r9,rbx
   1af99:	mov    edi,0x1
   1af9e:	pop    rbx
   1af9f:	xor    eax,eax
   1afa1:	pop    rbp
   1afa2:	pop    r12
   1afa4:	jmp    5200 <__printf_chk@plt>
   1afa9:	nop    DWORD PTR [rax+0x0]
   1afb0:	test   BYTE PTR [rip+0x100eb],0x20        # 2b0a2 <opt+0x2>
   1afb7:	je     1ad89 <hvm_handler_process+0x159>
   1afbd:	mov    rcx,QWORD PTR [rip+0x4c294]        # 67258 <warn>
   1afc4:	mov    edx,0x2e
   1afc9:	mov    esi,0x1
   1afce:	lea    rdi,[rip+0x7cc3]        # 22c98 <_IO_stdin_used+0x4c98>
   1afd5:	call   5260 <fwrite@plt>
   1afda:	jmp    1ad89 <hvm_handler_process+0x159>
   1afdf:	nop
   1afe0:	mov    rsi,rbx
   1afe3:	mov    rdi,rbp
   1afe6:	pop    rbx
   1afe7:	pop    rbp
   1afe8:	pop    r12
   1afea:	jmp    159c0 <hvm_msr_write_process>
   1afef:	lea    rsi,[rip+0x3549]        # 1e53f <_IO_stdin_used+0x53f>
   1aff6:	mov    rdi,rbp
   1aff9:	call   11130 <hvm_generic_dump>
   1affe:	jmp    1ae20 <hvm_handler_process+0x1f0>
   1b003:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1b00e:	xchg   ax,ax

000000000001b010 <hvm_process>:
   1b010:	push   rbp
   1b011:	push   rbx
   1b012:	sub    rsp,0x8
   1b016:	mov    rbp,QWORD PTR [rdi+0x1a8]
   1b01d:	test   rbp,rbp
   1b020:	je     1b10d <hvm_process+0xfd>
   1b026:	mov    rbx,rdi
   1b029:	mov    esi,0x1
   1b02e:	mov    rdi,rbp
   1b031:	call   160d0 <vcpu_set_data_type>
   1b036:	test   eax,eax
   1b038:	jne    1b090 <hvm_process+0x80>
   1b03a:	movzx  eax,BYTE PTR [rbx+0x41]
   1b03e:	lea    rdi,[rbx+0x30]
   1b042:	lea    rsi,[rbp+0x3bf8]
   1b049:	and    eax,0xfffffff0
   1b04c:	cmp    al,0x20
   1b04e:	je     1b0f0 <hvm_process+0xe0>
   1b054:	mov    ecx,DWORD PTR [rbx+0x40]
   1b057:	cmp    ecx,0x81002
   1b05d:	je     1b0d0 <hvm_process+0xc0>
   1b05f:	cmp    ecx,0x81102
   1b065:	je     1b0d0 <hvm_process+0xc0>
   1b067:	cmp    ecx,0x81001
   1b06d:	je     1b0a0 <hvm_process+0x90>
   1b06f:	mov    rdi,QWORD PTR [rip+0x4c1e2]        # 67258 <warn>
   1b076:	add    rsp,0x8
   1b07a:	lea    rdx,[rip+0x3e3a]        # 1eebb <_IO_stdin_used+0xebb>
   1b081:	xor    eax,eax
   1b083:	pop    rbx
   1b084:	mov    esi,0x1
   1b089:	pop    rbp
   1b08a:	jmp    5270 <__fprintf_chk@plt>
   1b08f:	nop
   1b090:	add    rsp,0x8
   1b094:	pop    rbx
   1b095:	pop    rbp
   1b096:	ret    
   1b097:	nop    WORD PTR [rax+rax*1+0x0]
   1b0a0:	movsxd rax,DWORD PTR [rbx+0x48]
   1b0a4:	add    QWORD PTR [rbx+0x258],rax
   1b0ab:	add    QWORD PTR [rbx+0x2b8],rax
   1b0b2:	mov    rsi,QWORD PTR [rbx+0x1a8]
   1b0b9:	add    rsp,0x8
   1b0bd:	pop    rbx
   1b0be:	pop    rbp
   1b0bf:	add    rsi,0x3bf8
   1b0c6:	jmp    11ee0 <hvm_vmentry_process>
   1b0cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1b0d0:	movsxd rax,DWORD PTR [rbx+0x48]
   1b0d4:	add    QWORD PTR [rbx+0x260],rax
   1b0db:	mov    rdx,rbp
   1b0de:	add    QWORD PTR [rbx+0x2c0],rax
   1b0e5:	add    rsp,0x8
   1b0e9:	pop    rbx
   1b0ea:	pop    rbp
   1b0eb:	jmp    15b40 <hvm_vmexit_process>
   1b0f0:	movsxd rax,DWORD PTR [rbx+0x48]
   1b0f4:	add    QWORD PTR [rbx+0x268],rax
   1b0fb:	add    QWORD PTR [rbx+0x2c8],rax
   1b102:	add    rsp,0x8
   1b106:	pop    rbx
   1b107:	pop    rbp
   1b108:	jmp    1ac30 <hvm_handler_process>
   1b10d:	lea    rcx,[rip+0x9494]        # 245a8 <__PRETTY_FUNCTION__.6991>
   1b114:	mov    edx,0x1497
   1b119:	lea    rsi,[rip+0x2fa8]        # 1e0c8 <_IO_stdin_used+0xc8>
   1b120:	lea    rdi,[rip+0x3892]        # 1e9b9 <_IO_stdin_used+0x9b9>
   1b127:	call   5110 <__assert_fail@plt>
   1b12c:	nop    DWORD PTR [rax+0x0]

000000000001b130 <process_lost_records_end>:
   1b130:	push   r13
   1b132:	push   r12
   1b134:	push   rbp
   1b135:	push   rbx
   1b136:	mov    rbx,rdi
   1b139:	sub    rsp,0x8
   1b13d:	test   BYTE PTR [rdi+0x1b0],0x1
   1b144:	je     1b2e8 <process_lost_records_end+0x1b8>
   1b14a:	mov    rdx,QWORD PTR [rdi+0x38]
   1b14e:	mov    rax,QWORD PTR [rdi+0x1b8]
   1b155:	cmp    rdx,rax
   1b158:	jbe    1b2da <process_lost_records_end+0x1aa>
   1b15e:	test   BYTE PTR [rip+0xff3c],0x40        # 2b0a1 <opt+0x1>
   1b165:	jne    1b370 <process_lost_records_end+0x240>
   1b16b:	add    DWORD PTR [rbx+0x348],0x1
   1b172:	sub    rdx,rax
   1b175:	mov    rbp,rdx
   1b178:	je     1b25e <process_lost_records_end+0x12e>
   1b17e:	movsxd rcx,DWORD PTR [rbx+0x34c]
   1b185:	mov    edx,DWORD PTR [rip+0xff4d]        # 2b0d8 <opt+0x38>
   1b18b:	mov    eax,ecx
   1b18d:	test   edx,edx
   1b18f:	je     1b240 <process_lost_records_end+0x110>
   1b195:	mov    eax,DWORD PTR [rbx+0x350]
   1b19b:	cmp    eax,ecx
   1b19d:	jg     1b458 <process_lost_records_end+0x328>
   1b1a3:	mov    r12d,DWORD PTR [rip+0xff32]        # 2b0dc <opt+0x3c>
   1b1aa:	test   ecx,ecx
   1b1ac:	jne    1b470 <process_lost_records_end+0x340>
   1b1b2:	add    eax,eax
   1b1b4:	cmove  eax,edx
   1b1b7:	test   r12d,r12d
   1b1ba:	je     1b4a0 <process_lost_records_end+0x370>
   1b1c0:	cmp    eax,r12d
   1b1c3:	jle    1b4a0 <process_lost_records_end+0x370>
   1b1c9:	movsxd rsi,r12d
   1b1cc:	mov    rdi,QWORD PTR [rbx+0x360]
   1b1d3:	shl    rsi,0x3
   1b1d7:	call   51d0 <realloc@plt>
   1b1dc:	test   rax,rax
   1b1df:	je     1b490 <process_lost_records_end+0x360>
   1b1e5:	mov    QWORD PTR [rbx+0x360],rax
   1b1ec:	mov    DWORD PTR [rbx+0x350],r12d
   1b1f3:	movsxd rcx,DWORD PTR [rbx+0x34c]
   1b1fa:	cmp    ecx,r12d
   1b1fd:	jl     1b458 <process_lost_records_end+0x328>
   1b203:	mov    eax,ecx
   1b205:	cdq    
   1b206:	idiv   r12d
   1b209:	lea    esi,[rax+0x1]
   1b20c:	movsxd rdi,edx
   1b20f:	mov    edx,0x55555556
   1b214:	mov    eax,esi
   1b216:	imul   edx
   1b218:	mov    eax,esi
   1b21a:	sar    eax,0x1f
   1b21d:	sub    eax,edx
   1b21f:	add    eax,edi
   1b221:	cdq    
   1b222:	idiv   esi
   1b224:	mov    eax,ecx
   1b226:	test   edx,edx
   1b228:	jne    1b240 <process_lost_records_end+0x110>
   1b22a:	mov    rax,QWORD PTR [rbx+0x360]
   1b231:	mov    QWORD PTR [rax+rdi*8],rbp
   1b235:	mov    eax,DWORD PTR [rbx+0x34c]
   1b23b:	nop    DWORD PTR [rax+rax*1+0x0]
   1b240:	add    eax,0x1
   1b243:	add    QWORD PTR [rbx+0x358],rbp
   1b24a:	add    DWORD PTR [rbx+0x368],0x1
   1b251:	add    QWORD PTR [rbx+0x370],rbp
   1b258:	mov    DWORD PTR [rbx+0x34c],eax
   1b25e:	movzx  eax,BYTE PTR [rip+0xfe3c]        # 2b0a1 <opt+0x1>
   1b265:	and    eax,0x40
   1b268:	test   BYTE PTR [rbx+0x1b0],0x2
   1b26f:	je     1b320 <process_lost_records_end+0x1f0>
   1b275:	mov    ebp,DWORD PTR [rbx+0x1b0]
   1b27b:	movzx  r12d,WORD PTR [rbx+0x1b4]
   1b283:	shr    ebp,0x3
   1b286:	movzx  ebp,bp
   1b289:	test   al,al
   1b28b:	jne    1b3a0 <process_lost_records_end+0x270>
   1b291:	mov    rax,QWORD PTR [rbx+0x1a8]
   1b298:	test   rax,rax
   1b29b:	je     1b3ff <process_lost_records_end+0x2cf>
   1b2a1:	mov    rdx,QWORD PTR [rax+0x8]
   1b2a5:	mov    eax,DWORD PTR [rax]
   1b2a7:	sub    rsp,0x8
   1b2ab:	mov    r8d,r12d
   1b2ae:	mov    rdi,QWORD PTR [rip+0x4bfa3]        # 67258 <warn>
   1b2b5:	mov    ecx,ebp
   1b2b7:	mov    esi,0x1
   1b2bc:	mov    r9d,DWORD PTR [rdx+0x8]
   1b2c0:	push   rax
   1b2c1:	lea    rdx,[rip+0x7ab0]        # 22d78 <_IO_stdin_used+0x4d78>
   1b2c8:	xor    eax,eax
   1b2ca:	call   5270 <__fprintf_chk@plt>
   1b2cf:	cmp    DWORD PTR [rip+0xfe0a],0x4        # 2b0e0 <opt+0x40>
   1b2d6:	pop    rax
   1b2d7:	pop    rdx
   1b2d8:	jbe    1b30e <process_lost_records_end+0x1de>
   1b2da:	add    rsp,0x8
   1b2de:	pop    rbx
   1b2df:	pop    rbp
   1b2e0:	pop    r12
   1b2e2:	pop    r13
   1b2e4:	ret    
   1b2e5:	nop    DWORD PTR [rax]
   1b2e8:	mov    ecx,DWORD PTR [rdi+0x4]
   1b2eb:	mov    rdi,QWORD PTR [rip+0x4bf66]        # 67258 <warn>
   1b2f2:	xor    eax,eax
   1b2f4:	lea    rdx,[rip+0x79f5]        # 22cf0 <_IO_stdin_used+0x4cf0>
   1b2fb:	mov    esi,0x1
   1b300:	call   5270 <__fprintf_chk@plt>
   1b305:	cmp    DWORD PTR [rip+0xfdd4],0x4        # 2b0e0 <opt+0x40>
   1b30c:	ja     1b2da <process_lost_records_end+0x1aa>
   1b30e:	mov    edi,0x1
   1b313:	call   5250 <exit@plt>
   1b318:	nop    DWORD PTR [rax+rax*1+0x0]
   1b320:	test   al,al
   1b322:	jne    1b430 <process_lost_records_end+0x300>
   1b328:	and    BYTE PTR [rbx+0x1b0],0xfe
   1b32f:	mov    rdi,rbx
   1b332:	call   171c0 <pcpu_string_draw>
   1b337:	sub    DWORD PTR [rip+0x13e76],0x1        # 2f1b4 <P+0x14>
   1b33e:	jns    1b2da <process_lost_records_end+0x1aa>
   1b340:	mov    ecx,DWORD PTR [rbx+0x4]
   1b343:	mov    rdi,QWORD PTR [rip+0x4bf0e]        # 67258 <warn>
   1b34a:	xor    eax,eax
   1b34c:	lea    rdx,[rip+0x7ab5]        # 22e08 <_IO_stdin_used+0x4e08>
   1b353:	mov    esi,0x1
   1b358:	call   5270 <__fprintf_chk@plt>
   1b35d:	cmp    DWORD PTR [rip+0xfd7c],0x6        # 2b0e0 <opt+0x40>
   1b364:	ja     1b2da <process_lost_records_end+0x1aa>
   1b36a:	jmp    1b30e <process_lost_records_end+0x1de>
   1b36c:	nop    DWORD PTR [rax+0x0]
   1b370:	mov    edi,DWORD PTR [rdi+0x4]
   1b373:	call   1a9e0 <pcpu_string>
   1b378:	lea    rsi,[rip+0x79a1]        # 22d20 <_IO_stdin_used+0x4d20>
   1b37f:	mov    edi,0x1
   1b384:	mov    rdx,rax
   1b387:	xor    eax,eax
   1b389:	call   5200 <__printf_chk@plt>
   1b38e:	mov    rdx,QWORD PTR [rbx+0x38]
   1b392:	mov    rax,QWORD PTR [rbx+0x1b8]
   1b399:	jmp    1b16b <process_lost_records_end+0x3b>
   1b39e:	xchg   ax,ax
   1b3a0:	mov    edi,DWORD PTR [rbx+0x4]
   1b3a3:	call   1a9e0 <pcpu_string>
   1b3a8:	mov    r8d,r12d
   1b3ab:	mov    ecx,ebp
   1b3ad:	mov    edi,0x1
   1b3b2:	mov    rdx,rax
   1b3b5:	lea    rsi,[rip+0x798c]        # 22d48 <_IO_stdin_used+0x4d48>
   1b3bc:	xor    eax,eax
   1b3be:	call   5200 <__printf_chk@plt>
   1b3c3:	mov    rax,QWORD PTR [rbx+0x1a8]
   1b3ca:	test   rax,rax
   1b3cd:	jne    1b2a1 <process_lost_records_end+0x171>
   1b3d3:	test   BYTE PTR [rip+0xfcc7],0x40        # 2b0a1 <opt+0x1>
   1b3da:	je     1b3ff <process_lost_records_end+0x2cf>
   1b3dc:	mov    ecx,DWORD PTR [rbx+0x4]
   1b3df:	mov    rdi,QWORD PTR [rip+0x4be72]        # 67258 <warn>
   1b3e6:	mov    r9d,r12d
   1b3e9:	mov    r8d,ebp
   1b3ec:	lea    rdx,[rip+0x79bd]        # 22db0 <_IO_stdin_used+0x4db0>
   1b3f3:	mov    esi,0x1
   1b3f8:	xor    eax,eax
   1b3fa:	call   5270 <__fprintf_chk@plt>
   1b3ff:	mov    r13,QWORD PTR [rbx+0x38]
   1b403:	mov    esi,r12d
   1b406:	mov    edi,ebp
   1b408:	call   12e70 <vcpu_find>
   1b40d:	mov    rdi,rbx
   1b410:	mov    rdx,r13
   1b413:	mov    rsi,rax
   1b416:	call   17860 <vcpu_next_update>
   1b41b:	and    BYTE PTR [rbx+0x1b0],0xf9
   1b422:	jmp    1b328 <process_lost_records_end+0x1f8>
   1b427:	nop    WORD PTR [rax+rax*1+0x0]
   1b430:	mov    edi,DWORD PTR [rbx+0x4]
   1b433:	call   1a9e0 <pcpu_string>
   1b438:	lea    rsi,[rip+0x7991]        # 22dd0 <_IO_stdin_used+0x4dd0>
   1b43f:	mov    edi,0x1
   1b444:	mov    rdx,rax
   1b447:	xor    eax,eax
   1b449:	call   5200 <__printf_chk@plt>
   1b44e:	jmp    1b328 <process_lost_records_end+0x1f8>
   1b453:	nop    DWORD PTR [rax+rax*1+0x0]
   1b458:	mov    rax,QWORD PTR [rbx+0x360]
   1b45f:	mov    QWORD PTR [rax+rcx*8],rbp
   1b463:	mov    eax,DWORD PTR [rbx+0x34c]
   1b469:	jmp    1b240 <process_lost_records_end+0x110>
   1b46e:	xchg   ax,ax
   1b470:	cmp    eax,r12d
   1b473:	jl     1b1b2 <process_lost_records_end+0x82>
   1b479:	test   r12d,r12d
   1b47c:	je     1b1b2 <process_lost_records_end+0x82>
   1b482:	mov    r12d,eax
   1b485:	jmp    1b203 <process_lost_records_end+0xd3>
   1b48a:	nop    WORD PTR [rax+rax*1+0x0]
   1b490:	mov    r12d,DWORD PTR [rbx+0x350]
   1b497:	jmp    1b1f3 <process_lost_records_end+0xc3>
   1b49c:	nop    DWORD PTR [rax+0x0]
   1b4a0:	mov    r12d,eax
   1b4a3:	jmp    1b1c9 <process_lost_records_end+0x99>
   1b4a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001b4b0 <base_process>:
   1b4b0:	mov    eax,DWORD PTR [rdi+0x40]
   1b4b3:	cmp    eax,0x1f002
   1b4b8:	je     1b4d8 <base_process+0x28>
   1b4ba:	cmp    eax,0x1f032
   1b4bf:	je     1b4e8 <base_process+0x38>
   1b4c1:	cmp    eax,0x1f001
   1b4c6:	je     1b4e0 <base_process+0x30>
   1b4c8:	add    rdi,0x30
   1b4cc:	jmp    16030 <process_generic>
   1b4d1:	nop    DWORD PTR [rax+0x0]
   1b4d8:	ret    
   1b4d9:	nop    DWORD PTR [rax+0x0]
   1b4e0:	jmp    1a710 <process_lost_records>
   1b4e5:	nop    DWORD PTR [rax]
   1b4e8:	jmp    1b130 <process_lost_records_end>
   1b4ed:	nop    DWORD PTR [rax]

000000000001b4f0 <create_dump_header>:
   1b4f0:	push   r13
   1b4f2:	mov    r13,rsi
   1b4f5:	push   r12
   1b4f7:	push   rbp
   1b4f8:	mov    rbp,rdi
   1b4fb:	push   rbx
   1b4fc:	lea    rbx,[rdi+0x28]
   1b500:	sub    rsp,0x8
   1b504:	mov    rax,QWORD PTR [rdi+0x8]
   1b508:	mov    rdx,QWORD PTR [rip+0x13cb1]        # 2f1c0 <P+0x20>
   1b50f:	cmp    rax,rdx
   1b512:	jbe    1b628 <create_dump_header+0x138>
   1b518:	sub    rax,rdx
   1b51b:	mov    rdi,QWORD PTR [rip+0xfb86]        # 2b0a8 <opt+0x8>
   1b522:	xor    edx,edx
   1b524:	shl    rax,0xa
   1b528:	mov    rcx,rax
   1b52b:	div    rdi
   1b52e:	movabs rdx,0x44b82fa09b5a53
   1b538:	mov    r9,rax
   1b53b:	mov    rsi,rax
   1b53e:	mov    QWORD PTR [rbp+0x128],rax
   1b545:	shr    r9,0x9
   1b549:	mov    rax,r9
   1b54c:	mul    rdx
   1b54f:	shr    rdx,0xb
   1b553:	imul   eax,edx,0x3b9aca00
   1b559:	mov    r9,rdx
   1b55c:	mov    DWORD PTR [rbp+0x130],edx
   1b562:	sub    esi,eax
   1b564:	mov    DWORD PTR [rbp+0x134],esi
   1b56a:	cmp    rcx,rdi
   1b56d:	jb     1b63e <create_dump_header+0x14e>
   1b573:	sub    rsp,0x8
   1b577:	mov    ecx,0x100
   1b57c:	mov    edx,0x1
   1b581:	xor    eax,eax
   1b583:	push   rsi
   1b584:	mov    rdi,rbx
   1b587:	lea    r8,[rip+0x3944]        # 1eed2 <_IO_stdin_used+0xed2>
   1b58e:	mov    esi,0x100
   1b593:	call   5030 <__snprintf_chk@plt>
   1b598:	pop    rdx
   1b599:	pop    rcx
   1b59a:	movsxd r12,eax
   1b59d:	add    r12,rbx
   1b5a0:	mov    ebx,0x100
   1b5a5:	sub    ebx,eax
   1b5a7:	mov    edi,DWORD PTR [rbp+0x0]
   1b5aa:	call   1a9e0 <pcpu_string>
   1b5af:	movsxd rsi,ebx
   1b5b2:	mov    edx,0x1
   1b5b7:	mov    rdi,r12
   1b5ba:	mov    r9,rax
   1b5bd:	lea    r8,[rip+0x2c0d]        # 1e1d1 <_IO_stdin_used+0x1d1>
   1b5c4:	mov    rcx,0xffffffffffffffff
   1b5cb:	xor    eax,eax
   1b5cd:	call   5030 <__snprintf_chk@plt>
   1b5d2:	mov    rdx,QWORD PTR [r13+0x1a8]
   1b5d9:	movsxd rdi,eax
   1b5dc:	sub    ebx,eax
   1b5de:	add    rdi,r12
   1b5e1:	movsxd rsi,ebx
   1b5e4:	test   rdx,rdx
   1b5e7:	je     1b670 <create_dump_header+0x180>
   1b5ed:	mov    rax,QWORD PTR [rdx+0x8]
   1b5f1:	sub    rsp,0x8
   1b5f5:	lea    r8,[rip+0x38df]        # 1eedb <_IO_stdin_used+0xedb>
   1b5fc:	mov    rcx,0xffffffffffffffff
   1b603:	mov    r9d,DWORD PTR [rax+0x8]
   1b607:	mov    eax,DWORD PTR [rdx]
   1b609:	mov    edx,0x1
   1b60e:	push   rax
   1b60f:	xor    eax,eax
   1b611:	call   5030 <__snprintf_chk@plt>
   1b616:	add    rsp,0x18
   1b61a:	pop    rbx
   1b61b:	pop    rbp
   1b61c:	pop    r12
   1b61e:	pop    r13
   1b620:	ret    
   1b621:	nop    DWORD PTR [rax+0x0]
   1b628:	mov    QWORD PTR [rdi+0x128],0x0
   1b633:	mov    QWORD PTR [rdi+0x130],0x0
   1b63e:	movabs rax,0x2020202020202020
   1b648:	lea    r12,[rbp+0x36]
   1b64c:	mov    QWORD PTR [rbp+0x28],rax
   1b650:	mov    eax,0x2020
   1b655:	mov    DWORD PTR [rbx+0x8],0x20202020
   1b65c:	mov    WORD PTR [rbx+0xc],ax
   1b660:	mov    BYTE PTR [rbx+0xe],0x0
   1b664:	mov    ebx,0xf2
   1b669:	jmp    1b5a7 <create_dump_header+0xb7>
   1b66e:	xchg   ax,ax
   1b670:	add    rsp,0x8
   1b674:	lea    rdx,[rip+0x3868]        # 1eee3 <_IO_stdin_used+0xee3>
   1b67b:	xor    eax,eax
   1b67d:	pop    rbx
   1b67e:	pop    rbp
   1b67f:	pop    r12
   1b681:	pop    r13
   1b683:	jmp    5100 <snprintf@plt>
   1b688:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001b690 <record_order_bubble>:
   1b690:	mov    rax,QWORD PTR [rip+0x12dc9]        # 2e460 <record_order>
   1b697:	test   rax,rax
   1b69a:	je     1b6cd <record_order_bubble+0x3d>
   1b69c:	cmp    rdi,rax
   1b69f:	je     1b73e <record_order_bubble+0xae>
   1b6a5:	mov    edx,0x1
   1b6aa:	lea    r8,[rip+0x12daf]        # 2e460 <record_order>
   1b6b1:	jmp    1b6c1 <record_order_bubble+0x31>
   1b6b3:	nop    DWORD PTR [rax+rax*1+0x0]
   1b6b8:	add    rdx,0x1
   1b6bc:	cmp    rcx,rdi
   1b6bf:	je     1b6f0 <record_order_bubble+0x60>
   1b6c1:	mov    rcx,QWORD PTR [r8+rdx*8]
   1b6c5:	movsxd rax,edx
   1b6c8:	test   rcx,rcx
   1b6cb:	jne    1b6b8 <record_order_bubble+0x28>
   1b6cd:	push   rax
   1b6ce:	lea    rcx,[rip+0x8b4b]        # 24220 <__PRETTY_FUNCTION__.8462>
   1b6d5:	mov    edx,0x2622
   1b6da:	lea    rsi,[rip+0x29e7]        # 1e0c8 <_IO_stdin_used+0xc8>
   1b6e1:	lea    rdi,[rip+0x3801]        # 1eee9 <_IO_stdin_used+0xee9>
   1b6e8:	call   5110 <__assert_fail@plt>
   1b6ed:	nop    DWORD PTR [rax]
   1b6f0:	lea    edx,[rax+0x1]
   1b6f3:	movsxd rdx,edx
   1b6f6:	mov    rcx,QWORD PTR [r8+rdx*8]
   1b6fa:	test   rcx,rcx
   1b6fd:	je     1b74e <record_order_bubble+0xbe>
   1b6ff:	mov    rsi,QWORD PTR [rcx+0x18]
   1b703:	cmp    QWORD PTR [rdi+0x18],rsi
   1b707:	jbe    1b74e <record_order_bubble+0xbe>
   1b709:	lea    r9,[rip+0x12d58]        # 2e468 <record_order+0x8>
   1b710:	jmp    1b729 <record_order_bubble+0x99>
   1b712:	nop    WORD PTR [rax+rax*1+0x0]
   1b718:	add    rdx,0x1
   1b71c:	movsxd rax,esi
   1b71f:	mov    r10,QWORD PTR [rdi+0x18]
   1b723:	cmp    QWORD PTR [rcx+0x18],r10
   1b727:	jae    1b739 <record_order_bubble+0xa9>
   1b729:	mov    QWORD PTR [r8+rax*8],rcx
   1b72d:	mov    rcx,QWORD PTR [r9+rdx*8]
   1b731:	movsxd rsi,edx
   1b734:	test   rcx,rcx
   1b737:	jne    1b718 <record_order_bubble+0x88>
   1b739:	mov    QWORD PTR [r8+rsi*8],rdi
   1b73d:	ret    
   1b73e:	mov    edx,0x1
   1b743:	xor    eax,eax
   1b745:	lea    r8,[rip+0x12d14]        # 2e460 <record_order>
   1b74c:	jmp    1b6f3 <record_order_bubble+0x63>
   1b74e:	movsxd rsi,eax
   1b751:	jmp    1b739 <record_order_bubble+0xa9>
   1b753:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1b75e:	xchg   ax,ax

000000000001b760 <record_order_insert>:
   1b760:	mov    rax,QWORD PTR [rip+0x12cf9]        # 2e460 <record_order>
   1b767:	test   rax,rax
   1b76a:	je     1b7e3 <record_order_insert+0x83>
   1b76c:	cmp    rdi,rax
   1b76f:	je     1b7f8 <record_order_insert+0x98>
   1b775:	lea    rdx,[rip+0x12cec]        # 2e468 <record_order+0x8>
   1b77c:	jmp    1b789 <record_order_insert+0x29>
   1b77e:	xchg   ax,ax
   1b780:	add    rdx,0x8
   1b784:	cmp    rcx,rdi
   1b787:	je     1b7f8 <record_order_insert+0x98>
   1b789:	mov    rcx,QWORD PTR [rdx]
   1b78c:	test   rcx,rcx
   1b78f:	jne    1b780 <record_order_insert+0x20>
   1b791:	mov    r8,QWORD PTR [rdi+0x18]
   1b795:	mov    edx,0x1
   1b79a:	lea    rsi,[rip+0x12cbf]        # 2e460 <record_order>
   1b7a1:	xor    ecx,ecx
   1b7a3:	cmp    QWORD PTR [rax+0x18],r8
   1b7a7:	jb     1b7ba <record_order_insert+0x5a>
   1b7a9:	jmp    1b7c6 <record_order_insert+0x66>
   1b7ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1b7b0:	add    rdx,0x1
   1b7b4:	cmp    QWORD PTR [rax+0x18],r8
   1b7b8:	jae    1b7c6 <record_order_insert+0x66>
   1b7ba:	mov    rax,QWORD PTR [rsi+rdx*8]
   1b7be:	movsxd rcx,edx
   1b7c1:	test   rax,rax
   1b7c4:	jne    1b7b0 <record_order_insert+0x50>
   1b7c6:	lea    rdx,[rsi+rcx*8]
   1b7ca:	jmp    1b7d6 <record_order_insert+0x76>
   1b7cc:	nop    DWORD PTR [rax+0x0]
   1b7d0:	mov    rdi,rax
   1b7d3:	mov    rax,QWORD PTR [rdx]
   1b7d6:	mov    QWORD PTR [rdx],rdi
   1b7d9:	add    rdx,0x8
   1b7dd:	test   rax,rax
   1b7e0:	jne    1b7d0 <record_order_insert+0x70>
   1b7e2:	ret    
   1b7e3:	test   rdi,rdi
   1b7e6:	je     1b7e2 <record_order_insert+0x82>
   1b7e8:	xor    ecx,ecx
   1b7ea:	lea    rsi,[rip+0x12c6f]        # 2e460 <record_order>
   1b7f1:	jmp    1b7c6 <record_order_insert+0x66>
   1b7f3:	nop    DWORD PTR [rax+rax*1+0x0]
   1b7f8:	sub    rsp,0x8
   1b7fc:	lea    rcx,[rip+0x89fd]        # 24200 <__PRETTY_FUNCTION__.8472>
   1b803:	mov    edx,0x2639
   1b808:	lea    rsi,[rip+0x28b9]        # 1e0c8 <_IO_stdin_used+0xc8>
   1b80f:	lea    rdi,[rip+0x36e3]        # 1eef9 <_IO_stdin_used+0xef9>
   1b816:	call   5110 <__assert_fail@plt>
   1b81b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001b820 <scan_for_new_pcpu>:
   1b820:	push   r12
   1b822:	push   rbp
   1b823:	mov    rbp,rdi
   1b826:	push   rbx
   1b827:	mov    rsi,rbp
   1b82a:	sub    rsp,0x30
   1b82e:	mov    rax,QWORD PTR fs:0x28
   1b837:	mov    QWORD PTR [rsp+0x28],rax
   1b83c:	xor    eax,eax
   1b83e:	mov    rdi,rsp
   1b841:	call   16f50 <__read_record>
   1b846:	test   rax,rax
   1b849:	je     1b89b <scan_for_new_pcpu+0x7b>
   1b84b:	mov    r8d,DWORD PTR [rsp]
   1b84f:	mov    r12,rax
   1b852:	mov    eax,r8d
   1b855:	and    eax,0x8fffffff
   1b85a:	cmp    eax,0x1f003
   1b85f:	jne    1b8c0 <scan_for_new_pcpu+0xa0>
   1b861:	mov    r8d,DWORD PTR [rsp+0x4]
   1b866:	cmp    r8d,0x100
   1b86d:	jg     1b9b0 <scan_for_new_pcpu+0x190>
   1b873:	cmp    DWORD PTR [rip+0x13926],r8d        # 2f1a0 <P>
   1b87a:	movsxd rcx,r8d
   1b87d:	lea    rdx,[rip+0x1395c]        # 2f1e0 <P+0x40>
   1b884:	jl     1b900 <scan_for_new_pcpu+0xe0>
   1b886:	lea    rax,[rcx*8+0x0]
   1b88e:	sub    rax,rcx
   1b891:	shl    rax,0x7
   1b895:	test   BYTE PTR [rdx+rax*1],0x1
   1b899:	je     1b900 <scan_for_new_pcpu+0xe0>
   1b89b:	xor    ebp,ebp
   1b89d:	mov    rsi,QWORD PTR [rsp+0x28]
   1b8a2:	xor    rsi,QWORD PTR fs:0x28
   1b8ab:	mov    rax,rbp
   1b8ae:	jne    1b9ee <scan_for_new_pcpu+0x1ce>
   1b8b4:	add    rsp,0x30
   1b8b8:	pop    rbx
   1b8b9:	pop    rbp
   1b8ba:	pop    r12
   1b8bc:	ret    
   1b8bd:	nop    DWORD PTR [rax]
   1b8c0:	mov    rdi,QWORD PTR [rip+0x12b79]        # 2e440 <stderr@@GLIBC_2.2.5>
   1b8c7:	and    r8d,0xfffffff
   1b8ce:	xor    eax,eax
   1b8d0:	lea    rcx,[rip+0x89f9]        # 242d0 <__func__.8321>
   1b8d7:	lea    rdx,[rip+0x755a]        # 22e38 <_IO_stdin_used+0x4e38>
   1b8de:	mov    esi,0x1
   1b8e3:	call   5270 <__fprintf_chk@plt>
   1b8e8:	cmp    DWORD PTR [rip+0xf7f1],0x6        # 2b0e0 <opt+0x40>
   1b8ef:	ja     1b861 <scan_for_new_pcpu+0x41>
   1b8f5:	mov    edi,0x1
   1b8fa:	call   5250 <exit@plt>
   1b8ff:	nop
   1b900:	lea    rbx,[rcx*8+0x0]
   1b908:	mov    r9,rbp
   1b90b:	mov    esi,0x1
   1b910:	xor    eax,eax
   1b912:	sub    rbx,rcx
   1b915:	mov    rdi,QWORD PTR [rip+0x4b93c]        # 67258 <warn>
   1b91c:	lea    rcx,[rip+0x89ad]        # 242d0 <__func__.8321>
   1b923:	shl    rbx,0x7
   1b927:	add    rbx,rdx
   1b92a:	lea    rdx,[rip+0x754f]        # 22e80 <_IO_stdin_used+0x4e80>
   1b931:	call   5270 <__fprintf_chk@plt>
   1b936:	mov    rax,QWORD PTR [rsp+0x20]
   1b93b:	or     BYTE PTR [rbx],0x1
   1b93e:	mov    rdi,rbx
   1b941:	movdqa xmm0,XMMWORD PTR [rsp]
   1b946:	movdqa xmm1,XMMWORD PTR [rsp+0x10]
   1b94c:	mov    DWORD PTR [rbx+0x48],r12d
   1b950:	mov    QWORD PTR [rbx+0x188],rax
   1b957:	movups XMMWORD PTR [rbx+0x168],xmm0
   1b95e:	movups XMMWORD PTR [rbx+0x178],xmm1
   1b965:	call   17080 <__fill_in_record_info>
   1b96a:	mov    QWORD PTR [rbx+0x20],rbp
   1b96e:	mov    rdi,rbx
   1b971:	mov    QWORD PTR [rbx+0x28],rbp
   1b975:	call   1b760 <record_order_insert>
   1b97a:	mov    eax,DWORD PTR [rsp+0x8]
   1b97e:	mov    rdi,rbx
   1b981:	add    rax,r12
   1b984:	add    rbp,rax
   1b987:	call   1a520 <sched_default_vcpu_activate>
   1b98c:	mov    eax,DWORD PTR [rsp+0x4]
   1b990:	cmp    eax,DWORD PTR [rip+0x1380a]        # 2f1a0 <P>
   1b996:	jle    1b89d <scan_for_new_pcpu+0x7d>
   1b99c:	mov    DWORD PTR [rip+0x137fe],eax        # 2f1a0 <P>
   1b9a2:	jmp    1b89d <scan_for_new_pcpu+0x7d>
   1b9a7:	nop    WORD PTR [rax+rax*1+0x0]
   1b9b0:	mov    rdi,QWORD PTR [rip+0x12a89]        # 2e440 <stderr@@GLIBC_2.2.5>
   1b9b7:	xor    eax,eax
   1b9b9:	mov    r9d,0x100
   1b9bf:	lea    rcx,[rip+0x890a]        # 242d0 <__func__.8321>
   1b9c6:	lea    rdx,[rip+0x7493]        # 22e60 <_IO_stdin_used+0x4e60>
   1b9cd:	mov    esi,0x1
   1b9d2:	call   5270 <__fprintf_chk@plt>
   1b9d7:	cmp    DWORD PTR [rip+0xf702],0x6        # 2b0e0 <opt+0x40>
   1b9de:	jbe    1b8f5 <scan_for_new_pcpu+0xd5>
   1b9e4:	mov    r8d,DWORD PTR [rsp+0x4]
   1b9e9:	jmp    1b873 <scan_for_new_pcpu+0x53>
   1b9ee:	call   50d0 <__stack_chk_fail@plt>
   1b9f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1b9fe:	xchg   ax,ax

000000000001ba00 <record_order_remove>:
   1ba00:	mov    rax,QWORD PTR [rip+0x12a59]        # 2e460 <record_order>
   1ba07:	test   rax,rax
   1ba0a:	je     1ba35 <record_order_remove+0x35>
   1ba0c:	cmp    rdi,rax
   1ba0f:	je     1ba58 <record_order_remove+0x58>
   1ba11:	mov    eax,0x1
   1ba16:	lea    rsi,[rip+0x12a43]        # 2e460 <record_order>
   1ba1d:	jmp    1ba29 <record_order_remove+0x29>
   1ba1f:	nop
   1ba20:	add    rax,0x1
   1ba24:	cmp    rdx,rdi
   1ba27:	je     1ba68 <record_order_remove+0x68>
   1ba29:	mov    rdx,QWORD PTR [rsi+rax*8]
   1ba2d:	movsxd rcx,eax
   1ba30:	test   rdx,rdx
   1ba33:	jne    1ba20 <record_order_remove+0x20>
   1ba35:	push   rax
   1ba36:	lea    rcx,[rip+0x87a3]        # 241e0 <__PRETTY_FUNCTION__.8489>
   1ba3d:	mov    edx,0x2659
   1ba42:	lea    rsi,[rip+0x267f]        # 1e0c8 <_IO_stdin_used+0xc8>
   1ba49:	lea    rdi,[rip+0x3499]        # 1eee9 <_IO_stdin_used+0xee9>
   1ba50:	call   5110 <__assert_fail@plt>
   1ba55:	nop    DWORD PTR [rax]
   1ba58:	xor    ecx,ecx
   1ba5a:	lea    rsi,[rip+0x129ff]        # 2e460 <record_order>
   1ba61:	nop    DWORD PTR [rax+0x0]
   1ba68:	lea    rax,[rsi+rcx*8]
   1ba6c:	nop    DWORD PTR [rax+0x0]
   1ba70:	mov    rdx,QWORD PTR [rax+0x8]
   1ba74:	add    rax,0x8
   1ba78:	mov    QWORD PTR [rax-0x8],rdx
   1ba7c:	test   rdx,rdx
   1ba7f:	jne    1ba70 <record_order_remove+0x70>
   1ba81:	ret    
   1ba82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1ba8d:	nop    DWORD PTR [rax]

000000000001ba90 <deactivate_pcpu>:
   1ba90:	push   rbx
   1ba91:	cmp    QWORD PTR [rdi+0x1a8],0x0
   1ba99:	mov    rbx,rdi
   1ba9c:	je     1baea <deactivate_pcpu+0x5a>
   1ba9e:	mov    rsi,QWORD PTR [rdi+0x10]
   1baa2:	call   12ea0 <pcpu_runstate_update>
   1baa7:	mov    rax,QWORD PTR [rbx+0x1a8]
   1baae:	mov    rdi,QWORD PTR [rip+0x4b7a3]        # 67258 <warn>
   1bab5:	mov    esi,0x1
   1baba:	lea    rcx,[rip+0x87ff]        # 242c0 <__func__.8326>
   1bac1:	mov    rdx,QWORD PTR [rax+0x8]
   1bac5:	mov    r9d,DWORD PTR [rax]
   1bac8:	xor    eax,eax
   1baca:	mov    r8d,DWORD PTR [rdx+0x8]
   1bace:	lea    rdx,[rip+0x73d3]        # 22ea8 <_IO_stdin_used+0x4ea8>
   1bad5:	call   5270 <__fprintf_chk@plt>
   1bada:	mov    rsi,QWORD PTR [rbx+0x10]
   1bade:	mov    rdi,QWORD PTR [rbx+0x1a8]
   1bae5:	call   164a0 <lose_vcpu>
   1baea:	and    BYTE PTR [rbx],0xfe
   1baed:	mov    rdi,rbx
   1baf0:	call   1ba00 <record_order_remove>
   1baf5:	mov    esi,DWORD PTR [rip+0x136a5]        # 2f1a0 <P>
   1bafb:	cmp    DWORD PTR [rbx+0x4],esi
   1bafe:	je     1bb08 <deactivate_pcpu+0x78>
   1bb00:	pop    rbx
   1bb01:	ret    
   1bb02:	nop    WORD PTR [rax+rax*1+0x0]
   1bb08:	mov    r8d,0xffffffff
   1bb0e:	test   esi,esi
   1bb10:	js     1bb41 <deactivate_pcpu+0xb1>
   1bb12:	add    esi,0x1
   1bb15:	xor    edx,edx
   1bb17:	lea    rdi,[rip+0x136c2]        # 2f1e0 <P+0x40>
   1bb1e:	xchg   ax,ax
   1bb20:	movsxd rcx,edx
   1bb23:	lea    rax,[rcx*8+0x0]
   1bb2b:	sub    rax,rcx
   1bb2e:	shl    rax,0x7
   1bb32:	test   BYTE PTR [rdi+rax*1],0x1
   1bb36:	cmovne r8d,edx
   1bb3a:	add    edx,0x1
   1bb3d:	cmp    esi,edx
   1bb3f:	jne    1bb20 <deactivate_pcpu+0x90>
   1bb41:	mov    rdi,QWORD PTR [rip+0x4b710]        # 67258 <warn>
   1bb48:	mov    esi,0x1
   1bb4d:	xor    eax,eax
   1bb4f:	pop    rbx
   1bb50:	lea    rcx,[rip+0x8769]        # 242c0 <__func__.8326>
   1bb57:	lea    rdx,[rip+0x7372]        # 22ed0 <_IO_stdin_used+0x4ed0>
   1bb5e:	mov    DWORD PTR [rip+0x1363b],r8d        # 2f1a0 <P>
   1bb65:	jmp    5270 <__fprintf_chk@plt>
   1bb6a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001bb70 <process_cpu_change>:
   1bb70:	push   r13
   1bb72:	push   r12
   1bb74:	push   rbp
   1bb75:	push   rbx
   1bb76:	mov    rbx,rdi
   1bb79:	sub    rsp,0x8
   1bb7d:	mov    r12,QWORD PTR [rdi+0x50]
   1bb81:	test   BYTE PTR [rip+0xf519],0x40        # 2b0a1 <opt+0x1>
   1bb88:	je     1bb97 <process_cpu_change+0x27>
   1bb8a:	cmp    DWORD PTR [rip+0xf587],0x5        # 2b118 <verbosity>
   1bb91:	jg     1bdb0 <process_cpu_change+0x240>
   1bb97:	mov    r9,QWORD PTR [rbx+0x20]
   1bb9b:	mov    r8,QWORD PTR [rbx+0x28]
   1bb9f:	cmp    r9,r8
   1bba2:	je     1bbc1 <process_cpu_change+0x51>
   1bba4:	mov    ecx,DWORD PTR [rbx+0x4]
   1bba7:	mov    rdi,QWORD PTR [rip+0x4b6aa]        # 67258 <warn>
   1bbae:	lea    rdx,[rip+0x738b]        # 22f40 <_IO_stdin_used+0x4f40>
   1bbb5:	xor    eax,eax
   1bbb7:	mov    esi,0x1
   1bbbc:	call   5270 <__fprintf_chk@plt>
   1bbc1:	mov    edx,DWORD PTR [r12]
   1bbc5:	cmp    edx,0x100
   1bbcb:	jg     1bd70 <process_cpu_change+0x200>
   1bbd1:	cmp    DWORD PTR [rbx+0x190],edx
   1bbd7:	jle    1bbf1 <process_cpu_change+0x81>
   1bbd9:	mov    rax,QWORD PTR [rbx+0x20]
   1bbdd:	cmp    rax,QWORD PTR [rip+0x135c4]        # 2f1a8 <P+0x8>
   1bbe4:	jle    1bbf1 <process_cpu_change+0x81>
   1bbe6:	mov    QWORD PTR [rip+0x135bb],rax        # 2f1a8 <P+0x8>
   1bbed:	mov    edx,DWORD PTR [r12]
   1bbf1:	movsxd rcx,edx
   1bbf4:	lea    rbp,[rip+0x135e5]        # 2f1e0 <P+0x40>
   1bbfb:	lea    rax,[rcx*8+0x0]
   1bc03:	sub    rax,rcx
   1bc06:	shl    rax,0x7
   1bc0a:	add    rbp,rax
   1bc0d:	movzx  ecx,BYTE PTR [rbp+0x0]
   1bc11:	test   cl,0x1
   1bc14:	jne    1bcb0 <process_cpu_change+0x140>
   1bc1a:	lea    rsi,[rip+0x1357f]        # 2f1a0 <P>
   1bc21:	cmp    QWORD PTR [rsi+rax*1+0x60],0x0
   1bc27:	jne    1bcb0 <process_cpu_change+0x140>
   1bc2d:	or     ecx,0x1
   1bc30:	mov    BYTE PTR [rbp+0x0],cl
   1bc33:	mov    eax,DWORD PTR [r12]
   1bc37:	cmp    eax,DWORD PTR [rip+0x13563]        # 2f1a0 <P>
   1bc3d:	jle    1bc45 <process_cpu_change+0xd5>
   1bc3f:	mov    DWORD PTR [rip+0x1355b],eax        # 2f1a0 <P>
   1bc45:	lea    rdi,[rbp+0x30]
   1bc49:	lea    rsi,[rbx+0x30]
   1bc4d:	mov    ecx,0x2c
   1bc52:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1bc55:	mov    rdi,QWORD PTR [rip+0x4b5fc]        # 67258 <warn>
   1bc5c:	lea    rdx,[rip+0x721d]        # 22e80 <_IO_stdin_used+0x4e80>
   1bc63:	lea    rcx,[rip+0x8636]        # 242a0 <__func__.8363>
   1bc6a:	mov    esi,0x1
   1bc6f:	mov    eax,DWORD PTR [r12]
   1bc73:	mov    DWORD PTR [rbp+0x30],eax
   1bc76:	lea    rax,[rbp+0x16c]
   1bc7d:	mov    QWORD PTR [rbp+0x50],rax
   1bc81:	mov    rax,QWORD PTR [rbx+0x20]
   1bc85:	mov    QWORD PTR [rbp+0x20],rax
   1bc89:	mov    QWORD PTR [rbp+0x28],rax
   1bc8d:	mov    r9,QWORD PTR [rbx+0x20]
   1bc91:	xor    eax,eax
   1bc93:	mov    r8d,DWORD PTR [r12]
   1bc97:	call   5270 <__fprintf_chk@plt>
   1bc9c:	mov    rdi,rbp
   1bc9f:	call   1b760 <record_order_insert>
   1bca4:	mov    rdi,rbp
   1bca7:	call   1a520 <sched_default_vcpu_activate>
   1bcac:	mov    edx,DWORD PTR [r12]
   1bcb0:	mov    r8d,DWORD PTR [rbx+0x4]
   1bcb4:	mov    DWORD PTR [rbx+0x190],edx
   1bcba:	cmp    r8d,edx
   1bcbd:	je     1bd20 <process_cpu_change+0x1b0>
   1bcbf:	mov    eax,DWORD PTR [r12+0x4]
   1bcc4:	add    eax,DWORD PTR [rbx+0x48]
   1bcc7:	add    rax,QWORD PTR [rbx+0x20]
   1bccb:	mov    QWORD PTR [rbx+0x20],rax
   1bccf:	mov    QWORD PTR [rbx+0x28],rax
   1bcd3:	cmp    rax,QWORD PTR [rip+0xf476]        # 2b150 <G+0x30>
   1bcda:	jg     1bd08 <process_cpu_change+0x198>
   1bcdc:	mov    edx,DWORD PTR [rip+0x134ce]        # 2f1b0 <P+0x10>
   1bce2:	test   edx,edx
   1bce4:	je     1bcf6 <process_cpu_change+0x186>
   1bce6:	mov    r9,QWORD PTR [rip+0x134bb]        # 2f1a8 <P+0x8>
   1bced:	cmp    rax,r9
   1bcf0:	jg     1bde0 <process_cpu_change+0x270>
   1bcf6:	add    rsp,0x8
   1bcfa:	pop    rbx
   1bcfb:	pop    rbp
   1bcfc:	pop    r12
   1bcfe:	pop    r13
   1bd00:	ret    
   1bd01:	nop    DWORD PTR [rax+0x0]
   1bd08:	add    rsp,0x8
   1bd0c:	pop    rbx
   1bd0d:	pop    rbp
   1bd0e:	pop    r12
   1bd10:	pop    r13
   1bd12:	jmp    168b0 <activate_early_eof>
   1bd17:	nop    WORD PTR [rax+rax*1+0x0]
   1bd20:	test   BYTE PTR [rip+0xf37b],0x8        # 2b0a2 <opt+0x2>
   1bd27:	jne    1be18 <process_cpu_change+0x2a8>
   1bd2d:	movsxd rdi,DWORD PTR [rbx+0x48]
   1bd31:	mov    rax,QWORD PTR [rbx+0x20]
   1bd35:	add    rax,rdi
   1bd38:	mov    QWORD PTR [rbx+0x20],rax
   1bd3c:	mov    edi,DWORD PTR [r12+0x4]
   1bd41:	add    rdi,rax
   1bd44:	mov    QWORD PTR [rbx+0x28],rdi
   1bd48:	cmp    rdi,QWORD PTR [rip+0xf401]        # 2b150 <G+0x30>
   1bd4f:	jg     1bd08 <process_cpu_change+0x198>
   1bd51:	mov    eax,DWORD PTR [rip+0x13449]        # 2f1a0 <P>
   1bd57:	cmp    DWORD PTR [rbx+0x4],eax
   1bd5a:	jne    1bcf6 <process_cpu_change+0x186>
   1bd5c:	add    rsp,0x8
   1bd60:	pop    rbx
   1bd61:	pop    rbp
   1bd62:	pop    r12
   1bd64:	pop    r13
   1bd66:	jmp    1b820 <scan_for_new_pcpu>
   1bd6b:	nop    DWORD PTR [rax+rax*1+0x0]
   1bd70:	mov    rdi,QWORD PTR [rip+0x126c9]        # 2e440 <stderr@@GLIBC_2.2.5>
   1bd77:	mov    ecx,edx
   1bd79:	xor    eax,eax
   1bd7b:	mov    esi,0x1
   1bd80:	mov    r8d,0x100
   1bd86:	lea    rdx,[rip+0x3181]        # 1ef0e <_IO_stdin_used+0xf0e>
   1bd8d:	call   5270 <__fprintf_chk@plt>
   1bd92:	cmp    DWORD PTR [rip+0xf347],0x6        # 2b0e0 <opt+0x40>
   1bd99:	jbe    1c01d <process_cpu_change+0x4ad>
   1bd9f:	mov    edx,DWORD PTR [r12]
   1bda3:	jmp    1bbd1 <process_cpu_change+0x61>
   1bda8:	nop    DWORD PTR [rax+rax*1+0x0]
   1bdb0:	mov    r9d,DWORD PTR [r12+0x4]
   1bdb5:	sub    rsp,0x8
   1bdb9:	mov    ecx,DWORD PTR [rdi+0x4]
   1bdbc:	lea    rdx,[rdi+0x58]
   1bdc0:	lea    rsi,[rip+0x7131]        # 22ef8 <_IO_stdin_used+0x4ef8>
   1bdc7:	mov    edi,0x1
   1bdcc:	xor    eax,eax
   1bdce:	push   r9
   1bdd0:	mov    r8d,DWORD PTR [r12]
   1bdd4:	call   5200 <__printf_chk@plt>
   1bdd9:	pop    rcx
   1bdda:	pop    rsi
   1bddb:	jmp    1bb97 <process_cpu_change+0x27>
   1bde0:	mov    rdi,QWORD PTR [rip+0x4b471]        # 67258 <warn>
   1bde7:	lea    rcx,[rip+0x84b2]        # 242a0 <__func__.8363>
   1bdee:	lea    rdx,[rip+0x7183]        # 22f78 <_IO_stdin_used+0x4f78>
   1bdf5:	xor    eax,eax
   1bdf7:	mov    esi,0x1
   1bdfc:	call   5270 <__fprintf_chk@plt>
   1be01:	add    rsp,0x8
   1be05:	mov    rdi,rbx
   1be08:	pop    rbx
   1be09:	pop    rbp
   1be0a:	pop    r12
   1be0c:	pop    r13
   1be0e:	jmp    1ba90 <deactivate_pcpu>
   1be13:	nop    DWORD PTR [rax+rax*1+0x0]
   1be18:	movsxd rcx,DWORD PTR [rbx+0x208]
   1be1f:	mov    r9,QWORD PTR [rbx+0x38]
   1be23:	mov    edi,0x1
   1be28:	mov    rax,QWORD PTR [rbx+0x1c0]
   1be2f:	cmp    QWORD PTR [rbx+0x1c8],rax
   1be36:	lea    rsi,[rbx+rcx*8]
   1be3a:	cmovae rax,QWORD PTR [rbx+0x1c8]
   1be42:	mov    r8,QWORD PTR [rsi+0x1d0]
   1be49:	sub    r9,rax
   1be4c:	lea    rax,[rip+0xf5ed]        # 2b440 <runstate_name>
   1be53:	add    r8,r9
   1be56:	mov    rcx,QWORD PTR [rax+rcx*8]
   1be5a:	xor    eax,eax
   1be5c:	mov    QWORD PTR [rsi+0x1d0],r8
   1be63:	lea    rsi,[rip+0x715e]        # 22fc8 <_IO_stdin_used+0x4fc8>
   1be6a:	call   5200 <__printf_chk@plt>
   1be6f:	mov    rbp,QWORD PTR [rbx+0x38]
   1be73:	xor    edx,edx
   1be75:	mov    edi,0x1
   1be7a:	sub    rbp,QWORD PTR [rbx+0x1c0]
   1be81:	movabs rsi,0x44b82fa09b5a53
   1be8b:	mov    rcx,rbp
   1be8e:	sub    rcx,QWORD PTR [rip+0x1332b]        # 2f1c0 <P+0x20>
   1be95:	mov    r8,rbp
   1be98:	shl    rcx,0xa
   1be9c:	mov    rax,rcx
   1be9f:	div    QWORD PTR [rip+0xf202]        # 2b0a8 <opt+0x8>
   1bea6:	mov    rdx,rax
   1bea9:	mov    rcx,rax
   1beac:	shr    rdx,0x9
   1beb0:	mov    rax,rdx
   1beb3:	mul    rsi
   1beb6:	lea    rsi,[rip+0x7143]        # 23000 <_IO_stdin_used+0x5000>
   1bebd:	shr    rdx,0xb
   1bec1:	imul   eax,edx,0x3b9aca00
   1bec7:	sub    ecx,eax
   1bec9:	xor    eax,eax
   1becb:	call   5200 <__printf_chk@plt>
   1bed0:	mov    eax,DWORD PTR [rbx+0x20c]
   1bed6:	test   eax,eax
   1bed8:	jne    1bff8 <process_cpu_change+0x488>
   1bede:	mov    rax,QWORD PTR [rip+0x132f3]        # 2f1d8 <P+0x38>
   1bee5:	test   rax,rax
   1bee8:	je     1bfe0 <process_cpu_change+0x470>
   1beee:	mov    r8,QWORD PTR [rbx+0x38]
   1bef2:	xor    edx,edx
   1bef4:	mov    edi,0x1
   1bef9:	movabs rsi,0x44b82fa09b5a53
   1bf03:	sub    r8,rax
   1bf06:	mov    rcx,r8
   1bf09:	sub    rcx,QWORD PTR [rip+0x132b0]        # 2f1c0 <P+0x20>
   1bf10:	shl    rcx,0xa
   1bf14:	mov    rax,rcx
   1bf17:	div    QWORD PTR [rip+0xf18a]        # 2b0a8 <opt+0x8>
   1bf1e:	mov    rdx,rax
   1bf21:	mov    rcx,rax
   1bf24:	shr    rdx,0x9
   1bf28:	mov    rax,rdx
   1bf2b:	mul    rsi
   1bf2e:	lea    rsi,[rip+0x70f3]        # 23028 <_IO_stdin_used+0x5028>
   1bf35:	shr    rdx,0xb
   1bf39:	imul   eax,edx,0x3b9aca00
   1bf3f:	sub    ecx,eax
   1bf41:	xor    eax,eax
   1bf43:	call   5200 <__printf_chk@plt>
   1bf48:	mov    QWORD PTR [rip+0x13285],0x0        # 2f1d8 <P+0x38>
   1bf53:	lea    rdi,[rip+0x3008]        # 1ef62 <_IO_stdin_used+0xf62>
   1bf5a:	lea    rbp,[rbx+0x1d0]
   1bf61:	call   5090 <puts@plt>
   1bf66:	lea    r13,[rbx+0x270]
   1bf6d:	mov    rdi,rbp
   1bf70:	call   13200 <runstate_summary>
   1bf75:	mov    rdi,r13
   1bf78:	call   7ff0 <volume_summary>
   1bf7d:	mov    rdi,rbp
   1bf80:	mov    QWORD PTR [rbx+0x1c0],0x0
   1bf8b:	mov    eax,DWORD PTR [r12+0x4]
   1bf90:	mov    DWORD PTR [rbx+0x20c],eax
   1bf96:	lea    rax,[rbx+0x208]
   1bf9d:	nop    DWORD PTR [rax]
   1bfa0:	mov    QWORD PTR [rdi],0x0
   1bfa7:	add    rdi,0x8
   1bfab:	cmp    rax,rdi
   1bfae:	jne    1bfa0 <process_cpu_change+0x430>
   1bfb0:	lea    rdi,[r13+0x8]
   1bfb4:	xor    eax,eax
   1bfb6:	mov    QWORD PTR [rbx+0x270],0x0
   1bfc1:	and    rdi,0xfffffffffffffff8
   1bfc5:	mov    QWORD PTR [r13+0x58],0x0
   1bfcd:	sub    r13,rdi
   1bfd0:	lea    ecx,[r13+0x60]
   1bfd4:	shr    ecx,0x3
   1bfd7:	rep stos QWORD PTR es:[rdi],rax
   1bfda:	jmp    1bd2d <process_cpu_change+0x1bd>
   1bfdf:	nop
   1bfe0:	lea    rdi,[rip+0x2f5f]        # 1ef46 <_IO_stdin_used+0xf46>
   1bfe7:	call   5090 <puts@plt>
   1bfec:	jmp    1bf53 <process_cpu_change+0x3e3>
   1bff1:	nop    DWORD PTR [rax+0x0]
   1bff8:	mov    ecx,eax
   1bffa:	xor    edx,edx
   1bffc:	mov    rax,rbp
   1bfff:	mov    edi,0x1
   1c004:	div    rcx
   1c007:	lea    rsi,[rip+0x2f1e]        # 1ef2c <_IO_stdin_used+0xf2c>
   1c00e:	mov    rdx,rax
   1c011:	xor    eax,eax
   1c013:	call   5200 <__printf_chk@plt>
   1c018:	jmp    1bede <process_cpu_change+0x36e>
   1c01d:	mov    edi,0x1
   1c022:	call   5250 <exit@plt>
   1c027:	nop    WORD PTR [rax+rax*1+0x0]

000000000001c030 <process_record>:
   1c030:	mov    eax,DWORD PTR [rdi+0x40]
   1c033:	cmp    eax,0x1f003
   1c038:	je     1c148 <process_record+0x118>
   1c03e:	push   r12
   1c040:	push   rbp
   1c041:	push   rbx
   1c042:	mov    rbx,rdi
   1c045:	test   BYTE PTR [rip+0xf056],0x2        # 2b0a2 <opt+0x2>
   1c04c:	jne    1c0f1 <process_record+0xc1>
   1c052:	or     BYTE PTR [rdi],0x2
   1c055:	cmp    BYTE PTR [rip+0xf045],0x0        # 2b0a1 <opt+0x1>
   1c05c:	lea    r12,[rdi+0x30]
   1c060:	js     1c130 <process_record+0x100>
   1c066:	mov    rdi,QWORD PTR [rbx+0x18]
   1c06a:	mov    rsi,r12
   1c06d:	call   16970 <process_record_tsc>
   1c072:	test   BYTE PTR [rip+0xf028],0x40        # 2b0a1 <opt+0x1>
   1c079:	jne    1c108 <process_record+0xd8>
   1c07f:	mov    rdi,r12
   1c082:	call   16a70 <find_toplevel_event>
   1c087:	mov    ebp,eax
   1c089:	test   eax,eax
   1c08b:	js     1c100 <process_record+0xd0>
   1c08d:	mov    rsi,rbx
   1c090:	mov    edi,eax
   1c092:	call   16b10 <toplevel_assert_check>
   1c097:	test   eax,eax
   1c099:	je     1c0c0 <process_record+0x90>
   1c09b:	cmp    ebp,0x7
   1c09e:	ja     1c0b8 <process_record+0x88>
   1c0a0:	lea    rcx,[rip+0x80d9]        # 24180 <_IO_stdin_used+0x6180>
   1c0a7:	mov    edx,ebp
   1c0a9:	mov    rdi,rbx
   1c0ac:	movsxd rax,DWORD PTR [rcx+rdx*4]
   1c0b0:	add    rax,rcx
   1c0b3:	jmp    rax
   1c0b5:	nop    DWORD PTR [rax]
   1c0b8:	mov    rdi,r12
   1c0bb:	call   16030 <process_generic>
   1c0c0:	movsxd rbp,ebp
   1c0c3:	movsxd rdx,DWORD PTR [rbx+0x48]
   1c0c7:	lea    rax,[rbx+rbp*8]
   1c0cb:	add    QWORD PTR [rax+0x210],rdx
   1c0d2:	add    QWORD PTR [rax+0x270],rdx
   1c0d9:	cmp    QWORD PTR [rbx+0x1c0],0x0
   1c0e1:	mov    eax,DWORD PTR [rbx+0x40]
   1c0e4:	jne    1c0f1 <process_record+0xc1>
   1c0e6:	mov    rdx,QWORD PTR [rbx+0x38]
   1c0ea:	mov    QWORD PTR [rbx+0x1c0],rdx
   1c0f1:	cmp    eax,0x1f001
   1c0f6:	je     1c100 <process_record+0xd0>
   1c0f8:	movsxd rax,DWORD PTR [rbx+0x48]
   1c0fc:	add    QWORD PTR [rbx+0x20],rax
   1c100:	pop    rbx
   1c101:	pop    rbp
   1c102:	pop    r12
   1c104:	ret    
   1c105:	nop    DWORD PTR [rax]
   1c108:	mov    rsi,rbx
   1c10b:	mov    rdi,r12
   1c10e:	call   1b4f0 <create_dump_header>
   1c113:	mov    rdi,r12
   1c116:	call   16a70 <find_toplevel_event>
   1c11b:	mov    ebp,eax
   1c11d:	test   eax,eax
   1c11f:	jns    1c08d <process_record+0x5d>
   1c125:	jmp    1c100 <process_record+0xd0>
   1c127:	nop    WORD PTR [rax+rax*1+0x0]
   1c130:	mov    rsi,r12
   1c133:	lea    rdi,[rip+0x2e44]        # 1ef7e <_IO_stdin_used+0xf7e>
   1c13a:	call   157f0 <dump_raw>
   1c13f:	jmp    1c066 <process_record+0x36>
   1c144:	nop    DWORD PTR [rax+0x0]
   1c148:	jmp    1bb70 <process_cpu_change>
   1c14d:	nop    DWORD PTR [rax]
   1c150:	call   16130 <shadow_process>
   1c155:	jmp    1c0c0 <process_record+0x90>
   1c15a:	nop    WORD PTR [rax+rax*1+0x0]
   1c160:	call   155e0 <pv_process>
   1c165:	jmp    1c0c0 <process_record+0x90>
   1c16a:	nop    WORD PTR [rax+rax*1+0x0]
   1c170:	call   156b0 <mem_process>
   1c175:	jmp    1c0c0 <process_record+0x90>
   1c17a:	nop    WORD PTR [rax+rax*1+0x0]
   1c180:	call   1b010 <hvm_process>
   1c185:	jmp    1c0c0 <process_record+0x90>
   1c18a:	nop    WORD PTR [rax+rax*1+0x0]
   1c190:	call   16060 <dom0_process>
   1c195:	jmp    1c0c0 <process_record+0x90>
   1c19a:	nop    WORD PTR [rax+rax*1+0x0]
   1c1a0:	call   192d0 <sched_process>
   1c1a5:	jmp    1c0c0 <process_record+0x90>
   1c1aa:	nop    WORD PTR [rax+rax*1+0x0]
   1c1b0:	call   1b4b0 <base_process>
   1c1b5:	jmp    1c0c0 <process_record+0x90>
   1c1ba:	nop    WORD PTR [rax+rax*1+0x0]
   1c1c0:	call   1a6e0 <hw_process>
   1c1c5:	jmp    1c0c0 <process_record+0x90>
   1c1ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000001c1d0 <read_record>:
   1c1d0:	push   rbx
   1c1d1:	mov    rsi,QWORD PTR [rdi+0x20]
   1c1d5:	mov    rbx,rdi
   1c1d8:	add    rdi,0x168
   1c1df:	call   16f50 <__read_record>
   1c1e4:	mov    DWORD PTR [rbx+0x48],eax
   1c1e7:	test   eax,eax
   1c1e9:	je     1c200 <read_record+0x30>
   1c1eb:	mov    rdi,rbx
   1c1ee:	call   17080 <__fill_in_record_info>
   1c1f3:	movsxd rax,DWORD PTR [rbx+0x48]
   1c1f7:	pop    rbx
   1c1f8:	ret    
   1c1f9:	nop    DWORD PTR [rax+0x0]
   1c200:	mov    r8d,DWORD PTR [rbx+0x4]
   1c204:	mov    rdi,QWORD PTR [rip+0x4b04d]        # 67258 <warn>
   1c20b:	xor    eax,eax
   1c20d:	lea    rcx,[rip+0x8034]        # 24248 <__func__.8436>
   1c214:	lea    rdx,[rip+0x6e3d]        # 23058 <_IO_stdin_used+0x5058>
   1c21b:	mov    esi,0x1
   1c220:	call   5270 <__fprintf_chk@plt>
   1c225:	mov    rdi,rbx
   1c228:	call   1ba90 <deactivate_pcpu>
   1c22d:	movsxd rax,DWORD PTR [rbx+0x48]
   1c231:	pop    rbx
   1c232:	ret    
   1c233:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1c23e:	xchg   ax,ax

000000000001c240 <choose_next_record>:
   1c240:	sub    rsp,0x18
   1c244:	mov    rax,QWORD PTR [rip+0x12215]        # 2e460 <record_order>
   1c24b:	test   BYTE PTR [rip+0xee51],0x8        # 2b0a3 <opt+0x3>
   1c252:	je     1c270 <choose_next_record+0x30>
   1c254:	test   rax,rax
   1c257:	je     1c275 <choose_next_record+0x35>
   1c259:	mov    rdi,QWORD PTR [rax+0x20]
   1c25d:	cmp    rdi,QWORD PTR [rip+0xeef4]        # 2b158 <G+0x38>
   1c264:	jge    1c2a0 <choose_next_record+0x60>
   1c266:	add    rsp,0x18
   1c26a:	ret    
   1c26b:	nop    DWORD PTR [rax+rax*1+0x0]
   1c270:	test   rax,rax
   1c273:	jne    1c266 <choose_next_record+0x26>
   1c275:	cmp    DWORD PTR [rip+0x12f24],0xffffffff        # 2f1a0 <P>
   1c27c:	je     1c266 <choose_next_record+0x26>
   1c27e:	lea    rcx,[rip+0x7f3b]        # 241c0 <__PRETTY_FUNCTION__.8497>
   1c285:	mov    edx,0x266a
   1c28a:	lea    rsi,[rip+0x1e37]        # 1e0c8 <_IO_stdin_used+0xc8>
   1c291:	lea    rdi,[rip+0x6df0]        # 23088 <_IO_stdin_used+0x5088>
   1c298:	call   5110 <__assert_fail@plt>
   1c29d:	nop    DWORD PTR [rax]
   1c2a0:	mov    QWORD PTR [rsp+0x8],rax
   1c2a5:	call   16df0 <progress_update>
   1c2aa:	mov    rax,QWORD PTR [rsp+0x8]
   1c2af:	add    rsp,0x18
   1c2b3:	ret    
   1c2b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1c2bf:	nop

000000000001c2c0 <process_records>:
   1c2c0:	push   rbp
   1c2c1:	lea    rbp,[rip+0x6de8]        # 230b0 <_IO_stdin_used+0x50b0>
   1c2c8:	push   rbx
   1c2c9:	sub    rsp,0x8
   1c2cd:	jmp    1c2ed <process_records+0x2d>
   1c2cf:	nop
   1c2d0:	mov    rcx,QWORD PTR [rbx+0x38]
   1c2d4:	mov    r8,QWORD PTR [rbx+0x18]
   1c2d8:	mov    DWORD PTR [rbx+0x40],0x1f032
   1c2df:	cmp    rcx,r8
   1c2e2:	jbe    1c338 <process_records+0x78>
   1c2e4:	mov    QWORD PTR [rbx+0x18],rcx
   1c2e8:	test   BYTE PTR [rbx],0x1
   1c2eb:	jne    1c318 <process_records+0x58>
   1c2ed:	call   1c240 <choose_next_record>
   1c2f2:	mov    rbx,rax
   1c2f5:	test   rax,rax
   1c2f8:	je     1c32d <process_records+0x6d>
   1c2fa:	mov    rdi,rax
   1c2fd:	call   1c030 <process_record>
   1c302:	cmp    DWORD PTR [rbx+0x40],0x1f001
   1c309:	je     1c2d0 <process_records+0x10>
   1c30b:	mov    rdi,rbx
   1c30e:	call   1c1d0 <read_record>
   1c313:	test   BYTE PTR [rbx],0x1
   1c316:	je     1c2ed <process_records+0x2d>
   1c318:	mov    rdi,rbx
   1c31b:	call   1b690 <record_order_bubble>
   1c320:	call   1c240 <choose_next_record>
   1c325:	mov    rbx,rax
   1c328:	test   rax,rax
   1c32b:	jne    1c2fa <process_records+0x3a>
   1c32d:	add    rsp,0x8
   1c331:	pop    rbx
   1c332:	pop    rbp
   1c333:	ret    
   1c334:	nop    DWORD PTR [rax+0x0]
   1c338:	mov    rdi,QWORD PTR [rip+0x4af19]        # 67258 <warn>
   1c33f:	xor    eax,eax
   1c341:	mov    rdx,rbp
   1c344:	mov    esi,0x1
   1c349:	call   5270 <__fprintf_chk@plt>
   1c34e:	cmp    DWORD PTR [rip+0xed8b],0x4        # 2b0e0 <opt+0x40>
   1c355:	ja     1c2e8 <process_records+0x28>
   1c357:	mov    edi,0x1
   1c35c:	call   5250 <exit@plt>
   1c361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1c36c:	nop    DWORD PTR [rax+0x0]

000000000001c370 <vcpu_summary>:
   1c370:	push   rbx
   1c371:	mov    edx,DWORD PTR [rdi]
   1c373:	mov    rbx,rdi
   1c376:	lea    rsi,[rip+0x2c04]        # 1ef81 <_IO_stdin_used+0xf81>
   1c37d:	mov    edi,0x1
   1c382:	xor    eax,eax
   1c384:	call   5200 <__printf_chk@plt>
   1c389:	mov    rdi,rbx
   1c38c:	call   132b0 <sched_summary_vcpu>
   1c391:	mov    eax,DWORD PTR [rbx+0x3bf0]
   1c397:	cmp    eax,0x1
   1c39a:	je     1c3b0 <vcpu_summary+0x40>
   1c39c:	cmp    eax,0x2
   1c39f:	jne    1c3ba <vcpu_summary+0x4a>
   1c3a1:	lea    rdi,[rbx+0x3bf8]
   1c3a8:	pop    rbx
   1c3a9:	jmp    12710 <pv_summary>
   1c3ae:	xchg   ax,ax
   1c3b0:	mov    eax,DWORD PTR [rbx+0x3c00]
   1c3b6:	test   eax,eax
   1c3b8:	jne    1c3c0 <vcpu_summary+0x50>
   1c3ba:	pop    rbx
   1c3bb:	ret    
   1c3bc:	nop    DWORD PTR [rax+0x0]
   1c3c0:	lea    rdi,[rbx+0x3bf8]
   1c3c7:	pop    rbx
   1c3c8:	jmp    86d0 <hvm_summary.part.19>
   1c3cd:	nop    DWORD PTR [rax]

000000000001c3d0 <domain_summary>:
   1c3d0:	push   r14
   1c3d2:	push   r13
   1c3d4:	push   r12
   1c3d6:	push   rbp
   1c3d7:	push   rbx
   1c3d8:	test   BYTE PTR [rip+0xecc4],0x2        # 2b0a3 <opt+0x3>
   1c3df:	jne    1c4c5 <domain_summary+0xf5>
   1c3e5:	mov    r12,QWORD PTR [rip+0x4ae44]        # 67230 <domain_list>
   1c3ec:	test   r12,r12
   1c3ef:	je     1c494 <domain_summary+0xc4>
   1c3f5:	lea    r14,[rip+0xeca7]        # 2b0a3 <opt+0x3>
   1c3fc:	lea    r13,[rip+0x2ba0]        # 1efa3 <_IO_stdin_used+0xfa3>
   1c403:	nop    DWORD PTR [rax+rax*1+0x0]
   1c408:	mov    edx,DWORD PTR [r12+0x8]
   1c40d:	mov    rsi,r13
   1c410:	mov    edi,0x1
   1c415:	xor    eax,eax
   1c417:	lea    rbx,[r12+0x10]
   1c41c:	lea    rbp,[r12+0x810]
   1c424:	call   5200 <__printf_chk@plt>
   1c429:	mov    rdi,r12
   1c42c:	call   13920 <sched_summary_domain>
   1c431:	mov    rdi,r12
   1c434:	call   13b60 <mem_summary_domain>
   1c439:	nop    DWORD PTR [rax+0x0]
   1c440:	mov    rdi,QWORD PTR [rbx]
   1c443:	test   rdi,rdi
   1c446:	je     1c44d <domain_summary+0x7d>
   1c448:	call   1c370 <vcpu_summary>
   1c44d:	add    rbx,0x8
   1c451:	cmp    rbx,rbp
   1c454:	jne    1c440 <domain_summary+0x70>
   1c456:	lea    rdi,[rip+0x2b59]        # 1efb6 <_IO_stdin_used+0xfb6>
   1c45d:	call   5090 <puts@plt>
   1c462:	mov    rdi,QWORD PTR [r12+0x9e8]
   1c46a:	call   9f00 <dump_eip>
   1c46f:	test   BYTE PTR [r14],0x1
   1c473:	jne    1c49d <domain_summary+0xcd>
   1c475:	mov    rdi,QWORD PTR [r12+0x9e0]
   1c47d:	test   rdi,rdi
   1c480:	je     1c487 <domain_summary+0xb7>
   1c482:	call   c380 <cr3_dump_list.part.15>
   1c487:	mov    r12,QWORD PTR [r12]
   1c48b:	test   r12,r12
   1c48e:	jne    1c408 <domain_summary+0x38>
   1c494:	pop    rbx
   1c495:	pop    rbp
   1c496:	pop    r12
   1c498:	pop    r13
   1c49a:	pop    r14
   1c49c:	ret    
   1c49d:	mov    edx,DWORD PTR [rip+0xec2d]        # 2b0d0 <opt+0x30>
   1c4a3:	lea    rsi,[rip+0x6c46]        # 230f0 <_IO_stdin_used+0x50f0>
   1c4aa:	mov    edi,0x1
   1c4af:	xor    eax,eax
   1c4b1:	call   5200 <__printf_chk@plt>
   1c4b6:	mov    rdi,QWORD PTR [r12+0x9f0]
   1c4be:	call   9f00 <dump_eip>
   1c4c3:	jmp    1c475 <domain_summary+0xa5>
   1c4c5:	lea    rdi,[rip+0x2ac0]        # 1ef8c <_IO_stdin_used+0xf8c>
   1c4cc:	lea    rbx,[rip+0x4f07d]        # 6b550 <default_domain+0x10>
   1c4d3:	call   5090 <puts@plt>
   1c4d8:	lea    rbp,[rbx+0x800]
   1c4df:	nop
   1c4e0:	mov    rdi,QWORD PTR [rbx]
   1c4e3:	test   rdi,rdi
   1c4e6:	je     1c4ed <domain_summary+0x11d>
   1c4e8:	call   1c370 <vcpu_summary>
   1c4ed:	add    rbx,0x8
   1c4f1:	cmp    rbx,rbp
   1c4f4:	jne    1c4e0 <domain_summary+0x110>
   1c4f6:	jmp    1c3e5 <domain_summary+0x15>
   1c4fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001c500 <report_pcpu>:
   1c500:	push   r15
   1c502:	push   r14
   1c504:	lea    r14,[rip+0x2abc]        # 1efc7 <_IO_stdin_used+0xfc7>
   1c50b:	push   r13
   1c50d:	xor    r13d,r13d
   1c510:	push   r12
   1c512:	push   rbp
   1c513:	xor    ebp,ebp
   1c515:	push   rbx
   1c516:	lea    rbx,[rip+0x12cc3]        # 2f1e0 <P+0x40>
   1c51d:	sub    rsp,0x18
   1c521:	jmp    1c7cf <report_pcpu+0x2cf>
   1c526:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1c530:	cmp    DWORD PTR [rbx+0x318],ecx
   1c536:	mov    edx,0x32
   1c53b:	mov    QWORD PTR [rsp+0x8],rax
   1c540:	cmovle ecx,DWORD PTR [rbx+0x318]
   1c547:	mov    rdi,QWORD PTR [rbx+0x328]
   1c54e:	mov    esi,ecx
   1c550:	mov    r12d,ecx
   1c553:	call   84c0 <self_weighted_percentile>
   1c558:	mov    rdi,QWORD PTR [rbx+0x328]
   1c55f:	mov    edx,0x5
   1c564:	mov    esi,r12d
   1c567:	mov    r15,rax
   1c56a:	call   84c0 <self_weighted_percentile>
   1c56f:	mov    rdi,QWORD PTR [rbx+0x328]
   1c576:	mov    edx,0x5f
   1c57b:	mov    esi,r12d
   1c57e:	mov    QWORD PTR [rsp],rax
   1c582:	call   84c0 <self_weighted_percentile>
   1c587:	mov    rdx,QWORD PTR [rbx+0x320]
   1c58e:	mov    r9,QWORD PTR [rsp]
   1c592:	mov    r8,QWORD PTR [rsp+0x8]
   1c597:	test   rdx,rdx
   1c59a:	js     1c910 <report_pcpu+0x410>
   1c5a0:	pxor   xmm0,xmm0
   1c5a4:	cvtsi2sd xmm0,rdx
   1c5a9:	pxor   xmm1,xmm1
   1c5ad:	push   rax
   1c5ae:	mov    ecx,DWORD PTR [rbx+0x314]
   1c5b4:	mov    edi,0x1
   1c5b9:	cvtsi2sd xmm1,QWORD PTR [rip+0xeaee]        # 2b0b0 <opt+0x10>
   1c5c2:	push   r15
   1c5c4:	lea    rdx,[rip+0x1d01]        # 1e2cc <_IO_stdin_used+0x2cc>
   1c5cb:	mov    eax,0x1
   1c5d0:	lea    rsi,[rip+0x43a1]        # 20978 <_IO_stdin_used+0x2978>
   1c5d7:	divsd  xmm0,xmm1
   1c5db:	call   5200 <__printf_chk@plt>
   1c5e0:	pop    r11
   1c5e2:	pop    r12
   1c5e4:	mov    ecx,DWORD PTR [rbx+0x2dc]
   1c5ea:	test   ecx,ecx
   1c5ec:	je     1c6cb <report_pcpu+0x1cb>
   1c5f2:	mov    rsi,QWORD PTR [rbx+0x2e8]
   1c5f9:	movsxd rdi,ecx
   1c5fc:	xor    edx,edx
   1c5fe:	mov    r10d,DWORD PTR [rip+0xead3]        # 2b0d8 <opt+0x38>
   1c605:	mov    rax,rsi
   1c608:	div    rdi
   1c60b:	mov    r8,rax
   1c60e:	test   r10d,r10d
   1c611:	je     1c8a8 <report_pcpu+0x3a8>
   1c617:	cmp    DWORD PTR [rbx+0x2e0],ecx
   1c61d:	mov    edx,0x32
   1c622:	mov    QWORD PTR [rsp+0x8],rax
   1c627:	cmovle ecx,DWORD PTR [rbx+0x2e0]
   1c62e:	mov    rdi,QWORD PTR [rbx+0x2f0]
   1c635:	mov    esi,ecx
   1c637:	mov    r12d,ecx
   1c63a:	call   84c0 <self_weighted_percentile>
   1c63f:	mov    rdi,QWORD PTR [rbx+0x2f0]
   1c646:	mov    edx,0x5
   1c64b:	mov    esi,r12d
   1c64e:	mov    r15,rax
   1c651:	call   84c0 <self_weighted_percentile>
   1c656:	mov    rdi,QWORD PTR [rbx+0x2f0]
   1c65d:	mov    edx,0x5f
   1c662:	mov    esi,r12d
   1c665:	mov    QWORD PTR [rsp],rax
   1c669:	call   84c0 <self_weighted_percentile>
   1c66e:	mov    rdx,QWORD PTR [rbx+0x2e8]
   1c675:	mov    r9,QWORD PTR [rsp]
   1c679:	mov    r8,QWORD PTR [rsp+0x8]
   1c67e:	test   rdx,rdx
   1c681:	js     1c930 <report_pcpu+0x430>
   1c687:	pxor   xmm0,xmm0
   1c68b:	cvtsi2sd xmm0,rdx
   1c690:	pxor   xmm1,xmm1
   1c694:	push   rax
   1c695:	mov    ecx,DWORD PTR [rbx+0x2dc]
   1c69b:	mov    edi,0x1
   1c6a0:	cvtsi2sd xmm1,QWORD PTR [rip+0xea07]        # 2b0b0 <opt+0x10>
   1c6a9:	push   r15
   1c6ab:	lea    rdx,[rip+0x291e]        # 1efd0 <_IO_stdin_used+0xfd0>
   1c6b2:	mov    eax,0x1
   1c6b7:	lea    rsi,[rip+0x42ba]        # 20978 <_IO_stdin_used+0x2978>
   1c6be:	divsd  xmm0,xmm1
   1c6c2:	call   5200 <__printf_chk@plt>
   1c6c7:	pop    r8
   1c6c9:	pop    r9
   1c6cb:	mov    ecx,DWORD PTR [rbx+0x34c]
   1c6d1:	test   ecx,ecx
   1c6d3:	je     1c7ae <report_pcpu+0x2ae>
   1c6d9:	mov    rsi,QWORD PTR [rbx+0x358]
   1c6e0:	movsxd rdi,ecx
   1c6e3:	xor    edx,edx
   1c6e5:	mov    rax,rsi
   1c6e8:	div    rdi
   1c6eb:	mov    edi,DWORD PTR [rip+0xe9e7]        # 2b0d8 <opt+0x38>
   1c6f1:	mov    r8,rax
   1c6f4:	test   edi,edi
   1c6f6:	je     1c860 <report_pcpu+0x360>
   1c6fc:	cmp    DWORD PTR [rbx+0x350],ecx
   1c702:	mov    edx,0x32
   1c707:	mov    QWORD PTR [rsp+0x8],rax
   1c70c:	cmovle ecx,DWORD PTR [rbx+0x350]
   1c713:	mov    rdi,QWORD PTR [rbx+0x360]
   1c71a:	mov    esi,ecx
   1c71c:	mov    r12d,ecx
   1c71f:	call   84c0 <self_weighted_percentile>
   1c724:	mov    rdi,QWORD PTR [rbx+0x360]
   1c72b:	mov    edx,0x5
   1c730:	mov    esi,r12d
   1c733:	mov    r15,rax
   1c736:	call   84c0 <self_weighted_percentile>
   1c73b:	mov    rdi,QWORD PTR [rbx+0x360]
   1c742:	mov    edx,0x5f
   1c747:	mov    esi,r12d
   1c74a:	mov    QWORD PTR [rsp],rax
   1c74e:	call   84c0 <self_weighted_percentile>
   1c753:	mov    rdx,QWORD PTR [rbx+0x358]
   1c75a:	mov    r9,QWORD PTR [rsp]
   1c75e:	mov    r8,QWORD PTR [rsp+0x8]
   1c763:	test   rdx,rdx
   1c766:	js     1c8f0 <report_pcpu+0x3f0>
   1c76c:	pxor   xmm0,xmm0
   1c770:	cvtsi2sd xmm0,rdx
   1c775:	pxor   xmm1,xmm1
   1c779:	push   rax
   1c77a:	mov    ecx,DWORD PTR [rbx+0x34c]
   1c780:	mov    edi,0x1
   1c785:	cvtsi2sd xmm1,QWORD PTR [rip+0xe922]        # 2b0b0 <opt+0x10>
   1c78e:	push   r15
   1c790:	lea    rdx,[rip+0x2842]        # 1efd9 <_IO_stdin_used+0xfd9>
   1c797:	mov    eax,0x1
   1c79c:	lea    rsi,[rip+0x41d5]        # 20978 <_IO_stdin_used+0x2978>
   1c7a3:	divsd  xmm0,xmm1
   1c7a7:	call   5200 <__printf_chk@plt>
   1c7ac:	pop    rax
   1c7ad:	pop    rdx
   1c7ae:	cmp    DWORD PTR [rbx+0x314],0x1
   1c7b5:	sbb    r13d,0xffffffff
   1c7b9:	add    ebp,0x1
   1c7bc:	add    rbx,0x380
   1c7c3:	cmp    ebp,0x100
   1c7c9:	je     1c9ae <report_pcpu+0x4ae>
   1c7cf:	test   BYTE PTR [rbx],0x2
   1c7d2:	je     1c7b9 <report_pcpu+0x2b9>
   1c7d4:	mov    edx,ebp
   1c7d6:	mov    rsi,r14
   1c7d9:	mov    edi,0x1
   1c7de:	xor    eax,eax
   1c7e0:	call   5200 <__printf_chk@plt>
   1c7e5:	mov    ecx,DWORD PTR [rbx+0x314]
   1c7eb:	test   ecx,ecx
   1c7ed:	je     1c5e4 <report_pcpu+0xe4>
   1c7f3:	mov    rsi,QWORD PTR [rbx+0x320]
   1c7fa:	movsxd rdi,ecx
   1c7fd:	xor    edx,edx
   1c7ff:	mov    r15d,DWORD PTR [rip+0xe8d2]        # 2b0d8 <opt+0x38>
   1c806:	mov    rax,rsi
   1c809:	div    rdi
   1c80c:	mov    r8,rax
   1c80f:	test   r15d,r15d
   1c812:	jne    1c530 <report_pcpu+0x30>
   1c818:	test   rsi,rsi
   1c81b:	js     1c970 <report_pcpu+0x470>
   1c821:	pxor   xmm0,xmm0
   1c825:	cvtsi2sd xmm0,rsi
   1c82a:	pxor   xmm1,xmm1
   1c82e:	mov    edi,0x1
   1c833:	mov    eax,0x1
   1c838:	cvtsi2sd xmm1,QWORD PTR [rip+0xe86f]        # 2b0b0 <opt+0x10>
   1c841:	lea    rdx,[rip+0x1a84]        # 1e2cc <_IO_stdin_used+0x2cc>
   1c848:	lea    rsi,[rip+0x1986]        # 1e1d5 <_IO_stdin_used+0x1d5>
   1c84f:	divsd  xmm0,xmm1
   1c853:	call   5200 <__printf_chk@plt>
   1c858:	jmp    1c5e4 <report_pcpu+0xe4>
   1c85d:	nop    DWORD PTR [rax]
   1c860:	test   rsi,rsi
   1c863:	js     1c950 <report_pcpu+0x450>
   1c869:	pxor   xmm0,xmm0
   1c86d:	cvtsi2sd xmm0,rsi
   1c872:	pxor   xmm1,xmm1
   1c876:	mov    edi,0x1
   1c87b:	mov    eax,0x1
   1c880:	cvtsi2sd xmm1,QWORD PTR [rip+0xe827]        # 2b0b0 <opt+0x10>
   1c889:	lea    rdx,[rip+0x2749]        # 1efd9 <_IO_stdin_used+0xfd9>
   1c890:	lea    rsi,[rip+0x193e]        # 1e1d5 <_IO_stdin_used+0x1d5>
   1c897:	divsd  xmm0,xmm1
   1c89b:	call   5200 <__printf_chk@plt>
   1c8a0:	jmp    1c7ae <report_pcpu+0x2ae>
   1c8a5:	nop    DWORD PTR [rax]
   1c8a8:	test   rsi,rsi
   1c8ab:	js     1c990 <report_pcpu+0x490>
   1c8b1:	pxor   xmm0,xmm0
   1c8b5:	cvtsi2sd xmm0,rsi
   1c8ba:	pxor   xmm1,xmm1
   1c8be:	mov    edi,0x1
   1c8c3:	mov    eax,0x1
   1c8c8:	cvtsi2sd xmm1,QWORD PTR [rip+0xe7df]        # 2b0b0 <opt+0x10>
   1c8d1:	lea    rdx,[rip+0x26f8]        # 1efd0 <_IO_stdin_used+0xfd0>
   1c8d8:	lea    rsi,[rip+0x18f6]        # 1e1d5 <_IO_stdin_used+0x1d5>
   1c8df:	divsd  xmm0,xmm1
   1c8e3:	call   5200 <__printf_chk@plt>
   1c8e8:	jmp    1c6cb <report_pcpu+0x1cb>
   1c8ed:	nop    DWORD PTR [rax]
   1c8f0:	mov    rcx,rdx
   1c8f3:	and    edx,0x1
   1c8f6:	pxor   xmm0,xmm0
   1c8fa:	shr    rcx,1
   1c8fd:	or     rcx,rdx
   1c900:	cvtsi2sd xmm0,rcx
   1c905:	addsd  xmm0,xmm0
   1c909:	jmp    1c775 <report_pcpu+0x275>
   1c90e:	xchg   ax,ax
   1c910:	mov    rcx,rdx
   1c913:	and    edx,0x1
   1c916:	pxor   xmm0,xmm0
   1c91a:	shr    rcx,1
   1c91d:	or     rcx,rdx
   1c920:	cvtsi2sd xmm0,rcx
   1c925:	addsd  xmm0,xmm0
   1c929:	jmp    1c5a9 <report_pcpu+0xa9>
   1c92e:	xchg   ax,ax
   1c930:	mov    rcx,rdx
   1c933:	and    edx,0x1
   1c936:	pxor   xmm0,xmm0
   1c93a:	shr    rcx,1
   1c93d:	or     rcx,rdx
   1c940:	cvtsi2sd xmm0,rcx
   1c945:	addsd  xmm0,xmm0
   1c949:	jmp    1c690 <report_pcpu+0x190>
   1c94e:	xchg   ax,ax
   1c950:	mov    rax,rsi
   1c953:	and    esi,0x1
   1c956:	pxor   xmm0,xmm0
   1c95a:	shr    rax,1
   1c95d:	or     rax,rsi
   1c960:	cvtsi2sd xmm0,rax
   1c965:	addsd  xmm0,xmm0
   1c969:	jmp    1c872 <report_pcpu+0x372>
   1c96e:	xchg   ax,ax
   1c970:	mov    rax,rsi
   1c973:	and    esi,0x1
   1c976:	pxor   xmm0,xmm0
   1c97a:	shr    rax,1
   1c97d:	or     rax,rsi
   1c980:	cvtsi2sd xmm0,rax
   1c985:	addsd  xmm0,xmm0
   1c989:	jmp    1c82a <report_pcpu+0x32a>
   1c98e:	xchg   ax,ax
   1c990:	mov    rax,rsi
   1c993:	and    esi,0x1
   1c996:	pxor   xmm0,xmm0
   1c99a:	shr    rax,1
   1c99d:	or     rax,rsi
   1c9a0:	cvtsi2sd xmm0,rax
   1c9a5:	addsd  xmm0,xmm0
   1c9a9:	jmp    1c8ba <report_pcpu+0x3ba>
   1c9ae:	add    rsp,0x18
   1c9b2:	mov    edx,r13d
   1c9b5:	lea    rsi,[rip+0x2626]        # 1efe2 <_IO_stdin_used+0xfe2>
   1c9bc:	xor    eax,eax
   1c9be:	pop    rbx
   1c9bf:	mov    edi,0x1
   1c9c4:	pop    rbp
   1c9c5:	pop    r12
   1c9c7:	pop    r13
   1c9c9:	pop    r14
   1c9cb:	pop    r15
   1c9cd:	jmp    5200 <__printf_chk@plt>
   1c9d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
   1c9dd:	nop    DWORD PTR [rax]

000000000001c9e0 <init_pcpus>:
   1c9e0:	lea    rcx,[rip+0x127fd]        # 2f1e4 <P+0x44>
   1c9e7:	sub    rsp,0x8
   1c9eb:	xor    edx,edx
   1c9ed:	lea    rdi,[rcx+0x1ac]
   1c9f4:	nop    DWORD PTR [rax+0x0]
   1c9f8:	movsxd rsi,edx
   1c9fb:	mov    DWORD PTR [rcx],edx
   1c9fd:	add    edx,0x1
   1ca00:	add    rcx,0x380
   1ca07:	lea    rax,[rsi*8+0x0]
   1ca0f:	sub    rax,rsi
   1ca12:	shl    rax,0x7
   1ca16:	or     BYTE PTR [rdi+rax*1],0x4
   1ca1a:	mov    DWORD PTR [rcx-0x1f0],0x6
   1ca24:	cmp    edx,0x100
   1ca2a:	jne    1c9f8 <init_pcpus+0x18>
   1ca2c:	mov    esi,0x8000
   1ca31:	lea    rdi,[rip+0x4eb08]        # 6b540 <default_domain>
   1ca38:	mov    DWORD PTR [rip+0x1275e],0xffffffff        # 2f1a0 <P>
   1ca42:	call   12d20 <domain_init>
   1ca47:	xor    eax,eax
   1ca49:	nop    DWORD PTR [rax+0x0]
   1ca50:	mov    rdi,rax
   1ca53:	call   1b820 <scan_for_new_pcpu>
   1ca58:	test   rax,rax
   1ca5b:	jne    1ca50 <init_pcpus+0x70>
   1ca5d:	mov    rdi,QWORD PTR [rip+0x4a7f4]        # 67258 <warn>
   1ca64:	lea    rcx,[rip+0x7745]        # 241b0 <__func__.8554>
   1ca6b:	lea    rdx,[rip+0x669e]        # 23110 <_IO_stdin_used+0x5110>
   1ca72:	mov    esi,0x1
   1ca77:	add    rsp,0x8
   1ca7b:	jmp    5270 <__fprintf_chk@plt>

000000000001ca80 <parse_cpu_hz>:
   1ca80:	push   rbx
   1ca81:	mov    rbx,rdi
   1ca84:	sub    rsp,0x10
   1ca88:	mov    rax,QWORD PTR fs:0x28
   1ca91:	mov    QWORD PTR [rsp+0x8],rax
   1ca96:	xor    eax,eax
   1ca98:	mov    rsi,rsp
   1ca9b:	call   5120 <strtof@plt>
   1caa0:	mov    rcx,QWORD PTR [rsp]
   1caa4:	cmp    rcx,rbx
   1caa7:	je     1cb90 <parse_cpu_hz+0x110>
   1caad:	movzx  eax,BYTE PTR [rcx]
   1cab0:	cmp    al,0x47
   1cab2:	je     1cb50 <parse_cpu_hz+0xd0>
   1cab8:	jle    1cb20 <parse_cpu_hz+0xa0>
   1caba:	cmp    al,0x4b
   1cabc:	je     1cb38 <parse_cpu_hz+0xb8>
   1cabe:	cmp    al,0x4d
   1cac0:	jne    1cb69 <parse_cpu_hz+0xe9>
   1cac6:	mulss  xmm0,DWORD PTR [rip+0x7e46]        # 24914 <__PRETTY_FUNCTION__.5821+0x44>
   1cace:	cvttss2si rcx,xmm0
   1cad3:	mov    QWORD PTR [rip+0xe5d6],rcx        # 2b0b0 <opt+0x10>
   1cada:	movabs rdx,0x112e0be826d694b3
   1cae4:	shl    rcx,0xa
   1cae8:	mov    rax,rcx
   1caeb:	sar    rcx,0x3f
   1caef:	imul   rdx
   1caf2:	sar    rdx,0x1a
   1caf6:	sub    rdx,rcx
   1caf9:	mov    QWORD PTR [rip+0xe5a8],rdx        # 2b0a8 <opt+0x8>
   1cb00:	mov    rax,QWORD PTR [rsp+0x8]
   1cb05:	xor    rax,QWORD PTR fs:0x28
   1cb0e:	jne    1cbb4 <parse_cpu_hz+0x134>
   1cb14:	add    rsp,0x10
   1cb18:	pop    rbx
   1cb19:	ret    
   1cb1a:	nop    WORD PTR [rax+rax*1+0x0]
   1cb20:	test   al,al
   1cb22:	jne    1cb69 <parse_cpu_hz+0xe9>
   1cb24:	cvttss2si rcx,xmm0
   1cb29:	mov    QWORD PTR [rip+0xe580],rcx        # 2b0b0 <opt+0x10>
   1cb30:	jmp    1cada <parse_cpu_hz+0x5a>
   1cb32:	nop    WORD PTR [rax+rax*1+0x0]
   1cb38:	mulss  xmm0,DWORD PTR [rip+0x7dd8]        # 24918 <__PRETTY_FUNCTION__.5821+0x48>
   1cb40:	cvttss2si rcx,xmm0
   1cb45:	mov    QWORD PTR [rip+0xe564],rcx        # 2b0b0 <opt+0x10>
   1cb4c:	jmp    1cada <parse_cpu_hz+0x5a>
   1cb4e:	xchg   ax,ax
   1cb50:	mulss  xmm0,DWORD PTR [rip+0x7db8]        # 24910 <__PRETTY_FUNCTION__.5821+0x40>
   1cb58:	cvttss2si rcx,xmm0
   1cb5d:	mov    QWORD PTR [rip+0xe54c],rcx        # 2b0b0 <opt+0x10>
   1cb64:	jmp    1cada <parse_cpu_hz+0x5a>
   1cb69:	mov    rdi,QWORD PTR [rip+0x118d0]        # 2e440 <stderr@@GLIBC_2.2.5>
   1cb70:	movsx  ecx,al
   1cb73:	mov    esi,0x1
   1cb78:	xor    eax,eax
   1cb7a:	lea    rdx,[rip+0x248b]        # 1f00c <_IO_stdin_used+0x100c>
   1cb81:	call   5270 <__fprintf_chk@plt>
   1cb86:	mov    edi,0x1
   1cb8b:	call   5250 <exit@plt>
   1cb90:	mov    rdi,QWORD PTR [rip+0x118a9]        # 2e440 <stderr@@GLIBC_2.2.5>
   1cb97:	lea    rdx,[rip+0x245b]        # 1eff9 <_IO_stdin_used+0xff9>
   1cb9e:	mov    esi,0x1
   1cba3:	xor    eax,eax
   1cba5:	call   5270 <__fprintf_chk@plt>
   1cbaa:	mov    edi,0x1
   1cbaf:	call   5250 <exit@plt>
   1cbb4:	call   50d0 <__stack_chk_fail@plt>
   1cbb9:	nop    DWORD PTR [rax+0x0]

000000000001cbc0 <stringify_cpu_hz>:
   1cbc0:	pxor   xmm0,xmm0
   1cbc4:	sub    rsp,0x8
   1cbc8:	cvtsi2ss xmm0,rdi
   1cbcd:	cmp    rdi,0x3b9aca00
   1cbd4:	jle    1cc28 <stringify_cpu_hz+0x68>
   1cbd6:	mov    BYTE PTR [rip+0x4a697],0x47        # 67274 <suffix.8628>
   1cbdd:	mov    r9d,0x47
   1cbe3:	divss  xmm0,DWORD PTR [rip+0x7d25]        # 24910 <__PRETTY_FUNCTION__.5821+0x40>
   1cbeb:	lea    r8,[rip+0x242d]        # 1f01f <_IO_stdin_used+0x101f>
   1cbf2:	mov    ecx,0x14
   1cbf7:	cvtss2sd xmm0,xmm0
   1cbfb:	mov    edx,0x1
   1cc00:	mov    esi,0x14
   1cc05:	lea    rdi,[rip+0x4a654]        # 67260 <cpu_string.8627>
   1cc0c:	mov    eax,0x1
   1cc11:	call   5030 <__snprintf_chk@plt>
   1cc16:	lea    rax,[rip+0x4a643]        # 67260 <cpu_string.8627>
   1cc1d:	add    rsp,0x8
   1cc21:	ret    
   1cc22:	nop    WORD PTR [rax+rax*1+0x0]
   1cc28:	cmp    rdi,0xf4240
   1cc2f:	jle    1cc50 <stringify_cpu_hz+0x90>
   1cc31:	divss  xmm0,DWORD PTR [rip+0x7cdb]        # 24914 <__PRETTY_FUNCTION__.5821+0x44>
   1cc39:	mov    BYTE PTR [rip+0x4a634],0x4d        # 67274 <suffix.8628>
   1cc40:	mov    r9d,0x4d
   1cc46:	jmp    1cbeb <stringify_cpu_hz+0x2b>
   1cc48:	nop    DWORD PTR [rax+rax*1+0x0]
   1cc50:	cmp    rdi,0x3e8
   1cc57:	jle    1cc78 <stringify_cpu_hz+0xb8>
   1cc59:	divss  xmm0,DWORD PTR [rip+0x7cb7]        # 24918 <__PRETTY_FUNCTION__.5821+0x48>
   1cc61:	mov    BYTE PTR [rip+0x4a60c],0x6b        # 67274 <suffix.8628>
   1cc68:	mov    r9d,0x6b
   1cc6e:	jmp    1cbeb <stringify_cpu_hz+0x2b>
   1cc73:	nop    DWORD PTR [rax+rax*1+0x0]
   1cc78:	mov    BYTE PTR [rip+0x4a5f5],0x20        # 67274 <suffix.8628>
   1cc7f:	mov    r9d,0x20
   1cc85:	jmp    1cbeb <stringify_cpu_hz+0x2b>
   1cc8a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001cc90 <summary>:
   1cc90:	push   r12
   1cc92:	mov    rdi,QWORD PTR [rip+0xe417]        # 2b0b0 <opt+0x10>
   1cc99:	push   rbp
   1cc9a:	push   rbx
   1cc9b:	call   1cbc0 <stringify_cpu_hz>
   1cca0:	mov    rsi,QWORD PTR [rip+0x12529]        # 2f1d0 <P+0x30>
   1cca7:	test   rsi,rsi
   1ccaa:	js     1cd3e <summary+0xae>
   1ccb0:	pxor   xmm0,xmm0
   1ccb4:	cvtsi2sd xmm0,rsi
   1ccb9:	pxor   xmm1,xmm1
   1ccbd:	mov    rdx,rax
   1ccc0:	lea    rsi,[rip+0x6479]        # 23140 <_IO_stdin_used+0x5140>
   1ccc7:	xor    ebx,ebx
   1ccc9:	cvtsi2sd xmm1,QWORD PTR [rip+0xe3de]        # 2b0b0 <opt+0x10>
   1ccd2:	mov    edi,0x1
   1ccd7:	mov    eax,0x1
   1ccdc:	lea    rbp,[rip+0x124fd]        # 2f1e0 <P+0x40>
   1cce3:	lea    r12,[rip+0x235c]        # 1f046 <_IO_stdin_used+0x1046>
   1ccea:	divsd  xmm0,xmm1
   1ccee:	call   5200 <__printf_chk@plt>
   1ccf3:	lea    rdi,[rip+0x2331]        # 1f02b <_IO_stdin_used+0x102b>
   1ccfa:	call   5090 <puts@plt>
   1ccff:	nop
   1cd00:	test   BYTE PTR [rbp+0x0],0x2
   1cd04:	je     1cd23 <summary+0x93>
   1cd06:	mov    edi,0x1
   1cd0b:	mov    edx,ebx
   1cd0d:	mov    rsi,r12
   1cd10:	xor    eax,eax
   1cd12:	call   5200 <__printf_chk@plt>
   1cd17:	lea    rdi,[rbp+0x210]
   1cd1e:	call   7ff0 <volume_summary>
   1cd23:	add    ebx,0x1
   1cd26:	add    rbp,0x380
   1cd2d:	cmp    ebx,0x100
   1cd33:	jne    1cd00 <summary+0x70>
   1cd35:	pop    rbx
   1cd36:	pop    rbp
   1cd37:	pop    r12
   1cd39:	jmp    1c3d0 <domain_summary>
   1cd3e:	mov    rcx,rsi
   1cd41:	and    esi,0x1
   1cd44:	pxor   xmm0,xmm0
   1cd48:	shr    rcx,1
   1cd4b:	or     rcx,rsi
   1cd4e:	cvtsi2sd xmm0,rcx
   1cd53:	addsd  xmm0,xmm0
   1cd57:	jmp    1ccb9 <summary+0x29>
   1cd5c:	nop    DWORD PTR [rax+0x0]

000000000001cd60 <parse_array>:
   1cd60:	push   r15
   1cd62:	mov    r15,rdi
   1cd65:	push   r14
   1cd67:	push   r13
   1cd69:	push   r12
   1cd6b:	mov    r12,rsi
   1cd6e:	push   rbp
   1cd6f:	push   rbx
   1cd70:	sub    rsp,0x28
   1cd74:	mov    rax,QWORD PTR fs:0x28
   1cd7d:	mov    QWORD PTR [rsp+0x18],rax
   1cd82:	xor    eax,eax
   1cd84:	movzx  eax,BYTE PTR [rdi]
   1cd87:	test   al,al
   1cd89:	je     1cf40 <parse_array+0x1e0>
   1cd8f:	mov    rdx,rdi
   1cd92:	mov    ebp,0x1
   1cd97:	nop    WORD PTR [rax+rax*1+0x0]
   1cda0:	cmp    al,0x2c
   1cda2:	sete   al
   1cda5:	add    rdx,0x1
   1cda9:	movzx  eax,al
   1cdac:	add    ebp,eax
   1cdae:	movzx  eax,BYTE PTR [rdx]
   1cdb1:	test   al,al
   1cdb3:	jne    1cda0 <parse_array+0x40>
   1cdb5:	movsxd rbx,ebp
   1cdb8:	shl    rbx,0x3
   1cdbc:	mov    rdi,QWORD PTR [rip+0x4a495]        # 67258 <warn>
   1cdc3:	mov    r8d,ebp
   1cdc6:	xor    eax,eax
   1cdc8:	lea    rcx,[rip+0x73d1]        # 241a0 <__func__.8641>
   1cdcf:	lea    rdx,[rip+0x227d]        # 1f053 <_IO_stdin_used+0x1053>
   1cdd6:	mov    esi,0x1
   1cddb:	call   5270 <__fprintf_chk@plt>
   1cde0:	mov    rdi,QWORD PTR [rip+0x4a471]        # 67258 <warn>
   1cde7:	call   51b0 <fflush@plt>
   1cdec:	mov    DWORD PTR [r12+0x8],ebp
   1cdf1:	mov    rdi,rbx
   1cdf4:	call   51a0 <malloc@plt>
   1cdf9:	mov    QWORD PTR [r12],rax
   1cdfd:	test   rax,rax
   1ce00:	je     1cf10 <parse_array+0x1b0>
   1ce06:	lea    r13d,[rbp-0x1]
   1ce0a:	mov    QWORD PTR [rsp+0x10],r15
   1ce0f:	lea    r14,[rsp+0x10]
   1ce14:	lea    rcx,[r13*8+0x0]
   1ce1c:	xor    r13d,r13d
   1ce1f:	mov    QWORD PTR [rsp+0x8],rcx
   1ce24:	jmp    1ce4b <parse_array+0xeb>
   1ce26:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1ce30:	test   al,al
   1ce32:	jne    1cee8 <parse_array+0x188>
   1ce38:	cmp    r13,QWORD PTR [rsp+0x8]
   1ce3d:	je     1cec0 <parse_array+0x160>
   1ce43:	mov    rax,QWORD PTR [r12]
   1ce47:	add    r13,0x8
   1ce4b:	xor    edx,edx
   1ce4d:	mov    rsi,r14
   1ce50:	lea    rbx,[rax+r13*1]
   1ce54:	mov    rdi,r15
   1ce57:	call   5160 <strtoull@plt>
   1ce5c:	mov    QWORD PTR [rbx],rax
   1ce5f:	cmp    QWORD PTR [rsp+0x10],r15
   1ce64:	je     1cee8 <parse_array+0x188>
   1ce6a:	mov    rax,QWORD PTR [r12]
   1ce6e:	mov    rdi,QWORD PTR [rip+0x4a3e3]        # 67258 <warn>
   1ce75:	lea    rcx,[rip+0x7324]        # 241a0 <__func__.8641>
   1ce7c:	lea    rdx,[rip+0x62ed]        # 23170 <_IO_stdin_used+0x5170>
   1ce83:	mov    esi,0x1
   1ce88:	mov    r8,QWORD PTR [rax+r13*1]
   1ce8c:	xor    eax,eax
   1ce8e:	mov    r9,r8
   1ce91:	call   5270 <__fprintf_chk@plt>
   1ce96:	mov    rdi,QWORD PTR [rip+0x4a3bb]        # 67258 <warn>
   1ce9d:	call   51b0 <fflush@plt>
   1cea2:	mov    r15,QWORD PTR [rsp+0x10]
   1cea7:	movzx  eax,BYTE PTR [r15]
   1ceab:	cmp    al,0x2c
   1cead:	jne    1ce30 <parse_array+0xd0>
   1ceaf:	add    r15,0x1
   1ceb3:	mov    QWORD PTR [rsp+0x10],r15
   1ceb8:	cmp    r13,QWORD PTR [rsp+0x8]
   1cebd:	jne    1ce43 <parse_array+0xe3>
   1cebf:	nop
   1cec0:	mov    rcx,QWORD PTR [rsp+0x18]
   1cec5:	xor    rcx,QWORD PTR fs:0x28
   1cece:	mov    eax,ebp
   1ced0:	jne    1cf59 <parse_array+0x1f9>
   1ced6:	add    rsp,0x28
   1ceda:	pop    rbx
   1cedb:	pop    rbp
   1cedc:	pop    r12
   1cede:	pop    r13
   1cee0:	pop    r14
   1cee2:	pop    r15
   1cee4:	ret    
   1cee5:	nop    DWORD PTR [rax]
   1cee8:	mov    rcx,r15
   1ceeb:	mov    esi,0x1
   1cef0:	xor    eax,eax
   1cef2:	mov    ebp,0xffffffff
   1cef7:	mov    rdi,QWORD PTR [rip+0x11542]        # 2e440 <stderr@@GLIBC_2.2.5>
   1cefe:	lea    rdx,[rip+0x2165]        # 1f06a <_IO_stdin_used+0x106a>
   1cf05:	call   5270 <__fprintf_chk@plt>
   1cf0a:	jmp    1cec0 <parse_array+0x160>
   1cf0c:	nop    DWORD PTR [rax+0x0]
   1cf10:	mov    rcx,QWORD PTR [rip+0x11529]        # 2e440 <stderr@@GLIBC_2.2.5>
   1cf17:	mov    edx,0xf
   1cf1c:	mov    esi,0x1
   1cf21:	lea    rdi,[rip+0x145a]        # 1e382 <_IO_stdin_used+0x382>
   1cf28:	call   5260 <fwrite@plt>
   1cf2d:	cmp    DWORD PTR [rip+0xe1ac],0x7        # 2b0e0 <opt+0x40>
   1cf34:	jbe    1cf4f <parse_array+0x1ef>
   1cf36:	mov    rax,QWORD PTR [r12]
   1cf3a:	jmp    1ce06 <parse_array+0xa6>
   1cf3f:	nop
   1cf40:	mov    ebx,0x8
   1cf45:	mov    ebp,0x1
   1cf4a:	jmp    1cdbc <parse_array+0x5c>
   1cf4f:	mov    edi,0x1
   1cf54:	call   5250 <exit@plt>
   1cf59:	call   50d0 <__stack_chk_fail@plt>
   1cf5e:	xchg   ax,ax

000000000001cf60 <cmd_parser>:
   1cf60:	push   r12
   1cf62:	push   rbp
   1cf63:	mov    rbp,rdx
   1cf66:	push   rbx
   1cf67:	mov    rbx,rsi
   1cf6a:	sub    rsp,0x10
   1cf6e:	mov    rax,QWORD PTR fs:0x28
   1cf77:	mov    QWORD PTR [rsp+0x8],rax
   1cf7c:	xor    eax,eax
   1cf7e:	cmp    edi,0x18
   1cf81:	je     1d738 <cmd_parser+0x7d8>
   1cf87:	jle    1d000 <cmd_parser+0xa0>
   1cf89:	cmp    edi,0x24
   1cf8c:	je     1d710 <cmd_parser+0x7b0>
   1cf92:	jle    1d1f0 <cmd_parser+0x290>
   1cf98:	cmp    edi,0x2a
   1cf9b:	je     1d9b0 <cmd_parser+0xa50>
   1cfa1:	jle    1d1c0 <cmd_parser+0x260>
   1cfa7:	cmp    edi,0x61
   1cfaa:	je     1d990 <cmd_parser+0xa30>
   1cfb0:	jle    1d050 <cmd_parser+0xf0>
   1cfb6:	cmp    edi,0x73
   1cfb9:	je     1d958 <cmd_parser+0x9f8>
   1cfbf:	cmp    edi,0x1000001
   1cfc5:	je     1d900 <cmd_parser+0x9a0>
   1cfcb:	cmp    edi,0x69
   1cfce:	je     1d4d8 <cmd_parser+0x578>
   1cfd4:	mov    eax,0x7
   1cfd9:	mov    rcx,QWORD PTR [rsp+0x8]
   1cfde:	xor    rcx,QWORD PTR fs:0x28
   1cfe7:	jne    1dac8 <cmd_parser+0xb68>
   1cfed:	add    rsp,0x10
   1cff1:	pop    rbx
   1cff2:	pop    rbp
   1cff3:	pop    r12
   1cff5:	ret    
   1cff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1d000:	cmp    edi,0xb
   1d003:	je     1d4a0 <cmd_parser+0x540>
   1d009:	jle    1d0e0 <cmd_parser+0x180>
   1d00f:	cmp    edi,0x11
   1d012:	je     1d6a8 <cmd_parser+0x748>
   1d018:	jle    1d0a0 <cmd_parser+0x140>
   1d01e:	cmp    edi,0x14
   1d021:	je     1d670 <cmd_parser+0x710>
   1d027:	jle    1d070 <cmd_parser+0x110>
   1d029:	cmp    edi,0x16
   1d02c:	je     1d650 <cmd_parser+0x6f0>
   1d032:	jg     1d5e8 <cmd_parser+0x688>
   1d038:	mov    DWORD PTR [rip+0xe106],0x1        # 2b148 <G+0x28>
   1d042:	xor    eax,eax
   1d044:	or     BYTE PTR [rip+0xe056],0x4        # 2b0a1 <opt+0x1>
   1d04b:	jmp    1cfd9 <cmd_parser+0x79>
   1d04d:	nop    DWORD PTR [rax]
   1d050:	cmp    edi,0x2b
   1d053:	je     1d5a0 <cmd_parser+0x640>
   1d059:	cmp    edi,0x2c
   1d05c:	jne    1cfd4 <cmd_parser+0x74>
   1d062:	or     BYTE PTR [rip+0xe03a],0x80        # 2b0a3 <opt+0x3>
   1d069:	xor    eax,eax
   1d06b:	jmp    1cfd9 <cmd_parser+0x79>
   1d070:	cmp    edi,0x12
   1d073:	je     1d580 <cmd_parser+0x620>
   1d079:	cmp    edi,0x13
   1d07c:	jne    1cfd4 <cmd_parser+0x74>
   1d082:	mov    DWORD PTR [rip+0xe0bc],0x1        # 2b148 <G+0x28>
   1d08c:	xor    eax,eax
   1d08e:	or     BYTE PTR [rip+0xe00c],0x1        # 2b0a1 <opt+0x1>
   1d095:	jmp    1cfd9 <cmd_parser+0x79>
   1d09a:	nop    WORD PTR [rax+rax*1+0x0]
   1d0a0:	cmp    edi,0xe
   1d0a3:	je     1d568 <cmd_parser+0x608>
   1d0a9:	jle    1d140 <cmd_parser+0x1e0>
   1d0af:	cmp    edi,0xf
   1d0b2:	je     1d530 <cmd_parser+0x5d0>
   1d0b8:	cmp    edi,0x10
   1d0bb:	jne    1cfd4 <cmd_parser+0x74>
   1d0c1:	mov    DWORD PTR [rip+0xe07d],0x1        # 2b148 <G+0x28>
   1d0cb:	xor    eax,eax
   1d0cd:	or     BYTE PTR [rip+0xdfcc],0x20        # 2b0a0 <opt>
   1d0d4:	jmp    1cfd9 <cmd_parser+0x79>
   1d0d9:	nop    DWORD PTR [rax+0x0]
   1d0e0:	cmp    edi,0x5
   1d0e3:	je     1d9c0 <cmd_parser+0xa60>
   1d0e9:	jle    1d190 <cmd_parser+0x230>
   1d0ef:	cmp    edi,0x8
   1d0f2:	je     1d520 <cmd_parser+0x5c0>
   1d0f8:	jle    1d170 <cmd_parser+0x210>
   1d0fa:	cmp    edi,0x9
   1d0fd:	je     1d510 <cmd_parser+0x5b0>
   1d103:	cmp    edi,0xa
   1d106:	jne    1cfd4 <cmd_parser+0x74>
   1d10c:	mov    rsi,rsp
   1d10f:	xor    edx,edx
   1d111:	mov    rdi,rbx
   1d114:	or     BYTE PTR [rip+0xdf88],0x1        # 2b0a3 <opt+0x3>
   1d11b:	call   5190 <strtol@plt>
   1d120:	mov    DWORD PTR [rip+0xdfaa],eax        # 2b0d0 <opt+0x30>
   1d126:	cmp    QWORD PTR [rsp],rbx
   1d12a:	je     1d240 <cmd_parser+0x2e0>
   1d130:	xor    eax,eax
   1d132:	jmp    1cfd9 <cmd_parser+0x79>
   1d137:	nop    WORD PTR [rax+rax*1+0x0]
   1d140:	cmp    edi,0xc
   1d143:	je     1d6f0 <cmd_parser+0x790>
   1d149:	cmp    edi,0xd
   1d14c:	jne    1cfd4 <cmd_parser+0x74>
   1d152:	mov    DWORD PTR [rip+0xdfec],0x1        # 2b148 <G+0x28>
   1d15c:	xor    eax,eax
   1d15e:	or     BYTE PTR [rip+0xdf3b],0x4        # 2b0a0 <opt>
   1d165:	jmp    1cfd9 <cmd_parser+0x79>
   1d16a:	nop    WORD PTR [rax+rax*1+0x0]
   1d170:	cmp    edi,0x6
   1d173:	je     1d6e0 <cmd_parser+0x780>
   1d179:	cmp    edi,0x7
   1d17c:	jne    1cfd4 <cmd_parser+0x74>
   1d182:	or     BYTE PTR [rip+0xdf19],0x20        # 2b0a2 <opt+0x2>
   1d189:	xor    eax,eax
   1d18b:	jmp    1cfd9 <cmd_parser+0x79>
   1d190:	cmp    edi,0x2
   1d193:	je     1d6c0 <cmd_parser+0x760>
   1d199:	jle    1d260 <cmd_parser+0x300>
   1d19f:	cmp    edi,0x3
   1d1a2:	je     1d480 <cmd_parser+0x520>
   1d1a8:	cmp    edi,0x4
   1d1ab:	jne    1cfd4 <cmd_parser+0x74>
   1d1b1:	or     BYTE PTR [rip+0xdeea],0x4        # 2b0a2 <opt+0x2>
   1d1b8:	xor    eax,eax
   1d1ba:	jmp    1cfd9 <cmd_parser+0x79>
   1d1bf:	nop
   1d1c0:	cmp    edi,0x27
   1d1c3:	je     1d470 <cmd_parser+0x510>
   1d1c9:	jle    1d290 <cmd_parser+0x330>
   1d1cf:	cmp    edi,0x28
   1d1d2:	je     1d460 <cmd_parser+0x500>
   1d1d8:	cmp    edi,0x29
   1d1db:	jne    1cfd4 <cmd_parser+0x74>
   1d1e1:	mov    rdi,rsi
   1d1e4:	call   1ca80 <parse_cpu_hz>
   1d1e9:	xor    eax,eax
   1d1eb:	jmp    1cfd9 <cmd_parser+0x79>
   1d1f0:	cmp    edi,0x1e
   1d1f3:	je     1d420 <cmd_parser+0x4c0>
   1d1f9:	jle    1d350 <cmd_parser+0x3f0>
   1d1ff:	cmp    edi,0x21
   1d202:	je     1d408 <cmd_parser+0x4a8>
   1d208:	jle    1d2c8 <cmd_parser+0x368>
   1d20e:	cmp    edi,0x22
   1d211:	je     1d8c0 <cmd_parser+0x960>
   1d217:	cmp    edi,0x23
   1d21a:	jne    1cfd4 <cmd_parser+0x74>
   1d220:	mov    rsi,rsp
   1d223:	xor    edx,edx
   1d225:	mov    rdi,rbx
   1d228:	call   5190 <strtol@plt>
   1d22d:	mov    DWORD PTR [rip+0xdea5],eax        # 2b0d8 <opt+0x38>
   1d233:	cmp    QWORD PTR [rsp],rbx
   1d237:	jne    1d130 <cmd_parser+0x1d0>
   1d23d:	nop    DWORD PTR [rax]
   1d240:	mov    rsi,QWORD PTR [rip+0x111f9]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d247:	mov    edx,0x106
   1d24c:	mov    rdi,rbp
   1d24f:	call   50b0 <argp_state_help@plt>
   1d254:	xor    eax,eax
   1d256:	jmp    1cfd9 <cmd_parser+0x79>
   1d25b:	nop    DWORD PTR [rax+rax*1+0x0]
   1d260:	test   edi,edi
   1d262:	je     1d8a0 <cmd_parser+0x940>
   1d268:	cmp    edi,0x1
   1d26b:	jne    1cfd4 <cmd_parser+0x74>
   1d271:	or     BYTE PTR [rip+0xde2a],0x1        # 2b0a2 <opt+0x2>
   1d278:	xor    eax,eax
   1d27a:	mov    DWORD PTR [rip+0xdec4],0x1        # 2b148 <G+0x28>
   1d284:	jmp    1cfd9 <cmd_parser+0x79>
   1d289:	nop    DWORD PTR [rax+0x0]
   1d290:	cmp    edi,0x25
   1d293:	je     1d880 <cmd_parser+0x920>
   1d299:	cmp    edi,0x26
   1d29c:	jne    1cfd4 <cmd_parser+0x74>
   1d2a2:	mov    rsi,rsp
   1d2a5:	xor    edx,edx
   1d2a7:	mov    rdi,rbx
   1d2aa:	call   5190 <strtol@plt>
   1d2af:	mov    DWORD PTR [rip+0xde1f],eax        # 2b0d4 <opt+0x34>
   1d2b5:	cmp    QWORD PTR [rsp],rbx
   1d2b9:	je     1d240 <cmd_parser+0x2e0>
   1d2bb:	xor    eax,eax
   1d2bd:	jmp    1cfd9 <cmd_parser+0x79>
   1d2c2:	nop    WORD PTR [rax+rax*1+0x0]
   1d2c8:	cmp    edi,0x1f
   1d2cb:	je     1d840 <cmd_parser+0x8e0>
   1d2d1:	cmp    edi,0x20
   1d2d4:	jne    1cfd4 <cmd_parser+0x74>
   1d2da:	lea    rsi,[rip+0xde1f]        # 2b100 <opt+0x60>
   1d2e1:	mov    rdi,rbx
   1d2e4:	call   1cd60 <parse_array>
   1d2e9:	test   eax,eax
   1d2eb:	js     1d2f6 <cmd_parser+0x396>
   1d2ed:	cmp    DWORD PTR [rip+0xde14],0x1        # 2b108 <opt+0x68>
   1d2f4:	je     1d30a <cmd_parser+0x3aa>
   1d2f6:	mov    rsi,QWORD PTR [rip+0x11143]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d2fd:	mov    edx,0x106
   1d302:	mov    rdi,rbp
   1d305:	call   50b0 <argp_state_help@plt>
   1d30a:	mov    DWORD PTR [rip+0xdde0],0x6        # 2b0f4 <opt+0x54>
   1d314:	mov    DWORD PTR [rip+0xddde],0x2        # 2b0fc <opt+0x5c>
   1d31e:	mov    rax,QWORD PTR [rip+0xdd7b]        # 2b0a0 <opt>
   1d325:	movabs rdx,0x100002000
   1d32f:	mov    DWORD PTR [rip+0xde0f],0x1        # 2b148 <G+0x28>
   1d339:	and    eax,0xffffdfff
   1d33e:	or     rax,rdx
   1d341:	mov    QWORD PTR [rip+0xdd58],rax        # 2b0a0 <opt>
   1d348:	xor    eax,eax
   1d34a:	jmp    1cfd9 <cmd_parser+0x79>
   1d34f:	nop
   1d350:	cmp    edi,0x1b
   1d353:	je     1d808 <cmd_parser+0x8a8>
   1d359:	jle    1d390 <cmd_parser+0x430>
   1d35b:	cmp    edi,0x1c
   1d35e:	je     1d7c0 <cmd_parser+0x860>
   1d364:	cmp    edi,0x1d
   1d367:	jne    1cfd4 <cmd_parser+0x74>
   1d36d:	movabs rax,0x200000002
   1d377:	mov    DWORD PTR [rip+0xdd73],0x3        # 2b0f4 <opt+0x54>
   1d381:	mov    QWORD PTR [rip+0xdd70],rax        # 2b0f8 <opt+0x58>
   1d388:	jmp    1d31e <cmd_parser+0x3be>
   1d38a:	nop    WORD PTR [rax+rax*1+0x0]
   1d390:	cmp    edi,0x19
   1d393:	je     1d3e8 <cmd_parser+0x488>
   1d395:	cmp    edi,0x1a
   1d398:	jne    1cfd4 <cmd_parser+0x74>
   1d39e:	mov    DWORD PTR [rip+0xdd4c],0x1        # 2b0f4 <opt+0x54>
   1d3a8:	mov    DWORD PTR [rip+0xdd4a],0x1        # 2b0fc <opt+0x5c>
   1d3b2:	mov    rax,QWORD PTR [rip+0xdce7]        # 2b0a0 <opt>
   1d3b9:	movabs rdx,0x100202000
   1d3c3:	mov    DWORD PTR [rip+0xdd7b],0x1        # 2b148 <G+0x28>
   1d3cd:	and    eax,0xffdfdfff
   1d3d2:	or     rax,rdx
   1d3d5:	mov    QWORD PTR [rip+0xdcc4],rax        # 2b0a0 <opt>
   1d3dc:	xor    eax,eax
   1d3de:	jmp    1cfd9 <cmd_parser+0x79>
   1d3e3:	nop    DWORD PTR [rax+rax*1+0x0]
   1d3e8:	movabs rax,0x100000002
   1d3f2:	mov    DWORD PTR [rip+0xdcf8],0x0        # 2b0f4 <opt+0x54>
   1d3fc:	mov    QWORD PTR [rip+0xdcf5],rax        # 2b0f8 <opt+0x58>
   1d403:	jmp    1d3b2 <cmd_parser+0x452>
   1d405:	nop    DWORD PTR [rax]
   1d408:	or     BYTE PTR [rip+0xdc94],0x2        # 2b0a3 <opt+0x3>
   1d40f:	xor    eax,eax
   1d411:	jmp    1cfd9 <cmd_parser+0x79>
   1d416:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1d420:	lea    rsi,[rip+0xdcd9]        # 2b100 <opt+0x60>
   1d427:	mov    rdi,rbx
   1d42a:	call   1cd60 <parse_array>
   1d42f:	test   eax,eax
   1d431:	js     1d43c <cmd_parser+0x4dc>
   1d433:	cmp    DWORD PTR [rip+0xdcce],0x1        # 2b108 <opt+0x68>
   1d43a:	je     1d450 <cmd_parser+0x4f0>
   1d43c:	mov    rsi,QWORD PTR [rip+0x10ffd]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d443:	mov    edx,0x106
   1d448:	mov    rdi,rbp
   1d44b:	call   50b0 <argp_state_help@plt>
   1d450:	mov    DWORD PTR [rip+0xdc9a],0x4        # 2b0f4 <opt+0x54>
   1d45a:	jmp    1d314 <cmd_parser+0x3b4>
   1d45f:	nop
   1d460:	or     BYTE PTR [rip+0xdc3c],0x10        # 2b0a3 <opt+0x3>
   1d467:	xor    eax,eax
   1d469:	jmp    1cfd9 <cmd_parser+0x79>
   1d46e:	xchg   ax,ax
   1d470:	mov    QWORD PTR [rip+0xdcc1],rsi        # 2b138 <G+0x18>
   1d477:	xor    eax,eax
   1d479:	jmp    1cfd9 <cmd_parser+0x79>
   1d47e:	xchg   ax,ax
   1d480:	or     BYTE PTR [rip+0xdc1b],0x3        # 2b0a2 <opt+0x2>
   1d487:	xor    eax,eax
   1d489:	mov    DWORD PTR [rip+0xdcb5],0x1        # 2b148 <G+0x28>
   1d493:	jmp    1cfd9 <cmd_parser+0x79>
   1d498:	nop    DWORD PTR [rax+rax*1+0x0]
   1d4a0:	mov    rsi,rsp
   1d4a3:	xor    edx,edx
   1d4a5:	mov    rdi,rbx
   1d4a8:	or     BYTE PTR [rip+0xdbf1],0x1        # 2b0a0 <opt>
   1d4af:	mov    DWORD PTR [rip+0xdc8f],0x1        # 2b148 <G+0x28>
   1d4b9:	call   5190 <strtol@plt>
   1d4be:	mov    DWORD PTR [rip+0xdbf4],eax        # 2b0b8 <opt+0x18>
   1d4c4:	cmp    QWORD PTR [rsp],rbx
   1d4c8:	je     1d240 <cmd_parser+0x2e0>
   1d4ce:	xor    eax,eax
   1d4d0:	jmp    1cfd9 <cmd_parser+0x79>
   1d4d5:	nop    DWORD PTR [rax]
   1d4d8:	mov    rsi,rsp
   1d4db:	mov    rdi,rbx
   1d4de:	call   5120 <strtof@plt>
   1d4e3:	mulss  xmm0,DWORD PTR [rip+0x742d]        # 24918 <__PRETTY_FUNCTION__.5821+0x48>
   1d4eb:	cvttss2si rax,xmm0
   1d4f0:	mov    DWORD PTR [rip+0xdbfa],eax        # 2b0f0 <opt+0x50>
   1d4f6:	cmp    QWORD PTR [rsp],rbx
   1d4fa:	je     1d240 <cmd_parser+0x2e0>
   1d500:	xor    eax,eax
   1d502:	jmp    1cfd9 <cmd_parser+0x79>
   1d507:	nop    WORD PTR [rax+rax*1+0x0]
   1d510:	or     BYTE PTR [rip+0xdb8b],0x80        # 2b0a2 <opt+0x2>
   1d517:	xor    eax,eax
   1d519:	jmp    1cfd9 <cmd_parser+0x79>
   1d51e:	xchg   ax,ax
   1d520:	or     BYTE PTR [rip+0xdb7b],0x40        # 2b0a2 <opt+0x2>
   1d527:	xor    eax,eax
   1d529:	jmp    1cfd9 <cmd_parser+0x79>
   1d52e:	xchg   ax,ax
   1d530:	mov    rsi,rsp
   1d533:	xor    edx,edx
   1d535:	mov    rdi,rbx
   1d538:	or     BYTE PTR [rip+0xdb61],0x10        # 2b0a0 <opt>
   1d53f:	mov    DWORD PTR [rip+0xdbff],0x1        # 2b148 <G+0x28>
   1d549:	call   5190 <strtol@plt>
   1d54e:	mov    DWORD PTR [rip+0xdb6c],eax        # 2b0c0 <opt+0x20>
   1d554:	cmp    QWORD PTR [rsp],rbx
   1d558:	je     1d240 <cmd_parser+0x2e0>
   1d55e:	xor    eax,eax
   1d560:	jmp    1cfd9 <cmd_parser+0x79>
   1d565:	nop    DWORD PTR [rax]
   1d568:	mov    DWORD PTR [rip+0xdbd6],0x1        # 2b148 <G+0x28>
   1d572:	xor    eax,eax
   1d574:	or     BYTE PTR [rip+0xdb25],0x8        # 2b0a0 <opt>
   1d57b:	jmp    1cfd9 <cmd_parser+0x79>
   1d580:	mov    DWORD PTR [rip+0xdbbe],0x1        # 2b148 <G+0x28>
   1d58a:	xor    eax,eax
   1d58c:	or     BYTE PTR [rip+0xdb0d],0x80        # 2b0a0 <opt>
   1d593:	jmp    1cfd9 <cmd_parser+0x79>
   1d598:	nop    DWORD PTR [rax+rax*1+0x0]
   1d5a0:	xor    edx,edx
   1d5a2:	mov    rsi,rsp
   1d5a5:	mov    rdi,rbx
   1d5a8:	call   5190 <strtol@plt>
   1d5ad:	mov    edx,eax
   1d5af:	mov    DWORD PTR [rip+0xdb2b],eax        # 2b0e0 <opt+0x40>
   1d5b5:	cmp    QWORD PTR [rsp],rbx
   1d5b9:	je     1daa9 <cmd_parser+0xb49>
   1d5bf:	cmp    edx,0x6
   1d5c2:	ja     1dacd <cmd_parser+0xb6d>
   1d5c8:	lea    rsi,[rip+0x5c79]        # 23248 <_IO_stdin_used+0x5248>
   1d5cf:	mov    edi,0x1
   1d5d4:	xor    eax,eax
   1d5d6:	call   5200 <__printf_chk@plt>
   1d5db:	xor    eax,eax
   1d5dd:	jmp    1cfd9 <cmd_parser+0x79>
   1d5e2:	nop    WORD PTR [rax+rax*1+0x0]
   1d5e8:	mov    r12,rsp
   1d5eb:	xor    edx,edx
   1d5ed:	mov    rdi,rbx
   1d5f0:	or     BYTE PTR [rip+0xdaaa],0x10        # 2b0a1 <opt+0x1>
   1d5f7:	mov    rsi,r12
   1d5fa:	call   5190 <strtol@plt>
   1d5ff:	mov    DWORD PTR [rip+0xdabf],eax        # 2b0c4 <opt+0x24>
   1d605:	mov    rax,QWORD PTR [rsp]
   1d609:	cmp    rax,rbx
   1d60c:	je     1da8c <cmd_parser+0xb2c>
   1d612:	cmp    BYTE PTR [rax],0x2c
   1d615:	je     1da6f <cmd_parser+0xb0f>
   1d61b:	mov    QWORD PTR [rip+0xdaa2],0x1000000        # 2b0c8 <opt+0x28>
   1d626:	mov    ecx,0x1000000
   1d62b:	mov    edx,DWORD PTR [rip+0xda93]        # 2b0c4 <opt+0x24>
   1d631:	lea    rsi,[rip+0x5b60]        # 23198 <_IO_stdin_used+0x5198>
   1d638:	mov    edi,0x1
   1d63d:	xor    eax,eax
   1d63f:	call   5200 <__printf_chk@plt>
   1d644:	xor    eax,eax
   1d646:	jmp    1cfd9 <cmd_parser+0x79>
   1d64b:	nop    DWORD PTR [rax+rax*1+0x0]
   1d650:	mov    DWORD PTR [rip+0xdaee],0x1        # 2b148 <G+0x28>
   1d65a:	xor    eax,eax
   1d65c:	or     BYTE PTR [rip+0xda3e],0x8        # 2b0a1 <opt+0x1>
   1d663:	jmp    1cfd9 <cmd_parser+0x79>
   1d668:	nop    DWORD PTR [rax+rax*1+0x0]
   1d670:	mov    rsi,rsp
   1d673:	xor    edx,edx
   1d675:	mov    rdi,rbx
   1d678:	or     BYTE PTR [rip+0xda22],0x2        # 2b0a1 <opt+0x1>
   1d67f:	mov    DWORD PTR [rip+0xdabf],0x1        # 2b148 <G+0x28>
   1d689:	call   5190 <strtol@plt>
   1d68e:	mov    DWORD PTR [rip+0xda28],eax        # 2b0bc <opt+0x1c>
   1d694:	cmp    QWORD PTR [rsp],rbx
   1d698:	je     1d240 <cmd_parser+0x2e0>
   1d69e:	xor    eax,eax
   1d6a0:	jmp    1cfd9 <cmd_parser+0x79>
   1d6a5:	nop    DWORD PTR [rax]
   1d6a8:	mov    DWORD PTR [rip+0xda96],0x1        # 2b148 <G+0x28>
   1d6b2:	xor    eax,eax
   1d6b4:	or     BYTE PTR [rip+0xd9e5],0x40        # 2b0a0 <opt>
   1d6bb:	jmp    1cfd9 <cmd_parser+0x79>
   1d6c0:	or     BYTE PTR [rip+0xd9da],0x80        # 2b0a1 <opt+0x1>
   1d6c7:	xor    eax,eax
   1d6c9:	mov    DWORD PTR [rip+0xda75],0x1        # 2b148 <G+0x28>
   1d6d3:	jmp    1cfd9 <cmd_parser+0x79>
   1d6d8:	nop    DWORD PTR [rax+rax*1+0x0]
   1d6e0:	or     BYTE PTR [rip+0xd9bb],0x10        # 2b0a2 <opt+0x2>
   1d6e7:	xor    eax,eax
   1d6e9:	jmp    1cfd9 <cmd_parser+0x79>
   1d6ee:	xchg   ax,ax
   1d6f0:	mov    DWORD PTR [rip+0xda4e],0x1        # 2b148 <G+0x28>
   1d6fa:	xor    eax,eax
   1d6fc:	or     BYTE PTR [rip+0xd99d],0x2        # 2b0a0 <opt>
   1d703:	jmp    1cfd9 <cmd_parser+0x79>
   1d708:	nop    DWORD PTR [rax+rax*1+0x0]
   1d710:	mov    rsi,rsp
   1d713:	xor    edx,edx
   1d715:	mov    rdi,rbx
   1d718:	call   5190 <strtol@plt>
   1d71d:	mov    DWORD PTR [rip+0xd9b9],eax        # 2b0dc <opt+0x3c>
   1d723:	cmp    QWORD PTR [rsp],rbx
   1d727:	je     1d240 <cmd_parser+0x2e0>
   1d72d:	xor    eax,eax
   1d72f:	jmp    1cfd9 <cmd_parser+0x79>
   1d734:	nop    DWORD PTR [rax+0x0]
   1d738:	lea    rsi,[rip+0xd9c1]        # 2b100 <opt+0x60>
   1d73f:	mov    rdi,rbx
   1d742:	call   1cd60 <parse_array>
   1d747:	test   eax,eax
   1d749:	js     1d780 <cmd_parser+0x820>
   1d74b:	mov    edi,DWORD PTR [rip+0xd9b7]        # 2b108 <opt+0x68>
   1d751:	call   9210 <interval_table_alloc>
   1d756:	movabs rax,0x100000001
   1d760:	mov    DWORD PTR [rip+0xd98a],0x0        # 2b0f4 <opt+0x54>
   1d76a:	mov    QWORD PTR [rip+0xd987],rax        # 2b0f8 <opt+0x58>
   1d771:	jmp    1d3b2 <cmd_parser+0x452>
   1d776:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1d780:	mov    rcx,QWORD PTR [rip+0x10cb9]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d787:	mov    edx,0x24
   1d78c:	mov    esi,0x1
   1d791:	lea    rdi,[rip+0x5a40]        # 231d8 <_IO_stdin_used+0x51d8>
   1d798:	call   5260 <fwrite@plt>
   1d79d:	mov    rsi,QWORD PTR [rip+0x10c9c]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d7a4:	mov    edx,0x106
   1d7a9:	mov    rdi,rbp
   1d7ac:	call   50b0 <argp_state_help@plt>
   1d7b1:	xor    eax,eax
   1d7b3:	jmp    1cfd9 <cmd_parser+0x79>
   1d7b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1d7c0:	lea    rsi,[rip+0xd939]        # 2b100 <opt+0x60>
   1d7c7:	mov    rdi,rbx
   1d7ca:	call   1cd60 <parse_array>
   1d7cf:	test   eax,eax
   1d7d1:	js     1da4d <cmd_parser+0xaed>
   1d7d7:	mov    edi,DWORD PTR [rip+0xd92b]        # 2b108 <opt+0x68>
   1d7dd:	call   9210 <interval_table_alloc>
   1d7e2:	movabs rax,0x200000001
   1d7ec:	mov    DWORD PTR [rip+0xd8fe],0x3        # 2b0f4 <opt+0x54>
   1d7f6:	mov    QWORD PTR [rip+0xd8fb],rax        # 2b0f8 <opt+0x58>
   1d7fd:	jmp    1d31e <cmd_parser+0x3be>
   1d802:	nop    WORD PTR [rax+rax*1+0x0]
   1d808:	lea    rsi,[rip+0xd8f1]        # 2b100 <opt+0x60>
   1d80f:	mov    rdi,rbx
   1d812:	call   1cd60 <parse_array>
   1d817:	test   eax,eax
   1d819:	js     1d780 <cmd_parser+0x820>
   1d81f:	cmp    DWORD PTR [rip+0xd8e2],0x1        # 2b108 <opt+0x68>
   1d826:	jne    1d780 <cmd_parser+0x820>
   1d82c:	mov    DWORD PTR [rip+0xd8be],0x2        # 2b0f4 <opt+0x54>
   1d836:	jmp    1d3a8 <cmd_parser+0x448>
   1d83b:	nop    DWORD PTR [rax+rax*1+0x0]
   1d840:	lea    rsi,[rip+0xd8b9]        # 2b100 <opt+0x60>
   1d847:	mov    rdi,rbx
   1d84a:	call   1cd60 <parse_array>
   1d84f:	test   eax,eax
   1d851:	js     1d85c <cmd_parser+0x8fc>
   1d853:	cmp    DWORD PTR [rip+0xd8ae],0x1        # 2b108 <opt+0x68>
   1d85a:	je     1d870 <cmd_parser+0x910>
   1d85c:	mov    rsi,QWORD PTR [rip+0x10bdd]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d863:	mov    edx,0x106
   1d868:	mov    rdi,rbp
   1d86b:	call   50b0 <argp_state_help@plt>
   1d870:	mov    DWORD PTR [rip+0xd87a],0x5        # 2b0f4 <opt+0x54>
   1d87a:	jmp    1d314 <cmd_parser+0x3b4>
   1d87f:	nop
   1d880:	or     BYTE PTR [rip+0xd81c],0x40        # 2b0a3 <opt+0x3>
   1d887:	xor    eax,eax
   1d889:	mov    DWORD PTR [rip+0xd8b5],0x1        # 2b148 <G+0x28>
   1d893:	jmp    1cfd9 <cmd_parser+0x79>
   1d898:	nop    DWORD PTR [rax+rax*1+0x0]
   1d8a0:	mov    edx,DWORD PTR [rdx+0x20]
   1d8a3:	test   edx,edx
   1d8a5:	jne    1d79d <cmd_parser+0x83d>
   1d8ab:	mov    QWORD PTR [rip+0xd88e],rsi        # 2b140 <G+0x20>
   1d8b2:	xor    eax,eax
   1d8b4:	jmp    1cfd9 <cmd_parser+0x79>
   1d8b9:	nop    DWORD PTR [rax+0x0]
   1d8c0:	xor    edx,edx
   1d8c2:	mov    rsi,rsp
   1d8c5:	mov    rdi,rbx
   1d8c8:	call   5190 <strtol@plt>
   1d8cd:	and    eax,0x1
   1d8d0:	lea    edx,[rax*4+0x0]
   1d8d7:	movzx  eax,BYTE PTR [rip+0xd7c5]        # 2b0a3 <opt+0x3>
   1d8de:	and    eax,0xfffffffb
   1d8e1:	or     eax,edx
   1d8e3:	mov    BYTE PTR [rip+0xd7ba],al        # 2b0a3 <opt+0x3>
   1d8e9:	cmp    QWORD PTR [rsp],rbx
   1d8ed:	je     1d240 <cmd_parser+0x2e0>
   1d8f3:	xor    eax,eax
   1d8f5:	jmp    1cfd9 <cmd_parser+0x79>
   1d8fa:	nop    WORD PTR [rax+rax*1+0x0]
   1d900:	test   BYTE PTR [rip+0xd79a],0x20        # 2b0a1 <opt+0x1>
   1d907:	jne    1da13 <cmd_parser+0xab3>
   1d90d:	mov    eax,DWORD PTR [rip+0xd835]        # 2b148 <G+0x28>
   1d913:	mov    rdi,QWORD PTR [rip+0x10b26]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d91a:	test   eax,eax
   1d91c:	je     1d9ce <cmd_parser+0xa6e>
   1d922:	test   BYTE PTR [rip+0xd77a],0x10        # 2b0a3 <opt+0x3>
   1d929:	lea    rax,[rip+0x174e]        # 1f07e <_IO_stdin_used+0x107e>
   1d930:	lea    rcx,[rip+0x1743]        # 1f07a <_IO_stdin_used+0x107a>
   1d937:	mov    esi,0x1
   1d93c:	cmove  rcx,rax
   1d940:	lea    rdx,[rip+0x5951]        # 23298 <_IO_stdin_used+0x5298>
   1d947:	xor    eax,eax
   1d949:	call   5270 <__fprintf_chk@plt>
   1d94e:	xor    eax,eax
   1d950:	jmp    1cfd9 <cmd_parser+0x79>
   1d955:	nop    DWORD PTR [rax]
   1d958:	mov    rax,QWORD PTR [rip+0xd741]        # 2b0a0 <opt>
   1d95f:	movabs rdx,0x120000000
   1d969:	mov    DWORD PTR [rip+0xd7d5],0x1        # 2b148 <G+0x28>
   1d973:	and    eax,0xdfffffff
   1d978:	or     rax,rdx
   1d97b:	mov    QWORD PTR [rip+0xd71e],rax        # 2b0a0 <opt>
   1d982:	xor    eax,eax
   1d984:	jmp    1cfd9 <cmd_parser+0x79>
   1d989:	nop    DWORD PTR [rax+0x0]
   1d990:	or     BYTE PTR [rip+0xd70a],0x40        # 2b0a1 <opt+0x1>
   1d997:	xor    eax,eax
   1d999:	mov    DWORD PTR [rip+0xd7a5],0x1        # 2b148 <G+0x28>
   1d9a3:	jmp    1cfd9 <cmd_parser+0x79>
   1d9a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1d9b0:	or     BYTE PTR [rip+0xd6ec],0x8        # 2b0a3 <opt+0x3>
   1d9b7:	xor    eax,eax
   1d9b9:	jmp    1cfd9 <cmd_parser+0x79>
   1d9be:	xchg   ax,ax
   1d9c0:	or     BYTE PTR [rip+0xd6db],0x8        # 2b0a2 <opt+0x2>
   1d9c7:	xor    eax,eax
   1d9c9:	jmp    1cfd9 <cmd_parser+0x79>
   1d9ce:	mov    rcx,rdi
   1d9d1:	mov    edx,0x22
   1d9d6:	mov    esi,0x1
   1d9db:	lea    rdi,[rip+0x588e]        # 23270 <_IO_stdin_used+0x5270>
   1d9e2:	call   5260 <fwrite@plt>
   1d9e7:	mov    rax,QWORD PTR [rip+0xd6b2]        # 2b0a0 <opt>
   1d9ee:	movabs rdx,0x120000000
   1d9f8:	mov    rdi,QWORD PTR [rip+0x10a41]        # 2e440 <stderr@@GLIBC_2.2.5>
   1d9ff:	and    eax,0xdfffffff
   1da04:	or     rax,rdx
   1da07:	mov    QWORD PTR [rip+0xd692],rax        # 2b0a0 <opt>
   1da0e:	jmp    1d922 <cmd_parser+0x9c2>
   1da13:	movabs rdx,0x20c49ba5e353f7cf
   1da1d:	mov    ecx,DWORD PTR [rip+0xd6cd]        # 2b0f0 <opt+0x50>
   1da23:	imul   rcx,QWORD PTR [rip+0xd685]        # 2b0b0 <opt+0x10>
   1da2b:	mov    rax,rcx
   1da2e:	sar    rcx,0x3f
   1da32:	imul   rdx
   1da35:	sar    rdx,0x7
   1da39:	sub    rdx,rcx
   1da3c:	mov    QWORD PTR [rip+0xd6a5],rdx        # 2b0e8 <opt+0x48>
   1da43:	call   9c50 <interval_header>
   1da48:	jmp    1d90d <cmd_parser+0x9ad>
   1da4d:	mov    rcx,QWORD PTR [rip+0x109ec]        # 2e440 <stderr@@GLIBC_2.2.5>
   1da54:	mov    edx,0x24
   1da59:	mov    esi,0x1
   1da5e:	lea    rdi,[rip+0x579b]        # 23200 <_IO_stdin_used+0x5200>
   1da65:	call   5260 <fwrite@plt>
   1da6a:	jmp    1d79d <cmd_parser+0x83d>
   1da6f:	lea    rdi,[rax+0x1]
   1da73:	xor    edx,edx
   1da75:	mov    rsi,r12
   1da78:	call   5160 <strtoull@plt>
   1da7d:	mov    rcx,rax
   1da80:	mov    QWORD PTR [rip+0xd641],rax        # 2b0c8 <opt+0x28>
   1da87:	jmp    1d62b <cmd_parser+0x6cb>
   1da8c:	mov    rsi,QWORD PTR [rip+0x109ad]        # 2e440 <stderr@@GLIBC_2.2.5>
   1da93:	mov    edx,0x106
   1da98:	mov    rdi,rbp
   1da9b:	call   50b0 <argp_state_help@plt>
   1daa0:	mov    rax,QWORD PTR [rsp]
   1daa4:	jmp    1d612 <cmd_parser+0x6b2>
   1daa9:	mov    rsi,QWORD PTR [rip+0x10990]        # 2e440 <stderr@@GLIBC_2.2.5>
   1dab0:	mov    edx,0x106
   1dab5:	mov    rdi,rbp
   1dab8:	call   50b0 <argp_state_help@plt>
   1dabd:	mov    edx,DWORD PTR [rip+0xd61d]        # 2b0e0 <opt+0x40>
   1dac3:	jmp    1d5bf <cmd_parser+0x65f>
   1dac8:	call   50d0 <__stack_chk_fail@plt>
   1dacd:	mov    rdi,QWORD PTR [rip+0x1096c]        # 2e440 <stderr@@GLIBC_2.2.5>
   1dad4:	mov    ecx,0x6
   1dad9:	lea    rdx,[rip+0x5748]        # 23228 <_IO_stdin_used+0x5228>
   1dae0:	xor    eax,eax
   1dae2:	mov    esi,0x1
   1dae7:	call   5270 <__fprintf_chk@plt>
   1daec:	mov    edi,0x1
   1daf1:	call   5250 <exit@plt>
   1daf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000001db00 <mread_init>:
   1db00:	push   rbp
   1db01:	mov    ebp,edi
   1db03:	mov    edi,0xd8
   1db08:	push   rbx
   1db09:	sub    rsp,0xa8
   1db10:	mov    rax,QWORD PTR fs:0x28
   1db19:	mov    QWORD PTR [rsp+0x98],rax
   1db21:	xor    eax,eax
   1db23:	call   51a0 <malloc@plt>
   1db28:	test   rax,rax
   1db2b:	je     1db95 <mread_init+0x95>
   1db2d:	lea    rdi,[rax+0xc]
   1db31:	mov    rbx,rax
   1db34:	mov    esi,ebp
   1db36:	mov    rdx,rsp
   1db39:	and    rdi,0xfffffffffffffff8
   1db3d:	mov    QWORD PTR [rax+0x4],0x0
   1db45:	mov    QWORD PTR [rax+0xd0],0x0
   1db50:	sub    eax,edi
   1db52:	lea    ecx,[rax+0xd8]
   1db58:	xor    eax,eax
   1db5a:	shr    ecx,0x3
   1db5d:	rep stos QWORD PTR es:[rdi],rax
   1db60:	mov    DWORD PTR [rbx],ebp
   1db62:	mov    edi,0x1
   1db67:	call   51c0 <__fxstat@plt>
   1db6c:	mov    rax,QWORD PTR [rsp+0x30]
   1db71:	mov    QWORD PTR [rbx+0x8],rax
   1db75:	mov    rax,rbx
   1db78:	mov    rsi,QWORD PTR [rsp+0x98]
   1db80:	xor    rsi,QWORD PTR fs:0x28
   1db89:	jne    1dbab <mread_init+0xab>
   1db8b:	add    rsp,0xa8
   1db92:	pop    rbx
   1db93:	pop    rbp
   1db94:	ret    
   1db95:	lea    rdi,[rip+0x6d80]        # 2491c <__PRETTY_FUNCTION__.5821+0x4c>
   1db9c:	call   5240 <perror@plt>
   1dba1:	mov    edi,0x1
   1dba6:	call   5250 <exit@plt>
   1dbab:	call   50d0 <__stack_chk_fail@plt>

000000000001dbb0 <mread64>:
   1dbb0:	push   r14
   1dbb2:	push   r13
   1dbb4:	push   r12
   1dbb6:	push   rbp
   1dbb7:	push   rbx
   1dbb8:	mov    rax,QWORD PTR [rdi+0x8]
   1dbbc:	cmp    rax,rcx
   1dbbf:	jl     1dd40 <mread64+0x190>
   1dbc5:	mov    rbp,rcx
   1dbc8:	mov    r12,rax
   1dbcb:	lea    rcx,[rcx+rdx*1]
   1dbcf:	mov    r13,rsi
   1dbd2:	sub    r12,rbp
   1dbd5:	cmp    rax,rcx
   1dbd8:	movsxd rax,DWORD PTR [rdi+0xd4]
   1dbdf:	mov    rbx,rdi
   1dbe2:	cmovge r12,rdx
   1dbe6:	lea    rdx,[rax+rax*2]
   1dbea:	lea    rdx,[rdi+rdx*8]
   1dbee:	cmp    QWORD PTR [rdx+0x10],0x0
   1dbf3:	je     1dc09 <mread64+0x59>
   1dbf5:	mov    rcx,rbp
   1dbf8:	and    rcx,0xffffffffffe00000
   1dbff:	cmp    rcx,QWORD PTR [rdx+0x18]
   1dc03:	je     1dcd8 <mread64+0x128>
   1dc09:	mov    rcx,rbp
   1dc0c:	lea    rax,[rbx+0x10]
   1dc10:	xor    edx,edx
   1dc12:	and    rcx,0xffffffffffe00000
   1dc19:	nop    DWORD PTR [rax+0x0]
   1dc20:	cmp    QWORD PTR [rax],0x0
   1dc24:	je     1dc30 <mread64+0x80>
   1dc26:	cmp    rcx,QWORD PTR [rax+0x8]
   1dc2a:	je     1dd70 <mread64+0x1c0>
   1dc30:	add    edx,0x1
   1dc33:	add    rax,0x18
   1dc37:	cmp    edx,0x8
   1dc3a:	jne    1dc20 <mread64+0x70>
   1dc3c:	mov    eax,DWORD PTR [rbx+0xd0]
   1dc42:	xor    esi,esi
   1dc44:	jmp    1dc62 <mread64+0xb2>
   1dc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
   1dc50:	mov    ecx,DWORD PTR [rdx+0x20]
   1dc53:	test   ecx,ecx
   1dc55:	je     1dd80 <mread64+0x1d0>
   1dc5b:	mov    DWORD PTR [rdx+0x20],0x0
   1dc62:	add    eax,0x1
   1dc65:	cmp    eax,0x8
   1dc68:	cmovge eax,esi
   1dc6b:	movsxd rcx,eax
   1dc6e:	lea    rdx,[rcx+rcx*2]
   1dc72:	lea    rdx,[rbx+rdx*8]
   1dc76:	mov    rdi,QWORD PTR [rdx+0x10]
   1dc7a:	test   rdi,rdi
   1dc7d:	jne    1dc50 <mread64+0xa0>
   1dc7f:	mov    DWORD PTR [rbx+0xd0],eax
   1dc85:	lea    rax,[rcx+rcx*2]
   1dc89:	mov    r9,rbp
   1dc8c:	mov    ecx,0x1
   1dc91:	xor    edi,edi
   1dc93:	and    r9,0xffffffffffe00000
   1dc9a:	lea    r14,[rbx+rax*8]
   1dc9e:	mov    edx,0x1
   1dca3:	mov    esi,0x200000
   1dca8:	mov    QWORD PTR [r14+0x18],r9
   1dcac:	mov    r8d,DWORD PTR [rbx]
   1dcaf:	call   50e0 <mmap@plt>
   1dcb4:	mov    QWORD PTR [r14+0x10],rax
   1dcb8:	movsxd rax,DWORD PTR [rbx+0xd0]
   1dcbf:	lea    rcx,[rax+rax*2]
   1dcc3:	mov    rdx,rax
   1dcc6:	cmp    QWORD PTR [rbx+rcx*8+0x10],0xffffffffffffffff
   1dccc:	je     1dd9c <mread64+0x1ec>
   1dcd2:	mov    DWORD PTR [rbx+0xd4],edx
   1dcd8:	lea    rax,[rax+rax*2]
   1dcdc:	mov    rdi,rbp
   1dcdf:	lea    rax,[rbx+rax*8]
   1dce3:	sub    rdi,QWORD PTR [rax+0x18]
   1dce7:	mov    rsi,QWORD PTR [rax+0x10]
   1dceb:	mov    DWORD PTR [rax+0x20],0x1
   1dcf2:	lea    rdx,[r12+rdi*1]
   1dcf6:	cmp    rdx,0x200000
   1dcfd:	jbe    1dd50 <mread64+0x1a0>
   1dcff:	mov    r14d,0x200000
   1dd05:	add    rsi,rdi
   1dd08:	sub    r14,rdi
   1dd0b:	mov    rdi,r13
   1dd0e:	mov    rdx,r14
   1dd11:	call   5210 <memmove@plt>
   1dd16:	cmp    r12,r14
   1dd19:	jle    1dd33 <mread64+0x183>
   1dd1b:	mov    rdx,r12
   1dd1e:	lea    rcx,[rbp+r14*1+0x0]
   1dd23:	lea    rsi,[r13+r14*1+0x0]
   1dd28:	mov    rdi,rbx
   1dd2b:	sub    rdx,r14
   1dd2e:	call   1dbb0 <mread64>
   1dd33:	pop    rbx
   1dd34:	mov    rax,r12
   1dd37:	pop    rbp
   1dd38:	pop    r12
   1dd3a:	pop    r13
   1dd3c:	pop    r14
   1dd3e:	ret    
   1dd3f:	nop
   1dd40:	xor    r12d,r12d
   1dd43:	pop    rbx
   1dd44:	pop    rbp
   1dd45:	mov    rax,r12
   1dd48:	pop    r12
   1dd4a:	pop    r13
   1dd4c:	pop    r14
   1dd4e:	ret    
   1dd4f:	nop
   1dd50:	add    rsi,rdi
   1dd53:	mov    rdx,r12
   1dd56:	mov    rdi,r13
   1dd59:	call   5210 <memmove@plt>
   1dd5e:	pop    rbx
   1dd5f:	mov    rax,r12
   1dd62:	pop    rbp
   1dd63:	pop    r12
   1dd65:	pop    r13
   1dd67:	pop    r14
   1dd69:	ret    
   1dd6a:	nop    WORD PTR [rax+rax*1+0x0]
   1dd70:	movsxd rax,edx
   1dd73:	jmp    1dcd2 <mread64+0x122>
   1dd78:	nop    DWORD PTR [rax+rax*1+0x0]
   1dd80:	mov    DWORD PTR [rbx+0xd0],eax
   1dd86:	mov    esi,0x200000
   1dd8b:	call   51f0 <munmap@plt>
   1dd90:	movsxd rcx,DWORD PTR [rbx+0xd0]
   1dd97:	jmp    1dc85 <mread64+0xd5>
   1dd9c:	imul   rax,rax,0x18
   1dda0:	lea    rdi,[rip+0x6b7c]        # 24923 <__PRETTY_FUNCTION__.5821+0x53>
   1dda7:	mov    QWORD PTR [rbx+rax*1+0x10],0x0
   1ddb0:	call   5240 <perror@plt>
   1ddb5:	mov    edi,0x1
   1ddba:	call   5250 <exit@plt>
   1ddbf:	nop

000000000001ddc0 <__libc_csu_init>:
   1ddc0:	push   r15
   1ddc2:	mov    r15,rdx
   1ddc5:	push   r14
   1ddc7:	mov    r14,rsi
   1ddca:	push   r13
   1ddcc:	mov    r13d,edi
   1ddcf:	push   r12
   1ddd1:	lea    r12,[rip+0xc558]        # 2a330 <__frame_dummy_init_array_entry>
   1ddd8:	push   rbp
   1ddd9:	lea    rbp,[rip+0xc558]        # 2a338 <__init_array_end>
   1dde0:	push   rbx
   1dde1:	sub    rbp,r12
   1dde4:	sub    rsp,0x8
   1dde8:	call   5000 <_init>
   1dded:	sar    rbp,0x3
   1ddf1:	je     1de0e <__libc_csu_init+0x4e>
   1ddf3:	xor    ebx,ebx
   1ddf5:	nop    DWORD PTR [rax]
   1ddf8:	mov    rdx,r15
   1ddfb:	mov    rsi,r14
   1ddfe:	mov    edi,r13d
   1de01:	call   QWORD PTR [r12+rbx*8]
   1de05:	add    rbx,0x1
   1de09:	cmp    rbp,rbx
   1de0c:	jne    1ddf8 <__libc_csu_init+0x38>
   1de0e:	add    rsp,0x8
   1de12:	pop    rbx
   1de13:	pop    rbp
   1de14:	pop    r12
   1de16:	pop    r13
   1de18:	pop    r14
   1de1a:	pop    r15
   1de1c:	ret    
   1de1d:	nop    DWORD PTR [rax]

000000000001de20 <__libc_csu_fini>:
   1de20:	ret    

Disassembly of section .fini:

000000000001de24 <_fini>:
   1de24:	sub    rsp,0x8
   1de28:	add    rsp,0x8
   1de2c:	ret    
