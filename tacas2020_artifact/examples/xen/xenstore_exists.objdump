
xenstore-exists:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	sub    rsp,0x8
    2004:	mov    rax,QWORD PTR [rip+0x3fdd]        # 5fe8 <__gmon_start__>
    200b:	test   rax,rax
    200e:	je     2012 <_init+0x12>
    2010:	call   rax
    2012:	add    rsp,0x8
    2016:	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	push   QWORD PTR [rip+0x3e62]        # 5e88 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	jmp    QWORD PTR [rip+0x3e64]        # 5e90 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	nop    DWORD PTR [rax+0x0]

0000000000002030 <__snprintf_chk@plt>:
    2030:	jmp    QWORD PTR [rip+0x3e62]        # 5e98 <__snprintf_chk@GLIBC_2.3.4>
    2036:	push   0x0
    203b:	jmp    2020 <.plt>

0000000000002040 <free@plt>:
    2040:	jmp    QWORD PTR [rip+0x3e5a]        # 5ea0 <free@GLIBC_2.2.5>
    2046:	push   0x1
    204b:	jmp    2020 <.plt>

0000000000002050 <xs_read_watch@plt>:
    2050:	jmp    QWORD PTR [rip+0x3e52]        # 5ea8 <xs_read_watch>
    2056:	push   0x2
    205b:	jmp    2020 <.plt>

0000000000002060 <__errno_location@plt>:
    2060:	jmp    QWORD PTR [rip+0x3e4a]        # 5eb0 <__errno_location@GLIBC_2.2.5>
    2066:	push   0x3
    206b:	jmp    2020 <.plt>

0000000000002070 <xs_watch@plt>:
    2070:	jmp    QWORD PTR [rip+0x3e42]        # 5eb8 <xs_watch>
    2076:	push   0x4
    207b:	jmp    2020 <.plt>

0000000000002080 <warn@plt>:
    2080:	jmp    QWORD PTR [rip+0x3e3a]        # 5ec0 <warn@GLIBC_2.2.5>
    2086:	push   0x5
    208b:	jmp    2020 <.plt>

0000000000002090 <puts@plt>:
    2090:	jmp    QWORD PTR [rip+0x3e32]        # 5ec8 <puts@GLIBC_2.2.5>
    2096:	push   0x6
    209b:	jmp    2020 <.plt>

00000000000020a0 <xs_close@plt>:
    20a0:	jmp    QWORD PTR [rip+0x3e2a]        # 5ed0 <xs_close>
    20a6:	push   0x7
    20ab:	jmp    2020 <.plt>

00000000000020b0 <xs_transaction_start@plt>:
    20b0:	jmp    QWORD PTR [rip+0x3e22]        # 5ed8 <xs_transaction_start>
    20b6:	push   0x8
    20bb:	jmp    2020 <.plt>

00000000000020c0 <strlen@plt>:
    20c0:	jmp    QWORD PTR [rip+0x3e1a]        # 5ee0 <strlen@GLIBC_2.2.5>
    20c6:	push   0x9
    20cb:	jmp    2020 <.plt>

00000000000020d0 <__stack_chk_fail@plt>:
    20d0:	jmp    QWORD PTR [rip+0x3e12]        # 5ee8 <__stack_chk_fail@GLIBC_2.4>
    20d6:	push   0xa
    20db:	jmp    2020 <.plt>

00000000000020e0 <getopt_long@plt>:
    20e0:	jmp    QWORD PTR [rip+0x3e0a]        # 5ef0 <getopt_long@GLIBC_2.2.5>
    20e6:	push   0xb
    20eb:	jmp    2020 <.plt>

00000000000020f0 <errx@plt>:
    20f0:	jmp    QWORD PTR [rip+0x3e02]        # 5ef8 <errx@GLIBC_2.2.5>
    20f6:	push   0xc
    20fb:	jmp    2020 <.plt>

0000000000002100 <warnx@plt>:
    2100:	jmp    QWORD PTR [rip+0x3dfa]        # 5f00 <warnx@GLIBC_2.2.5>
    2106:	push   0xd
    210b:	jmp    2020 <.plt>

0000000000002110 <strrchr@plt>:
    2110:	jmp    QWORD PTR [rip+0x3df2]        # 5f08 <strrchr@GLIBC_2.2.5>
    2116:	push   0xe
    211b:	jmp    2020 <.plt>

0000000000002120 <fputs@plt>:
    2120:	jmp    QWORD PTR [rip+0x3dea]        # 5f10 <fputs@GLIBC_2.2.5>
    2126:	push   0xf
    212b:	jmp    2020 <.plt>

0000000000002130 <xs_set_permissions@plt>:
    2130:	jmp    QWORD PTR [rip+0x3de2]        # 5f18 <xs_set_permissions>
    2136:	push   0x10
    213b:	jmp    2020 <.plt>

0000000000002140 <ioctl@plt>:
    2140:	jmp    QWORD PTR [rip+0x3dda]        # 5f20 <ioctl@GLIBC_2.2.5>
    2146:	push   0x11
    214b:	jmp    2020 <.plt>

0000000000002150 <xs_transaction_end@plt>:
    2150:	jmp    QWORD PTR [rip+0x3dd2]        # 5f28 <xs_transaction_end>
    2156:	push   0x12
    215b:	jmp    2020 <.plt>

0000000000002160 <sanitise_value@plt>:
    2160:	jmp    QWORD PTR [rip+0x3dca]        # 5f30 <sanitise_value>
    2166:	push   0x13
    216b:	jmp    2020 <.plt>

0000000000002170 <strcmp@plt>:
    2170:	jmp    QWORD PTR [rip+0x3dc2]        # 5f38 <strcmp@GLIBC_2.2.5>
    2176:	push   0x14
    217b:	jmp    2020 <.plt>

0000000000002180 <putc@plt>:
    2180:	jmp    QWORD PTR [rip+0x3dba]        # 5f40 <putc@GLIBC_2.2.5>
    2186:	push   0x15
    218b:	jmp    2020 <.plt>

0000000000002190 <expanding_buffer_ensure@plt>:
    2190:	jmp    QWORD PTR [rip+0x3db2]        # 5f48 <expanding_buffer_ensure>
    2196:	push   0x16
    219b:	jmp    2020 <.plt>

00000000000021a0 <strtol@plt>:
    21a0:	jmp    QWORD PTR [rip+0x3daa]        # 5f50 <strtol@GLIBC_2.2.5>
    21a6:	push   0x17
    21ab:	jmp    2020 <.plt>

00000000000021b0 <xs_open@plt>:
    21b0:	jmp    QWORD PTR [rip+0x3da2]        # 5f58 <xs_open>
    21b6:	push   0x18
    21bb:	jmp    2020 <.plt>

00000000000021c0 <xs_perm_to_string@plt>:
    21c0:	jmp    QWORD PTR [rip+0x3d9a]        # 5f60 <xs_perm_to_string>
    21c6:	push   0x19
    21cb:	jmp    2020 <.plt>

00000000000021d0 <memcpy@plt>:
    21d0:	jmp    QWORD PTR [rip+0x3d92]        # 5f68 <memcpy@GLIBC_2.14>
    21d6:	push   0x1a
    21db:	jmp    2020 <.plt>

00000000000021e0 <err@plt>:
    21e0:	jmp    QWORD PTR [rip+0x3d8a]        # 5f70 <err@GLIBC_2.2.5>
    21e6:	push   0x1b
    21eb:	jmp    2020 <.plt>

00000000000021f0 <malloc@plt>:
    21f0:	jmp    QWORD PTR [rip+0x3d82]        # 5f78 <malloc@GLIBC_2.2.5>
    21f6:	push   0x1c
    21fb:	jmp    2020 <.plt>

0000000000002200 <unsanitise_value@plt>:
    2200:	jmp    QWORD PTR [rip+0x3d7a]        # 5f80 <unsanitise_value>
    2206:	push   0x1d
    220b:	jmp    2020 <.plt>

0000000000002210 <fflush@plt>:
    2210:	jmp    QWORD PTR [rip+0x3d72]        # 5f88 <fflush@GLIBC_2.2.5>
    2216:	push   0x1e
    221b:	jmp    2020 <.plt>

0000000000002220 <xs_rm@plt>:
    2220:	jmp    QWORD PTR [rip+0x3d6a]        # 5f90 <xs_rm>
    2226:	push   0x1f
    222b:	jmp    2020 <.plt>

0000000000002230 <__vsnprintf_chk@plt>:
    2230:	jmp    QWORD PTR [rip+0x3d62]        # 5f98 <__vsnprintf_chk@GLIBC_2.3.4>
    2236:	push   0x20
    223b:	jmp    2020 <.plt>

0000000000002240 <realloc@plt>:
    2240:	jmp    QWORD PTR [rip+0x3d5a]        # 5fa0 <realloc@GLIBC_2.2.5>
    2246:	push   0x21
    224b:	jmp    2020 <.plt>

0000000000002250 <__printf_chk@plt>:
    2250:	jmp    QWORD PTR [rip+0x3d52]        # 5fa8 <__printf_chk@GLIBC_2.3.4>
    2256:	push   0x22
    225b:	jmp    2020 <.plt>

0000000000002260 <xs_directory@plt>:
    2260:	jmp    QWORD PTR [rip+0x3d4a]        # 5fb0 <xs_directory>
    2266:	push   0x23
    226b:	jmp    2020 <.plt>

0000000000002270 <xs_read@plt>:
    2270:	jmp    QWORD PTR [rip+0x3d42]        # 5fb8 <xs_read>
    2276:	push   0x24
    227b:	jmp    2020 <.plt>

0000000000002280 <fwrite@plt>:
    2280:	jmp    QWORD PTR [rip+0x3d3a]        # 5fc0 <fwrite@GLIBC_2.2.5>
    2286:	push   0x25
    228b:	jmp    2020 <.plt>

0000000000002290 <xs_get_permissions@plt>:
    2290:	jmp    QWORD PTR [rip+0x3d32]        # 5fc8 <xs_get_permissions>
    2296:	push   0x26
    229b:	jmp    2020 <.plt>

00000000000022a0 <xs_write@plt>:
    22a0:	jmp    QWORD PTR [rip+0x3d2a]        # 5fd0 <xs_write>
    22a6:	push   0x27
    22ab:	jmp    2020 <.plt>

Disassembly of section .plt.got:

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	jmp    QWORD PTR [rip+0x3d42]        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    22b6:	xchg   ax,ax

Disassembly of section .text:

00000000000022c0 <main>:
    22c0:	push   rbp
    22c1:	mov    rbp,rsp
    22c4:	push   r15
    22c6:	push   r14
    22c8:	push   r13
    22ca:	push   r12
    22cc:	push   rbx
    22cd:	mov    ebx,edi
    22cf:	sub    rsp,0x88
    22d6:	mov    QWORD PTR [rbp-0x58],rsi
    22da:	mov    r15,QWORD PTR [rsi]
    22dd:	mov    esi,0x2f
    22e2:	mov    rdi,r15
    22e5:	mov    rcx,QWORD PTR fs:0x28
    22ee:	mov    QWORD PTR [rbp-0x38],rcx
    22f2:	xor    ecx,ecx
    22f4:	call   2110 <strrchr@plt>
    22f9:	mov    ecx,0x9
    22fe:	lea    rdi,[rip+0x1dc7]        # 40cc <_IO_stdin_used+0xcc>
    2305:	test   rax,rax
    2308:	lea    r13,[rax+0x1]
    230c:	cmove  r13,r15
    2310:	mov    rsi,r13
    2313:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2315:	seta   r12b
    2319:	sbb    r12b,0x0
    231d:	add    r13,0x9
    2321:	movsx  r12d,r12b
    2325:	test   r12d,r12d
    2328:	je     2341 <main+0x81>
    232a:	cmp    ebx,0x1
    232d:	jle    2f66 <main+0xca6>
    2333:	mov    rax,QWORD PTR [rbp-0x58]
    2337:	mov    r12d,0x1
    233d:	mov    r13,QWORD PTR [rax+0x8]
    2341:	mov    ecx,0x5
    2346:	lea    rdi,[rip+0x1d89]        # 40d6 <_IO_stdin_used+0xd6>
    234d:	mov    rsi,r13
    2350:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2352:	seta   al
    2355:	sbb    al,0x0
    2357:	test   al,al
    2359:	je     2e8c <main+0xbcc>
    235f:	mov    ecx,0x6
    2364:	lea    rdi,[rip+0x1d70]        # 40db <_IO_stdin_used+0xdb>
    236b:	mov    rsi,r13
    236e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2370:	seta   al
    2373:	sbb    al,0x0
    2375:	test   al,al
    2377:	je     2420 <main+0x160>
    237d:	lea    rsi,[rip+0x1d5d]        # 40e1 <_IO_stdin_used+0xe1>
    2384:	mov    rdi,r13
    2387:	call   2170 <strcmp@plt>
    238c:	test   eax,eax
    238e:	je     2e98 <main+0xbd8>
    2394:	lea    rsi,[rip+0x1d4d]        # 40e8 <_IO_stdin_used+0xe8>
    239b:	mov    rdi,r13
    239e:	call   2170 <strcmp@plt>
    23a3:	test   eax,eax
    23a5:	je     2eed <main+0xc2d>
    23ab:	lea    rsi,[rip+0x1cc9]        # 407b <_IO_stdin_used+0x7b>
    23b2:	mov    rdi,r13
    23b5:	call   2170 <strcmp@plt>
    23ba:	test   eax,eax
    23bc:	je     2ef9 <main+0xc39>
    23c2:	lea    rsi,[rip+0x1d24]        # 40ed <_IO_stdin_used+0xed>
    23c9:	mov    rdi,r13
    23cc:	call   2170 <strcmp@plt>
    23d1:	test   eax,eax
    23d3:	je     2ea4 <main+0xbe4>
    23d9:	lea    rsi,[rip+0x1d10]        # 40f0 <_IO_stdin_used+0xf0>
    23e0:	mov    rdi,r13
    23e3:	call   2170 <strcmp@plt>
    23e8:	test   eax,eax
    23ea:	je     2f1e <main+0xc5e>
    23f0:	lea    rsi,[rip+0x1cff]        # 40f6 <_IO_stdin_used+0xf6>
    23f7:	mov    rdi,r13
    23fa:	call   2170 <strcmp@plt>
    23ff:	mov    DWORD PTR [rbp-0x78],0x8
    2406:	test   eax,eax
    2408:	je     2427 <main+0x167>
    240a:	mov    rdx,r13
    240d:	lea    rsi,[rip+0x1ce8]        # 40fc <_IO_stdin_used+0xfc>
    2414:	mov    edi,0x1
    2419:	xor    eax,eax
    241b:	call   20f0 <errx@plt>
    2420:	mov    DWORD PTR [rbp-0x78],0x1
    2427:	mov    rcx,QWORD PTR [rbp-0x58]
    242b:	movsxd rax,r12d
    242e:	mov    DWORD PTR [rbp-0x6c],0x0
    2435:	sub    ebx,r12d
    2438:	mov    DWORD PTR [rbp-0x74],0xffffffff
    243f:	lea    r13,[rbp-0x40]
    2443:	mov    r15d,0x1
    2449:	lea    rax,[rcx+rax*8]
    244d:	mov    DWORD PTR [rbp-0x70],0x0
    2454:	mov    QWORD PTR [rbp-0x60],rax
    2458:	mov    eax,DWORD PTR [rbp-0x78]
    245b:	mov    DWORD PTR [rbp-0xa4],0x0
    2465:	mov    ecx,eax
    2467:	mov    DWORD PTR [rbp-0x64],0x0
    246e:	lea    r14d,[rax-0x3]
    2472:	and    ecx,0xfffffffd
    2475:	mov    DWORD PTR [rbp-0x68],0x0
    247c:	mov    DWORD PTR [rbp-0xa0],0x0
    2486:	mov    DWORD PTR [rbp-0x80],ecx
    2489:	mov    DWORD PTR [rbp-0x90],ebx
    248f:	lea    rbx,[rip+0x1f5e]        # 43f4 <_IO_stdin_used+0x3f4>
    2496:	nop    WORD PTR cs:[rax+rax*1+0x0]
    24a0:	mov    rsi,QWORD PTR [rbp-0x60]
    24a4:	mov    edi,DWORD PTR [rbp-0x90]
    24aa:	mov    r8,r13
    24ad:	lea    rcx,[rip+0x3b6c]        # 6020 <long_options.4960>
    24b4:	lea    rdx,[rip+0x1c52]        # 410d <_IO_stdin_used+0x10d>
    24bb:	mov    DWORD PTR [rbp-0x40],0x0
    24c2:	call   20e0 <getopt_long@plt>
    24c7:	cmp    eax,0xffffffff
    24ca:	je     25f8 <main+0x338>
    24d0:	sub    eax,0x52
    24d3:	cmp    eax,0x23
    24d6:	ja     24a0 <main+0x1e0>
    24d8:	movsxd rax,DWORD PTR [rbx+rax*4]
    24dc:	add    rax,rbx
    24df:	jmp    rax
    24e1:	nop    DWORD PTR [rax+0x0]
    24e8:	mov    rax,QWORD PTR [rbp-0x58]
    24ec:	mov    edi,DWORD PTR [rbp-0x78]
    24ef:	mov    esi,r12d
    24f2:	mov    rdx,QWORD PTR [rax]
    24f5:	call   3070 <usage>
    24fa:	cmp    DWORD PTR [rbp-0x78],0x4
    24fe:	jne    25b2 <main+0x2f2>
    2504:	mov    DWORD PTR [rip+0x3b06],0x3fffffff        # 6014 <max_width>
    250e:	mov    DWORD PTR [rip+0x3af8],0x0        # 6010 <desired_width>
    2518:	mov    DWORD PTR [rip+0x3c61],r15d        # 6180 <show_whole_path>
    251f:	jmp    24a0 <main+0x1e0>
    2524:	nop    DWORD PTR [rax+0x0]
    2528:	cmp    DWORD PTR [rbp-0x80],0x5
    252c:	jne    25b2 <main+0x2f2>
    2532:	mov    DWORD PTR [rbp-0x6c],0x1
    2539:	jmp    24a0 <main+0x1e0>
    253e:	xchg   ax,ax
    2540:	mov    edi,DWORD PTR [rbp-0x78]
    2543:	cmp    edi,0x1
    2546:	jne    25e0 <main+0x320>
    254c:	mov    DWORD PTR [rbp-0xa0],0x1
    2556:	jmp    24a0 <main+0x1e0>
    255b:	nop    DWORD PTR [rax+rax*1+0x0]
    2560:	mov    edi,DWORD PTR [rbp-0x78]
    2563:	cmp    edi,0x6
    2566:	jne    25e0 <main+0x320>
    2568:	mov    DWORD PTR [rbp-0x70],0x1
    256f:	jmp    24a0 <main+0x1e0>
    2574:	nop    DWORD PTR [rax+0x0]
    2578:	mov    edi,DWORD PTR [rbp-0x78]
    257b:	cmp    edi,0x1
    257e:	jne    25e0 <main+0x320>
    2580:	mov    DWORD PTR [rbp-0xa4],0x1
    258a:	jmp    24a0 <main+0x1e0>
    258f:	nop
    2590:	cmp    r14d,0x2
    2594:	ja     25b2 <main+0x2f2>
    2596:	mov    DWORD PTR [rbp-0x64],0x1
    259d:	jmp    24a0 <main+0x1e0>
    25a2:	nop    WORD PTR [rax+rax*1+0x0]
    25a8:	cmp    DWORD PTR [rbp-0x78],0x8
    25ac:	je     2e5d <main+0xb9d>
    25b2:	mov    rax,QWORD PTR [rbp-0x58]
    25b6:	mov    edi,DWORD PTR [rbp-0x78]
    25b9:	mov    esi,r12d
    25bc:	mov    rdx,QWORD PTR [rax]
    25bf:	call   3070 <usage>
    25c4:	jmp    24a0 <main+0x1e0>
    25c9:	nop    DWORD PTR [rax+0x0]
    25d0:	mov    DWORD PTR [rbp-0x68],0x1
    25d7:	jmp    24a0 <main+0x1e0>
    25dc:	nop    DWORD PTR [rax+0x0]
    25e0:	mov    rax,QWORD PTR [rbp-0x58]
    25e4:	mov    esi,r12d
    25e7:	mov    rdx,QWORD PTR [rax]
    25ea:	call   3070 <usage>
    25ef:	jmp    24a0 <main+0x1e0>
    25f4:	nop    DWORD PTR [rax+0x0]
    25f8:	mov    eax,DWORD PTR [rbp-0x78]
    25fb:	cmp    eax,0x4
    25fe:	je     2e07 <main+0xb47>
    2604:	mov    ebx,DWORD PTR [rip+0x3b5e]        # 6168 <optind@@GLIBC_2.2.5>
    260a:	cmp    eax,0x7
    260d:	jne    2d9a <main+0xada>
    2613:	mov    eax,DWORD PTR [rbp-0x90]
    2619:	mov    ecx,0x2
    261e:	sub    eax,ebx
    2620:	cdq    
    2621:	idiv   ecx
    2623:	sub    edx,0x1
    2626:	je     2f05 <main+0xc45>
    262c:	cmp    ebx,DWORD PTR [rbp-0x90]
    2632:	je     2ed0 <main+0xc10>
    2638:	mov    eax,DWORD PTR [rbp-0x90]
    263e:	sub    eax,ebx
    2640:	cmp    eax,0x2
    2643:	setg   al
    2646:	movzx  eax,al
    2649:	mov    DWORD PTR [rbp-0x9c],eax
    264f:	nop
    2650:	mov    edi,DWORD PTR [rbp-0x68]
    2653:	and    edi,0x1
    2656:	add    rdi,rdi
    2659:	call   21b0 <xs_open@plt>
    265e:	mov    r14,rax
    2661:	test   rax,rax
    2664:	je     2f53 <main+0xc93>
    266a:	xor    r15d,r15d
    266d:	lea    rax,[rbp-0x48]
    2671:	mov    QWORD PTR [rbp-0xb0],rax
    2678:	mov    DWORD PTR [rbp-0x58],r15d
    267c:	nop    DWORD PTR [rax+0x0]
    2680:	mov    ebx,DWORD PTR [rbp-0x9c]
    2686:	test   ebx,ebx
    2688:	je     269d <main+0x3dd>
    268a:	mov    rdi,r14
    268d:	call   20b0 <xs_transaction_start@plt>
    2692:	mov    DWORD PTR [rbp-0x58],eax
    2695:	test   eax,eax
    2697:	je     2f3d <main+0xc7d>
    269d:	cmp    DWORD PTR [rbp-0x78],0x4
    26a1:	mov    ebx,DWORD PTR [rip+0x3ac1]        # 6168 <optind@@GLIBC_2.2.5>
    26a7:	jne    26b5 <main+0x3f5>
    26a9:	cmp    ebx,DWORD PTR [rbp-0x90]
    26af:	je     2d10 <main+0xa50>
    26b5:	mov    eax,DWORD PTR [rbp-0x90]
    26bb:	mov    DWORD PTR [rbp-0x68],eax
    26be:	cmp    ebx,eax
    26c0:	jge    2727 <main+0x467>
    26c2:	nop    WORD PTR [rax+rax*1+0x0]
    26c8:	movsxd rax,ebx
    26cb:	mov    rsi,QWORD PTR [rbp-0x60]
    26cf:	mov    ecx,DWORD PTR [rbp-0x78]
    26d2:	shl    rax,0x3
    26d6:	lea    r12,[rsi+rax*1]
    26da:	cmp    ecx,0x8
    26dd:	ja     29e0 <main+0x720>
    26e3:	mov    edx,ecx
    26e5:	lea    rcx,[rip+0x1d98]        # 4484 <_IO_stdin_used+0x484>
    26ec:	movsxd rdx,DWORD PTR [rcx+rdx*4]
    26f0:	add    rdx,rcx
    26f3:	jmp    rdx
    26f5:	nop    DWORD PTR [rax]
    26f8:	mov    r8d,DWORD PTR [rbp-0x70]
    26fc:	mov    r13,QWORD PTR [r12]
    2700:	test   r8d,r8d
    2703:	jne    2ba0 <main+0x8e0>
    2709:	mov    esi,DWORD PTR [rbp-0x58]
    270c:	mov    rdx,r13
    270f:	mov    rdi,r14
    2712:	call   2220 <xs_rm@plt>
    2717:	test   al,al
    2719:	je     2cd8 <main+0xa18>
    271f:	add    ebx,0x1
    2722:	cmp    DWORD PTR [rbp-0x68],ebx
    2725:	jg     26c8 <main+0x408>
    2727:	xor    ebx,ebx
    2729:	mov    eax,DWORD PTR [rbp-0x9c]
    272f:	test   eax,eax
    2731:	je     2c82 <main+0x9c2>
    2737:	nop    WORD PTR [rax+rax*1+0x0]
    2740:	mov    esi,DWORD PTR [rbp-0x58]
    2743:	mov    edx,ebx
    2745:	mov    rdi,r14
    2748:	call   2150 <xs_transaction_end@plt>
    274d:	test   al,al
    274f:	jne    2c82 <main+0x9c2>
    2755:	test   ebx,ebx
    2757:	jne    2f2a <main+0xc6a>
    275d:	call   2060 <__errno_location@plt>
    2762:	cmp    DWORD PTR [rax],0xb
    2765:	jne    2f2a <main+0xc6a>
    276b:	mov    DWORD PTR [rip+0x3a2b],0x0        # 61a0 <output_pos>
    2775:	jmp    2680 <main+0x3c0>
    277a:	nop    WORD PTR [rax+rax*1+0x0]
    2780:	lea    r15,[rbp-0x44]
    2784:	mov    rdx,QWORD PTR [r12]
    2788:	mov    esi,DWORD PTR [rbp-0x58]
    278b:	mov    rdi,r14
    278e:	mov    rcx,r15
    2791:	call   2270 <xs_read@plt>
    2796:	mov    r13,rax
    2799:	test   rax,rax
    279c:	je     2d70 <main+0xab0>
    27a2:	mov    r11d,DWORD PTR [rbp-0x64]
    27a6:	test   r11d,r11d
    27a9:	jne    2b88 <main+0x8c8>
    27af:	mov    r10d,DWORD PTR [rbp-0x6c]
    27b3:	mov    r12d,DWORD PTR [rbp-0x44]
    27b7:	test   r10d,r10d
    27ba:	je     2b20 <main+0x860>
    27c0:	movsxd rdx,r12d
    27c3:	mov    rdi,rdx
    27c6:	mov    QWORD PTR [rbp-0x80],rdx
    27ca:	call   37c0 <expand_buffer>
    27cf:	movsxd rdi,DWORD PTR [rip+0x39ca]        # 61a0 <output_pos>
    27d6:	mov    rdx,QWORD PTR [rbp-0x80]
    27da:	mov    rsi,r13
    27dd:	mov    r15,rdi
    27e0:	add    rdi,QWORD PTR [rip+0x39c1]        # 61a8 <output_buf>
    27e7:	call   21d0 <memcpy@plt>
    27ec:	add    r12d,r15d
    27ef:	mov    DWORD PTR [rip+0x39aa],r12d        # 61a0 <output_pos>
    27f6:	mov    rdi,r13
    27f9:	add    ebx,0x1
    27fc:	call   2040 <free@plt>
    2801:	jmp    2722 <main+0x462>
    2806:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2810:	mov    ecx,DWORD PTR [rbp-0x64]
    2813:	mov    rsi,QWORD PTR [r12]
    2817:	xor    edx,edx
    2819:	mov    rdi,r14
    281c:	add    ebx,0x1
    281f:	call   31d0 <do_ls>
    2824:	jmp    2722 <main+0x462>
    2829:	nop    DWORD PTR [rax+0x0]
    2830:	lea    r15,[rbp-0x44]
    2834:	mov    rdx,QWORD PTR [r12]
    2838:	mov    esi,DWORD PTR [rbp-0x58]
    283b:	mov    rdi,r14
    283e:	mov    rcx,r15
    2841:	call   2260 <xs_directory@plt>
    2846:	mov    r13,rax
    2849:	test   rax,rax
    284c:	je     2d30 <main+0xa70>
    2852:	mov    ecx,DWORD PTR [rbp-0x44]
    2855:	xor    r15d,r15d
    2858:	test   ecx,ecx
    285a:	jne    2884 <main+0x5c4>
    285c:	jmp    27f6 <main+0x536>
    285e:	xchg   ax,ax
    2860:	mov    eax,r15d
    2863:	lea    rdi,[rip+0x189f]        # 4109 <_IO_stdin_used+0x109>
    286a:	add    r15d,0x1
    286e:	mov    rsi,QWORD PTR [r13+rax*8+0x0]
    2873:	xor    eax,eax
    2875:	call   3830 <output>
    287a:	cmp    r15d,DWORD PTR [rbp-0x44]
    287e:	jae    27f6 <main+0x536>
    2884:	mov    edx,DWORD PTR [rbp-0x64]
    2887:	test   edx,edx
    2889:	je     2860 <main+0x5a0>
    288b:	mov    rsi,QWORD PTR [r12]
    288f:	lea    rdi,[rip+0x1908]        # 419e <_IO_stdin_used+0x19e>
    2896:	xor    eax,eax
    2898:	call   3830 <output>
    289d:	jmp    2860 <main+0x5a0>
    289f:	nop
    28a0:	mov    rdx,QWORD PTR [r12]
    28a4:	mov    esi,DWORD PTR [rbp-0x58]
    28a7:	xor    ecx,ecx
    28a9:	mov    rdi,r14
    28ac:	call   2270 <xs_read@plt>
    28b1:	test   rax,rax
    28b4:	je     2d90 <main+0xad0>
    28ba:	mov    rdi,rax
    28bd:	call   2040 <free@plt>
    28c2:	jmp    271f <main+0x45f>
    28c7:	nop    WORD PTR [rax+rax*1+0x0]
    28d0:	mov    rsi,QWORD PTR [rbp-0x60]
    28d4:	mov    r13,QWORD PTR [rsi+rax*1+0x8]
    28d9:	mov    rdi,r13
    28dc:	call   20c0 <strlen@plt>
    28e1:	mov    r9d,DWORD PTR [rbp-0x6c]
    28e5:	mov    r8d,eax
    28e8:	test   r9d,r9d
    28eb:	je     2b50 <main+0x890>
    28f1:	mov    DWORD PTR [rbp-0x44],eax
    28f4:	mov    rdx,QWORD PTR [r12]
    28f8:	mov    esi,DWORD PTR [rbp-0x58]
    28fb:	mov    rcx,r13
    28fe:	mov    rdi,r14
    2901:	call   22a0 <xs_write@plt>
    2906:	test   al,al
    2908:	je     2d50 <main+0xa90>
    290e:	add    ebx,0x2
    2911:	jmp    2722 <main+0x462>
    2916:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2920:	mov    r13,QWORD PTR [r12]
    2924:	lea    r12d,[rbx+0x1]
    2928:	movsxd r12,r12d
    292b:	test   r13,r13
    292e:	je     295b <main+0x69b>
    2930:	mov    rdx,r13
    2933:	mov    rsi,r13
    2936:	mov    rdi,r14
    2939:	call   2070 <xs_watch@plt>
    293e:	test   al,al
    2940:	je     2e78 <main+0xbb8>
    2946:	mov    rax,QWORD PTR [rbp-0x60]
    294a:	mov    ebx,r12d
    294d:	add    r12,0x1
    2951:	mov    r13,QWORD PTR [rax+r12*8-0x8]
    2956:	test   r13,r13
    2959:	jne    2930 <main+0x670>
    295b:	mov    eax,DWORD PTR [rbp-0x74]
    295e:	cmp    eax,0xffffffff
    2961:	sete   r13b
    2965:	test   eax,eax
    2967:	jg     2972 <main+0x6b2>
    2969:	test   r13b,r13b
    296c:	je     2722 <main+0x462>
    2972:	lea    r15,[rbp-0x44]
    2976:	xor    r12d,r12d
    2979:	mov    rax,r15
    297c:	mov    r15d,r13d
    297f:	mov    r13d,r12d
    2982:	mov    r12d,ebx
    2985:	mov    rbx,rax
    2988:	nop    DWORD PTR [rax+rax*1+0x0]
    2990:	mov    rsi,rbx
    2993:	mov    rdi,r14
    2996:	call   2050 <xs_read_watch@plt>
    299b:	test   rax,rax
    299e:	je     29c4 <main+0x704>
    29a0:	mov    rdi,QWORD PTR [rax]
    29a3:	mov    QWORD PTR [rbp-0x80],rax
    29a7:	call   2090 <puts@plt>
    29ac:	mov    rdi,QWORD PTR [rip+0x37ad]        # 6160 <stdout@@GLIBC_2.2.5>
    29b3:	call   2210 <fflush@plt>
    29b8:	mov    rdx,QWORD PTR [rbp-0x80]
    29bc:	mov    rdi,rdx
    29bf:	call   2040 <free@plt>
    29c4:	add    r13d,0x1
    29c8:	cmp    DWORD PTR [rbp-0x74],r13d
    29cc:	jg     2990 <main+0x6d0>
    29ce:	test   r15b,r15b
    29d1:	jne    2990 <main+0x6d0>
    29d3:	mov    ebx,r12d
    29d6:	jmp    2722 <main+0x462>
    29db:	nop    DWORD PTR [rax+rax*1+0x0]
    29e0:	mov    rsi,QWORD PTR [r12]
    29e4:	mov    r12d,DWORD PTR [rbp-0x68]
    29e8:	add    ebx,0x1
    29eb:	mov    QWORD PTR [rbp-0x80],rsp
    29ef:	mov    rcx,QWORD PTR [rbp-0x60]
    29f3:	sub    r12d,ebx
    29f6:	mov    QWORD PTR [rbp-0x88],rsi
    29fd:	movsxd rdx,r12d
    2a00:	lea    r8,[rcx+rax*1+0x8]
    2a05:	lea    rdx,[rdx*8+0xf]
    2a0d:	mov    rdi,QWORD PTR [r8]
    2a10:	and    rdx,0xfffffffffffffff0
    2a14:	sub    rsp,rdx
    2a17:	mov    r15,rsp
    2a1a:	test   rdi,rdi
    2a1d:	je     2aec <main+0x82c>
    2a23:	lea    r9,[rcx+rax*1+0x10]
    2a28:	lea    r13,[r15+0x4]
    2a2c:	mov    DWORD PTR [rbp-0x8c],r12d
    2a33:	mov    r12,r8
    2a36:	mov    QWORD PTR [rbp-0x98],r15
    2a3d:	mov    r15,r14
    2a40:	mov    r14d,ebx
    2a43:	mov    rbx,r9
    2a46:	jmp    2a70 <main+0x7b0>
    2a48:	nop    DWORD PTR [rax+rax*1+0x0]
    2a50:	mov    DWORD PTR [r13+0x0],0x1
    2a58:	mov    rdi,QWORD PTR [rbx]
    2a5b:	add    r14d,0x1
    2a5f:	add    r12,0x8
    2a63:	add    rbx,0x8
    2a67:	add    r13,0x8
    2a6b:	test   rdi,rdi
    2a6e:	je     2ad8 <main+0x818>
    2a70:	add    rdi,0x1
    2a74:	mov    edx,0xa
    2a79:	xor    esi,esi
    2a7b:	call   21a0 <strtol@plt>
    2a80:	mov    DWORD PTR [r13-0x4],eax
    2a84:	mov    rax,QWORD PTR [r12]
    2a88:	movzx  eax,BYTE PTR [rax]
    2a8b:	cmp    al,0x6e
    2a8d:	je     2ac8 <main+0x808>
    2a8f:	jle    2ab0 <main+0x7f0>
    2a91:	cmp    al,0x72
    2a93:	je     2a50 <main+0x790>
    2a95:	cmp    al,0x77
    2a97:	jne    2e47 <main+0xb87>
    2a9d:	mov    DWORD PTR [r13+0x0],0x2
    2aa5:	jmp    2a58 <main+0x798>
    2aa7:	nop    WORD PTR [rax+rax*1+0x0]
    2ab0:	cmp    al,0x62
    2ab2:	jne    2e47 <main+0xb87>
    2ab8:	mov    DWORD PTR [r13+0x0],0x3
    2ac0:	jmp    2a58 <main+0x798>
    2ac2:	nop    WORD PTR [rax+rax*1+0x0]
    2ac8:	mov    DWORD PTR [r13+0x0],0x0
    2ad0:	jmp    2a58 <main+0x798>
    2ad2:	nop    WORD PTR [rax+rax*1+0x0]
    2ad8:	mov    ebx,r14d
    2adb:	mov    r12d,DWORD PTR [rbp-0x8c]
    2ae2:	mov    r14,r15
    2ae5:	mov    r15,QWORD PTR [rbp-0x98]
    2aec:	mov    eax,DWORD PTR [rbp-0x58]
    2aef:	sub    rsp,0x8
    2af3:	mov    r9,r14
    2af6:	mov    edx,r12d
    2af9:	mov    rsi,r15
    2afc:	push   rax
    2afd:	mov    r8d,DWORD PTR [rbp-0xa4]
    2b04:	mov    ecx,DWORD PTR [rbp-0xa0]
    2b0a:	mov    rdi,QWORD PTR [rbp-0x88]
    2b11:	call   3600 <do_chmod>
    2b16:	mov    rsp,QWORD PTR [rbp-0x80]
    2b1a:	jmp    2722 <main+0x462>
    2b1f:	nop
    2b20:	mov    rsi,r13
    2b23:	mov    edx,r12d
    2b26:	lea    rdi,[rip+0x3663]        # 6190 <ebuf>
    2b2d:	call   2160 <sanitise_value@plt>
    2b32:	lea    rdi,[rip+0x15d0]        # 4109 <_IO_stdin_used+0x109>
    2b39:	mov    rsi,rax
    2b3c:	xor    eax,eax
    2b3e:	call   3830 <output>
    2b43:	jmp    27f6 <main+0x536>
    2b48:	nop    DWORD PTR [rax+rax*1+0x0]
    2b50:	lea    esi,[rax+0x1]
    2b53:	lea    rdi,[rip+0x3636]        # 6190 <ebuf>
    2b5a:	call   2190 <expanding_buffer_ensure@plt>
    2b5f:	lea    r15,[rbp-0x44]
    2b63:	mov    rdi,QWORD PTR [rip+0x3626]        # 6190 <ebuf>
    2b6a:	mov    rdx,r13
    2b6d:	mov    rsi,r15
    2b70:	call   2200 <unsanitise_value@plt>
    2b75:	mov    r13,QWORD PTR [rip+0x3614]        # 6190 <ebuf>
    2b7c:	mov    r8d,DWORD PTR [rbp-0x44]
    2b80:	jmp    28f4 <main+0x634>
    2b85:	nop    DWORD PTR [rax]
    2b88:	mov    rsi,QWORD PTR [r12]
    2b8c:	lea    rdi,[rip+0x15be]        # 4151 <_IO_stdin_used+0x151>
    2b93:	xor    eax,eax
    2b95:	call   3830 <output>
    2b9a:	jmp    27af <main+0x4ef>
    2b9f:	nop
    2ba0:	mov    rdi,r13
    2ba3:	call   20c0 <strlen@plt>
    2ba8:	lea    r15,[rax+0x1]
    2bac:	mov    rdi,r15
    2baf:	call   21f0 <malloc@plt>
    2bb4:	mov    rdx,r15
    2bb7:	mov    rsi,r13
    2bba:	lea    r15,[rbp-0x44]
    2bbe:	mov    rdi,rax
    2bc1:	mov    r12,rax
    2bc4:	call   21d0 <memcpy@plt>
    2bc9:	jmp    2c4a <main+0x98a>
    2bcb:	nop    DWORD PTR [rax+rax*1+0x0]
    2bd0:	mov    esi,0x2f
    2bd5:	mov    rdi,r12
    2bd8:	call   2110 <strrchr@plt>
    2bdd:	test   rax,rax
    2be0:	je     2d00 <main+0xa40>
    2be6:	mov    BYTE PTR [rax],0x0
    2be9:	mov    rcx,QWORD PTR [rbp-0xb0]
    2bf0:	mov    rdx,r12
    2bf3:	mov    rdi,r14
    2bf6:	mov    esi,DWORD PTR [rbp-0x58]
    2bf9:	call   2270 <xs_read@plt>
    2bfe:	mov    r13,rax
    2c01:	test   rax,rax
    2c04:	je     2cf8 <main+0xa38>
    2c0a:	mov    edi,DWORD PTR [rbp-0x48]
    2c0d:	test   edi,edi
    2c0f:	jne    2cf8 <main+0xa38>
    2c15:	mov    esi,DWORD PTR [rbp-0x58]
    2c18:	mov    rcx,r15
    2c1b:	mov    rdx,r12
    2c1e:	mov    rdi,r14
    2c21:	call   2260 <xs_directory@plt>
    2c26:	test   rax,rax
    2c29:	je     2cf8 <main+0xa38>
    2c2f:	mov    rdi,rax
    2c32:	call   2040 <free@plt>
    2c37:	mov    esi,DWORD PTR [rbp-0x44]
    2c3a:	test   esi,esi
    2c3c:	jne    2cf8 <main+0xa38>
    2c42:	mov    rdi,r13
    2c45:	call   2040 <free@plt>
    2c4a:	mov    esi,DWORD PTR [rbp-0x58]
    2c4d:	mov    rdx,r12
    2c50:	mov    rdi,r14
    2c53:	call   2220 <xs_rm@plt>
    2c58:	test   al,al
    2c5a:	jne    2bd0 <main+0x910>
    2c60:	xor    eax,eax
    2c62:	mov    rsi,r12
    2c65:	lea    rdi,[rip+0x1502]        # 416e <_IO_stdin_used+0x16e>
    2c6c:	call   2100 <warnx@plt>
    2c71:	mov    eax,DWORD PTR [rbp-0x9c]
    2c77:	mov    ebx,DWORD PTR [rbp-0x70]
    2c7a:	test   eax,eax
    2c7c:	jne    2740 <main+0x480>
    2c82:	mov    eax,DWORD PTR [rip+0x3518]        # 61a0 <output_pos>
    2c88:	test   eax,eax
    2c8a:	jne    2eb0 <main+0xbf0>
    2c90:	mov    rdi,QWORD PTR [rip+0x3511]        # 61a8 <output_buf>
    2c97:	call   2040 <free@plt>
    2c9c:	mov    rdi,QWORD PTR [rip+0x34ed]        # 6190 <ebuf>
    2ca3:	call   2040 <free@plt>
    2ca8:	mov    rdi,r14
    2cab:	call   20a0 <xs_close@plt>
    2cb0:	mov    eax,ebx
    2cb2:	mov    rcx,QWORD PTR [rbp-0x38]
    2cb6:	xor    rcx,QWORD PTR fs:0x28
    2cbf:	jne    2f4e <main+0xc8e>
    2cc5:	lea    rsp,[rbp-0x28]
    2cc9:	pop    rbx
    2cca:	pop    r12
    2ccc:	pop    r13
    2cce:	pop    r14
    2cd0:	pop    r15
    2cd2:	pop    rbp
    2cd3:	ret    
    2cd4:	nop    DWORD PTR [rax+0x0]
    2cd8:	mov    rsi,r13
    2cdb:	lea    rdi,[rip+0x148c]        # 416e <_IO_stdin_used+0x16e>
    2ce2:	mov    ebx,0x1
    2ce7:	call   2100 <warnx@plt>
    2cec:	jmp    2729 <main+0x469>
    2cf1:	nop    DWORD PTR [rax+0x0]
    2cf8:	mov    rdi,r13
    2cfb:	call   2040 <free@plt>
    2d00:	mov    rdi,r12
    2d03:	call   2040 <free@plt>
    2d08:	jmp    271f <main+0x45f>
    2d0d:	nop    DWORD PTR [rax]
    2d10:	mov    rax,QWORD PTR [rbp-0x60]
    2d14:	lea    rcx,[rip+0x1485]        # 41a0 <_IO_stdin_used+0x1a0>
    2d1b:	mov    DWORD PTR [rbp-0x68],0x1
    2d22:	xor    ebx,ebx
    2d24:	mov    QWORD PTR [rax],rcx
    2d27:	jmp    26c8 <main+0x408>
    2d2c:	nop    DWORD PTR [rax+0x0]
    2d30:	mov    rsi,QWORD PTR [r12]
    2d34:	lea    rdi,[rip+0x144c]        # 4187 <_IO_stdin_used+0x187>
    2d3b:	xor    eax,eax
    2d3d:	mov    ebx,0x1
    2d42:	call   2100 <warnx@plt>
    2d47:	jmp    2729 <main+0x469>
    2d4c:	nop    DWORD PTR [rax+0x0]
    2d50:	mov    rsi,QWORD PTR [r12]
    2d54:	lea    rdi,[rip+0x13fb]        # 4156 <_IO_stdin_used+0x156>
    2d5b:	mov    ebx,0x1
    2d60:	call   2100 <warnx@plt>
    2d65:	jmp    2729 <main+0x469>
    2d6a:	nop    WORD PTR [rax+rax*1+0x0]
    2d70:	mov    rsi,QWORD PTR [r12]
    2d74:	lea    rdi,[rip+0x13c0]        # 413b <_IO_stdin_used+0x13b>
    2d7b:	xor    eax,eax
    2d7d:	mov    ebx,0x1
    2d82:	call   2100 <warnx@plt>
    2d87:	jmp    2729 <main+0x469>
    2d8c:	nop    DWORD PTR [rax+0x0]
    2d90:	mov    ebx,0x1
    2d95:	jmp    2729 <main+0x469>
    2d9a:	cmp    ebx,DWORD PTR [rbp-0x90]
    2da0:	je     2ed0 <main+0xc10>
    2da6:	mov    eax,DWORD PTR [rbp-0x78]
    2da9:	cmp    eax,0x5
    2dac:	jne    2dca <main+0xb0a>
    2dae:	mov    eax,DWORD PTR [rbp-0x90]
    2db4:	sub    eax,ebx
    2db6:	sub    eax,0x1
    2db9:	setg   al
    2dbc:	movzx  eax,al
    2dbf:	mov    DWORD PTR [rbp-0x9c],eax
    2dc5:	jmp    2650 <main+0x390>
    2dca:	ja     2de7 <main+0xb27>
    2dcc:	cmp    eax,0x4
    2dcf:	je     2e07 <main+0xb47>
    2dd1:	mov    DWORD PTR [rbp-0x9c],0x1
    2ddb:	cmp    DWORD PTR [rbp-0x78],0x4
    2ddf:	jne    2650 <main+0x390>
    2de5:	jmp    2e11 <main+0xb51>
    2de7:	mov    eax,DWORD PTR [rbp-0x78]
    2dea:	cmp    eax,0x7
    2ded:	je     2638 <main+0x378>
    2df3:	cmp    eax,0x8
    2df6:	jne    2dd1 <main+0xb11>
    2df8:	mov    DWORD PTR [rbp-0x9c],0x0
    2e02:	jmp    2650 <main+0x390>
    2e07:	mov    DWORD PTR [rbp-0x9c],0x0
    2e11:	xor    eax,eax
    2e13:	mov    rdx,r13
    2e16:	mov    esi,0x5413
    2e1b:	mov    edi,0x1
    2e20:	mov    QWORD PTR [rbp-0x40],0x0
    2e28:	call   2140 <ioctl@plt>
    2e2d:	test   eax,eax
    2e2f:	jne    2650 <main+0x390>
    2e35:	movzx  eax,WORD PTR [rbp-0x3e]
    2e39:	sub    eax,0x2
    2e3c:	mov    DWORD PTR [rip+0x31d2],eax        # 6014 <max_width>
    2e42:	jmp    2650 <main+0x390>
    2e47:	movsx  edx,al
    2e4a:	lea    rsi,[rip+0x1557]        # 43a8 <_IO_stdin_used+0x3a8>
    2e51:	mov    edi,0x1
    2e56:	xor    eax,eax
    2e58:	call   20f0 <errx@plt>
    2e5d:	mov    rdi,QWORD PTR [rip+0x330c]        # 6170 <optarg@@GLIBC_2.2.5>
    2e64:	mov    edx,0xa
    2e69:	xor    esi,esi
    2e6b:	call   21a0 <strtol@plt>
    2e70:	mov    DWORD PTR [rbp-0x74],eax
    2e73:	jmp    24a0 <main+0x1e0>
    2e78:	mov    rdx,r13
    2e7b:	lea    rsi,[rip+0x1320]        # 41a2 <_IO_stdin_used+0x1a2>
    2e82:	mov    edi,0x1
    2e87:	call   20f0 <errx@plt>
    2e8c:	mov    DWORD PTR [rbp-0x78],0x5
    2e93:	jmp    2427 <main+0x167>
    2e98:	mov    DWORD PTR [rbp-0x78],0x2
    2e9f:	jmp    2427 <main+0x167>
    2ea4:	mov    DWORD PTR [rbp-0x78],0x6
    2eab:	jmp    2427 <main+0x167>
    2eb0:	mov    rcx,QWORD PTR [rip+0x32a9]        # 6160 <stdout@@GLIBC_2.2.5>
    2eb7:	mov    rdi,QWORD PTR [rip+0x32ea]        # 61a8 <output_buf>
    2ebe:	movsxd rdx,eax
    2ec1:	mov    esi,0x1
    2ec6:	call   2280 <fwrite@plt>
    2ecb:	jmp    2c90 <main+0x9d0>
    2ed0:	mov    rax,QWORD PTR [rbp-0x58]
    2ed4:	mov    edi,DWORD PTR [rbp-0x78]
    2ed7:	mov    esi,r12d
    2eda:	mov    rdx,QWORD PTR [rax]
    2edd:	call   3070 <usage>
    2ee2:	mov    ebx,DWORD PTR [rbp-0x90]
    2ee8:	jmp    2da6 <main+0xae6>
    2eed:	mov    DWORD PTR [rbp-0x78],0x3
    2ef4:	jmp    2427 <main+0x167>
    2ef9:	mov    DWORD PTR [rbp-0x78],0x4
    2f00:	jmp    2427 <main+0x167>
    2f05:	mov    rax,QWORD PTR [rbp-0x58]
    2f09:	mov    esi,r12d
    2f0c:	mov    edi,0x7
    2f11:	mov    rdx,QWORD PTR [rax]
    2f14:	call   3070 <usage>
    2f19:	jmp    262c <main+0x36c>
    2f1e:	mov    DWORD PTR [rbp-0x78],0x7
    2f25:	jmp    2427 <main+0x167>
    2f2a:	lea    rsi,[rip+0x128c]        # 41bd <_IO_stdin_used+0x1bd>
    2f31:	mov    edi,0x1
    2f36:	xor    eax,eax
    2f38:	call   20f0 <errx@plt>
    2f3d:	lea    rsi,[rip+0x11dc]        # 4120 <_IO_stdin_used+0x120>
    2f44:	mov    edi,0x1
    2f49:	call   20f0 <errx@plt>
    2f4e:	call   20d0 <__stack_chk_fail@plt>
    2f53:	lea    rsi,[rip+0x11be]        # 4118 <_IO_stdin_used+0x118>
    2f5a:	mov    edi,0x1
    2f5f:	xor    eax,eax
    2f61:	call   21e0 <err@plt>
    2f66:	mov    rdx,r15
    2f69:	lea    rsi,[rip+0x10c5]        # 4035 <_IO_stdin_used+0x35>
    2f70:	mov    edi,0x1
    2f75:	xor    eax,eax
    2f77:	call   20f0 <errx@plt>
    2f7c:	nop    DWORD PTR [rax+0x0]

0000000000002f80 <_start>:
    2f80:	xor    ebp,ebp
    2f82:	mov    r9,rdx
    2f85:	pop    rsi
    2f86:	mov    rdx,rsp
    2f89:	and    rsp,0xfffffffffffffff0
    2f8d:	push   rax
    2f8e:	push   rsp
    2f8f:	lea    r8,[rip+0xa6a]        # 3a00 <__libc_csu_fini>
    2f96:	lea    rcx,[rip+0xa03]        # 39a0 <__libc_csu_init>
    2f9d:	lea    rdi,[rip+0xfffffffffffff31c]        # 22c0 <main>
    2fa4:	call   QWORD PTR [rip+0x3036]        # 5fe0 <__libc_start_main@GLIBC_2.2.5>
    2faa:	hlt    
    2fab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002fb0 <deregister_tm_clones>:
    2fb0:	lea    rdi,[rip+0x31a9]        # 6160 <stdout@@GLIBC_2.2.5>
    2fb7:	lea    rax,[rip+0x31a2]        # 6160 <stdout@@GLIBC_2.2.5>
    2fbe:	cmp    rax,rdi
    2fc1:	je     2fd8 <deregister_tm_clones+0x28>
    2fc3:	mov    rax,QWORD PTR [rip+0x300e]        # 5fd8 <_ITM_deregisterTMCloneTable>
    2fca:	test   rax,rax
    2fcd:	je     2fd8 <deregister_tm_clones+0x28>
    2fcf:	jmp    rax
    2fd1:	nop    DWORD PTR [rax+0x0]
    2fd8:	ret    
    2fd9:	nop    DWORD PTR [rax+0x0]

0000000000002fe0 <register_tm_clones>:
    2fe0:	lea    rdi,[rip+0x3179]        # 6160 <stdout@@GLIBC_2.2.5>
    2fe7:	lea    rsi,[rip+0x3172]        # 6160 <stdout@@GLIBC_2.2.5>
    2fee:	sub    rsi,rdi
    2ff1:	sar    rsi,0x3
    2ff5:	mov    rax,rsi
    2ff8:	shr    rax,0x3f
    2ffc:	add    rsi,rax
    2fff:	sar    rsi,1
    3002:	je     3018 <register_tm_clones+0x38>
    3004:	mov    rax,QWORD PTR [rip+0x2fe5]        # 5ff0 <_ITM_registerTMCloneTable>
    300b:	test   rax,rax
    300e:	je     3018 <register_tm_clones+0x38>
    3010:	jmp    rax
    3012:	nop    WORD PTR [rax+rax*1+0x0]
    3018:	ret    
    3019:	nop    DWORD PTR [rax+0x0]

0000000000003020 <__do_global_dtors_aux>:
    3020:	cmp    BYTE PTR [rip+0x3151],0x0        # 6178 <completed.7930>
    3027:	jne    3058 <__do_global_dtors_aux+0x38>
    3029:	push   rbp
    302a:	cmp    QWORD PTR [rip+0x2fc6],0x0        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    3032:	mov    rbp,rsp
    3035:	je     3043 <__do_global_dtors_aux+0x23>
    3037:	mov    rdi,QWORD PTR [rip+0x2fca]        # 6008 <__dso_handle>
    303e:	call   22b0 <__cxa_finalize@plt>
    3043:	call   2fb0 <deregister_tm_clones>
    3048:	mov    BYTE PTR [rip+0x3129],0x1        # 6178 <completed.7930>
    304f:	pop    rbp
    3050:	ret    
    3051:	nop    DWORD PTR [rax+0x0]
    3058:	ret    
    3059:	nop    DWORD PTR [rax+0x0]

0000000000003060 <frame_dummy>:
    3060:	jmp    2fe0 <register_tm_clones>
    3065:	nop    WORD PTR cs:[rax+rax*1+0x0]
    306f:	nop

0000000000003070 <usage>:
    3070:	cmp    edi,0x8
    3073:	jbe    3076 <usage+0x6>
    3075:	ret    
    3076:	lea    rcx,[rip+0x1353]        # 43d0 <_IO_stdin_used+0x3d0>
    307d:	mov    eax,edi
    307f:	sub    rsp,0x8
    3083:	movsxd rax,DWORD PTR [rcx+rax*4]
    3087:	add    rax,rcx
    308a:	jmp    rax
    308c:	test   esi,esi
    308e:	lea    rax,[rip+0x1077]        # 410c <_IO_stdin_used+0x10c>
    3095:	lea    rcx,[rip+0xf6e]        # 400a <_IO_stdin_used+0xa>
    309c:	mov    edi,0x1
    30a1:	cmove  rcx,rax
    30a5:	lea    rsi,[rip+0x1194]        # 4240 <_IO_stdin_used+0x240>
    30ac:	xor    eax,eax
    30ae:	call   20f0 <errx@plt>
    30b3:	test   esi,esi
    30b5:	lea    rax,[rip+0x1050]        # 410c <_IO_stdin_used+0x10c>
    30bc:	lea    rcx,[rip+0xf4e]        # 4011 <_IO_stdin_used+0x11>
    30c3:	mov    edi,0x1
    30c8:	cmove  rcx,rax
    30cc:	lea    rsi,[rip+0x119d]        # 4270 <_IO_stdin_used+0x270>
    30d3:	xor    eax,eax
    30d5:	call   20f0 <errx@plt>
    30da:	test   esi,esi
    30dc:	lea    rax,[rip+0x1029]        # 410c <_IO_stdin_used+0x10c>
    30e3:	lea    rcx,[rip+0xf1a]        # 4004 <_IO_stdin_used+0x4>
    30ea:	mov    edi,0x1
    30ef:	cmove  rcx,rax
    30f3:	lea    rsi,[rip+0x1116]        # 4210 <_IO_stdin_used+0x210>
    30fa:	xor    eax,eax
    30fc:	call   20f0 <errx@plt>
    3101:	test   esi,esi
    3103:	lea    rax,[rip+0x1002]        # 410c <_IO_stdin_used+0x10c>
    310a:	lea    rcx,[rip+0xf12]        # 4023 <_IO_stdin_used+0x23>
    3111:	mov    edi,0x1
    3116:	cmove  rcx,rax
    311a:	lea    rsi,[rip+0x119f]        # 42c0 <_IO_stdin_used+0x2c0>
    3121:	xor    eax,eax
    3123:	call   20f0 <errx@plt>
    3128:	test   esi,esi
    312a:	lea    rcx,[rip+0xfdb]        # 410c <_IO_stdin_used+0x10c>
    3131:	lea    rax,[rip+0xee5]        # 401d <_IO_stdin_used+0x1d>
    3138:	cmovne rcx,rax
    313c:	lea    rsi,[rip+0x1155]        # 4298 <_IO_stdin_used+0x298>
    3143:	mov    edi,0x1
    3148:	xor    eax,eax
    314a:	call   20f0 <errx@plt>
    314f:	test   esi,esi
    3151:	lea    rcx,[rip+0xfb4]        # 410c <_IO_stdin_used+0x10c>
    3158:	lea    rax,[rip+0xeb6]        # 4015 <_IO_stdin_used+0x15>
    315f:	cmovne rcx,rax
    3163:	jmp    313c <usage+0xcc>
    3165:	test   esi,esi
    3167:	lea    rax,[rip+0xf9e]        # 410c <_IO_stdin_used+0x10c>
    316e:	lea    rcx,[rip+0xeb2]        # 4027 <_IO_stdin_used+0x27>
    3175:	mov    edi,0x1
    317a:	cmove  rcx,rax
    317e:	lea    rsi,[rip+0x1163]        # 42e8 <_IO_stdin_used+0x2e8>
    3185:	xor    eax,eax
    3187:	call   20f0 <errx@plt>
    318c:	lea    rsi,[rip+0xea2]        # 4035 <_IO_stdin_used+0x35>
    3193:	mov    edi,0x1
    3198:	xor    eax,eax
    319a:	call   20f0 <errx@plt>
    319f:	test   esi,esi
    31a1:	lea    rax,[rip+0xf64]        # 410c <_IO_stdin_used+0x10c>
    31a8:	lea    rcx,[rip+0xe7f]        # 402e <_IO_stdin_used+0x2e>
    31af:	mov    edi,0x1
    31b4:	cmove  rcx,rax
    31b8:	lea    rsi,[rip+0xe92]        # 4051 <_IO_stdin_used+0x51>
    31bf:	xor    eax,eax
    31c1:	call   20f0 <errx@plt>
    31c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000000031d0 <do_ls>:
    31d0:	push   r15
    31d2:	mov    r15,rsi
    31d5:	push   r14
    31d7:	push   r13
    31d9:	push   r12
    31db:	push   rbp
    31dc:	mov    ebp,edx
    31de:	push   rbx
    31df:	sub    rsp,0x58
    31e3:	mov    QWORD PTR [rsp],rdi
    31e7:	mov    edi,0x1000
    31ec:	mov    DWORD PTR [rsp+0x10],ecx
    31f0:	mov    rax,QWORD PTR fs:0x28
    31f9:	mov    QWORD PTR [rsp+0x48],rax
    31fe:	xor    eax,eax
    3200:	call   21f0 <malloc@plt>
    3205:	test   rax,rax
    3208:	je     35c4 <do_ls+0x3f4>
    320e:	mov    rdi,QWORD PTR [rsp]
    3212:	lea    rcx,[rsp+0x30]
    3217:	mov    rdx,r15
    321a:	xor    esi,esi
    321c:	mov    r13,rax
    321f:	call   2260 <xs_directory@plt>
    3224:	mov    QWORD PTR [rsp+0x8],rax
    3229:	test   rax,rax
    322c:	je     35dc <do_ls+0x40c>
    3232:	mov    r8d,DWORD PTR [rsp+0x30]
    3237:	lea    eax,[rbp+0x1]
    323a:	xor    ebx,ebx
    323c:	mov    DWORD PTR [rsp+0x14],eax
    3240:	test   r8d,r8d
    3243:	je     333e <do_ls+0x16e>
    3249:	lea    rax,[rsp+0x38]
    324e:	mov    QWORD PTR [rsp+0x18],rax
    3253:	lea    rax,[rsp+0x3c]
    3258:	mov    QWORD PTR [rsp+0x20],rax
    325d:	mov    rax,QWORD PTR [rsp+0x8]
    3262:	mov    rdi,r15
    3265:	mov    r12,QWORD PTR [rax+rbx*8]
    3269:	call   20c0 <strlen@plt>
    326e:	mov    esi,0x1000
    3273:	mov    rdi,r13
    3276:	mov    r9,r15
    3279:	cmp    BYTE PTR [r15+rax*1-0x1],0x2f
    327f:	lea    rcx,[rip+0xe86]        # 410c <_IO_stdin_used+0x10c>
    3286:	push   r12
    3288:	lea    rax,[rip+0xf11]        # 41a0 <_IO_stdin_used+0x1a0>
    328f:	cmove  rax,rcx
    3293:	lea    r8,[rip+0xdf6]        # 4090 <_IO_stdin_used+0x90>
    329a:	mov    ecx,0x1000
    329f:	mov    edx,0x1
    32a4:	push   rax
    32a5:	xor    eax,eax
    32a7:	call   2030 <__snprintf_chk@plt>
    32ac:	mov    r14d,DWORD PTR [rip+0x2ecd]        # 6180 <show_whole_path>
    32b3:	pop    rsi
    32b4:	mov    r12d,eax
    32b7:	pop    rdi
    32b8:	test   r14d,r14d
    32bb:	je     3378 <do_ls+0x1a8>
    32c1:	mov    rsi,QWORD PTR [rip+0x2e98]        # 6160 <stdout@@GLIBC_2.2.5>
    32c8:	mov    rdi,r13
    32cb:	xor    r14d,r14d
    32ce:	call   2120 <fputs@plt>
    32d3:	cmp    r12d,0xfff
    32da:	jle    33d3 <do_ls+0x203>
    32e0:	mov    DWORD PTR [rsp+0x34],0x0
    32e8:	lea    rdi,[rip+0xdad]        # 409c <_IO_stdin_used+0x9c>
    32ef:	xor    r12d,r12d
    32f2:	call   2090 <puts@plt>
    32f7:	mov    rdi,r12
    32fa:	call   2040 <free@plt>
    32ff:	mov    edx,DWORD PTR [rsp+0x10]
    3303:	test   edx,edx
    3305:	jne    34c8 <do_ls+0x2f8>
    330b:	mov    rsi,QWORD PTR [rip+0x2e4e]        # 6160 <stdout@@GLIBC_2.2.5>
    3312:	mov    edi,0xa
    3317:	add    rbx,0x1
    331b:	call   2180 <putc@plt>
    3320:	mov    ecx,DWORD PTR [rsp+0x10]
    3324:	mov    edx,DWORD PTR [rsp+0x14]
    3328:	mov    rsi,r13
    332b:	mov    rdi,QWORD PTR [rsp]
    332f:	call   31d0 <do_ls>
    3334:	cmp    DWORD PTR [rsp+0x30],ebx
    3338:	ja     325d <do_ls+0x8d>
    333e:	mov    rdi,QWORD PTR [rsp+0x8]
    3343:	call   2040 <free@plt>
    3348:	mov    rax,QWORD PTR [rsp+0x48]
    334d:	xor    rax,QWORD PTR fs:0x28
    3356:	jne    35d7 <do_ls+0x407>
    335c:	add    rsp,0x58
    3360:	mov    rdi,r13
    3363:	pop    rbx
    3364:	pop    rbp
    3365:	pop    r12
    3367:	pop    r13
    3369:	pop    r14
    336b:	pop    r15
    336d:	jmp    2040 <free@plt>
    3372:	nop    WORD PTR [rax+rax*1+0x0]
    3378:	xor    eax,eax
    337a:	test   ebp,ebp
    337c:	jle    339c <do_ls+0x1cc>
    337e:	xchg   ax,ax
    3380:	mov    rsi,QWORD PTR [rip+0x2dd9]        # 6160 <stdout@@GLIBC_2.2.5>
    3387:	mov    edi,0x20
    338c:	add    r14d,0x1
    3390:	call   2180 <putc@plt>
    3395:	cmp    ebp,r14d
    3398:	jne    3380 <do_ls+0x1b0>
    339a:	mov    eax,ebp
    339c:	mov    rcx,QWORD PTR [rsp+0x8]
    33a1:	mov    edx,DWORD PTR [rip+0x2c6d]        # 6014 <max_width>
    33a7:	mov    edi,0x1
    33ac:	lea    rsi,[rip+0xce4]        # 4097 <_IO_stdin_used+0x97>
    33b3:	mov    rcx,QWORD PTR [rcx+rbx*8]
    33b7:	sub    edx,0x8
    33ba:	sub    edx,eax
    33bc:	xor    eax,eax
    33be:	call   2250 <__printf_chk@plt>
    33c3:	add    r14d,eax
    33c6:	cmp    r12d,0xfff
    33cd:	jg     32e0 <do_ls+0x110>
    33d3:	mov    rdi,QWORD PTR [rsp]
    33d7:	lea    rcx,[rsp+0x34]
    33dc:	mov    rdx,r13
    33df:	xor    esi,esi
    33e1:	call   2270 <xs_read@plt>
    33e6:	mov    r12,rax
    33e9:	test   rax,rax
    33ec:	je     32e8 <do_ls+0x118>
    33f2:	mov    edx,DWORD PTR [rsp+0x34]
    33f6:	movsxd rcx,DWORD PTR [rip+0x2c17]        # 6014 <max_width>
    33fd:	mov    rsi,r12
    3400:	lea    rdi,[rip+0x2d89]        # 6190 <ebuf>
    3407:	lea    eax,[r14+rdx*1]
    340b:	add    rax,0x8
    340f:	cmp    rcx,rax
    3412:	jb     3598 <do_ls+0x3c8>
    3418:	call   2160 <sanitise_value@plt>
    341d:	lea    rsi,[rip+0xc88]        # 40ac <_IO_stdin_used+0xac>
    3424:	mov    edi,0x1
    3429:	mov    rdx,rax
    342c:	xor    eax,eax
    342e:	call   2250 <__printf_chk@plt>
    3433:	mov    ecx,DWORD PTR [rsp+0x10]
    3437:	test   ecx,ecx
    3439:	jne    3448 <do_ls+0x278>
    343b:	mov    rdi,r12
    343e:	call   2040 <free@plt>
    3443:	jmp    330b <do_ls+0x13b>
    3448:	mov    rsi,QWORD PTR [rip+0x2d11]        # 6160 <stdout@@GLIBC_2.2.5>
    344f:	mov    edi,0x20
    3454:	mov    DWORD PTR [rsp+0x28],eax
    3458:	call   2180 <putc@plt>
    345d:	mov    edx,DWORD PTR [rsp+0x28]
    3461:	mov    eax,DWORD PTR [rip+0x2bad]        # 6014 <max_width>
    3467:	cmp    DWORD PTR [rip+0x2ba3],eax        # 6010 <desired_width>
    346d:	cmovle eax,DWORD PTR [rip+0x2b9c]        # 6010 <desired_width>
    3474:	lea    r14d,[r14+rdx*1+0x1]
    3479:	cmp    r14d,eax
    347c:	jge    34b9 <do_ls+0x2e9>
    347e:	xchg   ax,ax
    3480:	mov    eax,r14d
    3483:	mov    rsi,QWORD PTR [rip+0x2cd6]        # 6160 <stdout@@GLIBC_2.2.5>
    348a:	and    eax,0x1
    348d:	cmp    eax,0x1
    3490:	sbb    edi,edi
    3492:	add    r14d,0x1
    3496:	and    edi,0xfffffff2
    3499:	add    edi,0x2e
    349c:	call   2180 <putc@plt>
    34a1:	mov    eax,DWORD PTR [rip+0x2b69]        # 6010 <desired_width>
    34a7:	cmp    DWORD PTR [rip+0x2b67],eax        # 6014 <max_width>
    34ad:	cmovle eax,DWORD PTR [rip+0x2b60]        # 6014 <max_width>
    34b4:	cmp    eax,r14d
    34b7:	jg     3480 <do_ls+0x2b0>
    34b9:	mov    rdi,r12
    34bc:	call   2040 <free@plt>
    34c1:	nop    DWORD PTR [rax+0x0]
    34c8:	mov    rcx,QWORD PTR [rsp+0x18]
    34cd:	mov    rdi,QWORD PTR [rsp]
    34d1:	mov    rdx,r13
    34d4:	xor    esi,esi
    34d6:	call   2290 <xs_get_permissions@plt>
    34db:	mov    r12,rax
    34de:	test   rax,rax
    34e1:	jne    3500 <do_ls+0x330>
    34e3:	mov    rax,QWORD PTR [rsp+0x8]
    34e8:	lea    rdi,[rip+0xe31]        # 4320 <_IO_stdin_used+0x320>
    34ef:	mov    rsi,QWORD PTR [rax+rbx*8]
    34f3:	xor    eax,eax
    34f5:	call   2080 <warn@plt>
    34fa:	jmp    330b <do_ls+0x13b>
    34ff:	nop
    3500:	mov    rcx,QWORD PTR [rip+0x2c59]        # 6160 <stdout@@GLIBC_2.2.5>
    3507:	mov    edx,0x3
    350c:	mov    esi,0x1
    3511:	lea    rdi,[rip+0xb9c]        # 40b4 <_IO_stdin_used+0xb4>
    3518:	call   2280 <fwrite@plt>
    351d:	mov    eax,DWORD PTR [rsp+0x38]
    3521:	test   eax,eax
    3523:	je     357c <do_ls+0x3ac>
    3525:	mov    QWORD PTR [rsp+0x28],r13
    352a:	xor    r14d,r14d
    352d:	mov    r13,QWORD PTR [rsp+0x20]
    3532:	jmp    3549 <do_ls+0x379>
    3534:	nop    DWORD PTR [rax+0x0]
    3538:	mov    rsi,QWORD PTR [rip+0x2c21]        # 6160 <stdout@@GLIBC_2.2.5>
    353f:	mov    edi,0x2c
    3544:	call   2180 <putc@plt>
    3549:	mov    rdi,r12
    354c:	mov    edx,0xc
    3551:	mov    rsi,r13
    3554:	add    r14d,0x1
    3558:	call   21c0 <xs_perm_to_string@plt>
    355d:	mov    rsi,QWORD PTR [rip+0x2bfc]        # 6160 <stdout@@GLIBC_2.2.5>
    3564:	mov    rdi,r13
    3567:	add    r12,0x8
    356b:	call   2120 <fputs@plt>
    3570:	cmp    DWORD PTR [rsp+0x38],r14d
    3575:	ja     3538 <do_ls+0x368>
    3577:	mov    r13,QWORD PTR [rsp+0x28]
    357c:	mov    rsi,QWORD PTR [rip+0x2bdd]        # 6160 <stdout@@GLIBC_2.2.5>
    3583:	mov    edi,0x29
    3588:	call   2180 <putc@plt>
    358d:	jmp    330b <do_ls+0x13b>
    3592:	nop    WORD PTR [rax+rax*1+0x0]
    3598:	call   2160 <sanitise_value@plt>
    359d:	mov    ecx,DWORD PTR [rip+0x2a71]        # 6014 <max_width>
    35a3:	mov    edi,0x1
    35a8:	lea    rsi,[rip+0xaef]        # 409e <_IO_stdin_used+0x9e>
    35af:	lea    edx,[rcx-0x8]
    35b2:	mov    rcx,rax
    35b5:	xor    eax,eax
    35b7:	sub    edx,r14d
    35ba:	call   2250 <__printf_chk@plt>
    35bf:	jmp    32f7 <do_ls+0x127>
    35c4:	lea    rsi,[rip+0xaa3]        # 406e <_IO_stdin_used+0x6e>
    35cb:	mov    edi,0x1
    35d0:	xor    eax,eax
    35d2:	call   21e0 <err@plt>
    35d7:	call   20d0 <__stack_chk_fail@plt>
    35dc:	mov    rdx,r15
    35df:	lea    rsi,[rip+0xa98]        # 407e <_IO_stdin_used+0x7e>
    35e6:	mov    edi,0x1
    35eb:	xor    eax,eax
    35ed:	call   21e0 <err@plt>
    35f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    35fd:	nop    DWORD PTR [rax]

0000000000003600 <do_chmod>:
    3600:	push   r15
    3602:	push   r14
    3604:	push   r13
    3606:	push   r12
    3608:	push   rbp
    3609:	push   rbx
    360a:	sub    rsp,0x138
    3611:	mov    rax,QWORD PTR fs:0x28
    361a:	mov    QWORD PTR [rsp+0x128],rax
    3622:	xor    eax,eax
    3624:	cmp    BYTE PTR [rdi],0x0
    3627:	jne    3658 <do_chmod+0x58>
    3629:	mov    rax,QWORD PTR [rsp+0x128]
    3631:	xor    rax,QWORD PTR fs:0x28
    363a:	jne    3784 <do_chmod+0x184>
    3640:	add    rsp,0x138
    3647:	pop    rbx
    3648:	pop    rbp
    3649:	pop    r12
    364b:	pop    r13
    364d:	pop    r14
    364f:	pop    r15
    3651:	ret    
    3652:	nop    WORD PTR [rax+rax*1+0x0]
    3658:	mov    r12,rsi
    365b:	mov    r15d,ecx
    365e:	mov    rcx,rsi
    3661:	mov    esi,DWORD PTR [rsp+0x170]
    3668:	mov    rbx,rdi
    366b:	mov    r13d,edx
    366e:	mov    r14d,r8d
    3671:	mov    r8d,edx
    3674:	mov    rdx,rdi
    3677:	mov    rdi,r9
    367a:	mov    rbp,r9
    367d:	call   2130 <xs_set_permissions@plt>
    3682:	test   al,al
    3684:	je     3789 <do_chmod+0x189>
    368a:	test   r15d,r15d
    368d:	je     36d6 <do_chmod+0xd6>
    368f:	mov    esi,0x2f
    3694:	mov    rdi,rbx
    3697:	call   2110 <strrchr@plt>
    369c:	mov    r15,rax
    369f:	test   rax,rax
    36a2:	je     379d <do_chmod+0x19d>
    36a8:	sub    rsp,0x8
    36ac:	mov    BYTE PTR [rax],0x0
    36af:	mov    rsi,r12
    36b2:	mov    rdi,rbx
    36b5:	mov    eax,DWORD PTR [rsp+0x178]
    36bc:	mov    r9,rbp
    36bf:	xor    r8d,r8d
    36c2:	mov    edx,r13d
    36c5:	mov    ecx,0x1
    36ca:	push   rax
    36cb:	call   3600 <do_chmod>
    36d0:	mov    BYTE PTR [r15],0x2f
    36d4:	pop    rsi
    36d5:	pop    rdi
    36d6:	test   r14d,r14d
    36d9:	je     3629 <do_chmod+0x29>
    36df:	mov    esi,DWORD PTR [rsp+0x170]
    36e6:	lea    rcx,[rsp+0x1c]
    36eb:	mov    rdx,rbx
    36ee:	mov    rdi,rbp
    36f1:	call   2260 <xs_directory@plt>
    36f6:	mov    r15,rax
    36f9:	test   rax,rax
    36fc:	je     3629 <do_chmod+0x29>
    3702:	mov    ecx,DWORD PTR [rsp+0x1c]
    3706:	test   ecx,ecx
    3708:	je     3777 <do_chmod+0x177>
    370a:	lea    rax,[rsp+0x20]
    370f:	mov    QWORD PTR [rsp+0x8],rbx
    3714:	xor    r14d,r14d
    3717:	mov    rbx,rax
    371a:	sub    rsp,0x8
    371e:	push   QWORD PTR [r15+r14*8]
    3722:	mov    ecx,0x100
    3727:	mov    rdi,rbx
    372a:	mov    r9,QWORD PTR [rsp+0x18]
    372f:	mov    edx,0x1
    3734:	xor    eax,eax
    3736:	add    r14,0x1
    373a:	lea    r8,[rip+0x977]        # 40b8 <_IO_stdin_used+0xb8>
    3741:	mov    esi,0x100
    3746:	call   2030 <__snprintf_chk@plt>
    374b:	mov    edx,r13d
    374e:	mov    r9,rbp
    3751:	xor    ecx,ecx
    3753:	mov    eax,DWORD PTR [rsp+0x180]
    375a:	mov    r8d,0x1
    3760:	mov    rsi,r12
    3763:	mov    rdi,rbx
    3766:	mov    DWORD PTR [rsp],eax
    3769:	call   3600 <do_chmod>
    376e:	pop    rax
    376f:	pop    rdx
    3770:	cmp    DWORD PTR [rsp+0x1c],r14d
    3775:	ja     371a <do_chmod+0x11a>
    3777:	mov    rdi,r15
    377a:	call   2040 <free@plt>
    377f:	jmp    3629 <do_chmod+0x29>
    3784:	call   20d0 <__stack_chk_fail@plt>
    3789:	mov    rdx,rbx
    378c:	lea    rsi,[rip+0xbb5]        # 4348 <_IO_stdin_used+0x348>
    3793:	mov    edi,0x1
    3798:	call   21e0 <err@plt>
    379d:	mov    rcx,rbx
    37a0:	mov    edx,0x2f
    37a5:	mov    edi,0x1
    37aa:	xor    eax,eax
    37ac:	lea    rsi,[rip+0xbc5]        # 4378 <_IO_stdin_used+0x378>
    37b3:	call   20f0 <errx@plt>
    37b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037c0 <expand_buffer>:
    37c0:	movsxd rax,DWORD PTR [rip+0x29d9]        # 61a0 <output_pos>
    37c7:	movsxd rcx,DWORD PTR [rip+0x29b6]        # 6184 <output_size>
    37ce:	add    rax,rdi
    37d1:	cmp    rax,rcx
    37d4:	ja     37e0 <expand_buffer+0x20>
    37d6:	ret    
    37d7:	nop    WORD PTR [rax+rax*1+0x0]
    37e0:	lea    esi,[rcx+rdi*1+0x400]
    37e7:	sub    rsp,0x8
    37eb:	mov    rdi,QWORD PTR [rip+0x29b6]        # 61a8 <output_buf>
    37f2:	mov    DWORD PTR [rip+0x298c],esi        # 6184 <output_size>
    37f8:	movsxd rsi,esi
    37fb:	call   2240 <realloc@plt>
    3800:	mov    QWORD PTR [rip+0x29a1],rax        # 61a8 <output_buf>
    3807:	test   rax,rax
    380a:	je     3811 <expand_buffer+0x51>
    380c:	add    rsp,0x8
    3810:	ret    
    3811:	lea    rsi,[rip+0x8a6]        # 40be <_IO_stdin_used+0xbe>
    3818:	mov    edi,0x1
    381d:	call   21e0 <err@plt>
    3822:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
    382d:	nop    DWORD PTR [rax]

0000000000003830 <output>:
    3830:	push   r13
    3832:	push   r12
    3834:	mov    r12,rdi
    3837:	push   rbp
    3838:	push   rbx
    3839:	sub    rsp,0xe8
    3840:	mov    QWORD PTR [rsp+0x38],rsi
    3845:	mov    QWORD PTR [rsp+0x40],rdx
    384a:	mov    QWORD PTR [rsp+0x48],rcx
    384f:	mov    QWORD PTR [rsp+0x50],r8
    3854:	mov    QWORD PTR [rsp+0x58],r9
    3859:	test   al,al
    385b:	je     3897 <output+0x67>
    385d:	movaps XMMWORD PTR [rsp+0x60],xmm0
    3862:	movaps XMMWORD PTR [rsp+0x70],xmm1
    3867:	movaps XMMWORD PTR [rsp+0x80],xmm2
    386f:	movaps XMMWORD PTR [rsp+0x90],xmm3
    3877:	movaps XMMWORD PTR [rsp+0xa0],xmm4
    387f:	movaps XMMWORD PTR [rsp+0xb0],xmm5
    3887:	movaps XMMWORD PTR [rsp+0xc0],xmm6
    388f:	movaps XMMWORD PTR [rsp+0xd0],xmm7
    3897:	mov    rax,QWORD PTR fs:0x28
    38a0:	mov    QWORD PTR [rsp+0x28],rax
    38a5:	xor    eax,eax
    38a7:	lea    r13,[rsp+0x8]
    38ac:	lea    rdi,[rsp+0x27]
    38b1:	mov    r8,r12
    38b4:	lea    rax,[rsp+0x110]
    38bc:	mov    r9,r13
    38bf:	mov    ecx,0x1
    38c4:	mov    edx,0x1
    38c9:	mov    QWORD PTR [rsp+0x10],rax
    38ce:	mov    esi,0x1
    38d3:	lea    rax,[rsp+0x30]
    38d8:	mov    DWORD PTR [rsp+0x8],0x8
    38e0:	mov    DWORD PTR [rsp+0xc],0x30
    38e8:	mov    QWORD PTR [rsp+0x18],rax
    38ed:	call   2230 <__vsnprintf_chk@plt>
    38f2:	mov    ebx,eax
    38f4:	test   eax,eax
    38f6:	js     3981 <output+0x151>
    38fc:	lea    ebp,[rax+0x1]
    38ff:	movsxd rbp,ebp
    3902:	mov    rdi,rbp
    3905:	call   37c0 <expand_buffer>
    390a:	mov    r9,r13
    390d:	mov    r8,r12
    3910:	mov    edx,0x1
    3915:	lea    rax,[rsp+0x110]
    391d:	movsxd rdi,DWORD PTR [rip+0x287c]        # 61a0 <output_pos>
    3924:	mov    rsi,rbp
    3927:	add    rdi,QWORD PTR [rip+0x287a]        # 61a8 <output_buf>
    392e:	mov    QWORD PTR [rsp+0x10],rax
    3933:	mov    rcx,0xffffffffffffffff
    393a:	lea    rax,[rsp+0x30]
    393f:	mov    DWORD PTR [rsp+0x8],0x8
    3947:	mov    DWORD PTR [rsp+0xc],0x30
    394f:	mov    QWORD PTR [rsp+0x18],rax
    3954:	call   2230 <__vsnprintf_chk@plt>
    3959:	cmp    ebx,eax
    395b:	jne    3981 <output+0x151>
    395d:	add    DWORD PTR [rip+0x283d],ebx        # 61a0 <output_pos>
    3963:	mov    rax,QWORD PTR [rsp+0x28]
    3968:	xor    rax,QWORD PTR fs:0x28
    3971:	jne    3994 <output+0x164>
    3973:	add    rsp,0xe8
    397a:	pop    rbx
    397b:	pop    rbp
    397c:	pop    r12
    397e:	pop    r13
    3980:	ret    
    3981:	lea    rsi,[rip+0x73d]        # 40c5 <_IO_stdin_used+0xc5>
    3988:	mov    edi,0x1
    398d:	xor    eax,eax
    398f:	call   21e0 <err@plt>
    3994:	call   20d0 <__stack_chk_fail@plt>
    3999:	nop    DWORD PTR [rax+0x0]

00000000000039a0 <__libc_csu_init>:
    39a0:	push   r15
    39a2:	mov    r15,rdx
    39a5:	push   r14
    39a7:	mov    r14,rsi
    39aa:	push   r13
    39ac:	mov    r13d,edi
    39af:	push   r12
    39b1:	lea    r12,[rip+0x22b8]        # 5c70 <__frame_dummy_init_array_entry>
    39b8:	push   rbp
    39b9:	lea    rbp,[rip+0x22b8]        # 5c78 <__init_array_end>
    39c0:	push   rbx
    39c1:	sub    rbp,r12
    39c4:	sub    rsp,0x8
    39c8:	call   2000 <_init>
    39cd:	sar    rbp,0x3
    39d1:	je     39ee <__libc_csu_init+0x4e>
    39d3:	xor    ebx,ebx
    39d5:	nop    DWORD PTR [rax]
    39d8:	mov    rdx,r15
    39db:	mov    rsi,r14
    39de:	mov    edi,r13d
    39e1:	call   QWORD PTR [r12+rbx*8]
    39e5:	add    rbx,0x1
    39e9:	cmp    rbp,rbx
    39ec:	jne    39d8 <__libc_csu_init+0x38>
    39ee:	add    rsp,0x8
    39f2:	pop    rbx
    39f3:	pop    rbp
    39f4:	pop    r12
    39f6:	pop    r13
    39f8:	pop    r14
    39fa:	pop    r15
    39fc:	ret    
    39fd:	nop    DWORD PTR [rax]

0000000000003a00 <__libc_csu_fini>:
    3a00:	ret    

Disassembly of section .fini:

0000000000003a04 <_fini>:
    3a04:	sub    rsp,0x8
    3a08:	add    rsp,0x8
    3a0c:	ret    
