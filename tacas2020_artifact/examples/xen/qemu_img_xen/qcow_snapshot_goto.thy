(*
Copyright 2019

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*)
theory qcow_snapshot_goto
  imports "../../../isabelle/VCG/HTriple"
begin

locale "qemu_img_xen" = execution_context + exec_code +
  fixes find_snapshot_by_id_or_name_isra_9_0x15be4_retval\<^sub>v update_snapshot_refcount_0x15c1b_retval\<^sub>v grow_l1_table_0x15c2f_retval\<^sub>v bdrv_pread_0x15c56_retval\<^sub>v bdrv_pwrite_0x15c70_retval\<^sub>v update_snapshot_refcount_0x15cb0_retval\<^sub>v find_snapshot_by_id_isra_8_0x15e32_retval\<^sub>v qemu_strdup_0x15e42_retval\<^sub>v qemu_strdup_0x15e5f_retval\<^sub>v update_snapshot_refcount_0x15ea7_retval\<^sub>v alloc_clusters_0x15ebf_retval\<^sub>v qemu_malloc_0x15ed7_retval\<^sub>v bdrv_pwrite_0x15f17_retval\<^sub>v qemu_free_0x15f32_retval\<^sub>v qemu_malloc_0x15f51_retval\<^sub>v memcpy_0x15f7e_retval\<^sub>v qemu_free_0x15f8a_retval\<^sub>v qcow_write_snapshots_0x15fde_retval\<^sub>v strtoul_0x16043_retval\<^sub>v snprintf_chk_0x1607d_retval\<^sub>v qemu_free_0x16092_retval\<^sub>v qemu_free_0x1609a_retval\<^sub>v stack_chk_fail_0x160bb_retval\<^sub>v nbd_send_request_0x16a11_retval\<^sub>v nbd_wr_sync_0x16a26_retval\<^sub>v nbd_receive_reply_0x16a39_retval\<^sub>v errno_location_0x16a70_retval\<^sub>v stack_chk_fail_0x16a8f_retval\<^sub>v nbd_send_request_0x16ae1_retval\<^sub>v nbd_receive_reply_0x16af0_retval\<^sub>v nbd_wr_sync_0x16b1b_retval\<^sub>v errno_location_0x16b48_retval\<^sub>v stack_chk_fail_0x16b67_retval\<^sub>v strstart_0x16baf_retval\<^sub>v strstart_0x16bcc_retval\<^sub>v unix_socket_outgoing_0x16be7_retval\<^sub>v nbd_receive_negotiate_0x16bff_retval\<^sub>v close_0x16c52_retval\<^sub>v errno_location_0x16c60_retval\<^sub>v pstrcpy_0x16c81_retval\<^sub>v strchr_0x16c8e_retval\<^sub>v strtol_0x16ca9_retval\<^sub>v tcp_socket_outgoing_0x16cbb_retval\<^sub>v stack_chk_fail_0x16cda_retval\<^sub>v nbd_wr_sync_0x16d93_retval\<^sub>v fprintf_chk_0x16dde_retval\<^sub>v errno_location_0x16de3_retval\<^sub>v stack_chk_fail_0x16df5_retval\<^sub>v nbd_wr_sync_0x1728f_retval\<^sub>v fprintf_chk_0x17329_retval\<^sub>v errno_location_0x1732e_retval\<^sub>v stack_chk_fail_0x1737a_retval\<^sub>v ioctl_0x1739e_retval\<^sub>v ioctl_0x173bd_retval\<^sub>v ioctl_0x173d7_retval\<^sub>v ioctl_0x173f4_retval\<^sub>v errno_location_0x17413_retval\<^sub>v fprintf_chk_0x17447_retval\<^sub>v errno_location_0x17452_retval\<^sub>v errno_location_0x1747a_retval\<^sub>v errno_location_0x174a2_retval\<^sub>v errno_location_addr fprintf_chk_addr snprintf_chk_addr stack_chk_fail_addr alloc_clusters_addr bdrv_pread_addr bdrv_pwrite_addr close_addr find_snapshot_by_id_isra_8_addr find_snapshot_by_id_or_name_isra_9_addr grow_l1_table_addr ioctl_addr memcpy_addr nbd_receive_reply_addr nbd_send_request_addr nbd_wr_sync_addr pstrcpy_addr qcow_write_snapshots_addr qemu_free_addr qemu_malloc_addr qemu_strdup_addr strchr_addr strstart_addr strtol_addr strtoul_addr tcp_socket_outgoing_addr unix_socket_outgoing_addr update_snapshot_refcount_addr :: \<open>64 word\<close>
    and errno_location_acode fprintf_chk_acode snprintf_chk_acode stack_chk_fail_acode alloc_clusters_acode bdrv_pread_acode bdrv_pwrite_acode close_acode find_snapshot_by_id_isra_8_acode find_snapshot_by_id_or_name_isra_9_acode grow_l1_table_acode ioctl_acode memcpy_acode nbd_receive_reply_acode nbd_send_request_acode nbd_wr_sync_acode pstrcpy_acode qcow_write_snapshots_acode qemu_free_acode qemu_malloc_acode qemu_strdup_acode strchr_acode strstart_acode strtol_acode strtoul_acode tcp_socket_outgoing_acode unix_socket_outgoing_acode update_snapshot_refcount_acode :: ACode
  assumes fetch:
    "fetch 0x15bd0 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x15bd2 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x15bd4 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x15bd5 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rdi))), 3)"
    "fetch 0x15bd8 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x15bd9 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 8)), 4)"
    "fetch 0x15bdd \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdi)) (A_WordConstant 64))))), 4)"
    "fetch 0x15be1 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x15be4 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''find_snapshot_by_id_or_name.isra.9'')), 5)"
    "fetch 0x15be9 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15beb \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 89303)), 6)"
    "fetch 0x15bf1 \<equiv> (Nullary (IS_X86_64 Cdqe), 2)"
    "fetch 0x15bf3 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 56))))), 4)"
    "fetch 0x15bf7 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 4294967295)), 5)"
    "fetch 0x15bfc \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x15bff \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))), 8)"
    "fetch 0x15c07 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15c0a \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x15c0d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864))))), 7)"
    "fetch 0x15c14 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r13)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rdx)) (A_Mult 8 (A_FromReg (General SixtyFour rax)))))), 4)"
    "fetch 0x15c18 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 3)"
    "fetch 0x15c1b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''update_snapshot_refcount'')), 5)"
    "fetch 0x15c20 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15c22 \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 89296)), 6)"
    "fetch 0x15c28 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 8))))), 4)"
    "fetch 0x15c2c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x15c2f \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''grow_l1_table'')), 5)"
    "fetch 0x15c34 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15c36 \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 89296)), 6)"
    "fetch 0x15c3c \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r12)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 8))))), 4)"
    "fetch 0x15c40 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 64))))), 4)"
    "fetch 0x15c44 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x15c47 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28)))) (Storage (Reg (General ThirtyTwo r12))), 4)"
    "fetch 0x15c4b \<equiv> (Binary (IS_8088 Shl) (Reg (General ThirtyTwo r12)) (Immediate SixtyFour (ImmVal 3)), 4)"
    "fetch 0x15c4f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 0))))), 4)"
    "fetch 0x15c53 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x15c56 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pread'')), 5)"
    "fetch 0x15c5b \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r13)) (Storage (Reg (General ThirtyTwo rax))), 3)"
    "fetch 0x15c5e \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x15c61 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 89296)), 2)"
    "fetch 0x15c63 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 64))))), 4)"
    "fetch 0x15c67 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 56))))), 4)"
    "fetch 0x15c6b \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15c6d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x15c70 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x15c75 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo r13))), 3)"
    "fetch 0x15c78 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 89296)), 2)"
    "fetch 0x15c7a \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 3)"
    "fetch 0x15c7d \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rdx)) (Storage (Reg (General ThirtyTwo rdx))), 2)"
    "fetch 0x15c7f \<equiv> (Unary (IS_8088 Jle) (Immediate SixtyFour (ImmVal 89252)), 2)"
    "fetch 0x15c81 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15c83 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 5)"
    "fetch 0x15c88 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 64))))), 4)"
    "fetch 0x15c8c \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rdx)) (A_Mult 8 (A_FromReg (General SixtyFour rax)))))), 4)"
    "fetch 0x15c90 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rax)) (Immediate SixtyFour (ImmVal 1)), 4)"
    "fetch 0x15c94 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rcx))))), 3)"
    "fetch 0x15c97 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x15c9a \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rcx)))) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x15c9d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 3)"
    "fetch 0x15ca0 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rdx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15ca2 \<equiv> (Unary (IS_8088 Jg) (Immediate SixtyFour (ImmVal 89224)), 2)"
    "fetch 0x15ca4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 56))))), 4)"
    "fetch 0x15ca8 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x15cad \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x15cb0 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''update_snapshot_refcount'')), 5)"
    "fetch 0x15cb5 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15cb7 \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 89296)), 2)"
    "fetch 0x15cb9 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15cbb \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 8)), 4)"
    "fetch 0x15cbf \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x15cc0 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x15cc1 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x15cc3 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x15cc5 \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x15cc6 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour cs)) (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))))), 10)"
    "fetch 0x15cd0 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967291)), 5)"
    "fetch 0x15cd5 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 89275)), 2)"
    "fetch 0x15cd7 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967294)), 5)"
    "fetch 0x15cdc \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 89275)), 2)"
    "fetch 0x15cde \<equiv> (Binary (IS_8088 Xchg) (Reg (General Sixteen rax)) (Storage (Reg (General Sixteen rax))), 5)"
    "fetch 0x15de0 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r15))), 2)"
    "fetch 0x15de2 \<equiv> (Binary (IS_PentiumMMX_MMX Pxor) (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0)) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 4)"
    "fetch 0x15de6 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x15de8 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x15dea \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r13)) (Storage (Reg (General SixtyFour rsi))), 3)"
    "fetch 0x15ded \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x15def \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r12)) (Storage (Reg (General SixtyFour rdi))), 3)"
    "fetch 0x15df2 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x15df3 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x15df4 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 72)), 4)"
    "fetch 0x15df8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdi)) (A_WordConstant 64))))), 4)"
    "fetch 0x15dfc \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x15e05 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x15e0a \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15e0c \<equiv> (Binary (IS_8088 Cmp) (Memory Eight (A_SizeDirective 8 (A_FromReg (General SixtyFour rsi)))) (Immediate SixtyFour (ImmVal 0)), 3)"
    "fetch 0x15e0f \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 4)"
    "fetch 0x15e13 \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 5)"
    "fetch 0x15e18 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x15e1b \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 5)"
    "fetch 0x15e20 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 48)))) (Immediate SixtyFour (ImmVal 0)), 9)"
    "fetch 0x15e29 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 90128)), 6)"
    "fetch 0x15e2f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x15e32 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''find_snapshot_by_id.isra.8'')), 5)"
    "fetch 0x15e37 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15e39 \<equiv> (Unary (IS_8088 Jns) (Immediate SixtyFour (ImmVal 90289)), 6)"
    "fetch 0x15e3f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x15e42 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_strdup'')), 5)"
    "fetch 0x15e47 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15e4a \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x15e4f \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15e52 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 90252)), 6)"
    "fetch 0x15e58 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 128)))), 7)"
    "fetch 0x15e5f \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_strdup'')), 5)"
    "fetch 0x15e64 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15e67 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x15e6c \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15e6f \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 90252)), 6)"
    "fetch 0x15e75 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 392))))), 7)"
    "fetch 0x15e7c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 384))))), 7)"
    "fetch 0x15e83 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x15e88 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x15e8b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 56))))), 4)"
    "fetch 0x15e8f \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32)))) (Storage (Reg (General SixtyFour rdx))), 5)"
    "fetch 0x15e94 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 3)"
    "fetch 0x15e97 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x15e9b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r13)) (A_WordConstant 400))))), 7)"
    "fetch 0x15ea2 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 48)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x15ea7 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''update_snapshot_refcount'')), 5)"
    "fetch 0x15eac \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15eae \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 90252)), 6)"
    "fetch 0x15eb4 \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rsi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 4)"
    "fetch 0x15eb8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x15ebb \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rsi)) (Immediate SixtyFour (ImmVal 3)), 4)"
    "fetch 0x15ebf \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''alloc_clusters'')), 5)"
    "fetch 0x15ec4 \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 4)"
    "fetch 0x15ec8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r14)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15ecb \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (General SixtyFour rax))), 4)"
    "fetch 0x15ecf \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8)))) (Storage (Reg (General ThirtyTwo rdi))), 4)"
    "fetch 0x15ed3 \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rdi)) (Immediate SixtyFour (ImmVal 3)), 4)"
    "fetch 0x15ed7 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_malloc'')), 5)"
    "fetch 0x15edc \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 3)"
    "fetch 0x15edf \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r13)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15ee2 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo rcx))), 2)"
    "fetch 0x15ee4 \<equiv> (Unary (IS_8088 Jle) (Immediate SixtyFour (ImmVal 89867)), 2)"
    "fetch 0x15ee6 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15ee8 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 8)"
    "fetch 0x15ef0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 64))))), 4)"
    "fetch 0x15ef4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdx)) (A_Mult 8 (A_FromReg (General SixtyFour rax))))))), 4)"
    "fetch 0x15ef8 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x15efb \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r13)) (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))) (Storage (Reg (General SixtyFour rdx))), 5)"
    "fetch 0x15f00 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 3)"
    "fetch 0x15f03 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rax)) (Immediate SixtyFour (ImmVal 1)), 4)"
    "fetch 0x15f07 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15f09 \<equiv> (Unary (IS_8088 Jg) (Immediate SixtyFour (ImmVal 89840)), 2)"
    "fetch 0x15f0b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x15f0e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x15f11 \<equiv> (Binary (IS_8088 Shl) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 3)), 3)"
    "fetch 0x15f14 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r14))), 3)"
    "fetch 0x15f17 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x15f1c \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 28))))), 4)"
    "fetch 0x15f20 \<equiv> (Nullary (IS_X86_64 Cdqe), 2)"
    "fetch 0x15f22 \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rdx)) (Immediate SixtyFour (ImmVal 3)), 4)"
    "fetch 0x15f26 \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x15f29 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 90255)), 6)"
    "fetch 0x15f2f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x15f32 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_free'')), 5)"
    "fetch 0x15f37 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 6)"
    "fetch 0x15f3d \<equiv> (Binary (IS_8088 Add) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 1)), 3)"
    "fetch 0x15f40 \<equiv> (Nullary (IS_X86_64 Cdqe), 2)"
    "fetch 0x15f42 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))), 8)"
    "fetch 0x15f4a \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15f4d \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rdi)) (Immediate SixtyFour (ImmVal 3)), 4)"
    "fetch 0x15f51 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_malloc'')), 5)"
    "fetch 0x15f56 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864))))), 7)"
    "fetch 0x15f5d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r13)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15f60 \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rsi))), 3)"
    "fetch 0x15f63 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 89999)), 2)"
    "fetch 0x15f65 \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 7)"
    "fetch 0x15f6c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x15f6f \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))), 8)"
    "fetch 0x15f77 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15f7a \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rdx)) (Immediate SixtyFour (ImmVal 3)), 4)"
    "fetch 0x15f7e \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''memcpy'')), 5)"
    "fetch 0x15f83 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864))))), 7)"
    "fetch 0x15f8a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_free'')), 5)"
    "fetch 0x15f8f \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 7)"
    "fetch 0x15f96 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864)))) (Storage (Reg (General SixtyFour r13))), 7)"
    "fetch 0x15f9d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x15fa0 \<equiv> (Binary (IS_SSE2_SIMD Movdqa) (Reg (SIMD OneHundredTwentyEight ymm1w3 ymm1w2 ymm1w1 ymm1w0)) (Storage (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_FromReg (General SixtyFour rsp))))), 5)"
    "fetch 0x15fa5 \<equiv> (Binary (IS_SSE2_SIMD Movdqa) (Reg (SIMD OneHundredTwentyEight ymm2w3 ymm2w2 ymm2w1 ymm2w0)) (Storage (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16))))), 6)"
    "fetch 0x15fab \<equiv> (Binary (IS_8088 Lea) (Reg (General ThirtyTwo rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 1)))), 3)"
    "fetch 0x15fae \<equiv> (Binary (IS_SSE2_SIMD Movdqa) (Reg (SIMD OneHundredTwentyEight ymm3w3 ymm3w2 ymm3w1 ymm3w0)) (Storage (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32))))), 6)"
    "fetch 0x15fb4 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860)))) (Storage (Reg (General ThirtyTwo rdx))), 6)"
    "fetch 0x15fba \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))), 8)"
    "fetch 0x15fc2 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15fc5 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour r13)) (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rdx))) (A_WordConstant 0))))), 5)"
    "fetch 0x15fca \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 48))))), 5)"
    "fetch 0x15fcf \<equiv> (Binary (IS_SSE_SIMD Movups) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_FromReg (General SixtyFour rax)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm1w3 ymm1w2 ymm1w1 ymm1w0))), 3)"
    "fetch 0x15fd2 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 48)))) (Storage (Reg (General SixtyFour rdx))), 4)"
    "fetch 0x15fd6 \<equiv> (Binary (IS_SSE_SIMD Movups) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 16)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm2w3 ymm2w2 ymm2w1 ymm2w0))), 4)"
    "fetch 0x15fda \<equiv> (Binary (IS_SSE_SIMD Movups) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 32)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm3w3 ymm3w2 ymm3w1 ymm3w0))), 4)"
    "fetch 0x15fde \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qcow_write_snapshots'')), 5)"
    "fetch 0x15fe3 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15fe5 \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 90252)), 6)"
    "fetch 0x15feb \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15fed \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56))))), 5)"
    "fetch 0x15ff2 \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x15ffb \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 90299)), 6)"
    "fetch 0x16001 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 72)), 4)"
    "fetch 0x16005 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x16006 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x16007 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x16009 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x1600b \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x1600d \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r15))), 2)"
    "fetch 0x1600f \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x16010 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 6)"
    "fetch 0x16016 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16018 \<equiv> (Unary (IS_8088 Jle) (Immediate SixtyFour (ImmVal 90281)), 6)"
    "fetch 0x1601e \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo r15)) (Storage (Reg (General ThirtyTwo r15))), 3)"
    "fetch 0x16021 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rbp))), 2)"
    "fetch 0x16023 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo r14)) (Storage (Reg (General ThirtyTwo r14))), 3)"
    "fetch 0x16026 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour cs)) (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))))), 10)"
    "fetch 0x16030 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864))))), 7)"
    "fetch 0x16037 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rsi)) (Storage (Reg (General ThirtyTwo rsi))), 2)"
    "fetch 0x16039 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 10)), 5)"
    "fetch 0x1603e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour r15))) (A_WordConstant 16)))))), 5)"
    "fetch 0x16043 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strtoul'')), 5)"
    "fetch 0x16048 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x1604a \<equiv> (Binary (IS_PentiumPro Cmovl) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rax))), 3)"
    "fetch 0x1604d \<equiv> (Binary (IS_8088 Add) (Reg (General ThirtyTwo r14)) (Immediate SixtyFour (ImmVal 1)), 4)"
    "fetch 0x16051 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour r15)) (Immediate SixtyFour (ImmVal 56)), 4)"
    "fetch 0x16055 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo r14)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 7)"
    "fetch 0x1605c \<equiv> (Unary (IS_8088 Jl) (Immediate SixtyFour (ImmVal 90160)), 2)"
    "fetch 0x1605e \<equiv> (Binary (IS_8088 Lea) (Reg (General ThirtyTwo r9)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rbp)) (A_WordConstant 1)))), 4)"
    "fetch 0x16062 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x16065 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 128)), 5)"
    "fetch 0x1606a \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x1606f \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16071 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 47466)))), 7)"
    "fetch 0x16078 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 128)), 5)"
    "fetch 0x1607d \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__snprintf_chk'')), 5)"
    "fetch 0x16082 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r12)) (A_WordConstant 64))))), 5)"
    "fetch 0x16087 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 89647)), 5)"
    "fetch 0x1608c \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo r13)) (Storage (Reg (General ThirtyTwo r13))), 3)"
    "fetch 0x1608f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x16092 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_free'')), 5)"
    "fetch 0x16097 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x1609a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''qemu_free'')), 5)"
    "fetch 0x1609f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 5)"
    "fetch 0x160a4 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 90093)), 5)"
    "fetch 0x160a9 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 1)), 6)"
    "fetch 0x160af \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 90210)), 2)"
    "fetch 0x160b1 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967294)), 5)"
    "fetch 0x160b6 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 90093)), 5)"
    "fetch 0x160bb \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x169d0 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x169d1 \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rsi)) (Immediate SixtyFour (ImmVal 9)), 4)"
    "fetch 0x169d5 \<equiv> (Binary (IS_8088 Shl) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 9)), 3)"
    "fetch 0x169d8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x169db \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x169dc \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 72)), 4)"
    "fetch 0x169e0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdi)) (A_WordConstant 64))))), 4)"
    "fetch 0x169e4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x169ed \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x169f2 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x169f4 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32)))) (Storage (Reg (General SixtyFour rsi))), 5)"
    "fetch 0x169f9 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))), 5)"
    "fetch 0x169fe \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))) (Immediate SixtyFour (ImmVal 1)), 8)"
    "fetch 0x16a06 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Storage (Reg (General SixtyFour rdi))), 5)"
    "fetch 0x16a0b \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40)))) (Storage (Reg (General ThirtyTwo rcx))), 4)"
    "fetch 0x16a0f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rbx))))), 2)"
    "fetch 0x16a11 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_send_request'')), 5)"
    "fetch 0x16a16 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x16a19 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 92784)), 2)"
    "fetch 0x16a1b \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40))))), 4)"
    "fetch 0x16a1f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rbx))))), 2)"
    "fetch 0x16a21 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo rcx))), 2)"
    "fetch 0x16a23 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x16a26 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_wr_sync'')), 5)"
    "fetch 0x16a2b \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40))))), 4)"
    "fetch 0x16a2f \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x16a32 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 92808)), 2)"
    "fetch 0x16a34 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rbx))))), 2)"
    "fetch 0x16a36 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rsp))), 3)"
    "fetch 0x16a39 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_receive_reply'')), 5)"
    "fetch 0x16a3e \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x16a41 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 92784)), 2)"
    "fetch 0x16a43 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rsp))))), 3)"
    "fetch 0x16a46 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16a48 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 92800)), 2)"
    "fetch 0x16a4a \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24))))), 5)"
    "fetch 0x16a4f \<equiv> (Binary (IS_8088 Cmp) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x16a54 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 92808)), 2)"
    "fetch 0x16a56 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16a58 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56))))), 5)"
    "fetch 0x16a5d \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16a66 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 92815)), 2)"
    "fetch 0x16a68 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 72)), 4)"
    "fetch 0x16a6c \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x16a6d \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x16a6e \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x16a6f \<equiv> (Nullary (IS_8088 Nop), 1)"
    "fetch 0x16a70 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x16a75 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 2)"
    "fetch 0x16a77 \<equiv> (Unary (IS_8088 Neg) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16a79 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 92760)), 2)"
    "fetch 0x16a7b \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 5)"
    "fetch 0x16a80 \<equiv> (Unary (IS_8088 Neg) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16a82 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 92760)), 2)"
    "fetch 0x16a84 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 0))))), 4)"
    "fetch 0x16a88 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967291)), 5)"
    "fetch 0x16a8d \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 92760)), 2)"
    "fetch 0x16a8f \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x16a94 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour cs)) (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))))), 11)"
    "fetch 0x16aa0 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x16aa1 \<equiv> (Binary (IS_8088 Shl) (Reg (General SixtyFour rsi)) (Immediate SixtyFour (ImmVal 9)), 4)"
    "fetch 0x16aa5 \<equiv> (Binary (IS_8088 Shl) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 9)), 3)"
    "fetch 0x16aa8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x16aab \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x16aac \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 72)), 4)"
    "fetch 0x16ab0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdi)) (A_WordConstant 64))))), 4)"
    "fetch 0x16ab4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16abd \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x16ac2 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16ac4 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32)))) (Storage (Reg (General SixtyFour rsi))), 5)"
    "fetch 0x16ac9 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))), 5)"
    "fetch 0x16ace \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))) (Immediate SixtyFour (ImmVal 0)), 8)"
    "fetch 0x16ad6 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Storage (Reg (General SixtyFour rdi))), 5)"
    "fetch 0x16adb \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40)))) (Storage (Reg (General ThirtyTwo rcx))), 4)"
    "fetch 0x16adf \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rbx))))), 2)"
    "fetch 0x16ae1 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_send_request'')), 5)"
    "fetch 0x16ae6 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x16ae9 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93000)), 2)"
    "fetch 0x16aeb \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rbx))))), 2)"
    "fetch 0x16aed \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rsp))), 3)"
    "fetch 0x16af0 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_receive_reply'')), 5)"
    "fetch 0x16af5 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x16af8 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93000)), 2)"
    "fetch 0x16afa \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rsp))))), 3)"
    "fetch 0x16afd \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16aff \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93016)), 2)"
    "fetch 0x16b01 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24))))), 5)"
    "fetch 0x16b06 \<equiv> (Binary (IS_8088 Cmp) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x16b0b \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93024)), 2)"
    "fetch 0x16b0d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40))))), 4)"
    "fetch 0x16b11 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rbx))))), 2)"
    "fetch 0x16b13 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x16b18 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x16b1b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_wr_sync'')), 5)"
    "fetch 0x16b20 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40))))), 4)"
    "fetch 0x16b24 \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x16b27 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93024)), 2)"
    "fetch 0x16b29 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16b2b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56))))), 5)"
    "fetch 0x16b30 \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16b39 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93031)), 2)"
    "fetch 0x16b3b \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 72)), 4)"
    "fetch 0x16b3f \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x16b40 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x16b41 \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x16b42 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 6)"
    "fetch 0x16b48 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x16b4d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 2)"
    "fetch 0x16b4f \<equiv> (Unary (IS_8088 Neg) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16b51 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 92971)), 2)"
    "fetch 0x16b53 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 5)"
    "fetch 0x16b58 \<equiv> (Unary (IS_8088 Neg) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16b5a \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 92971)), 2)"
    "fetch 0x16b5c \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 0))))), 4)"
    "fetch 0x16b60 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967291)), 5)"
    "fetch 0x16b65 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 92971)), 2)"
    "fetch 0x16b67 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x16b70 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x16b72 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x16b74 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x16b75 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x16b76 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 184)), 7)"
    "fetch 0x16b7d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r12)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdi)) (A_WordConstant 64))))), 4)"
    "fetch 0x16b81 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16b8a \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 168)))) (Storage (Reg (General SixtyFour rax))), 8)"
    "fetch 0x16b92 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16b94 \<equiv> (Binary (IS_8088 And) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 4)), 3)"
    "fetch 0x16b97 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93392)), 6)"
    "fetch 0x16b9d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rcx)) (Storage (Reg (General SixtyFour rsi))), 3)"
    "fetch 0x16ba0 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rdx))), 2)"
    "fetch 0x16ba2 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 43435)))), 7)"
    "fetch 0x16ba9 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rsp))), 3)"
    "fetch 0x16bac \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rcx))), 3)"
    "fetch 0x16baf \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strstart'')), 5)"
    "fetch 0x16bb4 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16bb6 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93392)), 6)"
    "fetch 0x16bbc \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp))))), 4)"
    "fetch 0x16bc0 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8)))), 5)"
    "fetch 0x16bc5 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 43405)))), 7)"
    "fetch 0x16bcc \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strstart'')), 5)"
    "fetch 0x16bd1 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16bd3 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93296)), 6)"
    "fetch 0x16bd9 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8))))), 5)"
    "fetch 0x16bde \<equiv> (Binary (IS_8088 Cmp) (Memory Eight (A_SizeDirective 8 (A_FromReg (General SixtyFour rdi)))) (Immediate SixtyFour (ImmVal 47)), 3)"
    "fetch 0x16be1 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93392)), 6)"
    "fetch 0x16be7 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''unix_socket_outgoing'')), 5)"
    "fetch 0x16bec \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16bee \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rbx)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x16bf1 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93280)), 2)"
    "fetch 0x16bf3 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))), 5)"
    "fetch 0x16bf8 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))), 5)"
    "fetch 0x16bfd \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rbx))), 2)"
    "fetch 0x16bff \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_receive_negotiate'')), 5)"
    "fetch 0x16c04 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x16c07 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93264)), 2)"
    "fetch 0x16c09 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour r12)))) (Storage (Reg (General ThirtyTwo rbx))), 4)"
    "fetch 0x16c0d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16))))), 5)"
    "fetch 0x16c12 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r12)) (A_WordConstant 8)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x16c17 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24))))), 5)"
    "fetch 0x16c1c \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r12)) (A_WordConstant 16)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x16c21 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 168))))), 8)"
    "fetch 0x16c29 \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16c32 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rbp))), 2)"
    "fetch 0x16c34 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93402)), 6)"
    "fetch 0x16c3a \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 184)), 7)"
    "fetch 0x16c41 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x16c42 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x16c43 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x16c45 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x16c47 \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x16c48 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 8)"
    "fetch 0x16c50 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rbx))), 2)"
    "fetch 0x16c52 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''close'')), 5)"
    "fetch 0x16c57 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 9)"
    "fetch 0x16c60 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x16c65 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 2)"
    "fetch 0x16c67 \<equiv> (Unary (IS_8088 Neg) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16c69 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16c6b \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 93217)), 2)"
    "fetch 0x16c6d \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 3)"
    "fetch 0x16c70 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r13)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32)))), 5)"
    "fetch 0x16c75 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp))))), 4)"
    "fetch 0x16c79 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 128)), 5)"
    "fetch 0x16c7e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x16c81 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''pstrcpy'')), 5)"
    "fetch 0x16c86 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 58)), 5)"
    "fetch 0x16c8b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x16c8e \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strchr'')), 5)"
    "fetch 0x16c93 \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x16c96 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93392)), 2)"
    "fetch 0x16c98 \<equiv> (Binary (IS_8088 Mov) (Memory Eight (A_SizeDirective 8 (A_FromReg (General SixtyFour rax)))) (Immediate SixtyFour (ImmVal 0)), 3)"
    "fetch 0x16c9b \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 1)))), 4)"
    "fetch 0x16c9f \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdx)) (Storage (Reg (General ThirtyTwo rdx))), 2)"
    "fetch 0x16ca1 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))), 5)"
    "fetch 0x16ca6 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x16ca9 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strtol'')), 5)"
    "fetch 0x16cae \<equiv> (Binary (IS_8088 Cmp) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Storage (Reg (General SixtyFour rbx))), 5)"
    "fetch 0x16cb3 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 93392)), 2)"
    "fetch 0x16cb5 \<equiv> (Binary (IS_80386 Movzx) (Reg (General ThirtyTwo rsi)) (Storage (Reg (General Sixteen rax))), 3)"
    "fetch 0x16cb8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x16cbb \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''tcp_socket_outgoing'')), 5)"
    "fetch 0x16cc0 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16cc2 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 93166)), 5)"
    "fetch 0x16cc7 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 9)"
    "fetch 0x16cd0 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbp)) (Immediate SixtyFour (ImmVal 4294967274)), 5)"
    "fetch 0x16cd5 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 93217)), 5)"
    "fetch 0x16cda \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x16d60 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 40)), 4)"
    "fetch 0x16d64 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General ThirtyTwo rsi))), 2)"
    "fetch 0x16d66 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x16d69 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo rcx))), 2)"
    "fetch 0x16d6b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16d74 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x16d79 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16d7b \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 4)))) (Storage (Reg (General ThirtyTwo rsi))), 4)"
    "fetch 0x16d7f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rsp))), 3)"
    "fetch 0x16d82 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8)))) (Storage (Reg (General SixtyFour rdx))), 5)"
    "fetch 0x16d87 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 16)), 5)"
    "fetch 0x16d8c \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rsp)))) (Immediate SixtyFour (ImmVal 2556839015)), 7)"
    "fetch 0x16d93 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_wr_sync'')), 5)"
    "fetch 0x16d98 \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour rax)) (Immediate SixtyFour (ImmVal 16)), 4)"
    "fetch 0x16d9c \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93621)), 2)"
    "fetch 0x16d9e \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16da0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24))))), 5)"
    "fetch 0x16da5 \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x16dae \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 93685)), 2)"
    "fetch 0x16db0 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 40)), 4)"
    "fetch 0x16db4 \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x16db5 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 79172))))), 7)"
    "fetch 0x16dbc \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 549)), 6)"
    "fetch 0x16dc2 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x16dc4 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 43749)))), 7)"
    "fetch 0x16dcb \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42897)))), 7)"
    "fetch 0x16dd2 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42951)))), 7)"
    "fetch 0x16dd9 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x16dde \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__fprintf_chk'')), 5)"
    "fetch 0x16de3 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x16de8 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax)))) (Immediate SixtyFour (ImmVal 22)), 6)"
    "fetch 0x16dee \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 5)"
    "fetch 0x16df3 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 93600)), 2)"
    "fetch 0x16df5 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x17260 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x17261 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x17266 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rsi))), 3)"
    "fetch 0x17269 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x1726a \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x1726d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 152)), 5)"
    "fetch 0x17272 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 168)), 7)"
    "fetch 0x17279 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x17282 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 152)))) (Storage (Reg (General SixtyFour rax))), 8)"
    "fetch 0x1728a \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x1728c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rsp))), 3)"
    "fetch 0x1728f \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''nbd_wr_sync'')), 5)"
    "fetch 0x17294 \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour rax)) (Immediate SixtyFour (ImmVal 152)), 6)"
    "fetch 0x1729a \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 94976)), 2)"
    "fetch 0x1729c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8))))), 5)"
    "fetch 0x172a1 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x172a4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x172a7 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16))))), 5)"
    "fetch 0x172ac \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x172af \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbp)) (A_WordConstant 0)))) (Storage (Reg (General SixtyFour rax))), 4)"
    "fetch 0x172b3 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Immediate SixtyFour (ImmVal 4848484819635814990)), 10)"
    "fetch 0x172bd \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx)))) (Immediate SixtyFour (ImmVal 1024)), 7)"
    "fetch 0x172c4 \<equiv> (Binary (IS_8088 Cmp) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (General SixtyFour rax))), 4)"
    "fetch 0x172c8 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 95069)), 6)"
    "fetch 0x172ce \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Immediate SixtyFour (ImmVal 72578530415187)), 10)"
    "fetch 0x172d8 \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x172db \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 95040)), 2)"
    "fetch 0x172dd \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x172df \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 152))))), 8)"
    "fetch 0x172e7 \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x172f0 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 95098)), 6)"
    "fetch 0x172f6 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 168)), 7)"
    "fetch 0x172fd \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x172fe \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x172ff \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x17300 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 309)), 6)"
    "fetch 0x17306 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42547)))), 7)"
    "fetch 0x1730d \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41551)))), 7)"
    "fetch 0x17314 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41577)))), 7)"
    "fetch 0x1731b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 77790))))), 7)"
    "fetch 0x17322 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x17327 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x17329 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__fprintf_chk'')), 5)"
    "fetch 0x1732e \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x17333 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax)))) (Immediate SixtyFour (ImmVal 22)), 6)"
    "fetch 0x17339 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 5)"
    "fetch 0x1733e \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 94943)), 2)"
    "fetch 0x17340 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 339)), 6)"
    "fetch 0x17346 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42483)))), 7)"
    "fetch 0x1734d \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41487)))), 7)"
    "fetch 0x17354 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41621)))), 7)"
    "fetch 0x1735b \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 95003)), 2)"
    "fetch 0x1735d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 331)), 6)"
    "fetch 0x17363 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42454)))), 7)"
    "fetch 0x1736a \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41458)))), 7)"
    "fetch 0x17371 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41552)))), 7)"
    "fetch 0x17378 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 95003)), 2)"
    "fetch 0x1737a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x17380 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x17382 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x17384 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r14)) (Storage (Reg (General ThirtyTwo rsi))), 3)"
    "fetch 0x17387 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 43777)), 5)"
    "fetch 0x1738c \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x1738e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r13)) (Storage (Reg (General SixtyFour rcx))), 3)"
    "fetch 0x17391 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x17393 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r12)) (Storage (Reg (General ThirtyTwo rdi))), 3)"
    "fetch 0x17396 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x17397 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rdx))), 3)"
    "fetch 0x1739a \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rcx))), 3)"
    "fetch 0x1739d \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x1739e \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''ioctl'')), 5)"
    "fetch 0x173a3 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x173a6 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 95249)), 2)"
    "fetch 0x173a8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x173ab \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdx)) (Storage (Reg (General ThirtyTwo rdx))), 2)"
    "fetch 0x173ad \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 43783)), 5)"
    "fetch 0x173b2 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x173b5 \<equiv> (Unary (IS_8088 Div) (Storage (Reg (General SixtyFour r13))), 3)"
    "fetch 0x173b8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x173bb \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x173bd \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''ioctl'')), 5)"
    "fetch 0x173c2 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x173c4 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x173c7 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 95314)), 6)"
    "fetch 0x173cd \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 43780)), 5)"
    "fetch 0x173d2 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x173d5 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x173d7 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''ioctl'')), 5)"
    "fetch 0x173dc \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x173de \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x173e1 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 95354)), 6)"
    "fetch 0x173e7 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Storage (Reg (General ThirtyTwo r14))), 3)"
    "fetch 0x173ea \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 43776)), 5)"
    "fetch 0x173ef \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x173f2 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x173f4 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''ioctl'')), 5)"
    "fetch 0x173f9 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x173fb \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x173fe \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 95394)), 6)"
    "fetch 0x17404 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rbx))), 2)"
    "fetch 0x17406 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rbx))), 2)"
    "fetch 0x17408 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x17409 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x1740a \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x1740c \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x1740e \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x17410 \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x17411 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rbx)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x17413 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x17418 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 353)), 6)"
    "fetch 0x1741e \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42243)))), 7)"
    "fetch 0x17425 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41271)))), 7)"
    "fetch 0x1742c \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r12)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 3)"
    "fetch 0x1742f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x17432 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41439)))), 7)"
    "fetch 0x17439 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 77504))))), 7)"
    "fetch 0x17440 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x17445 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x17447 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__fprintf_chk'')), 5)"
    "fetch 0x1744c \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbp)) (A_WordConstant 0)))) (Storage (Reg (General ThirtyTwo r12))), 4)"
    "fetch 0x17450 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 95238)), 2)"
    "fetch 0x17452 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x17457 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 363)), 6)"
    "fetch 0x1745d \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42180)))), 7)"
    "fetch 0x17464 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41208)))), 7)"
    "fetch 0x1746b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x1746e \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r12)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 3)"
    "fetch 0x17471 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41424)))), 7)"
    "fetch 0x17478 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 95289)), 2)"
    "fetch 0x1747a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x1747f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 372)), 6)"
    "fetch 0x17485 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42140)))), 7)"
    "fetch 0x1748c \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41168)))), 7)"
    "fetch 0x17493 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x17496 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r12)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 3)"
    "fetch 0x17499 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41432)))), 7)"
    "fetch 0x174a0 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 95289)), 2)"
    "fetch 0x174a2 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x174a7 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r9)) (Immediate SixtyFour (ImmVal 381)), 6)"
    "fetch 0x174ad \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r8)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 42100)))), 7)"
    "fetch 0x174b4 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41128)))), 7)"
    "fetch 0x174bb \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x174be \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo r12)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 3)"
    "fetch 0x174c1 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 41440)))), 7)"
    "fetch 0x174c8 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 95289)), 5)"
    and \<alpha>_def: \<open>\<alpha> = \<lparr>text_sections = [], data_sections = [], labels_to_offsets = [], binary_offset = 0\<rparr>\<close>
    and errno_location\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__errno_location'') = errno_location_addr\<close>
    and fprintf_chk\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__fprintf_chk'') = fprintf_chk_addr\<close>
    and snprintf_chk\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__snprintf_chk'') = snprintf_chk_addr\<close>
    and stack_chk_fail\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__stack_chk_fail'') = stack_chk_fail_addr\<close>
    and alloc_clusters\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''alloc_clusters'') = alloc_clusters_addr\<close>
    and bdrv_pread\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_pread'') = bdrv_pread_addr\<close>
    and bdrv_pwrite\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_pwrite'') = bdrv_pwrite_addr\<close>
    and close\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''close'') = close_addr\<close>
    and find_snapshot_by_id_isra_8\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''find_snapshot_by_id.isra.8'') = find_snapshot_by_id_isra_8_addr\<close>
    and find_snapshot_by_id_or_name_isra_9\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''find_snapshot_by_id_or_name.isra.9'') = find_snapshot_by_id_or_name_isra_9_addr\<close>
    and grow_l1_table\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''grow_l1_table'') = grow_l1_table_addr\<close>
    and ioctl\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''ioctl'') = ioctl_addr\<close>
    and memcpy\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''memcpy'') = memcpy_addr\<close>
    and nbd_receive_negotiate\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''nbd_receive_negotiate'') = 0x17260\<close>
    and nbd_receive_reply\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''nbd_receive_reply'') = nbd_receive_reply_addr\<close>
    and nbd_send_request\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''nbd_send_request'') = nbd_send_request_addr\<close>
    and nbd_wr_sync\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''nbd_wr_sync'') = nbd_wr_sync_addr\<close>
    and pstrcpy\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''pstrcpy'') = pstrcpy_addr\<close>
    and qcow_write_snapshots\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''qcow_write_snapshots'') = qcow_write_snapshots_addr\<close>
    and qemu_free\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''qemu_free'') = qemu_free_addr\<close>
    and qemu_malloc\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''qemu_malloc'') = qemu_malloc_addr\<close>
    and qemu_strdup\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''qemu_strdup'') = qemu_strdup_addr\<close>
    and strchr\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''strchr'') = strchr_addr\<close>
    and strstart\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''strstart'') = strstart_addr\<close>
    and strtol\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''strtol'') = strtol_addr\<close>
    and strtoul\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''strtoul'') = strtoul_addr\<close>
    and tcp_socket_outgoing\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''tcp_socket_outgoing'') = tcp_socket_outgoing_addr\<close>
    and unix_socket_outgoing\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''unix_socket_outgoing'') = unix_socket_outgoing_addr\<close>
    and update_snapshot_refcount\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''update_snapshot_refcount'') = update_snapshot_refcount_addr\<close>
begin

text \<open>Using definitions that don't get unfolded immediately prevents locale argument issues.\<close>
definition \<open>find_snapshot_by_id_or_name_isra_9_0x15be4_retval \<equiv> find_snapshot_by_id_or_name_isra_9_0x15be4_retval\<^sub>v\<close>
definition \<open>update_snapshot_refcount_0x15c1b_retval \<equiv> update_snapshot_refcount_0x15c1b_retval\<^sub>v\<close>
definition \<open>grow_l1_table_0x15c2f_retval \<equiv> grow_l1_table_0x15c2f_retval\<^sub>v\<close>
definition \<open>bdrv_pread_0x15c56_retval \<equiv> bdrv_pread_0x15c56_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x15c70_retval \<equiv> bdrv_pwrite_0x15c70_retval\<^sub>v\<close>
definition \<open>update_snapshot_refcount_0x15cb0_retval \<equiv> update_snapshot_refcount_0x15cb0_retval\<^sub>v\<close>
definition \<open>find_snapshot_by_id_isra_8_0x15e32_retval \<equiv> find_snapshot_by_id_isra_8_0x15e32_retval\<^sub>v\<close>
definition \<open>qemu_strdup_0x15e42_retval \<equiv> qemu_strdup_0x15e42_retval\<^sub>v\<close>
definition \<open>qemu_strdup_0x15e5f_retval \<equiv> qemu_strdup_0x15e5f_retval\<^sub>v\<close>
definition \<open>update_snapshot_refcount_0x15ea7_retval \<equiv> update_snapshot_refcount_0x15ea7_retval\<^sub>v\<close>
definition \<open>alloc_clusters_0x15ebf_retval \<equiv> alloc_clusters_0x15ebf_retval\<^sub>v\<close>
definition \<open>qemu_malloc_0x15ed7_retval \<equiv> qemu_malloc_0x15ed7_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x15f17_retval \<equiv> bdrv_pwrite_0x15f17_retval\<^sub>v\<close>
definition \<open>qemu_free_0x15f32_retval \<equiv> qemu_free_0x15f32_retval\<^sub>v\<close>
definition \<open>qemu_malloc_0x15f51_retval \<equiv> qemu_malloc_0x15f51_retval\<^sub>v\<close>
definition \<open>memcpy_0x15f7e_retval \<equiv> memcpy_0x15f7e_retval\<^sub>v\<close>
definition \<open>qemu_free_0x15f8a_retval \<equiv> qemu_free_0x15f8a_retval\<^sub>v\<close>
definition \<open>qcow_write_snapshots_0x15fde_retval \<equiv> qcow_write_snapshots_0x15fde_retval\<^sub>v\<close>
definition \<open>strtoul_0x16043_retval \<equiv> strtoul_0x16043_retval\<^sub>v\<close>
definition \<open>snprintf_chk_0x1607d_retval \<equiv> snprintf_chk_0x1607d_retval\<^sub>v\<close>
definition \<open>qemu_free_0x16092_retval \<equiv> qemu_free_0x16092_retval\<^sub>v\<close>
definition \<open>qemu_free_0x1609a_retval \<equiv> qemu_free_0x1609a_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x160bb_retval \<equiv> stack_chk_fail_0x160bb_retval\<^sub>v\<close>
definition \<open>nbd_send_request_0x16a11_retval \<equiv> nbd_send_request_0x16a11_retval\<^sub>v\<close>
definition \<open>nbd_wr_sync_0x16a26_retval \<equiv> nbd_wr_sync_0x16a26_retval\<^sub>v\<close>
definition \<open>nbd_receive_reply_0x16a39_retval \<equiv> nbd_receive_reply_0x16a39_retval\<^sub>v\<close>
definition \<open>errno_location_0x16a70_retval \<equiv> errno_location_0x16a70_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x16a8f_retval \<equiv> stack_chk_fail_0x16a8f_retval\<^sub>v\<close>
definition \<open>nbd_send_request_0x16ae1_retval \<equiv> nbd_send_request_0x16ae1_retval\<^sub>v\<close>
definition \<open>nbd_receive_reply_0x16af0_retval \<equiv> nbd_receive_reply_0x16af0_retval\<^sub>v\<close>
definition \<open>nbd_wr_sync_0x16b1b_retval \<equiv> nbd_wr_sync_0x16b1b_retval\<^sub>v\<close>
definition \<open>errno_location_0x16b48_retval \<equiv> errno_location_0x16b48_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x16b67_retval \<equiv> stack_chk_fail_0x16b67_retval\<^sub>v\<close>
definition \<open>strstart_0x16baf_retval \<equiv> strstart_0x16baf_retval\<^sub>v\<close>
definition \<open>strstart_0x16bcc_retval \<equiv> strstart_0x16bcc_retval\<^sub>v\<close>
definition \<open>unix_socket_outgoing_0x16be7_retval \<equiv> unix_socket_outgoing_0x16be7_retval\<^sub>v\<close>
definition \<open>nbd_receive_negotiate_0x16bff_retval \<equiv> nbd_receive_negotiate_0x16bff_retval\<^sub>v\<close>
definition \<open>close_0x16c52_retval \<equiv> close_0x16c52_retval\<^sub>v\<close>
definition \<open>errno_location_0x16c60_retval \<equiv> errno_location_0x16c60_retval\<^sub>v\<close>
definition \<open>pstrcpy_0x16c81_retval \<equiv> pstrcpy_0x16c81_retval\<^sub>v\<close>
definition \<open>strchr_0x16c8e_retval \<equiv> strchr_0x16c8e_retval\<^sub>v\<close>
definition \<open>strtol_0x16ca9_retval \<equiv> strtol_0x16ca9_retval\<^sub>v\<close>
definition \<open>tcp_socket_outgoing_0x16cbb_retval \<equiv> tcp_socket_outgoing_0x16cbb_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x16cda_retval \<equiv> stack_chk_fail_0x16cda_retval\<^sub>v\<close>
definition \<open>nbd_wr_sync_0x16d93_retval \<equiv> nbd_wr_sync_0x16d93_retval\<^sub>v\<close>
definition \<open>fprintf_chk_0x16dde_retval \<equiv> fprintf_chk_0x16dde_retval\<^sub>v\<close>
definition \<open>errno_location_0x16de3_retval \<equiv> errno_location_0x16de3_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x16df5_retval \<equiv> stack_chk_fail_0x16df5_retval\<^sub>v\<close>
definition \<open>nbd_wr_sync_0x1728f_retval \<equiv> nbd_wr_sync_0x1728f_retval\<^sub>v\<close>
definition \<open>fprintf_chk_0x17329_retval \<equiv> fprintf_chk_0x17329_retval\<^sub>v\<close>
definition \<open>errno_location_0x1732e_retval \<equiv> errno_location_0x1732e_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x1737a_retval \<equiv> stack_chk_fail_0x1737a_retval\<^sub>v\<close>
definition \<open>ioctl_0x1739e_retval \<equiv> ioctl_0x1739e_retval\<^sub>v\<close>
definition \<open>ioctl_0x173bd_retval \<equiv> ioctl_0x173bd_retval\<^sub>v\<close>
definition \<open>ioctl_0x173d7_retval \<equiv> ioctl_0x173d7_retval\<^sub>v\<close>
definition \<open>ioctl_0x173f4_retval \<equiv> ioctl_0x173f4_retval\<^sub>v\<close>
definition \<open>errno_location_0x17413_retval \<equiv> errno_location_0x17413_retval\<^sub>v\<close>
definition \<open>fprintf_chk_0x17447_retval \<equiv> fprintf_chk_0x17447_retval\<^sub>v\<close>
definition \<open>errno_location_0x17452_retval \<equiv> errno_location_0x17452_retval\<^sub>v\<close>
definition \<open>errno_location_0x1747a_retval \<equiv> errno_location_0x1747a_retval\<^sub>v\<close>
definition \<open>errno_location_0x174a2_retval \<equiv> errno_location_0x174a2_retval\<^sub>v\<close>

text \<open>
  Going with a binary offset of 0 for now to make things easier. (We do want to keep that field
  around, though, for future more generic usage.)
\<close>
lemma \<alpha>_boffset[simp]: \<open>binary_offset \<alpha> = 0\<close>
  unfolding \<alpha>_def
  by simp

named_theorems blocks and Ps and Qs

method step uses add del =
  subst exec_block.simps,
  rewrite_one_let',
  rewrite_one_let' add: fetch,
  rewrite_one_let',
  auto simp add: simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def step_def exec_instr_def presimplify add simp del: del

method steps uses pre post regionset add del =
  auto simp: pred_logic pre regionset,
  (step add: add del: del)+,
  (auto simp add: eq_def)[1],
  auto simp: block_usage_def eq_def setcc_def cmovcc_def if'_then_else_def sub_sign_flag_def simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def post regionset

method vcg_step uses assms =
  ((rule htriples)+, rule blocks)+,
  (simp add: assms pred_logic Ps Qs)?,
  (((auto simp: eq_def)[])+)?(* ,
  ((simp add: assms pred_logic Ps Qs)+)? *)

method vcg_step' uses assms =
  (rule htriples)+,
  simp,
  ((rule htriples)+, rule blocks)+,
  (simp add: assms pred_logic Ps Qs)?,
  (((auto simp: eq_def)[])+)?

method vcg_while for P :: state_pred uses assms =
  ((rule htriples)+)?,
  rule HTriple_weaken[where P=P],
  simp add: pred_logic Ps Qs assms,
  rule HTriple_while

method vcg uses acode assms =
  subst acode,
  (vcg_step assms: assms)+

end

locale "qcow_snapshot_goto" = "qemu_img_xen" +
  fixes RAX\<^sub>0\<^sub>v RBX\<^sub>0\<^sub>v RCX\<^sub>0\<^sub>v RDX\<^sub>0\<^sub>v RDI\<^sub>0\<^sub>v RSI\<^sub>0\<^sub>v RSP\<^sub>0\<^sub>v RBP\<^sub>0\<^sub>v R13\<^sub>0\<^sub>v R12\<^sub>0\<^sub>v ret_address\<^sub>v :: \<open>64 word\<close>
begin

text \<open>Using definitions that don't get unfolded immediately prevents locale argument issues.\<close>
definition \<open>RAX\<^sub>0 \<equiv> RAX\<^sub>0\<^sub>v\<close>
definition \<open>RBX\<^sub>0 \<equiv> RBX\<^sub>0\<^sub>v\<close>
definition \<open>RCX\<^sub>0 \<equiv> RCX\<^sub>0\<^sub>v\<close>
definition \<open>RDX\<^sub>0 \<equiv> RDX\<^sub>0\<^sub>v\<close>
definition \<open>RDI\<^sub>0 \<equiv> RDI\<^sub>0\<^sub>v\<close>
definition \<open>RSI\<^sub>0 \<equiv> RSI\<^sub>0\<^sub>v\<close>
definition \<open>RSP\<^sub>0 \<equiv> RSP\<^sub>0\<^sub>v\<close>
definition \<open>RBP\<^sub>0 \<equiv> RBP\<^sub>0\<^sub>v\<close>
definition \<open>R13\<^sub>0 \<equiv> R13\<^sub>0\<^sub>v\<close>
definition \<open>R12\<^sub>0 \<equiv> R12\<^sub>0\<^sub>v\<close>
definition \<open>ret_address \<equiv> ret_address\<^sub>v\<close>

definition P_0x15bd0_0 :: state_pred where
  \<open>P_0x15bd0_0 \<sigma> \<equiv> RIP \<sigma> = 0x15bd0 \<and> RAX \<sigma> = RAX\<^sub>0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = RSP\<^sub>0 \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address\<close>
declare P_0x15bd0_0_def[Ps]

definition P_0x15bd0_0_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15bd0_0_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8)
  }\<close>

definition P_0x15bd0_0_regions :: state_pred where
  \<open>P_0x15bd0_0_regions \<sigma> \<equiv> \<exists>regions. P_0x15bd0_0_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15be4_0 :: state_pred where
  \<open>Q_0x15be4_0 \<sigma> \<equiv> RIP \<sigma> = 0x15be4 \<and> RAX \<sigma> = RAX\<^sub>0 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15be4_0_def[Qs]

schematic_goal qcow_snapshot_goto_0_8_0x15bd0_0x15be1_0[blocks]:
  assumes \<open>(P_0x15bd0_0 && P_0x15bd0_0_regions) \<sigma>\<close>
  shows \<open>exec_block 8 0x15be1 0 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15be4_0 ?\<sigma> \<and> block_usage P_0x15bd0_0_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15bd0_0_def P_0x15bd0_0_regions_def post: Q_0x15be4_0_def regionset: P_0x15bd0_0_regions_set_def)

definition P_0x15be4_1 :: state_pred where
  \<open>P_0x15be4_1 \<sigma> \<equiv> RIP \<sigma> = 0x15be4 \<and> RAX \<sigma> = RAX\<^sub>0 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare P_0x15be4_1_def[Ps]

definition P_0x15be4_1_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15be4_1_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15be4_1_regions :: state_pred where
  \<open>P_0x15be4_1_regions \<sigma> \<equiv> \<exists>regions. P_0x15be4_1_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_find_snapshot_by_id_or_name_isra_9_addr_0x15be4_1 :: state_pred where
  \<open>Q_find_snapshot_by_id_or_name_isra_9_addr_0x15be4_1 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x30) \<and> RIP \<sigma> = find_snapshot_by_id_or_name_isra_9_addr \<and> RAX \<sigma> = RAX\<^sub>0 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare Q_find_snapshot_by_id_or_name_isra_9_addr_0x15be4_1_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15be4_0x15be4_1[blocks]:
  assumes \<open>(P_0x15be4_1 && P_0x15be4_1_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15be4 (Suc 0) \<sigma> \<triangleq> ?\<sigma> \<and> Q_find_snapshot_by_id_or_name_isra_9_addr_0x15be4_1 ?\<sigma> \<and> block_usage P_0x15be4_1_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15be4_1_def P_0x15be4_1_regions_def post: Q_find_snapshot_by_id_or_name_isra_9_addr_0x15be4_1_def regionset: P_0x15be4_1_regions_set_def)

definition P_0x15be9_2 :: state_pred where
  \<open>P_0x15be9_2 \<sigma> \<equiv> RIP \<sigma> = 0x15be9 \<and> RAX \<sigma> = find_snapshot_by_id_or_name_isra_9_0x15be4_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare P_0x15be9_2_def[Ps]

definition P_0x15be9_2_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15be9_2_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15be9_2_regions :: state_pred where
  \<open>P_0x15be9_2_regions \<sigma> \<equiv> \<exists>regions. P_0x15be9_2_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15beb_2 :: state_pred where
  \<open>Q_0x15beb_2 \<sigma> \<equiv> RIP \<sigma> = 0x15beb \<and> RAX \<sigma> = find_snapshot_by_id_or_name_isra_9_0x15be4_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare Q_0x15beb_2_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15be9_0x15be9_2[blocks]:
  assumes \<open>(P_0x15be9_2 && P_0x15be9_2_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15be9 2 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15beb_2 ?\<sigma> \<and> block_usage P_0x15be9_2_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15be9_2_def P_0x15be9_2_regions_def post: Q_0x15beb_2_def regionset: P_0x15be9_2_regions_set_def)

definition P_0x15beb_true_3 :: state_pred where
  \<open>P_0x15beb_true_3 \<sigma> \<equiv> RIP \<sigma> = 0x15beb \<and> RAX \<sigma> = find_snapshot_by_id_or_name_isra_9_0x15be4_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare P_0x15beb_true_3_def[Ps]

definition P_0x15beb_true_3_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15beb_true_3_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15beb_true_3_regions :: state_pred where
  \<open>P_0x15beb_true_3_regions \<sigma> \<equiv> \<exists>regions. P_0x15beb_true_3_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_3 :: state_pred where
  \<open>Q_0x15cbb_3 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_3_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15beb_0x15cdc_3[blocks]:
  assumes \<open>(P_0x15beb_true_3 && P_0x15beb_true_3_regions && SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cdc 3 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_3 ?\<sigma> \<and> block_usage P_0x15beb_true_3_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15beb_true_3_def P_0x15beb_true_3_regions_def post: Q_0x15cbb_3_def regionset: P_0x15beb_true_3_regions_set_def)

definition P_0x15beb_false_4 :: state_pred where
  \<open>P_0x15beb_false_4 \<sigma> \<equiv> RIP \<sigma> = 0x15beb \<and> RAX \<sigma> = find_snapshot_by_id_or_name_isra_9_0x15be4_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare P_0x15beb_false_4_def[Ps]

definition P_0x15beb_false_4_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15beb_false_4_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15beb_false_4_regions :: state_pred where
  \<open>P_0x15beb_false_4_regions \<sigma> \<equiv> \<exists>regions. P_0x15beb_false_4_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c1b_4 :: state_pred where
  \<open>Q_0x15c1b_4 \<sigma> \<equiv> RIP \<sigma> = 0x15c1b \<and> RAX \<sigma> = (((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare Q_0x15c1b_4_def[Qs]

schematic_goal qcow_snapshot_goto_0_11_0x15beb_0x15c18_4[blocks]:
  assumes \<open>(P_0x15beb_false_4 && P_0x15beb_false_4_regions && ! SF) \<sigma>\<close>
  shows \<open>exec_block 11 0x15c18 4 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c1b_4 ?\<sigma> \<and> block_usage P_0x15beb_false_4_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15beb_false_4_def P_0x15beb_false_4_regions_def post: Q_0x15c1b_4_def regionset: P_0x15beb_false_4_regions_set_def)

definition P_0x15c1b_5 :: state_pred where
  \<open>P_0x15c1b_5 \<sigma> \<equiv> RIP \<sigma> = 0x15c1b \<and> RAX \<sigma> = (((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15be9\<close>
declare P_0x15c1b_5_def[Ps]

definition P_0x15c1b_5_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c1b_5_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c1b_5_regions :: state_pred where
  \<open>P_0x15c1b_5_regions \<sigma> \<equiv> \<exists>regions. P_0x15c1b_5_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_update_snapshot_refcount_addr_0x15c1b_5 :: state_pred where
  \<open>Q_update_snapshot_refcount_addr_0x15c1b_5 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x30) \<and> RIP \<sigma> = update_snapshot_refcount_addr \<and> RAX \<sigma> = (((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare Q_update_snapshot_refcount_addr_0x15c1b_5_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c1b_0x15c1b_5[blocks]:
  assumes \<open>(P_0x15c1b_5 && P_0x15c1b_5_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c1b 5 \<sigma> \<triangleq> ?\<sigma> \<and> Q_update_snapshot_refcount_addr_0x15c1b_5 ?\<sigma> \<and> block_usage P_0x15c1b_5_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c1b_5_def P_0x15c1b_5_regions_def post: Q_update_snapshot_refcount_addr_0x15c1b_5_def regionset: P_0x15c1b_5_regions_set_def)

definition P_0x15c20_6 :: state_pred where
  \<open>P_0x15c20_6 \<sigma> \<equiv> RIP \<sigma> = 0x15c20 \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare P_0x15c20_6_def[Ps]

definition P_0x15c20_6_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c20_6_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c20_6_regions :: state_pred where
  \<open>P_0x15c20_6_regions \<sigma> \<equiv> \<exists>regions. P_0x15c20_6_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c22_6 :: state_pred where
  \<open>Q_0x15c22_6 \<sigma> \<equiv> RIP \<sigma> = 0x15c22 \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare Q_0x15c22_6_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c20_0x15c20_6[blocks]:
  assumes \<open>(P_0x15c20_6 && P_0x15c20_6_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c20 6 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c22_6 ?\<sigma> \<and> block_usage P_0x15c20_6_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c20_6_def P_0x15c20_6_regions_def post: Q_0x15c22_6_def regionset: P_0x15c20_6_regions_set_def)

definition P_0x15c22_true_7 :: state_pred where
  \<open>P_0x15c22_true_7 \<sigma> \<equiv> RIP \<sigma> = 0x15c22 \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare P_0x15c22_true_7_def[Ps]

definition P_0x15c22_true_7_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c22_true_7_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c22_true_7_regions :: state_pred where
  \<open>P_0x15c22_true_7_regions \<sigma> \<equiv> \<exists>regions. P_0x15c22_true_7_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_7 :: state_pred where
  \<open>Q_0x15cbb_7 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_7_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c22_0x15cd5_7[blocks]:
  assumes \<open>(P_0x15c22_true_7 && P_0x15c22_true_7_regions && SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cd5 7 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_7 ?\<sigma> \<and> block_usage P_0x15c22_true_7_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c22_true_7_def P_0x15c22_true_7_regions_def post: Q_0x15cbb_7_def regionset: P_0x15c22_true_7_regions_set_def)

definition P_0x15c22_false_8 :: state_pred where
  \<open>P_0x15c22_false_8 \<sigma> \<equiv> RIP \<sigma> = 0x15c22 \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare P_0x15c22_false_8_def[Ps]

definition P_0x15c22_false_8_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c22_false_8_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c22_false_8_regions :: state_pred where
  \<open>P_0x15c22_false_8_regions \<sigma> \<equiv> \<exists>regions. P_0x15c22_false_8_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c2f_8 :: state_pred where
  \<open>Q_0x15c2f_8 \<sigma> \<equiv> RIP \<sigma> = 0x15c2f \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare Q_0x15c2f_8_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c22_0x15c2c_8[blocks]:
  assumes \<open>(P_0x15c22_false_8 && P_0x15c22_false_8_regions && ! SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15c2c 8 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c2f_8 ?\<sigma> \<and> block_usage P_0x15c22_false_8_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c22_false_8_def P_0x15c22_false_8_regions_def post: Q_0x15c2f_8_def regionset: P_0x15c22_false_8_regions_set_def)

definition P_0x15c2f_9 :: state_pred where
  \<open>P_0x15c2f_9 \<sigma> \<equiv> RIP \<sigma> = 0x15c2f \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c20\<close>
declare P_0x15c2f_9_def[Ps]

definition P_0x15c2f_9_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c2f_9_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c2f_9_regions :: state_pred where
  \<open>P_0x15c2f_9_regions \<sigma> \<equiv> \<exists>regions. P_0x15c2f_9_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_grow_l1_table_addr_0x15c2f_9 :: state_pred where
  \<open>Q_grow_l1_table_addr_0x15c2f_9 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x30) \<and> RIP \<sigma> = grow_l1_table_addr \<and> RAX \<sigma> = update_snapshot_refcount_0x15c1b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34\<close>
declare Q_grow_l1_table_addr_0x15c2f_9_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c2f_0x15c2f_9[blocks]:
  assumes \<open>(P_0x15c2f_9 && P_0x15c2f_9_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c2f 9 \<sigma> \<triangleq> ?\<sigma> \<and> Q_grow_l1_table_addr_0x15c2f_9 ?\<sigma> \<and> block_usage P_0x15c2f_9_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c2f_9_def P_0x15c2f_9_regions_def post: Q_grow_l1_table_addr_0x15c2f_9_def regionset: P_0x15c2f_9_regions_set_def)

definition P_0x15c34_10 :: state_pred where
  \<open>P_0x15c34_10 \<sigma> \<equiv> RIP \<sigma> = 0x15c34 \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34\<close>
declare P_0x15c34_10_def[Ps]

definition P_0x15c34_10_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c34_10_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c34_10_regions :: state_pred where
  \<open>P_0x15c34_10_regions \<sigma> \<equiv> \<exists>regions. P_0x15c34_10_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c36_10 :: state_pred where
  \<open>Q_0x15c36_10 \<sigma> \<equiv> RIP \<sigma> = 0x15c36 \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34\<close>
declare Q_0x15c36_10_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c34_0x15c34_10[blocks]:
  assumes \<open>(P_0x15c34_10 && P_0x15c34_10_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c34 10 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c36_10 ?\<sigma> \<and> block_usage P_0x15c34_10_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c34_10_def P_0x15c34_10_regions_def post: Q_0x15c36_10_def regionset: P_0x15c34_10_regions_set_def)

definition P_0x15c36_true_11 :: state_pred where
  \<open>P_0x15c36_true_11 \<sigma> \<equiv> RIP \<sigma> = 0x15c36 \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34\<close>
declare P_0x15c36_true_11_def[Ps]

definition P_0x15c36_true_11_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c36_true_11_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8)
  }\<close>

definition P_0x15c36_true_11_regions :: state_pred where
  \<open>P_0x15c36_true_11_regions \<sigma> \<equiv> \<exists>regions. P_0x15c36_true_11_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_11 :: state_pred where
  \<open>Q_0x15cbb_11 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_11_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c36_0x15cd5_11[blocks]:
  assumes \<open>(P_0x15c36_true_11 && P_0x15c36_true_11_regions && SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cd5 11 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_11 ?\<sigma> \<and> block_usage P_0x15c36_true_11_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c36_true_11_def P_0x15c36_true_11_regions_def post: Q_0x15cbb_11_def regionset: P_0x15c36_true_11_regions_set_def)

definition P_0x15c36_false_12 :: state_pred where
  \<open>P_0x15c36_false_12 \<sigma> \<equiv> RIP \<sigma> = 0x15c36 \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34\<close>
declare P_0x15c36_false_12_def[Ps]

definition P_0x15c36_false_12_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c36_false_12_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c36_false_12_regions :: state_pred where
  \<open>P_0x15c36_false_12_regions \<sigma> \<equiv> \<exists>regions. P_0x15c36_false_12_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c56_12 :: state_pred where
  \<open>Q_0x15c56_12 \<sigma> \<equiv> RIP \<sigma> = 0x15c56 \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c56_12_def[Qs]

schematic_goal qcow_snapshot_goto_0_8_0x15c36_0x15c53_12[blocks]:
  assumes \<open>(P_0x15c36_false_12 && P_0x15c36_false_12_regions && ! SF) \<sigma>\<close>
  shows \<open>exec_block 8 0x15c53 12 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c56_12 ?\<sigma> \<and> block_usage P_0x15c36_false_12_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c36_false_12_def P_0x15c36_false_12_regions_def post: Q_0x15c56_12_def regionset: P_0x15c36_false_12_regions_set_def)

definition P_0x15c56_13 :: state_pred where
  \<open>P_0x15c56_13 \<sigma> \<equiv> RIP \<sigma> = 0x15c56 \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c34 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c56_13_def[Ps]

definition P_0x15c56_13_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c56_13_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c56_13_regions :: state_pred where
  \<open>P_0x15c56_13_regions \<sigma> \<equiv> \<exists>regions. P_0x15c56_13_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_pread_addr_0x15c56_13 :: state_pred where
  \<open>Q_bdrv_pread_addr_0x15c56_13 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x30) \<and> RIP \<sigma> = bdrv_pread_addr \<and> RAX \<sigma> = grow_l1_table_0x15c2f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pread_addr_0x15c56_13_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c56_0x15c56_13[blocks]:
  assumes \<open>(P_0x15c56_13 && P_0x15c56_13_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c56 13 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pread_addr_0x15c56_13 ?\<sigma> \<and> block_usage P_0x15c56_13_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c56_13_def P_0x15c56_13_regions_def post: Q_bdrv_pread_addr_0x15c56_13_def regionset: P_0x15c56_13_regions_set_def)

definition P_0x15c5b_14 :: state_pred where
  \<open>P_0x15c5b_14 \<sigma> \<equiv> RIP \<sigma> = 0x15c5b \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c5b_14_def[Ps]

definition P_0x15c5b_14_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c5b_14_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c5b_14_regions :: state_pred where
  \<open>P_0x15c5b_14_regions \<sigma> \<equiv> \<exists>regions. P_0x15c5b_14_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c61_14 :: state_pred where
  \<open>Q_0x15c61_14 \<sigma> \<equiv> RIP \<sigma> = 0x15c61 \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c61_14_def[Qs]

schematic_goal qcow_snapshot_goto_0_2_0x15c5b_0x15c5e_14[blocks]:
  assumes \<open>(P_0x15c5b_14 && P_0x15c5b_14_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x15c5e 14 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c61_14 ?\<sigma> \<and> block_usage P_0x15c5b_14_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c5b_14_def P_0x15c5b_14_regions_def post: Q_0x15c61_14_def regionset: P_0x15c5b_14_regions_set_def)

definition P_0x15c61_true_15 :: state_pred where
  \<open>P_0x15c61_true_15 \<sigma> \<equiv> RIP \<sigma> = 0x15c61 \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c61_true_15_def[Ps]

definition P_0x15c61_true_15_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c61_true_15_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c61_true_15_regions :: state_pred where
  \<open>P_0x15c61_true_15_regions \<sigma> \<equiv> \<exists>regions. P_0x15c61_true_15_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_15 :: state_pred where
  \<open>Q_0x15cbb_15 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_15_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c61_0x15cd5_15[blocks]:
  assumes \<open>(P_0x15c61_true_15 && P_0x15c61_true_15_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cd5 15 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_15 ?\<sigma> \<and> block_usage P_0x15c61_true_15_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c61_true_15_def P_0x15c61_true_15_regions_def post: Q_0x15cbb_15_def regionset: P_0x15c61_true_15_regions_set_def)

definition P_0x15c61_false_16 :: state_pred where
  \<open>P_0x15c61_false_16 \<sigma> \<equiv> RIP \<sigma> = 0x15c61 \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c61_false_16_def[Ps]

definition P_0x15c61_false_16_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c61_false_16_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c61_false_16_regions :: state_pred where
  \<open>P_0x15c61_false_16_regions \<sigma> \<equiv> \<exists>regions. P_0x15c61_false_16_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c70_16 :: state_pred where
  \<open>Q_0x15c70_16 \<sigma> \<equiv> RIP \<sigma> = 0x15c70 \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c70_16_def[Qs]

schematic_goal qcow_snapshot_goto_0_5_0x15c61_0x15c6d_16[blocks]:
  assumes \<open>(P_0x15c61_false_16 && P_0x15c61_false_16_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 5 0x15c6d 16 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c70_16 ?\<sigma> \<and> block_usage P_0x15c61_false_16_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c61_false_16_def P_0x15c61_false_16_regions_def post: Q_0x15c70_16_def regionset: P_0x15c61_false_16_regions_set_def)

definition P_0x15c70_17 :: state_pred where
  \<open>P_0x15c70_17 \<sigma> \<equiv> RIP \<sigma> = 0x15c70 \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c5b \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c70_17_def[Ps]

definition P_0x15c70_17_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c70_17_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c70_17_regions :: state_pred where
  \<open>P_0x15c70_17_regions \<sigma> \<equiv> \<exists>regions. P_0x15c70_17_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_pwrite_addr_0x15c70_17 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x15c70_17 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x30) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = bdrv_pread_0x15c56_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x15c70_17_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c70_0x15c70_17[blocks]:
  assumes \<open>(P_0x15c70_17 && P_0x15c70_17_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c70 17 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x15c70_17 ?\<sigma> \<and> block_usage P_0x15c70_17_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c70_17_def P_0x15c70_17_regions_def post: Q_bdrv_pwrite_addr_0x15c70_17_def regionset: P_0x15c70_17_regions_set_def)

definition P_0x15c75_18 :: state_pred where
  \<open>P_0x15c75_18 \<sigma> \<equiv> RIP \<sigma> = 0x15c75 \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c75_18_def[Ps]

definition P_0x15c75_18_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c75_18_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c75_18_regions :: state_pred where
  \<open>P_0x15c75_18_regions \<sigma> \<equiv> \<exists>regions. P_0x15c75_18_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c78_18 :: state_pred where
  \<open>Q_0x15c78_18 \<sigma> \<equiv> RIP \<sigma> = 0x15c78 \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c78_18_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c75_0x15c75_18[blocks]:
  assumes \<open>(P_0x15c75_18 && P_0x15c75_18_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c75 18 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c78_18 ?\<sigma> \<and> block_usage P_0x15c75_18_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c75_18_def P_0x15c75_18_regions_def post: Q_0x15c78_18_def regionset: P_0x15c75_18_regions_set_def)

definition P_0x15c78_true_19 :: state_pred where
  \<open>P_0x15c78_true_19 \<sigma> \<equiv> RIP \<sigma> = 0x15c78 \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c78_true_19_def[Ps]

definition P_0x15c78_true_19_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c78_true_19_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c78_true_19_regions :: state_pred where
  \<open>P_0x15c78_true_19_regions \<sigma> \<equiv> \<exists>regions. P_0x15c78_true_19_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_19 :: state_pred where
  \<open>Q_0x15cbb_19 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_19_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c78_0x15cd5_19[blocks]:
  assumes \<open>(P_0x15c78_true_19 && P_0x15c78_true_19_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cd5 19 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_19 ?\<sigma> \<and> block_usage P_0x15c78_true_19_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c78_true_19_def P_0x15c78_true_19_regions_def post: Q_0x15cbb_19_def regionset: P_0x15c78_true_19_regions_set_def)

definition P_0x15c78_false_20 :: state_pred where
  \<open>P_0x15c78_false_20 \<sigma> \<equiv> RIP \<sigma> = 0x15c78 \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c78_false_20_def[Ps]

definition P_0x15c78_false_20_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c78_false_20_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c78_false_20_regions :: state_pred where
  \<open>P_0x15c78_false_20_regions \<sigma> \<equiv> \<exists>regions. P_0x15c78_false_20_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c7f_20 :: state_pred where
  \<open>Q_0x15c7f_20 \<sigma> \<equiv> RIP \<sigma> = 0x15c7f \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c7f_20_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c78_0x15c7d_20[blocks]:
  assumes \<open>(P_0x15c78_false_20 && P_0x15c78_false_20_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15c7d 20 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c7f_20 ?\<sigma> \<and> block_usage P_0x15c78_false_20_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c78_false_20_def P_0x15c78_false_20_regions_def post: Q_0x15c7f_20_def regionset: P_0x15c78_false_20_regions_set_def)

definition P_0x15c7f_true_21 :: state_pred where
  \<open>P_0x15c7f_true_21 \<sigma> \<equiv> RIP \<sigma> = 0x15c7f \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c7f_true_21_def[Ps]

definition P_0x15c7f_true_21_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c7f_true_21_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c7f_true_21_regions :: state_pred where
  \<open>P_0x15c7f_true_21_regions \<sigma> \<equiv> \<exists>regions. P_0x15c7f_true_21_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15ca4_21 :: state_pred where
  \<open>Q_0x15ca4_21 \<sigma> \<equiv> RIP \<sigma> = 0x15ca4 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15ca4_21_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15c7f_0x15c7f_21[blocks]:
  assumes \<open>(P_0x15c7f_true_21 && P_0x15c7f_true_21_regions && jle) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15c7f 21 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15ca4_21 ?\<sigma> \<and> block_usage P_0x15c7f_true_21_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c7f_true_21_def P_0x15c7f_true_21_regions_def post: Q_0x15ca4_21_def regionset: P_0x15c7f_true_21_regions_set_def)

definition P_0x15c7f_false_22 :: state_pred where
  \<open>P_0x15c7f_false_22 \<sigma> \<equiv> RIP \<sigma> = 0x15c7f \<and> RAX \<sigma> = bdrv_pwrite_0x15c70_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c7f_false_22_def[Ps]

definition P_0x15c7f_false_22_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c7f_false_22_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c7f_false_22_regions :: state_pred where
  \<open>P_0x15c7f_false_22_regions \<sigma> \<equiv> \<exists>regions. P_0x15c7f_false_22_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c88_22 :: state_pred where
  \<open>Q_0x15c88_22 \<sigma> \<equiv> RIP \<sigma> = 0x15c88 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c88_22_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15c7f_0x15c83_22[blocks]:
  assumes \<open>(P_0x15c7f_false_22 && P_0x15c7f_false_22_regions && ! jle) \<sigma>\<close>
  shows \<open>exec_block 3 0x15c83 22 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c88_22 ?\<sigma> \<and> block_usage P_0x15c7f_false_22_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c7f_false_22_def P_0x15c7f_false_22_regions_def post: Q_0x15c88_22_def regionset: P_0x15c7f_false_22_regions_set_def)

definition P_0x15c88_23 :: state_pred where
  \<open>P_0x15c88_23 \<sigma> \<equiv> RIP \<sigma> = 0x15c88 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15c88_23_def[Ps]

definition P_0x15c88_23_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15c88_23_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word)::64 word) + (\<langle>63,0\<rangle>((RAX \<sigma>::64 word) * 0x8)::64 word)), 8),
    (8, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15c88_23_regions :: state_pred where
  \<open>P_0x15c88_23_regions \<sigma> \<equiv> \<exists>regions. P_0x15c88_23_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15ca2_23 :: state_pred where
  \<open>Q_0x15ca2_23 \<sigma> \<equiv> RIP \<sigma> = 0x15ca2 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15ca2_23_def[Qs]

schematic_goal qcow_snapshot_goto_0_8_0x15c88_0x15ca0_23[blocks]:
  assumes \<open>(P_0x15c88_23 && P_0x15c88_23_regions) \<sigma>\<close>
  shows \<open>exec_block 8 0x15ca0 23 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15ca2_23 ?\<sigma> \<and> block_usage P_0x15c88_23_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15c88_23_def P_0x15c88_23_regions_def post: Q_0x15ca2_23_def regionset: P_0x15c88_23_regions_set_def)

definition P_0x15ca2_true_24 :: state_pred where
  \<open>P_0x15ca2_true_24 \<sigma> \<equiv> RIP \<sigma> = 0x15ca2 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15ca2_true_24_def[Ps]

definition P_0x15ca2_true_24_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15ca2_true_24_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15ca2_true_24_regions :: state_pred where
  \<open>P_0x15ca2_true_24_regions \<sigma> \<equiv> \<exists>regions. P_0x15ca2_true_24_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15c88_24 :: state_pred where
  \<open>Q_0x15c88_24 \<sigma> \<equiv> RIP \<sigma> = 0x15c88 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15c88_24_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15ca2_0x15ca2_24[blocks]:
  assumes \<open>(P_0x15ca2_true_24 && P_0x15ca2_true_24_regions && jg) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15ca2 24 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15c88_24 ?\<sigma> \<and> block_usage P_0x15ca2_true_24_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15ca2_true_24_def P_0x15ca2_true_24_regions_def post: Q_0x15c88_24_def regionset: P_0x15ca2_true_24_regions_set_def)

definition P_0x15ca2_false_25 :: state_pred where
  \<open>P_0x15ca2_false_25 \<sigma> \<equiv> RIP \<sigma> = 0x15ca2 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15ca2_false_25_def[Ps]

definition P_0x15ca2_false_25_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15ca2_false_25_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15ca2_false_25_regions :: state_pred where
  \<open>P_0x15ca2_false_25_regions \<sigma> \<equiv> \<exists>regions. P_0x15ca2_false_25_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15ca4_25 :: state_pred where
  \<open>Q_0x15ca4_25 \<sigma> \<equiv> RIP \<sigma> = 0x15ca4 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15ca4_25_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15ca2_0x15ca2_25[blocks]:
  assumes \<open>(P_0x15ca2_false_25 && P_0x15ca2_false_25_regions && ! jg) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15ca2 25 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15ca4_25 ?\<sigma> \<and> block_usage P_0x15ca2_false_25_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15ca2_false_25_def P_0x15ca2_false_25_regions_def post: Q_0x15ca4_25_def regionset: P_0x15ca2_false_25_regions_set_def)

definition P_0x15ca4_26 :: state_pred where
  \<open>P_0x15ca4_26 \<sigma> \<equiv> RIP \<sigma> = 0x15ca4 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15ca4_26_def[Ps]

definition P_0x15ca4_26_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15ca4_26_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15ca4_26_regions :: state_pred where
  \<open>P_0x15ca4_26_regions \<sigma> \<equiv> \<exists>regions. P_0x15ca4_26_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cb0_26 :: state_pred where
  \<open>Q_0x15cb0_26 \<sigma> \<equiv> RIP \<sigma> = 0x15cb0 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15cb0_26_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15ca4_0x15cad_26[blocks]:
  assumes \<open>(P_0x15ca4_26 && P_0x15ca4_26_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cad 26 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cb0_26 ?\<sigma> \<and> block_usage P_0x15ca4_26_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15ca4_26_def P_0x15ca4_26_regions_def post: Q_0x15cb0_26_def regionset: P_0x15ca4_26_regions_set_def)

definition P_0x15cb0_27 :: state_pred where
  \<open>P_0x15cb0_27 \<sigma> \<equiv> RIP \<sigma> = 0x15cb0 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15c75 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15cb0_27_def[Ps]

definition P_0x15cb0_27_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15cb0_27_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15cb0_27_regions :: state_pred where
  \<open>P_0x15cb0_27_regions \<sigma> \<equiv> \<exists>regions. P_0x15cb0_27_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_update_snapshot_refcount_addr_0x15cb0_27 :: state_pred where
  \<open>Q_update_snapshot_refcount_addr_0x15cb0_27 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x30) \<and> RIP \<sigma> = update_snapshot_refcount_addr \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15cb5 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_update_snapshot_refcount_addr_0x15cb0_27_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15cb0_0x15cb0_27[blocks]:
  assumes \<open>(P_0x15cb0_27 && P_0x15cb0_27_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15cb0 27 \<sigma> \<triangleq> ?\<sigma> \<and> Q_update_snapshot_refcount_addr_0x15cb0_27 ?\<sigma> \<and> block_usage P_0x15cb0_27_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15cb0_27_def P_0x15cb0_27_regions_def post: Q_update_snapshot_refcount_addr_0x15cb0_27_def regionset: P_0x15cb0_27_regions_set_def)

definition P_0x15cb5_28 :: state_pred where
  \<open>P_0x15cb5_28 \<sigma> \<equiv> RIP \<sigma> = 0x15cb5 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15cb5 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15cb5_28_def[Ps]

definition P_0x15cb5_28_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15cb5_28_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15cb5_28_regions :: state_pred where
  \<open>P_0x15cb5_28_regions \<sigma> \<equiv> \<exists>regions. P_0x15cb5_28_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cb7_28 :: state_pred where
  \<open>Q_0x15cb7_28 \<sigma> \<equiv> RIP \<sigma> = 0x15cb7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15cb5 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15cb7_28_def[Qs]

schematic_goal qcow_snapshot_goto_0_1_0x15cb5_0x15cb5_28[blocks]:
  assumes \<open>(P_0x15cb5_28 && P_0x15cb5_28_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15cb5 28 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cb7_28 ?\<sigma> \<and> block_usage P_0x15cb5_28_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15cb5_28_def P_0x15cb5_28_regions_def post: Q_0x15cb7_28_def regionset: P_0x15cb5_28_regions_set_def)

definition P_0x15cb7_true_29 :: state_pred where
  \<open>P_0x15cb7_true_29 \<sigma> \<equiv> RIP \<sigma> = 0x15cb7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15cb5 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15cb7_true_29_def[Ps]

definition P_0x15cb7_true_29_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15cb7_true_29_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15cb7_true_29_regions :: state_pred where
  \<open>P_0x15cb7_true_29_regions \<sigma> \<equiv> \<exists>regions. P_0x15cb7_true_29_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_29 :: state_pred where
  \<open>Q_0x15cbb_29 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_29_def[Qs]

schematic_goal qcow_snapshot_goto_0_3_0x15cb7_0x15cd5_29[blocks]:
  assumes \<open>(P_0x15cb7_true_29 && P_0x15cb7_true_29_regions && SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x15cd5 29 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_29 ?\<sigma> \<and> block_usage P_0x15cb7_true_29_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15cb7_true_29_def P_0x15cb7_true_29_regions_def post: Q_0x15cbb_29_def regionset: P_0x15cb7_true_29_regions_set_def)

definition P_0x15cb7_false_30 :: state_pred where
  \<open>P_0x15cb7_false_30 \<sigma> \<equiv> RIP \<sigma> = 0x15cb7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x1 \<and> RDX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> R13 \<sigma> = ucast ((\<langle>31,0\<rangle>bdrv_pread_0x15c56_retval::32 word)) \<and> R12 \<sigma> = ucast (((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)::32 word))::32 word) << 3)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = 0x15cb5 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15cb7_false_30_def[Ps]

definition P_0x15cb7_false_30_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15cb7_false_30_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word))::64 word) + 0x8), 4),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x1c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x38), 8),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x40), 8),
    (6, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (7, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>(((\<langle>63,0\<rangle>(sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word)::64 word)::64 word) * 0x8)::64 word)::64 word) - (sextend (ucast ((\<langle>31,0\<rangle>find_snapshot_by_id_or_name_isra_9_0x15be4_retval::32 word))) 32 64::64 word))::64 word) * 0x8)::64 word)), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15cb7_false_30_regions :: state_pred where
  \<open>P_0x15cb7_false_30_regions \<sigma> \<equiv> \<exists>regions. P_0x15cb7_false_30_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15cbb_30 :: state_pred where
  \<open>Q_0x15cbb_30 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_0x15cbb_30_def[Qs]

schematic_goal qcow_snapshot_goto_0_2_0x15cb7_0x15cb9_30[blocks]:
  assumes \<open>(P_0x15cb7_false_30 && P_0x15cb7_false_30_regions && ! SF) \<sigma>\<close>
  shows \<open>exec_block 2 0x15cb9 30 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15cbb_30 ?\<sigma> \<and> block_usage P_0x15cb7_false_30_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15cb7_false_30_def P_0x15cb7_false_30_regions_def post: Q_0x15cbb_30_def regionset: P_0x15cb7_false_30_regions_set_def)

definition P_0x15cbb_31 :: state_pred where
  \<open>P_0x15cbb_31 \<sigma> \<equiv> RIP \<sigma> = 0x15cbb \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x28) \<and> RBP \<sigma> = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare P_0x15cbb_31_def[Ps]

definition P_0x15cbb_31_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15cbb_31_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8)
  }\<close>

definition P_0x15cbb_31_regions :: state_pred where
  \<open>P_0x15cbb_31_regions \<sigma> \<equiv> \<exists>regions. P_0x15cbb_31_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_ret_address_31 :: state_pred where
  \<open>Q_ret_address_31 \<sigma> \<equiv> RIP \<sigma> = ret_address \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) + 0x8) \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = RBX\<^sub>0\<close>
declare Q_ret_address_31_def[Qs]

schematic_goal qcow_snapshot_goto_0_6_0x15cbb_0x15cc5_31[blocks]:
  assumes \<open>(P_0x15cbb_31 && P_0x15cbb_31_regions) \<sigma>\<close>
  shows \<open>exec_block 6 0x15cc5 31 \<sigma> \<triangleq> ?\<sigma> \<and> Q_ret_address_31 ?\<sigma> \<and> block_usage P_0x15cbb_31_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15cbb_31_def P_0x15cbb_31_regions_def post: Q_ret_address_31_def regionset: P_0x15cbb_31_regions_set_def)

definition qcow_snapshot_goto_acode :: ACode where
  \<open>qcow_snapshot_goto_acode =
    Block 8 0x15be1 0;
    Block (Suc 0) 0x15be4 (Suc 0);
    CALL find_snapshot_by_id_or_name_isra_9_acode;
    Block (Suc 0) 0x15be9 2;
    IF SF THEN
      Block 3 0x15cdc 3
    ELSE
      Block 11 0x15c18 4;
      Block (Suc 0) 0x15c1b 5;
      CALL update_snapshot_refcount_acode;
      Block (Suc 0) 0x15c20 6;
      IF SF THEN
        Block 3 0x15cd5 7
      ELSE
        Block 3 0x15c2c 8;
        Block (Suc 0) 0x15c2f 9;
        CALL grow_l1_table_acode;
        Block (Suc 0) 0x15c34 10;
        IF SF THEN
          Block 3 0x15cd5 11
        ELSE
          Block 8 0x15c53 12;
          Block (Suc 0) 0x15c56 13;
          CALL bdrv_pread_acode;
          Block 2 0x15c5e 14;
          IF !ZF THEN
            Block 3 0x15cd5 15
          ELSE
            Block 5 0x15c6d 16;
            Block (Suc 0) 0x15c70 17;
            CALL bdrv_pwrite_acode;
            Block (Suc 0) 0x15c75 18;
            IF !ZF THEN
              Block 3 0x15cd5 19
            ELSE
              Block 3 0x15c7d 20;
              IF jle THEN
                Block (Suc 0) 0x15c7f 21
              ELSE
                Block 3 0x15c83 22;
                WHILE P_0x15c88_23 DO
                  Block 8 0x15ca0 23;
                  IF jg THEN
                    Block (Suc 0) 0x15ca2 24
                  ELSE
                    Block (Suc 0) 0x15ca2 25
                  FI
                OD
              FI;
              Block 3 0x15cad 26;
              Block (Suc 0) 0x15cb0 27;
              CALL update_snapshot_refcount_acode;
              Block (Suc 0) 0x15cb5 28;
              IF SF THEN
                Block 3 0x15cd5 29
              ELSE
                Block 2 0x15cb9 30
              FI
            FI
          FI
        FI
      FI
    FI;
    Block 6 0x15cc5 31
  \<close>

schematic_goal "qcow_snapshot_goto":
  assumes
    \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15be4 \<longrightarrow> P_0x15be4_1_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15be9 \<longrightarrow> P_0x15be9_2_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15beb \<longrightarrow> P_0x15beb_true_3_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15beb \<longrightarrow> P_0x15beb_false_4_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c1b \<longrightarrow> P_0x15c1b_5_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c20 \<longrightarrow> P_0x15c20_6_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c22 \<longrightarrow> P_0x15c22_true_7_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c22 \<longrightarrow> P_0x15c22_false_8_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c2f \<longrightarrow> P_0x15c2f_9_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c34 \<longrightarrow> P_0x15c34_10_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c36 \<longrightarrow> P_0x15c36_true_11_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c36 \<longrightarrow> P_0x15c36_false_12_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c56 \<longrightarrow> P_0x15c56_13_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c5b \<longrightarrow> P_0x15c5b_14_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c61 \<longrightarrow> P_0x15c61_true_15_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c61 \<longrightarrow> P_0x15c61_false_16_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c70 \<longrightarrow> P_0x15c70_17_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c75 \<longrightarrow> P_0x15c75_18_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c78 \<longrightarrow> P_0x15c78_true_19_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c78 \<longrightarrow> P_0x15c78_false_20_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c7f \<longrightarrow> P_0x15c7f_true_21_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c7f \<longrightarrow> P_0x15c7f_false_22_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15c88 \<longrightarrow> P_0x15c88_23_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15ca2 \<longrightarrow> P_0x15ca2_true_24_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15ca2 \<longrightarrow> P_0x15ca2_false_25_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15ca4 \<longrightarrow> P_0x15ca4_26_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15cb0 \<longrightarrow> P_0x15cb0_27_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15cb5 \<longrightarrow> P_0x15cb5_28_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15cb7 \<longrightarrow> P_0x15cb7_true_29_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15cb7 \<longrightarrow> P_0x15cb7_false_30_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15cbb \<longrightarrow> P_0x15cbb_31_regions \<sigma>\<close>
    and [blocks]: \<open>{{Q_find_snapshot_by_id_or_name_isra_9_addr_0x15be4_1}} \<box>find_snapshot_by_id_or_name_isra_9_acode {{P_0x15be9_2;M_0x15be4}}\<close>
    and [blocks]: \<open>{{Q_update_snapshot_refcount_addr_0x15c1b_5}} \<box>update_snapshot_refcount_acode {{P_0x15c20_6;M_0x15c1b}}\<close>
    and [blocks]: \<open>{{Q_grow_l1_table_addr_0x15c2f_9}} \<box>grow_l1_table_acode {{P_0x15c34_10;M_0x15c2f}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pread_addr_0x15c56_13}} \<box>bdrv_pread_acode {{P_0x15c5b_14;M_0x15c56}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x15c70_17}} \<box>bdrv_pwrite_acode {{P_0x15c75_18;M_0x15c70}}\<close>
    and [blocks]: \<open>{{Q_update_snapshot_refcount_addr_0x15cb0_27}} \<box>update_snapshot_refcount_acode {{P_0x15cb5_28;M_0x15cb0}}\<close>
  shows \<open>{{?P}} qcow_snapshot_goto_acode {{?Q;?M}}\<close>
  apply (vcg acode: qcow_snapshot_goto_acode_def assms: assms)
                      apply (vcg_while \<open>P_0x15c88_23 || P_0x15ca4_26\<close> assms: assms)
                      apply (vcg_step assms: assms)+
                      apply (simp add: pred_logic Ps Qs)
                      apply simp
                      apply (simp add: pred_logic)
                      apply simp
                      apply (vcg_step assms: assms)+
                      apply (simp add: assms)+
                      apply (vcg_step assms: assms)+
  done

end

end
