(*
Copyright 2019

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*)
theory qcow_write_snapshots
  imports "../../../isabelle/VCG/HTriple"
begin

locale "qemu_img_xen" = execution_context + exec_code +
  fixes strlen_0x15458_retval\<^sub>v strlen_0x15465_retval\<^sub>v alloc_clusters_0x15483_retval\<^sub>v bdrv_pwrite_0x154d5_retval\<^sub>v bdrv_pwrite_0x154fa_retval\<^sub>v strlen_0x1558b_retval\<^sub>v strlen_0x15597_retval\<^sub>v bdrv_pwrite_0x155d5_retval\<^sub>v bdrv_pwrite_0x1562f_retval\<^sub>v bdrv_pwrite_0x15657_retval\<^sub>v update_refcount_0x15679_retval\<^sub>v stack_chk_fail_0x156af_retval\<^sub>v stack_chk_fail_addr alloc_clusters_addr bdrv_pwrite_addr strlen_addr update_refcount_addr :: \<open>64 word\<close>
    and stack_chk_fail_acode alloc_clusters_acode bdrv_pwrite_acode strlen_acode update_refcount_acode :: ACode
  assumes fetch:
    "fetch 0x153f0 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r15))), 2)"
    "fetch 0x153f2 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x153f4 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x153f6 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x153f8 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x153f9 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x153fa \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 104)), 4)"
    "fetch 0x153fe \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rdi)) (A_WordConstant 64))))), 4)"
    "fetch 0x15402 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))) (Storage (Reg (General SixtyFour rdi))), 5)"
    "fetch 0x15407 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 6)"
    "fetch 0x1540d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x15416 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 88)))) (Storage (Reg (General SixtyFour rcx))), 5)"
    "fetch 0x1541b \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo rcx))), 2)"
    "fetch 0x1541d \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x1541f \<equiv> (Unary (IS_8088 Jle) (Immediate SixtyFour (ImmVal 87712)), 6)"
    "fetch 0x15425 \<equiv> (Binary (IS_8088 Lea) (Reg (General ThirtyTwo rcx)) (Storage (Memory SixtyFour (A_Minus (A_FromReg (General SixtyFour rax)) (A_WordConstant 1)))), 3)"
    "fetch 0x15428 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864))))), 7)"
    "fetch 0x1542f \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rbp))), 2)"
    "fetch 0x15431 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rcx))) (A_WordConstant 0)))), 8)"
    "fetch 0x15439 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rcx))), 3)"
    "fetch 0x1543c \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r12)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rdx)) (A_WordConstant 16)))), 4)"
    "fetch 0x15440 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r13)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rdx)) (A_Plus (A_Mult 8 (A_FromReg (General SixtyFour rax))) (A_WordConstant 72))))), 5)"
    "fetch 0x15445 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 3)"
    "fetch 0x15448 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour r12))))), 4)"
    "fetch 0x1544c \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rbp)) (Immediate SixtyFour (ImmVal 7)), 4)"
    "fetch 0x15450 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour r12)) (Immediate SixtyFour (ImmVal 56)), 4)"
    "fetch 0x15454 \<equiv> (Binary (IS_8088 And) (Reg (General SixtyFour rbp)) (Immediate SixtyFour (ImmVal 18446744073709551608)), 4)"
    "fetch 0x15458 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strlen'')), 5)"
    "fetch 0x1545d \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Minus (A_FromReg (General SixtyFour r12)) (A_WordConstant 48))))), 5)"
    "fetch 0x15462 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r14)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15465 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strlen'')), 5)"
    "fetch 0x1546a \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rbp)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour r14)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rbp))) (A_WordConstant 40))))), 5)"
    "fetch 0x1546f \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15472 \<equiv> (Binary (IS_8088 Cmp) (Reg (General SixtyFour r13)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x15475 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 87112)), 2)"
    "fetch 0x15477 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 28)))) (Storage (Reg (General ThirtyTwo rbp))), 4)"
    "fetch 0x1547b \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rsi)) (Storage (Reg (General ThirtyTwo rbp))), 3)"
    "fetch 0x1547e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16))))), 5)"
    "fetch 0x15483 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''alloc_clusters'')), 5)"
    "fetch 0x15488 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x1548d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 6)"
    "fetch 0x15493 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15495 \<equiv> (Unary (IS_8088 Jle) (Immediate SixtyFour (ImmVal 87568)), 6)"
    "fetch 0x1549b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8))))), 5)"
    "fetch 0x154a0 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo r14)) (Storage (Reg (General ThirtyTwo r14))), 3)"
    "fetch 0x154a3 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rbp)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 48)))), 5)"
    "fetch 0x154a8 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Immediate SixtyFour (ImmVal 0)), 8)"
    "fetch 0x154b0 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (General SixtyFour rax))), 4)"
    "fetch 0x154b4 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 87338)), 2)"
    "fetch 0x154b6 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour cs)) (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))))), 10)"
    "fetch 0x154c0 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour r9)) (Immediate SixtyFour (ImmVal 40)), 4)"
    "fetch 0x154c4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 16))))), 4)"
    "fetch 0x154c8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x154cb \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x154ce \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r9))), 3)"
    "fetch 0x154d1 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (General SixtyFour r9))), 4)"
    "fetch 0x154d5 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x154da \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x154dd \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 87527)), 6)"
    "fetch 0x154e3 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r9)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp))))), 4)"
    "fetch 0x154e7 \<equiv> (Nullary (IS_X86_64 Cdqe), 2)"
    "fetch 0x154e9 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 24))))), 4)"
    "fetch 0x154ed \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Storage (Reg (General ThirtyTwo r13))), 3)"
    "fetch 0x154f0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x154f3 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r12)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rax)) (A_Mult 1 (A_FromReg (General SixtyFour r9)))))), 4)"
    "fetch 0x154f7 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x154fa \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x154ff \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo r13))), 3)"
    "fetch 0x15502 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 87527)), 6)"
    "fetch 0x15508 \<equiv> (Nullary (IS_X86_64 Cdqe), 2)"
    "fetch 0x1550a \<equiv> (Binary (IS_8088 Add) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x1550f \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour r14)) (Immediate SixtyFour (ImmVal 56)), 4)"
    "fetch 0x15513 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x15516 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (General SixtyFour rax))), 4)"
    "fetch 0x1551a \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24))))), 4)"
    "fetch 0x1551e \<equiv> (Binary (IS_8088 Cmp) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860)))) (Storage (Reg (General ThirtyTwo rax))), 6)"
    "fetch 0x15524 \<equiv> (Unary (IS_8088 Jle) (Immediate SixtyFour (ImmVal 87568)), 6)"
    "fetch 0x1552a \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r15)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 864))))), 7)"
    "fetch 0x15531 \<equiv> (Binary (IS_PentiumMMX_MMX Pxor) (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0)) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 4)"
    "fetch 0x15535 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbp)) (A_WordConstant 32)))) (Immediate SixtyFour (ImmVal 0)), 8)"
    "fetch 0x1553d \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rbp)) (A_WordConstant 0)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 4)"
    "fetch 0x15541 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour r15)) (Storage (Reg (General SixtyFour r14))), 3)"
    "fetch 0x15544 \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rbp)) (A_WordConstant 16)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 4)"
    "fetch 0x15548 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour r15))))), 3)"
    "fetch 0x1554b \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x1554e \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 48)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x15553 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 8))))), 4)"
    "fetch 0x15557 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15559 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 56)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x1555d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 32))))), 4)"
    "fetch 0x15561 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15563 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 80)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x15567 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 36))))), 4)"
    "fetch 0x1556b \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x1556d \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 64)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x15571 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 40))))), 4)"
    "fetch 0x15575 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15577 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 68)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x1557b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 48))))), 4)"
    "fetch 0x1557f \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15582 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 72)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x15587 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 16))))), 4)"
    "fetch 0x1558b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strlen'')), 5)"
    "fetch 0x15590 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour r15)) (A_WordConstant 24))))), 4)"
    "fetch 0x15594 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r12)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15597 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''strlen'')), 5)"
    "fetch 0x1559c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r9)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp))))), 4)"
    "fetch 0x155a0 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 40)), 5)"
    "fetch 0x155a5 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x155a8 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r13)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x155ab \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo r12))), 3)"
    "fetch 0x155ae \<equiv> (Binary (IS_8088 Rol) (Reg (General Sixteen rax)) (Immediate SixtyFour (ImmVal 8)), 4)"
    "fetch 0x155b2 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour r9)) (Immediate SixtyFour (ImmVal 7)), 4)"
    "fetch 0x155b6 \<equiv> (Binary (IS_8088 Mov) (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 60)))) (Storage (Reg (General Sixteen rax))), 5)"
    "fetch 0x155bb \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo r13))), 3)"
    "fetch 0x155be \<equiv> (Binary (IS_8088 And) (Reg (General SixtyFour r9)) (Immediate SixtyFour (ImmVal 18446744073709551608)), 4)"
    "fetch 0x155c2 \<equiv> (Binary (IS_8088 Rol) (Reg (General Sixteen rax)) (Immediate SixtyFour (ImmVal 8)), 4)"
    "fetch 0x155c6 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r9))), 3)"
    "fetch 0x155c9 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp)))) (Storage (Reg (General SixtyFour r9))), 4)"
    "fetch 0x155cd \<equiv> (Binary (IS_8088 Mov) (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 62)))) (Storage (Reg (General Sixteen rax))), 5)"
    "fetch 0x155d2 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x155d5 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x155da \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r9)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rsp))))), 4)"
    "fetch 0x155de \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 40)), 3)"
    "fetch 0x155e1 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 87232)), 6)"
    "fetch 0x155e7 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 5)"
    "fetch 0x155ec \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 88))))), 5)"
    "fetch 0x155f1 \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x155fa \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 87727)), 6)"
    "fetch 0x15600 \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 104)), 4)"
    "fetch 0x15604 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x15605 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x15606 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x15608 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x1560a \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x1560c \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r15))), 2)"
    "fetch 0x1560e \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x1560f \<equiv> (Nullary (IS_8088 Nop), 1)"
    "fetch 0x15610 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8))))), 5)"
    "fetch 0x15615 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40)))), 5)"
    "fetch 0x1561a \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 8)), 5)"
    "fetch 0x1561f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 64)), 5)"
    "fetch 0x15624 \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x15627 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 40)))) (Storage (Reg (General SixtyFour rax))), 5)"
    "fetch 0x1562c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x1562f \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x15634 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 8)), 3)"
    "fetch 0x15637 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 87527)), 2)"
    "fetch 0x15639 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 860))))), 6)"
    "fetch 0x1563f \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 36)))), 5)"
    "fetch 0x15644 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 4)), 5)"
    "fetch 0x15649 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rsi)) (Immediate SixtyFour (ImmVal 60)), 5)"
    "fetch 0x1564e \<equiv> (Unary (IS_80486 Bswap) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15650 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 36)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x15654 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_FromReg (General SixtyFour rbx))))), 3)"
    "fetch 0x15657 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_pwrite'')), 5)"
    "fetch 0x1565c \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4)), 3)"
    "fetch 0x1565f \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 87527)), 2)"
    "fetch 0x15661 \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour rdx)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 856))))), 7)"
    "fetch 0x15668 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16))))), 5)"
    "fetch 0x1566d \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rcx)) (Immediate SixtyFour (ImmVal 4294967295)), 5)"
    "fetch 0x15672 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 848))))), 7)"
    "fetch 0x15679 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''update_refcount'')), 5)"
    "fetch 0x1567e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 8))))), 5)"
    "fetch 0x15683 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 848)))) (Storage (Reg (General SixtyFour rax))), 7)"
    "fetch 0x1568a \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 28))))), 4)"
    "fetch 0x1568e \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rbx)) (A_WordConstant 856)))) (Storage (Reg (General ThirtyTwo rax))), 6)"
    "fetch 0x15694 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x15696 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 87532)), 5)"
    "fetch 0x1569b \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 5)"
    "fetch 0x156a0 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 28)))) (Immediate SixtyFour (ImmVal 0)), 8)"
    "fetch 0x156a8 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rsi)) (Storage (Reg (General ThirtyTwo rsi))), 2)"
    "fetch 0x156aa \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 87166)), 5)"
    "fetch 0x156af \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x156b4 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour cs)) (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))))), 11)"
    and \<alpha>_def: \<open>\<alpha> = \<lparr>text_sections = [], data_sections = [], labels_to_offsets = [], binary_offset = 0\<rparr>\<close>
    and stack_chk_fail\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__stack_chk_fail'') = stack_chk_fail_addr\<close>
    and alloc_clusters\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''alloc_clusters'') = alloc_clusters_addr\<close>
    and bdrv_pwrite\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_pwrite'') = bdrv_pwrite_addr\<close>
    and strlen\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''strlen'') = strlen_addr\<close>
    and update_refcount\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''update_refcount'') = update_refcount_addr\<close>
begin

text \<open>Using definitions that don't get unfolded immediately prevents locale argument issues.\<close>
definition \<open>strlen_0x15458_retval \<equiv> strlen_0x15458_retval\<^sub>v\<close>
definition \<open>strlen_0x15465_retval \<equiv> strlen_0x15465_retval\<^sub>v\<close>
definition \<open>alloc_clusters_0x15483_retval \<equiv> alloc_clusters_0x15483_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x154d5_retval \<equiv> bdrv_pwrite_0x154d5_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x154fa_retval \<equiv> bdrv_pwrite_0x154fa_retval\<^sub>v\<close>
definition \<open>strlen_0x1558b_retval \<equiv> strlen_0x1558b_retval\<^sub>v\<close>
definition \<open>strlen_0x15597_retval \<equiv> strlen_0x15597_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x155d5_retval \<equiv> bdrv_pwrite_0x155d5_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x1562f_retval \<equiv> bdrv_pwrite_0x1562f_retval\<^sub>v\<close>
definition \<open>bdrv_pwrite_0x15657_retval \<equiv> bdrv_pwrite_0x15657_retval\<^sub>v\<close>
definition \<open>update_refcount_0x15679_retval \<equiv> update_refcount_0x15679_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x156af_retval \<equiv> stack_chk_fail_0x156af_retval\<^sub>v\<close>

text \<open>
  Going with a binary offset of 0 for now to make things easier. (We do want to keep that field
  around, though, for future more generic usage.)
\<close>
lemma \<alpha>_boffset[simp]: \<open>binary_offset \<alpha> = 0\<close>
  unfolding \<alpha>_def
  by simp

named_theorems blocks and Ps and Qs

method step uses add del =
  subst exec_block.simps,
  rewrite_one_let',
  rewrite_one_let' add: fetch,
  rewrite_one_let',
  auto simp add: simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def step_def exec_instr_def presimplify add numeral_2_eq_2[symmetric] simp del: del

method steps uses pre post regionset add del =
  auto simp: pred_logic pre regionset,
  (step add: add del: del)+,
  (auto simp add: eq_def)[1],
  auto simp: block_usage_def eq_def setcc_def cmovcc_def if'_then_else_def sub_sign_flag_def simp_rules numeral_2_eq_2[symmetric] Let'_def read_region'_def write_block'_def get'_def set'_def post regionset

(* ((simp add: assms pred_logic Ps Qs)+)? helps keep goals clean but causes issues when there are subcalls *)
method vcg_step uses assms =
  ((rule htriples)+, rule blocks)+,
  (simp add: assms pred_logic Ps Qs)?,
  (((auto simp: eq_def)[])+)?

text \<open>For @{const CASES}.\<close>
method vcg_step' uses assms =
  (rule htriples)+,
  simp,
  ((rule htriples)+, rule blocks)+,
  (simp add: assms pred_logic Ps Qs)?,
  (((auto simp: eq_def)[])+)?

text \<open>
  Sometimes needs to be moved down (close to the abstract code) to avoid TERM exceptions,
  haven't figured out the cause.
  Also haven't settled on a proper setup for the ending methods,
  there are troubles when nested loops and such are involved.
\<close>
method vcg_while for P :: state_pred uses assms =
  ((rule htriples)+)?,
  rule HTriple_weaken[where P=P],
  simp add: pred_logic Ps Qs assms,
  rule HTriple_while,
  (vcg_step assms: assms)+,
  (simp add: pred_logic Ps Qs)+,
  (
    (vcg_step' assms: assms | vcg_step assms: assms)+,
    ((simp add: assms)+)?
  )?

method vcg uses acode assms =
  subst acode,
  (vcg_step assms: assms)+

end

locale "qcow_write_snapshots" = "qemu_img_xen" +
  fixes RAX\<^sub>0\<^sub>v RBX\<^sub>0\<^sub>v RCX\<^sub>0\<^sub>v RDX\<^sub>0\<^sub>v RDI\<^sub>0\<^sub>v RSI\<^sub>0\<^sub>v RSP\<^sub>0\<^sub>v RBP\<^sub>0\<^sub>v R15\<^sub>0\<^sub>v R14\<^sub>0\<^sub>v R13\<^sub>0\<^sub>v R12\<^sub>0\<^sub>v R9\<^sub>0\<^sub>v FS\<^sub>0\<^sub>v ymm0w0\<^sub>0\<^sub>v ymm0w1\<^sub>0\<^sub>v ret_address\<^sub>v :: \<open>64 word\<close>
begin

text \<open>Using definitions that don't get unfolded immediately prevents locale argument issues.\<close>
definition \<open>RAX\<^sub>0 \<equiv> RAX\<^sub>0\<^sub>v\<close>
definition \<open>RBX\<^sub>0 \<equiv> RBX\<^sub>0\<^sub>v\<close>
definition \<open>RCX\<^sub>0 \<equiv> RCX\<^sub>0\<^sub>v\<close>
definition \<open>RDX\<^sub>0 \<equiv> RDX\<^sub>0\<^sub>v\<close>
definition \<open>RDI\<^sub>0 \<equiv> RDI\<^sub>0\<^sub>v\<close>
definition \<open>RSI\<^sub>0 \<equiv> RSI\<^sub>0\<^sub>v\<close>
definition \<open>RSP\<^sub>0 \<equiv> RSP\<^sub>0\<^sub>v\<close>
definition \<open>RBP\<^sub>0 \<equiv> RBP\<^sub>0\<^sub>v\<close>
definition \<open>R15\<^sub>0 \<equiv> R15\<^sub>0\<^sub>v\<close>
definition \<open>R14\<^sub>0 \<equiv> R14\<^sub>0\<^sub>v\<close>
definition \<open>R13\<^sub>0 \<equiv> R13\<^sub>0\<^sub>v\<close>
definition \<open>R12\<^sub>0 \<equiv> R12\<^sub>0\<^sub>v\<close>
definition \<open>R9\<^sub>0 \<equiv> R9\<^sub>0\<^sub>v\<close>
definition \<open>FS\<^sub>0 \<equiv> FS\<^sub>0\<^sub>v\<close>
definition \<open>ymm0w0\<^sub>0 \<equiv> ymm0w0\<^sub>0\<^sub>v\<close>
definition \<open>ymm0w1\<^sub>0 \<equiv> ymm0w1\<^sub>0\<^sub>v\<close>
definition \<open>ret_address \<equiv> ret_address\<^sub>v\<close>

definition P_0x153f0_0 :: state_pred where
  \<open>P_0x153f0_0 \<sigma> \<equiv> RIP \<sigma> = 0x153f0 \<and> RAX \<sigma> = RAX\<^sub>0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = RSP\<^sub>0 \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address\<close>
declare P_0x153f0_0_def[Ps]

definition P_0x153f0_0_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x153f0_0_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x153f0_0_regions :: state_pred where
  \<open>P_0x153f0_0_regions \<sigma> \<equiv> \<exists>regions. P_0x153f0_0_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1541f_0 :: state_pred where
  \<open>Q_0x1541f_0 \<sigma> \<equiv> RIP \<sigma> = 0x1541f \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x1541f_0_def[Qs]

schematic_goal qcow_write_snapshots_0_14_0x153f0_0x1541d_0[blocks]:
  assumes \<open>(P_0x153f0_0 && P_0x153f0_0_regions) \<sigma>\<close>
  shows \<open>exec_block 14 0x1541d 0 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1541f_0 ?\<sigma> \<and> block_usage P_0x153f0_0_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x153f0_0_def P_0x153f0_0_regions_def post: Q_0x1541f_0_def regionset: P_0x153f0_0_regions_set_def)

definition P_0x1541f_true_1 :: state_pred where
  \<open>P_0x1541f_true_1 \<sigma> \<equiv> RIP \<sigma> = 0x1541f \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x1541f_true_1_def[Ps]

definition P_0x1541f_true_1_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1541f_true_1_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x7c), 4),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x1541f_true_1_regions :: state_pred where
  \<open>P_0x1541f_true_1_regions \<sigma> \<equiv> \<exists>regions. P_0x1541f_true_1_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1547e_1 :: state_pred where
  \<open>Q_0x1547e_1 \<sigma> \<equiv> RIP \<sigma> = 0x1547e \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x1547e_1_def[Qs]

schematic_goal qcow_write_snapshots_0_4_0x1541f_0x156aa_1[blocks]:
  assumes \<open>(P_0x1541f_true_1 && P_0x1541f_true_1_regions && jle) \<sigma>\<close>
  shows \<open>exec_block 4 0x156aa (Suc 0) \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1547e_1 ?\<sigma> \<and> block_usage P_0x1541f_true_1_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1541f_true_1_def P_0x1541f_true_1_regions_def post: Q_0x1547e_1_def regionset: P_0x1541f_true_1_regions_set_def)

definition P_0x1541f_false_2 :: state_pred where
  \<open>P_0x1541f_false_2 \<sigma> \<equiv> RIP \<sigma> = 0x1541f \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x1541f_false_2_def[Ps]

definition P_0x1541f_false_2_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1541f_false_2_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x1541f_false_2_regions :: state_pred where
  \<open>P_0x1541f_false_2_regions \<sigma> \<equiv> \<exists>regions. P_0x1541f_false_2_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15448_2 :: state_pred where
  \<open>Q_0x15448_2 \<sigma> \<equiv> RIP \<sigma> = 0x15448 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x15448_2_def[Qs]

schematic_goal qcow_write_snapshots_0_9_0x1541f_0x15445_2[blocks]:
  assumes \<open>(P_0x1541f_false_2 && P_0x1541f_false_2_regions && ! jle) \<sigma>\<close>
  shows \<open>exec_block 9 0x15445 2 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15448_2 ?\<sigma> \<and> block_usage P_0x1541f_false_2_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1541f_false_2_def P_0x1541f_false_2_regions_def post: Q_0x15448_2_def regionset: P_0x1541f_false_2_regions_set_def)

definition P_0x15448_3 :: state_pred where
  \<open>P_0x15448_3 \<sigma> \<equiv> RIP \<sigma> = 0x15448 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x15448_3_def[Ps]

definition P_0x15448_3_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15448_3_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x15448_3_regions :: state_pred where
  \<open>P_0x15448_3_regions \<sigma> \<equiv> \<exists>regions. P_0x15448_3_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15458_3 :: state_pred where
  \<open>Q_0x15458_3 \<sigma> \<equiv> RIP \<sigma> = 0x15458 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x15458_3_def[Qs]

schematic_goal qcow_write_snapshots_0_4_0x15448_0x15454_3[blocks]:
  assumes \<open>(P_0x15448_3 && P_0x15448_3_regions) \<sigma>\<close>
  shows \<open>exec_block 4 0x15454 3 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15458_3 ?\<sigma> \<and> block_usage P_0x15448_3_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15448_3_def P_0x15448_3_regions_def post: Q_0x15458_3_def regionset: P_0x15448_3_regions_set_def)

definition P_0x15458_4 :: state_pred where
  \<open>P_0x15458_4 \<sigma> \<equiv> RIP \<sigma> = 0x15458 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x15458_4_def[Ps]

definition P_0x15458_4_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15458_4_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15458_4_regions :: state_pred where
  \<open>P_0x15458_4_regions \<sigma> \<equiv> \<exists>regions. P_0x15458_4_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_strlen_addr_0x15458_4 :: state_pred where
  \<open>Q_strlen_addr_0x15458_4 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = strlen_addr \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1545d\<close>
declare Q_strlen_addr_0x15458_4_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15458_0x15458_4[blocks]:
  assumes \<open>(P_0x15458_4 && P_0x15458_4_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15458 4 \<sigma> \<triangleq> ?\<sigma> \<and> Q_strlen_addr_0x15458_4 ?\<sigma> \<and> block_usage P_0x15458_4_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15458_4_def P_0x15458_4_regions_def post: Q_strlen_addr_0x15458_4_def regionset: P_0x15458_4_regions_set_def)

definition P_0x1545d_5 :: state_pred where
  \<open>P_0x1545d_5 \<sigma> \<equiv> RIP \<sigma> = 0x1545d \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1545d\<close>
declare P_0x1545d_5_def[Ps]

definition P_0x1545d_5_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1545d_5_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((R12 \<sigma>::64 word) - 0x30), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x1545d_5_regions :: state_pred where
  \<open>P_0x1545d_5_regions \<sigma> \<equiv> \<exists>regions. P_0x1545d_5_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15465_5 :: state_pred where
  \<open>Q_0x15465_5 \<sigma> \<equiv> RIP \<sigma> = 0x15465 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = RAX \<sigma> \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1545d\<close>
declare Q_0x15465_5_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x1545d_0x15462_5[blocks]:
  assumes \<open>(P_0x1545d_5 && P_0x1545d_5_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x15462 5 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15465_5 ?\<sigma> \<and> block_usage P_0x1545d_5_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1545d_5_def P_0x1545d_5_regions_def post: Q_0x15465_5_def regionset: P_0x1545d_5_regions_set_def)

definition P_0x15465_6 :: state_pred where
  \<open>P_0x15465_6 \<sigma> \<equiv> RIP \<sigma> = 0x15465 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = RAX \<sigma> \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1545d\<close>
declare P_0x15465_6_def[Ps]

definition P_0x15465_6_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15465_6_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((R12 \<sigma>::64 word) - 0x30), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15465_6_regions :: state_pred where
  \<open>P_0x15465_6_regions \<sigma> \<equiv> \<exists>regions. P_0x15465_6_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_strlen_addr_0x15465_6 :: state_pred where
  \<open>Q_strlen_addr_0x15465_6 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = strlen_addr \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1546a\<close>
declare Q_strlen_addr_0x15465_6_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15465_0x15465_6[blocks]:
  assumes \<open>(P_0x15465_6 && P_0x15465_6_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15465 6 \<sigma> \<triangleq> ?\<sigma> \<and> Q_strlen_addr_0x15465_6 ?\<sigma> \<and> block_usage P_0x15465_6_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15465_6_def P_0x15465_6_regions_def post: Q_strlen_addr_0x15465_6_def regionset: P_0x15465_6_regions_set_def)

definition P_0x1546a_7 :: state_pred where
  \<open>P_0x1546a_7 \<sigma> \<equiv> RIP \<sigma> = 0x1546a \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) = (\<sigma> \<turnstile> *[((R12 \<sigma>::64 word) - 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1546a\<close>
declare P_0x1546a_7_def[Ps]

definition P_0x1546a_7_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1546a_7_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((R12 \<sigma>::64 word) - 0x30), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x1546a_7_regions :: state_pred where
  \<open>P_0x1546a_7_regions \<sigma> \<equiv> \<exists>regions. P_0x1546a_7_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15475_7 :: state_pred where
  \<open>Q_0x15475_7 \<sigma> \<equiv> RIP \<sigma> = 0x15475 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x15475_7_def[Qs]

schematic_goal qcow_write_snapshots_0_3_0x1546a_0x15472_7[blocks]:
  assumes \<open>(P_0x1546a_7 && P_0x1546a_7_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x15472 7 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15475_7 ?\<sigma> \<and> block_usage P_0x1546a_7_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1546a_7_def P_0x1546a_7_regions_def post: Q_0x15475_7_def regionset: P_0x1546a_7_regions_set_def)

definition P_0x15475_true_8 :: state_pred where
  \<open>P_0x15475_true_8 \<sigma> \<equiv> RIP \<sigma> = 0x15475 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x15475_true_8_def[Ps]

definition P_0x15475_true_8_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15475_true_8_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x15475_true_8_regions :: state_pred where
  \<open>P_0x15475_true_8_regions \<sigma> \<equiv> \<exists>regions. P_0x15475_true_8_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15448_8 :: state_pred where
  \<open>Q_0x15448_8 \<sigma> \<equiv> RIP \<sigma> = 0x15448 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x15448_8_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15475_0x15475_8[blocks]:
  assumes \<open>(P_0x15475_true_8 && P_0x15475_true_8_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15475 8 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15448_8 ?\<sigma> \<and> block_usage P_0x15475_true_8_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15475_true_8_def P_0x15475_true_8_regions_def post: Q_0x15448_8_def regionset: P_0x15475_true_8_regions_set_def)

definition P_0x15475_false_9 :: state_pred where
  \<open>P_0x15475_false_9 \<sigma> \<equiv> RIP \<sigma> = 0x15475 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x15475_false_9_def[Ps]

definition P_0x15475_false_9_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15475_false_9_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x15475_false_9_regions :: state_pred where
  \<open>P_0x15475_false_9_regions \<sigma> \<equiv> \<exists>regions. P_0x15475_false_9_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15477_9 :: state_pred where
  \<open>Q_0x15477_9 \<sigma> \<equiv> RIP \<sigma> = 0x15477 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x15477_9_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15475_0x15475_9[blocks]:
  assumes \<open>(P_0x15475_false_9 && P_0x15475_false_9_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15475 9 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15477_9 ?\<sigma> \<and> block_usage P_0x15475_false_9_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15475_false_9_def P_0x15475_false_9_regions_def post: Q_0x15477_9_def regionset: P_0x15475_false_9_regions_set_def)

definition P_0x15477_10 :: state_pred where
  \<open>P_0x15477_10 \<sigma> \<equiv> RIP \<sigma> = 0x15477 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R13 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + (((\<langle>63,0\<rangle>(((((\<langle>63,0\<rangle>((ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word) * (0x8::64 word))::64 word)::64 word) - (ucast (((\<langle>31,0\<rangle>((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::64 word) - (0x1::64 word))::32 word)::32 word))::64 word))::64 word) * 0x8)::64 word)::64 word) + 0x48)) \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x15477_10_def[Ps]

definition P_0x15477_10_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15477_10_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x7c), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x15477_10_regions :: state_pred where
  \<open>P_0x15477_10_regions \<sigma> \<equiv> \<exists>regions. P_0x15477_10_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1547e_10 :: state_pred where
  \<open>Q_0x1547e_10 \<sigma> \<equiv> RIP \<sigma> = 0x1547e \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x1547e_10_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x15477_0x1547b_10[blocks]:
  assumes \<open>(P_0x15477_10 && P_0x15477_10_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x1547b 10 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1547e_10 ?\<sigma> \<and> block_usage P_0x15477_10_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15477_10_def P_0x15477_10_regions_def post: Q_0x1547e_10_def regionset: P_0x15477_10_regions_set_def)

definition P_0x1547e_11 :: state_pred where
  \<open>P_0x1547e_11 \<sigma> \<equiv> RIP \<sigma> = 0x1547e \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x1547e_11_def[Ps]

definition P_0x1547e_11_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1547e_11_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8)
  }\<close>

definition P_0x1547e_11_regions :: state_pred where
  \<open>P_0x1547e_11_regions \<sigma> \<equiv> \<exists>regions. P_0x1547e_11_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15483_11 :: state_pred where
  \<open>Q_0x15483_11 \<sigma> \<equiv> RIP \<sigma> = 0x15483 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare Q_0x15483_11_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x1547e_0x1547e_11[blocks]:
  assumes \<open>(P_0x1547e_11 && P_0x1547e_11_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x1547e 11 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15483_11 ?\<sigma> \<and> block_usage P_0x1547e_11_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1547e_11_def P_0x1547e_11_regions_def post: Q_0x15483_11_def regionset: P_0x1547e_11_regions_set_def)

definition P_0x15483_12 :: state_pred where
  \<open>P_0x15483_12 \<sigma> \<equiv> RIP \<sigma> = 0x15483 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0\<close>
declare P_0x15483_12_def[Ps]

definition P_0x15483_12_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15483_12_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15483_12_regions :: state_pred where
  \<open>P_0x15483_12_regions \<sigma> \<equiv> \<exists>regions. P_0x15483_12_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_alloc_clusters_addr_0x15483_12 :: state_pred where
  \<open>Q_alloc_clusters_addr_0x15483_12 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = alloc_clusters_addr \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488\<close>
declare Q_alloc_clusters_addr_0x15483_12_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15483_0x15483_12[blocks]:
  assumes \<open>(P_0x15483_12 && P_0x15483_12_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15483 12 \<sigma> \<triangleq> ?\<sigma> \<and> Q_alloc_clusters_addr_0x15483_12 ?\<sigma> \<and> block_usage P_0x15483_12_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15483_12_def P_0x15483_12_regions_def post: Q_alloc_clusters_addr_0x15483_12_def regionset: P_0x15483_12_regions_set_def)

definition P_0x15488_13 :: state_pred where
  \<open>P_0x15488_13 \<sigma> \<equiv> RIP \<sigma> = 0x15488 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488\<close>
declare P_0x15488_13_def[Ps]

definition P_0x15488_13_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15488_13_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (13, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15488_13_regions :: state_pred where
  \<open>P_0x15488_13_regions \<sigma> \<equiv> \<exists>regions. P_0x15488_13_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15495_13 :: state_pred where
  \<open>Q_0x15495_13 \<sigma> \<equiv> RIP \<sigma> = 0x15495 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488\<close>
declare Q_0x15495_13_def[Qs]

schematic_goal qcow_write_snapshots_0_3_0x15488_0x15493_13[blocks]:
  assumes \<open>(P_0x15488_13 && P_0x15488_13_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x15493 13 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15495_13 ?\<sigma> \<and> block_usage P_0x15488_13_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15488_13_def P_0x15488_13_regions_def post: Q_0x15495_13_def regionset: P_0x15488_13_regions_set_def)

definition P_0x15495_true_14 :: state_pred where
  \<open>P_0x15495_true_14 \<sigma> \<equiv> RIP \<sigma> = 0x15495 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488\<close>
declare P_0x15495_true_14_def[Ps]

definition P_0x15495_true_14_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15495_true_14_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15495_true_14_regions :: state_pred where
  \<open>P_0x15495_true_14_regions \<sigma> \<equiv> \<exists>regions. P_0x15495_true_14_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1562f_14 :: state_pred where
  \<open>Q_0x1562f_14 \<sigma> \<equiv> RIP \<sigma> = 0x1562f \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x1562f_14_def[Qs]

schematic_goal qcow_write_snapshots_0_8_0x15495_0x1562c_14[blocks]:
  assumes \<open>(P_0x15495_true_14 && P_0x15495_true_14_regions && jle) \<sigma>\<close>
  shows \<open>exec_block 8 0x1562c 14 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1562f_14 ?\<sigma> \<and> block_usage P_0x15495_true_14_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15495_true_14_def P_0x15495_true_14_regions_def post: Q_0x1562f_14_def regionset: P_0x15495_true_14_regions_set_def)

definition P_0x1562f_15 :: state_pred where
  \<open>P_0x1562f_15 \<sigma> \<equiv> RIP \<sigma> = 0x1562f \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1562f_15_def[Ps]

definition P_0x1562f_15_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1562f_15_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1562f_15_regions :: state_pred where
  \<open>P_0x1562f_15_regions \<sigma> \<equiv> \<exists>regions. P_0x1562f_15_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_pwrite_addr_0x1562f_15 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x1562f_15 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x1562f_15_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x1562f_0x1562f_15[blocks]:
  assumes \<open>(P_0x1562f_15 && P_0x1562f_15_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x1562f 15 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x1562f_15 ?\<sigma> \<and> block_usage P_0x1562f_15_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1562f_15_def P_0x1562f_15_regions_def post: Q_bdrv_pwrite_addr_0x1562f_15_def regionset: P_0x1562f_15_regions_set_def)

definition P_0x15634_16 :: state_pred where
  \<open>P_0x15634_16 \<sigma> \<equiv> RIP \<sigma> = 0x15634 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15634_16_def[Ps]

definition P_0x15634_16_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15634_16_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15634_16_regions :: state_pred where
  \<open>P_0x15634_16_regions \<sigma> \<equiv> \<exists>regions. P_0x15634_16_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15637_16 :: state_pred where
  \<open>Q_0x15637_16 \<sigma> \<equiv> RIP \<sigma> = 0x15637 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15637_16_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15634_0x15634_16[blocks]:
  assumes \<open>(P_0x15634_16 && P_0x15634_16_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15634 16 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15637_16 ?\<sigma> \<and> block_usage P_0x15634_16_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15634_16_def P_0x15634_16_regions_def post: Q_0x15637_16_def regionset: P_0x15634_16_regions_set_def)

definition P_0x15637_true_17 :: state_pred where
  \<open>P_0x15637_true_17 \<sigma> \<equiv> RIP \<sigma> = 0x15637 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15637_true_17_def[Ps]

definition P_0x15637_true_17_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15637_true_17_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15637_true_17_regions :: state_pred where
  \<open>P_0x15637_true_17_regions \<sigma> \<equiv> \<exists>regions. P_0x15637_true_17_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_17 :: state_pred where
  \<open>Q_0x155ec_17 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_17_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x15637_0x155e7_17[blocks]:
  assumes \<open>(P_0x15637_true_17 && P_0x15637_true_17_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x155e7 17 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_17 ?\<sigma> \<and> block_usage P_0x15637_true_17_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15637_true_17_def P_0x15637_true_17_regions_def post: Q_0x155ec_17_def regionset: P_0x15637_true_17_regions_set_def)

definition P_0x15637_false_18 :: state_pred where
  \<open>P_0x15637_false_18 \<sigma> \<equiv> RIP \<sigma> = 0x15637 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15637_false_18_def[Ps]

definition P_0x15637_false_18_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15637_false_18_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15637_false_18_regions :: state_pred where
  \<open>P_0x15637_false_18_regions \<sigma> \<equiv> \<exists>regions. P_0x15637_false_18_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15657_18 :: state_pred where
  \<open>Q_0x15657_18 \<sigma> \<equiv> RIP \<sigma> = 0x15657 \<and> RAX \<sigma> = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15657_18_def[Qs]

schematic_goal qcow_write_snapshots_0_8_0x15637_0x15654_18[blocks]:
  assumes \<open>(P_0x15637_false_18 && P_0x15637_false_18_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 8 0x15654 18 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15657_18 ?\<sigma> \<and> block_usage P_0x15637_false_18_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15637_false_18_def P_0x15637_false_18_regions_def post: Q_0x15657_18_def regionset: P_0x15637_false_18_regions_set_def)

definition P_0x15657_19 :: state_pred where
  \<open>P_0x15657_19 \<sigma> \<equiv> RIP \<sigma> = 0x15657 \<and> RAX \<sigma> = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15657_19_def[Ps]

definition P_0x15657_19_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15657_19_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15657_19_regions :: state_pred where
  \<open>P_0x15657_19_regions \<sigma> \<equiv> \<exists>regions. P_0x15657_19_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_pwrite_addr_0x15657_19 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x15657_19 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x15657_19_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15657_0x15657_19[blocks]:
  assumes \<open>(P_0x15657_19 && P_0x15657_19_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15657 19 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x15657_19 ?\<sigma> \<and> block_usage P_0x15657_19_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15657_19_def P_0x15657_19_regions_def post: Q_bdrv_pwrite_addr_0x15657_19_def regionset: P_0x15657_19_regions_set_def)

definition P_0x1565c_20 :: state_pred where
  \<open>P_0x1565c_20 \<sigma> \<equiv> RIP \<sigma> = 0x1565c \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1565c_20_def[Ps]

definition P_0x1565c_20_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1565c_20_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1565c_20_regions :: state_pred where
  \<open>P_0x1565c_20_regions \<sigma> \<equiv> \<exists>regions. P_0x1565c_20_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1565f_20 :: state_pred where
  \<open>Q_0x1565f_20 \<sigma> \<equiv> RIP \<sigma> = 0x1565f \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x1565f_20_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x1565c_0x1565c_20[blocks]:
  assumes \<open>(P_0x1565c_20 && P_0x1565c_20_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x1565c 20 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1565f_20 ?\<sigma> \<and> block_usage P_0x1565c_20_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1565c_20_def P_0x1565c_20_regions_def post: Q_0x1565f_20_def regionset: P_0x1565c_20_regions_set_def)

definition P_0x1565f_true_21 :: state_pred where
  \<open>P_0x1565f_true_21 \<sigma> \<equiv> RIP \<sigma> = 0x1565f \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1565f_true_21_def[Ps]

definition P_0x1565f_true_21_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1565f_true_21_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1565f_true_21_regions :: state_pred where
  \<open>P_0x1565f_true_21_regions \<sigma> \<equiv> \<exists>regions. P_0x1565f_true_21_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_21 :: state_pred where
  \<open>Q_0x155ec_21 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_21_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x1565f_0x155e7_21[blocks]:
  assumes \<open>(P_0x1565f_true_21 && P_0x1565f_true_21_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x155e7 21 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_21 ?\<sigma> \<and> block_usage P_0x1565f_true_21_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1565f_true_21_def P_0x1565f_true_21_regions_def post: Q_0x155ec_21_def regionset: P_0x1565f_true_21_regions_set_def)

definition P_0x1565f_false_22 :: state_pred where
  \<open>P_0x1565f_false_22 \<sigma> \<equiv> RIP \<sigma> = 0x1565f \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1565f_false_22_def[Ps]

definition P_0x1565f_false_22_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1565f_false_22_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (17, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (18, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1565f_false_22_regions :: state_pred where
  \<open>P_0x1565f_false_22_regions \<sigma> \<equiv> \<exists>regions. P_0x1565f_false_22_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15679_22 :: state_pred where
  \<open>Q_0x15679_22 \<sigma> \<equiv> RIP \<sigma> = 0x15679 \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15679_22_def[Qs]

schematic_goal qcow_write_snapshots_0_5_0x1565f_0x15672_22[blocks]:
  assumes \<open>(P_0x1565f_false_22 && P_0x1565f_false_22_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 5 0x15672 22 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15679_22 ?\<sigma> \<and> block_usage P_0x1565f_false_22_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1565f_false_22_def P_0x1565f_false_22_regions_def post: Q_0x15679_22_def regionset: P_0x1565f_false_22_regions_set_def)

definition P_0x15679_23 :: state_pred where
  \<open>P_0x15679_23 \<sigma> \<equiv> RIP \<sigma> = 0x15679 \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15679_23_def[Ps]

definition P_0x15679_23_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15679_23_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (17, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (18, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15679_23_regions :: state_pred where
  \<open>P_0x15679_23_regions \<sigma> \<equiv> \<exists>regions. P_0x15679_23_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_update_refcount_addr_0x15679_23 :: state_pred where
  \<open>Q_update_refcount_addr_0x15679_23 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = update_refcount_addr \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1567e \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_update_refcount_addr_0x15679_23_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15679_0x15679_23[blocks]:
  assumes \<open>(P_0x15679_23 && P_0x15679_23_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15679 23 \<sigma> \<triangleq> ?\<sigma> \<and> Q_update_refcount_addr_0x15679_23 ?\<sigma> \<and> block_usage P_0x15679_23_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15679_23_def P_0x15679_23_regions_def post: Q_update_refcount_addr_0x15679_23_def regionset: P_0x15679_23_regions_set_def)

definition P_0x1567e_24 :: state_pred where
  \<open>P_0x1567e_24 \<sigma> \<equiv> RIP \<sigma> = 0x1567e \<and> RAX \<sigma> = update_refcount_0x15679_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1567e \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1567e_24_def[Ps]

definition P_0x1567e_24_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1567e_24_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x7c), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (18, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (19, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1567e_24_regions :: state_pred where
  \<open>P_0x1567e_24_regions \<sigma> \<equiv> \<exists>regions. P_0x1567e_24_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_24 :: state_pred where
  \<open>Q_0x155ec_24 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_24_def[Qs]

schematic_goal qcow_write_snapshots_0_6_0x1567e_0x15696_24[blocks]:
  assumes \<open>(P_0x1567e_24 && P_0x1567e_24_regions) \<sigma>\<close>
  shows \<open>exec_block 6 0x15696 24 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_24 ?\<sigma> \<and> block_usage P_0x1567e_24_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1567e_24_def P_0x1567e_24_regions_def post: Q_0x155ec_24_def regionset: P_0x1567e_24_regions_set_def)

definition P_0x15495_false_25 :: state_pred where
  \<open>P_0x15495_false_25 \<sigma> \<equiv> RIP \<sigma> = 0x15495 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> R15 \<sigma> = R15\<^sub>0 \<and> R9 \<sigma> = R9\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15488\<close>
declare P_0x15495_false_25_def[Ps]

definition P_0x15495_false_25_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15495_false_25_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x80), 4),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15495_false_25_regions :: state_pred where
  \<open>P_0x15495_false_25_regions \<sigma> \<equiv> \<exists>regions. P_0x15495_false_25_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1552a_25 :: state_pred where
  \<open>Q_0x1552a_25 \<sigma> \<equiv> RIP \<sigma> = 0x1552a \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x1552a_25_def[Qs]

schematic_goal qcow_write_snapshots_0_7_0x15495_0x154b4_25[blocks]:
  assumes \<open>(P_0x15495_false_25 && P_0x15495_false_25_regions && ! jle) \<sigma>\<close>
  shows \<open>exec_block 7 0x154b4 25 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1552a_25 ?\<sigma> \<and> block_usage P_0x15495_false_25_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15495_false_25_def P_0x15495_false_25_regions_def post: Q_0x1552a_25_def regionset: P_0x15495_false_25_regions_set_def)

definition P_0x1552a_26 :: state_pred where
  \<open>P_0x1552a_26 \<sigma> \<equiv> RIP \<sigma> = 0x1552a \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x1552a_26_def[Ps]

definition P_0x1552a_26_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1552a_26_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (9, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (11, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (21, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (23, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (25, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 8),
    (27, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x1552a_26_regions :: state_pred where
  \<open>P_0x1552a_26_regions \<sigma> \<equiv> \<exists>regions. P_0x1552a_26_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(19,20), (22,24), (23,24), (25,26)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(19,20), (20,19), (22,24), (23,24), (24,22), (24,23), (25,26), (26,25)}))
\<close>

definition Q_0x1558b_26 :: state_pred where
  \<open>Q_0x1558b_26 \<sigma> \<equiv> RIP \<sigma> = 0x1558b \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x1558b_26_def[Qs]

schematic_goal qcow_write_snapshots_0_25_0x1552a_0x15587_26[blocks]:
  assumes \<open>(P_0x1552a_26 && P_0x1552a_26_regions) \<sigma>\<close>
  shows \<open>exec_block 25 0x15587 26 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1558b_26 ?\<sigma> \<and> block_usage P_0x1552a_26_regions_set \<sigma> ?\<sigma>\<close>
  apply (insert assms)
  apply (auto simp: pred_logic P_0x1552a_26_def P_0x1552a_26_regions_def P_0x1552a_26_regions_set_def)
    apply step+
    apply (simp add: block_usage_def eq_def setcc_def cmovcc_def if'_then_else_def sub_sign_flag_def simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def Q_0x1558b_26_def P_0x1552a_26_regions_set_def)
   apply (simp add: block_usage_def eq_def setcc_def cmovcc_def if'_then_else_def sub_sign_flag_def simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def Q_0x1558b_26_def P_0x1552a_26_regions_set_def)
  apply (simp add: block_usage_def eq_def setcc_def cmovcc_def if'_then_else_def sub_sign_flag_def simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def Q_0x1558b_26_def P_0x1552a_26_regions_set_def)
  done
  using assms
  by (steps pre: P_0x1552a_26_def P_0x1552a_26_regions_def post: Q_0x1558b_26_def regionset: P_0x1552a_26_regions_set_def)

definition P_0x1558b_27 :: state_pred where
  \<open>P_0x1558b_27 \<sigma> \<equiv> RIP \<sigma> = 0x1558b \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x1558b_27_def[Ps]

definition P_0x1558b_27_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1558b_27_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (9, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (11, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (21, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (23, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (25, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 8),
    (27, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (30, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x1558b_27_regions :: state_pred where
  \<open>P_0x1558b_27_regions \<sigma> \<equiv> \<exists>regions. P_0x1558b_27_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(19,20), (22,24), (23,24), (25,26)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(19,20), (20,19), (22,24), (23,24), (24,22), (24,23), (25,26), (26,25)}))
\<close>

definition Q_strlen_addr_0x1558b_27 :: state_pred where
  \<open>Q_strlen_addr_0x1558b_27 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = strlen_addr \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15590\<close>
declare Q_strlen_addr_0x1558b_27_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x1558b_0x1558b_27[blocks]:
  assumes \<open>(P_0x1558b_27 && P_0x1558b_27_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x1558b 27 \<sigma> \<triangleq> ?\<sigma> \<and> Q_strlen_addr_0x1558b_27 ?\<sigma> \<and> block_usage P_0x1558b_27_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1558b_27_def P_0x1558b_27_regions_def post: Q_strlen_addr_0x1558b_27_def regionset: P_0x1558b_27_regions_set_def)

definition P_0x15590_28 :: state_pred where
  \<open>P_0x15590_28 \<sigma> \<equiv> RIP \<sigma> = 0x15590 \<and> RAX \<sigma> = strlen_0x1558b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15590\<close>
declare P_0x15590_28_def[Ps]

definition P_0x15590_28_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15590_28_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15590_28_regions :: state_pred where
  \<open>P_0x15590_28_regions \<sigma> \<equiv> \<exists>regions. P_0x15590_28_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25), (26,27)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24), (26,27), (27,26)}))
\<close>

definition Q_0x15597_28 :: state_pred where
  \<open>Q_0x15597_28 \<sigma> \<equiv> RIP \<sigma> = 0x15597 \<and> RAX \<sigma> = strlen_0x1558b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15590\<close>
declare Q_0x15597_28_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x15590_0x15594_28[blocks]:
  assumes \<open>(P_0x15590_28 && P_0x15590_28_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x15594 28 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15597_28 ?\<sigma> \<and> block_usage P_0x15590_28_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15590_28_def P_0x15590_28_regions_def post: Q_0x15597_28_def regionset: P_0x15590_28_regions_set_def)

definition P_0x15597_29 :: state_pred where
  \<open>P_0x15597_29 \<sigma> \<equiv> RIP \<sigma> = 0x15597 \<and> RAX \<sigma> = strlen_0x1558b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15590\<close>
declare P_0x15597_29_def[Ps]

definition P_0x15597_29_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15597_29_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x15597_29_regions :: state_pred where
  \<open>P_0x15597_29_regions \<sigma> \<equiv> \<exists>regions. P_0x15597_29_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25), (26,27)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24), (26,27), (27,26)}))
\<close>

definition Q_strlen_addr_0x15597_29 :: state_pred where
  \<open>Q_strlen_addr_0x15597_29 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = strlen_addr \<and> RAX \<sigma> = strlen_0x1558b_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1559c\<close>
declare Q_strlen_addr_0x15597_29_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15597_0x15597_29[blocks]:
  assumes \<open>(P_0x15597_29 && P_0x15597_29_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15597 29 \<sigma> \<triangleq> ?\<sigma> \<and> Q_strlen_addr_0x15597_29 ?\<sigma> \<and> block_usage P_0x15597_29_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15597_29_def P_0x15597_29_regions_def post: Q_strlen_addr_0x15597_29_def regionset: P_0x15597_29_regions_set_def)

definition P_0x1559c_30 :: state_pred where
  \<open>P_0x1559c_30 \<sigma> \<equiv> RIP \<sigma> = 0x1559c \<and> RAX \<sigma> = strlen_0x15597_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x68)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1559c\<close>
declare P_0x1559c_30_def[Ps]

definition P_0x1559c_30_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1559c_30_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5a), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (28, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (29, ((RSP\<^sub>0::64 word) - 0x60), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (32, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (33, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (34, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (35, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1559c_30_regions :: state_pred where
  \<open>P_0x1559c_30_regions \<sigma> \<equiv> \<exists>regions. P_0x1559c_30_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25), (26,29), (27,29), (28,29)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24), (26,29), (27,29), (28,29), (29,26), (29,27), (29,28)}))
\<close>

definition Q_0x155d5_30 :: state_pred where
  \<open>Q_0x155d5_30 \<sigma> \<equiv> RIP \<sigma> = 0x155d5 \<and> RAX \<sigma> = ucast ((ucast(fst (bv_cat ((ucast (((\<langle>31,16\<rangle>strlen_0x15597_retval::16 word)::16 word))::64 word), 16) ((ucast ((word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>strlen_0x15597_retval::16 word)::16 word))::16 word)::16 word))::64 word), 16)))::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1559c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x155d5_30_def[Qs]

schematic_goal qcow_write_snapshots_0_15_0x1559c_0x155d2_30[blocks]:
  assumes \<open>(P_0x1559c_30 && P_0x1559c_30_regions) \<sigma>\<close>
  shows \<open>exec_block 15 0x155d2 30 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155d5_30 ?\<sigma> \<and> block_usage P_0x1559c_30_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1559c_30_def P_0x1559c_30_regions_def post: Q_0x155d5_30_def regionset: P_0x1559c_30_regions_set_def)

definition P_0x155d5_31 :: state_pred where
  \<open>P_0x155d5_31 \<sigma> \<equiv> RIP \<sigma> = 0x155d5 \<and> RAX \<sigma> = ucast ((ucast(fst (bv_cat ((ucast (((\<langle>31,16\<rangle>strlen_0x15597_retval::16 word)::16 word))::64 word), 16) ((ucast ((word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>strlen_0x15597_retval::16 word)::16 word))::16 word)::16 word))::64 word), 16)))::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1559c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x155d5_31_def[Ps]

definition P_0x155d5_31_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155d5_31_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x155d5_31_regions :: state_pred where
  \<open>P_0x155d5_31_regions \<sigma> \<equiv> \<exists>regions. P_0x155d5_31_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_bdrv_pwrite_addr_0x155d5_31 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x155d5_31 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = ucast ((ucast(fst (bv_cat ((ucast (((\<langle>31,16\<rangle>strlen_0x15597_retval::16 word)::16 word))::64 word), 16) ((ucast ((word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>strlen_0x15597_retval::16 word)::16 word))::16 word)::16 word))::64 word), 16)))::32 word)) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x155d5_31_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x155d5_0x155d5_31[blocks]:
  assumes \<open>(P_0x155d5_31 && P_0x155d5_31_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x155d5 31 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x155d5_31 ?\<sigma> \<and> block_usage P_0x155d5_31_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155d5_31_def P_0x155d5_31_regions_def post: Q_bdrv_pwrite_addr_0x155d5_31_def regionset: P_0x155d5_31_regions_set_def)

definition P_0x155da_32 :: state_pred where
  \<open>P_0x155da_32 \<sigma> \<equiv> RIP \<sigma> = 0x155da \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x155da_32_def[Ps]

definition P_0x155da_32_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155da_32_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (32, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (33, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x155da_32_regions :: state_pred where
  \<open>P_0x155da_32_regions \<sigma> \<equiv> \<exists>regions. P_0x155da_32_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x155e1_32 :: state_pred where
  \<open>Q_0x155e1_32 \<sigma> \<equiv> RIP \<sigma> = 0x155e1 \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x155e1_32_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x155da_0x155de_32[blocks]:
  assumes \<open>(P_0x155da_32 && P_0x155da_32_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x155de 32 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155e1_32 ?\<sigma> \<and> block_usage P_0x155da_32_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155da_32_def P_0x155da_32_regions_def post: Q_0x155e1_32_def regionset: P_0x155da_32_regions_set_def)

definition P_0x155e1_true_33 :: state_pred where
  \<open>P_0x155e1_true_33 \<sigma> \<equiv> RIP \<sigma> = 0x155e1 \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x155e1_true_33_def[Ps]

definition P_0x155e1_true_33_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155e1_true_33_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (32, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (33, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x155e1_true_33_regions :: state_pred where
  \<open>P_0x155e1_true_33_regions \<sigma> \<equiv> \<exists>regions. P_0x155e1_true_33_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x154d5_33 :: state_pred where
  \<open>Q_0x154d5_33 \<sigma> \<equiv> RIP \<sigma> = 0x154d5 \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x154d5_33_def[Qs]

schematic_goal qcow_write_snapshots_0_7_0x155e1_0x154d1_33[blocks]:
  assumes \<open>(P_0x155e1_true_33 && P_0x155e1_true_33_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block 7 0x154d1 33 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x154d5_33 ?\<sigma> \<and> block_usage P_0x155e1_true_33_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155e1_true_33_def P_0x155e1_true_33_regions_def post: Q_0x154d5_33_def regionset: P_0x155e1_true_33_regions_set_def)

definition P_0x154d5_34 :: state_pred where
  \<open>P_0x154d5_34 \<sigma> \<equiv> RIP \<sigma> = 0x154d5 \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x154d5_34_def[Ps]

definition P_0x154d5_34_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x154d5_34_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x154d5_34_regions :: state_pred where
  \<open>P_0x154d5_34_regions \<sigma> \<equiv> \<exists>regions. P_0x154d5_34_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_bdrv_pwrite_addr_0x154d5_34 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x154d5_34 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x154d5_34_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x154d5_0x154d5_34[blocks]:
  assumes \<open>(P_0x154d5_34 && P_0x154d5_34_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x154d5 34 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x154d5_34 ?\<sigma> \<and> block_usage P_0x154d5_34_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x154d5_34_def P_0x154d5_34_regions_def post: Q_bdrv_pwrite_addr_0x154d5_34_def regionset: P_0x154d5_34_regions_set_def)

definition P_0x154da_35 :: state_pred where
  \<open>P_0x154da_35 \<sigma> \<equiv> RIP \<sigma> = 0x154da \<and> RAX \<sigma> = bdrv_pwrite_0x154d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x154da_35_def[Ps]

definition P_0x154da_35_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x154da_35_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x154da_35_regions :: state_pred where
  \<open>P_0x154da_35_regions \<sigma> \<equiv> \<exists>regions. P_0x154da_35_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x154dd_35 :: state_pred where
  \<open>Q_0x154dd_35 \<sigma> \<equiv> RIP \<sigma> = 0x154dd \<and> RAX \<sigma> = bdrv_pwrite_0x154d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x154dd_35_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x154da_0x154da_35[blocks]:
  assumes \<open>(P_0x154da_35 && P_0x154da_35_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x154da 35 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x154dd_35 ?\<sigma> \<and> block_usage P_0x154da_35_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x154da_35_def P_0x154da_35_regions_def post: Q_0x154dd_35_def regionset: P_0x154da_35_regions_set_def)

definition P_0x154dd_true_36 :: state_pred where
  \<open>P_0x154dd_true_36 \<sigma> \<equiv> RIP \<sigma> = 0x154dd \<and> RAX \<sigma> = bdrv_pwrite_0x154d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x154dd_true_36_def[Ps]

definition P_0x154dd_true_36_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x154dd_true_36_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x154dd_true_36_regions :: state_pred where
  \<open>P_0x154dd_true_36_regions \<sigma> \<equiv> \<exists>regions. P_0x154dd_true_36_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x155e7_36 :: state_pred where
  \<open>Q_0x155e7_36 \<sigma> \<equiv> RIP \<sigma> = 0x155e7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155e7_36_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x154dd_0x154dd_36[blocks]:
  assumes \<open>(P_0x154dd_true_36 && P_0x154dd_true_36_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x154dd 36 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155e7_36 ?\<sigma> \<and> block_usage P_0x154dd_true_36_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x154dd_true_36_def P_0x154dd_true_36_regions_def post: Q_0x155e7_36_def regionset: P_0x154dd_true_36_regions_set_def)

definition P_0x154dd_false_37 :: state_pred where
  \<open>P_0x154dd_false_37 \<sigma> \<equiv> RIP \<sigma> = 0x154dd \<and> RAX \<sigma> = bdrv_pwrite_0x154d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R12 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x154dd_false_37_def[Ps]

definition P_0x154dd_false_37_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x154dd_false_37_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (32, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (33, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x154dd_false_37_regions :: state_pred where
  \<open>P_0x154dd_false_37_regions \<sigma> \<equiv> \<exists>regions. P_0x154dd_false_37_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x154fa_37 :: state_pred where
  \<open>Q_0x154fa_37 \<sigma> \<equiv> RIP \<sigma> = 0x154fa \<and> RAX \<sigma> = (sextend (ucast ((\<langle>31,0\<rangle>bdrv_pwrite_0x154d5_retval::32 word))) 32 64::64 word) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x154fa_37_def[Qs]

schematic_goal qcow_write_snapshots_0_8_0x154dd_0x154f7_37[blocks]:
  assumes \<open>(P_0x154dd_false_37 && P_0x154dd_false_37_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 8 0x154f7 37 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x154fa_37 ?\<sigma> \<and> block_usage P_0x154dd_false_37_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x154dd_false_37_def P_0x154dd_false_37_regions_def post: Q_0x154fa_37_def regionset: P_0x154dd_false_37_regions_set_def)

definition P_0x154fa_38 :: state_pred where
  \<open>P_0x154fa_38 \<sigma> \<equiv> RIP \<sigma> = 0x154fa \<and> RAX \<sigma> = (sextend (ucast ((\<langle>31,0\<rangle>bdrv_pwrite_0x154d5_retval::32 word))) 32 64::64 word) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x154fa_38_def[Ps]

definition P_0x154fa_38_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x154fa_38_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x154fa_38_regions :: state_pred where
  \<open>P_0x154fa_38_regions \<sigma> \<equiv> \<exists>regions. P_0x154fa_38_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_bdrv_pwrite_addr_0x154fa_38 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x154fa_38 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = (sextend (ucast ((\<langle>31,0\<rangle>bdrv_pwrite_0x154d5_retval::32 word))) 32 64::64 word) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154ff \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x154fa_38_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x154fa_0x154fa_38[blocks]:
  assumes \<open>(P_0x154fa_38 && P_0x154fa_38_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x154fa 38 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x154fa_38 ?\<sigma> \<and> block_usage P_0x154fa_38_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x154fa_38_def P_0x154fa_38_regions_def post: Q_bdrv_pwrite_addr_0x154fa_38_def regionset: P_0x154fa_38_regions_set_def)

definition P_0x154ff_39 :: state_pred where
  \<open>P_0x154ff_39 \<sigma> \<equiv> RIP \<sigma> = 0x154ff \<and> RAX \<sigma> = bdrv_pwrite_0x154fa_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154ff \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x154ff_39_def[Ps]

definition P_0x154ff_39_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x154ff_39_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x154ff_39_regions :: state_pred where
  \<open>P_0x154ff_39_regions \<sigma> \<equiv> \<exists>regions. P_0x154ff_39_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x15502_39 :: state_pred where
  \<open>Q_0x15502_39 \<sigma> \<equiv> RIP \<sigma> = 0x15502 \<and> RAX \<sigma> = bdrv_pwrite_0x154fa_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154ff \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15502_39_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x154ff_0x154ff_39[blocks]:
  assumes \<open>(P_0x154ff_39 && P_0x154ff_39_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x154ff 39 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15502_39 ?\<sigma> \<and> block_usage P_0x154ff_39_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x154ff_39_def P_0x154ff_39_regions_def post: Q_0x15502_39_def regionset: P_0x154ff_39_regions_set_def)

definition P_0x15502_true_40 :: state_pred where
  \<open>P_0x15502_true_40 \<sigma> \<equiv> RIP \<sigma> = 0x15502 \<and> RAX \<sigma> = bdrv_pwrite_0x154fa_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154ff \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15502_true_40_def[Ps]

definition P_0x15502_true_40_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15502_true_40_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (31, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (32, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15502_true_40_regions :: state_pred where
  \<open>P_0x15502_true_40_regions \<sigma> \<equiv> \<exists>regions. P_0x15502_true_40_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x155e7_40 :: state_pred where
  \<open>Q_0x155e7_40 \<sigma> \<equiv> RIP \<sigma> = 0x155e7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155e7_40_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15502_0x15502_40[blocks]:
  assumes \<open>(P_0x15502_true_40 && P_0x15502_true_40_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15502 40 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155e7_40 ?\<sigma> \<and> block_usage P_0x15502_true_40_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15502_true_40_def P_0x15502_true_40_regions_def post: Q_0x155e7_40_def regionset: P_0x15502_true_40_regions_set_def)

definition P_0x15502_false_41 :: state_pred where
  \<open>P_0x15502_false_41 \<sigma> \<equiv> RIP \<sigma> = 0x15502 \<and> RAX \<sigma> = bdrv_pwrite_0x154fa_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = ucast ((\<langle>31,0\<rangle>R13 \<sigma>::32 word)) \<and> RDX \<sigma> = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x154ff \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15502_false_41_def[Ps]

definition P_0x15502_false_41_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15502_false_41_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x80), 4),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (32, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (33, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15502_false_41_regions :: state_pred where
  \<open>P_0x15502_false_41_regions \<sigma> \<equiv> \<exists>regions. P_0x15502_false_41_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x15524_41 :: state_pred where
  \<open>Q_0x15524_41 \<sigma> \<equiv> RIP \<sigma> = 0x15524 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x15524_41_def[Qs]

schematic_goal qcow_write_snapshots_0_8_0x15502_0x1551e_41[blocks]:
  assumes \<open>(P_0x15502_false_41 && P_0x15502_false_41_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 8 0x1551e 41 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15524_41 ?\<sigma> \<and> block_usage P_0x15502_false_41_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15502_false_41_def P_0x15502_false_41_regions_def post: Q_0x15524_41_def regionset: P_0x15502_false_41_regions_set_def)

definition P_0x15524_true_42 :: state_pred where
  \<open>P_0x15524_true_42 \<sigma> \<equiv> RIP \<sigma> = 0x15524 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x15524_true_42_def[Ps]

definition P_0x15524_true_42_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15524_true_42_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x15524_true_42_regions :: state_pred where
  \<open>P_0x15524_true_42_regions \<sigma> \<equiv> \<exists>regions. P_0x15524_true_42_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15610_42 :: state_pred where
  \<open>Q_0x15610_42 \<sigma> \<equiv> RIP \<sigma> = 0x15610 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x15610_42_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15524_0x15524_42[blocks]:
  assumes \<open>(P_0x15524_true_42 && P_0x15524_true_42_regions && jle) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15524 42 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15610_42 ?\<sigma> \<and> block_usage P_0x15524_true_42_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15524_true_42_def P_0x15524_true_42_regions_def post: Q_0x15610_42_def regionset: P_0x15524_true_42_regions_set_def)

definition P_0x15524_false_43 :: state_pred where
  \<open>P_0x15524_false_43 \<sigma> \<equiv> RIP \<sigma> = 0x15524 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x15524_false_43_def[Ps]

definition P_0x15524_false_43_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15524_false_43_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x15524_false_43_regions :: state_pred where
  \<open>P_0x15524_false_43_regions \<sigma> \<equiv> \<exists>regions. P_0x15524_false_43_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1552a_43 :: state_pred where
  \<open>Q_0x1552a_43 \<sigma> \<equiv> RIP \<sigma> = 0x1552a \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x1552a_43_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15524_0x15524_43[blocks]:
  assumes \<open>(P_0x15524_false_43 && P_0x15524_false_43_regions && ! jle) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15524 43 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1552a_43 ?\<sigma> \<and> block_usage P_0x15524_false_43_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15524_false_43_def P_0x15524_false_43_regions_def post: Q_0x1552a_43_def regionset: P_0x15524_false_43_regions_set_def)

definition P_0x155e1_false_44 :: state_pred where
  \<open>P_0x155e1_false_44 \<sigma> \<equiv> RIP \<sigma> = 0x155e1 \<and> RAX \<sigma> = bdrv_pwrite_0x155d5_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x28 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> R15 \<sigma> = (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>) \<and> R9 \<sigma> = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = 0x0 \<and> regs \<sigma> ymm0w0 = 0x0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) = (\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x48),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x50),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x54),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x58)::64 word) + 0x8),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x58),8]::64 word) = 0x0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x5c),2]::16 word) = ucast (word_rotl 0x8 (ucast (((\<langle>15,0\<rangle>R12 \<sigma>::16 word)::16 word))::16 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x60),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x68),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x98),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x155da \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x155e1_false_44_def[Ps]

definition P_0x155e1_false_44_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155e1_false_44_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x8), 4),
    (4, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x10), 8),
    (5, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x18), 8),
    (6, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x20), 4),
    (7, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x24), 4),
    (8, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x28), 4),
    (9, (((((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>)::64 word) + 0x30), 8),
    (10, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (11, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360), 8),
    (12, (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x360),8]::64 word)::64 word) + R14 \<sigma>), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x48), 4),
    (21, ((RSP\<^sub>0::64 word) - 0x48), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x50), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x54), 4),
    (24, ((RSP\<^sub>0::64 word) - 0x58), 4),
    (25, ((RSP\<^sub>0::64 word) - 0x58), 8),
    (26, ((RSP\<^sub>0::64 word) - 0x5c), 2),
    (27, ((RSP\<^sub>0::64 word) - 0x60), 4),
    (28, ((RSP\<^sub>0::64 word) - 0x68), 8),
    (29, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (30, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x98), 8),
    (32, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (33, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x155e1_false_44_regions :: state_pred where
  \<open>P_0x155e1_false_44_regions \<sigma> \<equiv> \<exists>regions. P_0x155e1_false_44_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(20,21), (23,25), (24,25)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(20,21), (21,20), (23,25), (24,25), (25,23), (25,24)}))
\<close>

definition Q_0x155e7_44 :: state_pred where
  \<open>Q_0x155e7_44 \<sigma> \<equiv> RIP \<sigma> = 0x155e7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155e7_44_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x155e1_0x155e1_44[blocks]:
  assumes \<open>(P_0x155e1_false_44 && P_0x155e1_false_44_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x155e1 44 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155e7_44 ?\<sigma> \<and> block_usage P_0x155e1_false_44_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155e1_false_44_def P_0x155e1_false_44_regions_def post: Q_0x155e7_44_def regionset: P_0x155e1_false_44_regions_set_def)

definition P_0x15610_45 :: state_pred where
  \<open>P_0x15610_45 \<sigma> \<equiv> RIP \<sigma> = 0x15610 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x15610_45_def[Ps]

definition P_0x15610_45_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15610_45_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15610_45_regions :: state_pred where
  \<open>P_0x15610_45_regions \<sigma> \<equiv> \<exists>regions. P_0x15610_45_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1562f_45 :: state_pred where
  \<open>Q_0x1562f_45 \<sigma> \<equiv> RIP \<sigma> = 0x1562f \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x1562f_45_def[Qs]

schematic_goal qcow_write_snapshots_0_7_0x15610_0x1562c_45[blocks]:
  assumes \<open>(P_0x15610_45 && P_0x15610_45_regions) \<sigma>\<close>
  shows \<open>exec_block 7 0x1562c 45 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1562f_45 ?\<sigma> \<and> block_usage P_0x15610_45_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15610_45_def P_0x15610_45_regions_def post: Q_0x1562f_45_def regionset: P_0x15610_45_regions_set_def)

definition P_0x1562f_46 :: state_pred where
  \<open>P_0x1562f_46 \<sigma> \<equiv> RIP \<sigma> = 0x1562f \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1562f_46_def[Ps]

definition P_0x1562f_46_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1562f_46_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1562f_46_regions :: state_pred where
  \<open>P_0x1562f_46_regions \<sigma> \<equiv> \<exists>regions. P_0x1562f_46_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_pwrite_addr_0x1562f_46 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x1562f_46 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x1562f_46_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x1562f_0x1562f_46[blocks]:
  assumes \<open>(P_0x1562f_46 && P_0x1562f_46_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x1562f 46 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x1562f_46 ?\<sigma> \<and> block_usage P_0x1562f_46_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1562f_46_def P_0x1562f_46_regions_def post: Q_bdrv_pwrite_addr_0x1562f_46_def regionset: P_0x1562f_46_regions_set_def)

definition P_0x15634_47 :: state_pred where
  \<open>P_0x15634_47 \<sigma> \<equiv> RIP \<sigma> = 0x15634 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15634_47_def[Ps]

definition P_0x15634_47_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15634_47_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15634_47_regions :: state_pred where
  \<open>P_0x15634_47_regions \<sigma> \<equiv> \<exists>regions. P_0x15634_47_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15637_47 :: state_pred where
  \<open>Q_0x15637_47 \<sigma> \<equiv> RIP \<sigma> = 0x15637 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15637_47_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15634_0x15634_47[blocks]:
  assumes \<open>(P_0x15634_47 && P_0x15634_47_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15634 47 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15637_47 ?\<sigma> \<and> block_usage P_0x15634_47_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15634_47_def P_0x15634_47_regions_def post: Q_0x15637_47_def regionset: P_0x15634_47_regions_set_def)

definition P_0x15637_true_48 :: state_pred where
  \<open>P_0x15637_true_48 \<sigma> \<equiv> RIP \<sigma> = 0x15637 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15637_true_48_def[Ps]

definition P_0x15637_true_48_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15637_true_48_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (14, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (15, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15637_true_48_regions :: state_pred where
  \<open>P_0x15637_true_48_regions \<sigma> \<equiv> \<exists>regions. P_0x15637_true_48_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_48 :: state_pred where
  \<open>Q_0x155ec_48 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_48_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x15637_0x155e7_48[blocks]:
  assumes \<open>(P_0x15637_true_48 && P_0x15637_true_48_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x155e7 48 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_48 ?\<sigma> \<and> block_usage P_0x15637_true_48_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15637_true_48_def P_0x15637_true_48_regions_def post: Q_0x155ec_48_def regionset: P_0x15637_true_48_regions_set_def)

definition P_0x15637_false_49 :: state_pred where
  \<open>P_0x15637_false_49 \<sigma> \<equiv> RIP \<sigma> = 0x15637 \<and> RAX \<sigma> = bdrv_pwrite_0x1562f_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x8 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x70) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x40 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15637_false_49_def[Ps]

definition P_0x15637_false_49_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15637_false_49_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15637_false_49_regions :: state_pred where
  \<open>P_0x15637_false_49_regions \<sigma> \<equiv> \<exists>regions. P_0x15637_false_49_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15657_49 :: state_pred where
  \<open>Q_0x15657_49 \<sigma> \<equiv> RIP \<sigma> = 0x15657 \<and> RAX \<sigma> = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15657_49_def[Qs]

schematic_goal qcow_write_snapshots_0_8_0x15637_0x15654_49[blocks]:
  assumes \<open>(P_0x15637_false_49 && P_0x15637_false_49_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 8 0x15654 49 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15657_49 ?\<sigma> \<and> block_usage P_0x15637_false_49_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15637_false_49_def P_0x15637_false_49_regions_def post: Q_0x15657_49_def regionset: P_0x15637_false_49_regions_set_def)

definition P_0x15657_50 :: state_pred where
  \<open>P_0x15657_50 \<sigma> \<equiv> RIP \<sigma> = 0x15657 \<and> RAX \<sigma> = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x15634 \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15657_50_def[Ps]

definition P_0x15657_50_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15657_50_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15657_50_regions :: state_pred where
  \<open>P_0x15657_50_regions \<sigma> \<equiv> \<exists>regions. P_0x15657_50_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_pwrite_addr_0x15657_50 :: state_pred where
  \<open>Q_bdrv_pwrite_addr_0x15657_50 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = bdrv_pwrite_addr \<and> RAX \<sigma> = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_bdrv_pwrite_addr_0x15657_50_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15657_0x15657_50[blocks]:
  assumes \<open>(P_0x15657_50 && P_0x15657_50_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15657 50 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_pwrite_addr_0x15657_50 ?\<sigma> \<and> block_usage P_0x15657_50_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15657_50_def P_0x15657_50_regions_def post: Q_bdrv_pwrite_addr_0x15657_50_def regionset: P_0x15657_50_regions_set_def)

definition P_0x1565c_51 :: state_pred where
  \<open>P_0x1565c_51 \<sigma> \<equiv> RIP \<sigma> = 0x1565c \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1565c_51_def[Ps]

definition P_0x1565c_51_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1565c_51_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1565c_51_regions :: state_pred where
  \<open>P_0x1565c_51_regions \<sigma> \<equiv> \<exists>regions. P_0x1565c_51_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x1565f_51 :: state_pred where
  \<open>Q_0x1565f_51 \<sigma> \<equiv> RIP \<sigma> = 0x1565f \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x1565f_51_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x1565c_0x1565c_51[blocks]:
  assumes \<open>(P_0x1565c_51 && P_0x1565c_51_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x1565c 51 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x1565f_51 ?\<sigma> \<and> block_usage P_0x1565c_51_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1565c_51_def P_0x1565c_51_regions_def post: Q_0x1565f_51_def regionset: P_0x1565c_51_regions_set_def)

definition P_0x1565f_true_52 :: state_pred where
  \<open>P_0x1565f_true_52 \<sigma> \<equiv> RIP \<sigma> = 0x1565f \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1565f_true_52_def[Ps]

definition P_0x1565f_true_52_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1565f_true_52_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (13, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (15, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (16, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1565f_true_52_regions :: state_pred where
  \<open>P_0x1565f_true_52_regions \<sigma> \<equiv> \<exists>regions. P_0x1565f_true_52_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_52 :: state_pred where
  \<open>Q_0x155ec_52 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_52_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x1565f_0x155e7_52[blocks]:
  assumes \<open>(P_0x1565f_true_52 && P_0x1565f_true_52_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x155e7 52 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_52 ?\<sigma> \<and> block_usage P_0x1565f_true_52_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1565f_true_52_def P_0x1565f_true_52_regions_def post: Q_0x155ec_52_def regionset: P_0x1565f_true_52_regions_set_def)

definition P_0x1565f_false_53 :: state_pred where
  \<open>P_0x1565f_false_53 \<sigma> \<equiv> RIP \<sigma> = 0x1565f \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0x4 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x74) \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) \<and> RSI \<sigma> = 0x3c \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1565f_false_53_def[Ps]

definition P_0x1565f_false_53_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1565f_false_53_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (17, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (18, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1565f_false_53_regions :: state_pred where
  \<open>P_0x1565f_false_53_regions \<sigma> \<equiv> \<exists>regions. P_0x1565f_false_53_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x15679_53 :: state_pred where
  \<open>Q_0x15679_53 \<sigma> \<equiv> RIP \<sigma> = 0x15679 \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_0x15679_53_def[Qs]

schematic_goal qcow_write_snapshots_0_5_0x1565f_0x15672_53[blocks]:
  assumes \<open>(P_0x1565f_false_53 && P_0x1565f_false_53_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 5 0x15672 53 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x15679_53 ?\<sigma> \<and> block_usage P_0x1565f_false_53_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1565f_false_53_def P_0x1565f_false_53_regions_def post: Q_0x15679_53_def regionset: P_0x1565f_false_53_regions_set_def)

definition P_0x15679_54 :: state_pred where
  \<open>P_0x15679_54 \<sigma> \<equiv> RIP \<sigma> = 0x15679 \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1565c \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x15679_54_def[Ps]

definition P_0x15679_54_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x15679_54_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (17, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (18, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x15679_54_regions :: state_pred where
  \<open>P_0x15679_54_regions \<sigma> \<equiv> \<exists>regions. P_0x15679_54_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_update_refcount_addr_0x15679_54 :: state_pred where
  \<open>Q_update_refcount_addr_0x15679_54 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = update_refcount_addr \<and> RAX \<sigma> = bdrv_pwrite_0x15657_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1567e \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare Q_update_refcount_addr_0x15679_54_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x15679_0x15679_54[blocks]:
  assumes \<open>(P_0x15679_54 && P_0x15679_54_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x15679 54 \<sigma> \<triangleq> ?\<sigma> \<and> Q_update_refcount_addr_0x15679_54 ?\<sigma> \<and> block_usage P_0x15679_54_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x15679_54_def P_0x15679_54_regions_def post: Q_update_refcount_addr_0x15679_54_def regionset: P_0x15679_54_regions_set_def)

definition P_0x1567e_55 :: state_pred where
  \<open>P_0x1567e_55 \<sigma> \<equiv> RIP \<sigma> = 0x1567e \<and> RAX \<sigma> = update_refcount_0x15679_retval \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RCX \<sigma> = 0xffffffff \<and> RDX \<sigma> = (sextend (ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word))) 32 64::64 word) \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) = (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358),4]::32 word)) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x70),8]::64 word) = (bswap ((ucast (((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)::64 word))::64 word))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x74),4]::32 word) = ucast ((bswap ((ucast (((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)::32 word))::32 word)))) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0xa0),8]::64 word) = 0x1567e \<and> (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word) = (\<sigma> \<turnstile> *[(\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word),8]::64 word)\<close>
declare P_0x1567e_55_def[Ps]

definition P_0x1567e_55_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x1567e_55_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x350), 8),
    (4, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x358), 4),
    (5, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (6, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x70), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x74), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x7c), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (18, ((RSP\<^sub>0::64 word) - 0xa0), 8),
    (19, (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word), 8)
  }\<close>

definition P_0x1567e_55_regions :: state_pred where
  \<open>P_0x1567e_55_regions \<sigma> \<equiv> \<exists>regions. P_0x1567e_55_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_55 :: state_pred where
  \<open>Q_0x155ec_55 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_55_def[Qs]

schematic_goal qcow_write_snapshots_0_6_0x1567e_0x15696_55[blocks]:
  assumes \<open>(P_0x1567e_55 && P_0x1567e_55_regions) \<sigma>\<close>
  shows \<open>exec_block 6 0x15696 55 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_55 ?\<sigma> \<and> block_usage P_0x1567e_55_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x1567e_55_def P_0x1567e_55_regions_def post: Q_0x155ec_55_def regionset: P_0x1567e_55_regions_set_def)

definition P_0x155e7_56 :: state_pred where
  \<open>P_0x155e7_56 \<sigma> \<equiv> RIP \<sigma> = 0x155e7 \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x68) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x155e7_56_def[Ps]

definition P_0x155e7_56_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155e7_56_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x155e7_56_regions :: state_pred where
  \<open>P_0x155e7_56_regions \<sigma> \<equiv> \<exists>regions. P_0x155e7_56_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155ec_56 :: state_pred where
  \<open>Q_0x155ec_56 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155ec_56_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x155e7_0x155e7_56[blocks]:
  assumes \<open>(P_0x155e7_56 && P_0x155e7_56_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x155e7 56 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155ec_56 ?\<sigma> \<and> block_usage P_0x155e7_56_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155e7_56_def P_0x155e7_56_regions_def post: Q_0x155ec_56_def regionset: P_0x155e7_56_regions_set_def)

definition P_0x155ec_57 :: state_pred where
  \<open>P_0x155ec_57 \<sigma> \<equiv> RIP \<sigma> = 0x155ec \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x155ec_57_def[Ps]

definition P_0x155ec_57_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155ec_57_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x155ec_57_regions :: state_pred where
  \<open>P_0x155ec_57_regions \<sigma> \<equiv> \<exists>regions. P_0x155ec_57_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x155fa_57 :: state_pred where
  \<open>Q_0x155fa_57 \<sigma> \<equiv> RIP \<sigma> = 0x155fa \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x155fa_57_def[Qs]

schematic_goal qcow_write_snapshots_0_2_0x155ec_0x155f1_57[blocks]:
  assumes \<open>(P_0x155ec_57 && P_0x155ec_57_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x155f1 57 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x155fa_57 ?\<sigma> \<and> block_usage P_0x155ec_57_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155ec_57_def P_0x155ec_57_regions_def post: Q_0x155fa_57_def regionset: P_0x155ec_57_regions_set_def)

definition P_0x155fa_true_58 :: state_pred where
  \<open>P_0x155fa_true_58 \<sigma> \<equiv> RIP \<sigma> = 0x155fa \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x155fa_true_58_def[Ps]

definition P_0x155fa_true_58_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155fa_true_58_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x155fa_true_58_regions :: state_pred where
  \<open>P_0x155fa_true_58_regions \<sigma> \<equiv> \<exists>regions. P_0x155fa_true_58_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x156af_58 :: state_pred where
  \<open>Q_0x156af_58 \<sigma> \<equiv> RIP \<sigma> = 0x156af \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_0x156af_58_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x155fa_0x155fa_58[blocks]:
  assumes \<open>(P_0x155fa_true_58 && P_0x155fa_true_58_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x155fa 58 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x156af_58 ?\<sigma> \<and> block_usage P_0x155fa_true_58_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155fa_true_58_def P_0x155fa_true_58_regions_def post: Q_0x156af_58_def regionset: P_0x155fa_true_58_regions_set_def)

definition P_0x156af_59 :: state_pred where
  \<open>P_0x156af_59 \<sigma> \<equiv> RIP \<sigma> = 0x156af \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x156af_59_def[Ps]

definition P_0x156af_59_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x156af_59_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8),
    (13, ((RSP\<^sub>0::64 word) - 0xa0), 8)
  }\<close>

definition P_0x156af_59_regions :: state_pred where
  \<open>P_0x156af_59_regions \<sigma> \<equiv> \<exists>regions. P_0x156af_59_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_stack_chk_fail_addr_0x156af_59 :: state_pred where
  \<open>Q_stack_chk_fail_addr_0x156af_59 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0xa0) \<and> RIP \<sigma> = stack_chk_fail_addr \<and> RSI \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_stack_chk_fail_addr_0x156af_59_def[Qs]

schematic_goal qcow_write_snapshots_0_1_0x156af_0x156af_59[blocks]:
  assumes \<open>(P_0x156af_59 && P_0x156af_59_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x156af 59 \<sigma> \<triangleq> ?\<sigma> \<and> Q_stack_chk_fail_addr_0x156af_59 ?\<sigma> \<and> block_usage P_0x156af_59_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x156af_59_def P_0x156af_59_regions_def post: Q_stack_chk_fail_addr_0x156af_59_def regionset: P_0x156af_59_regions_set_def)

definition P_0x155fa_false_60 :: state_pred where
  \<open>P_0x155fa_false_60 \<sigma> \<equiv> RIP \<sigma> = 0x155fa \<and> RBX \<sigma> = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x98) \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare P_0x155fa_false_60_def[Ps]

definition P_0x155fa_false_60_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x155fa_false_60_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RDI\<^sub>0::64 word) + 0x40), 8),
    (3, (((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c), 4),
    (4, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x88), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x90), 8)
  }\<close>

definition P_0x155fa_false_60_regions :: state_pred where
  \<open>P_0x155fa_false_60_regions \<sigma> \<equiv> \<exists>regions. P_0x155fa_false_60_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_ret_address_60 :: state_pred where
  \<open>Q_ret_address_60 \<sigma> \<equiv> RIP \<sigma> = ret_address \<and> RSI \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word) \<and> (\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word) = ucast ((\<sigma> \<turnstile> *[(((\<sigma> \<turnstile> *[((RDI\<^sub>0::64 word) + 0x40),8]::64 word)::64 word) + 0x35c),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x88),8]::64 word) = RDI\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x90),8]::64 word)\<close>
declare Q_ret_address_60_def[Qs]

schematic_goal qcow_write_snapshots_0_9_0x155fa_0x1560e_60[blocks]:
  assumes \<open>(P_0x155fa_false_60 && P_0x155fa_false_60_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 9 0x1560e 60 \<sigma> \<triangleq> ?\<sigma> \<and> Q_ret_address_60 ?\<sigma> \<and> block_usage P_0x155fa_false_60_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x155fa_false_60_def P_0x155fa_false_60_regions_def post: Q_ret_address_60_def regionset: P_0x155fa_false_60_regions_set_def)

definition qcow_write_snapshots_acode :: ACode where
  \<open>qcow_write_snapshots_acode =
    Block 14 0x1541d 0;
    IF jle THEN
      Block 4 0x156aa (Suc 0)
    ELSE
      Block 9 0x15445 2;
      WHILE P_0x15448_3 DO
        Block 4 0x15454 3;
        Block (Suc 0) 0x15458 4;
        CALL strlen_acode;
        Block 2 0x15462 5;
        Block (Suc 0) 0x15465 6;
        CALL strlen_acode;
        Block 3 0x15472 7;
        IF !ZF THEN
          Block (Suc 0) 0x15475 8
        ELSE
          Block (Suc 0) 0x15475 9
        FI
      OD;
      Block 2 0x1547b 10
    FI;
    Block (Suc 0) 0x1547e 11;
    Block (Suc 0) 0x15483 12;
    CALL alloc_clusters_acode;
    Block 3 0x15493 13;
    IF jle THEN
      Block 8 0x1562c 14;
      Block (Suc 0) 0x1562f 15;
      CALL bdrv_pwrite_acode;
      Block (Suc 0) 0x15634 16;
      IF !ZF THEN
        Block 2 0x155e7 17
      ELSE
        Block 8 0x15654 18;
        Block (Suc 0) 0x15657 19;
        CALL bdrv_pwrite_acode;
        Block (Suc 0) 0x1565c 20;
        IF !ZF THEN
          Block 2 0x155e7 21
        ELSE
          Block 5 0x15672 22;
          Block (Suc 0) 0x15679 23;
          CALL update_refcount_acode;
          Block 6 0x15696 24
        FI
      FI
    ELSE
      Block 7 0x154b4 25;
      WHILE P_0x1552a_26 DO
        Block 25 0x15587 26;
        Block (Suc 0) 0x1558b 27;
        CALL strlen_acode;
        Block 2 0x15594 28;
        Block (Suc 0) 0x15597 29;
        CALL strlen_acode;
        Block 15 0x155d2 30;
        Block (Suc 0) 0x155d5 31;
        CALL bdrv_pwrite_acode;
        Block 2 0x155de 32;
        IF ZF THEN
          Block 7 0x154d1 33;
          Block (Suc 0) 0x154d5 34;
          CALL bdrv_pwrite_acode;
          Block (Suc 0) 0x154da 35;
          IF !ZF THEN
            Block (Suc 0) 0x154dd 36
          ELSE
            Block 8 0x154f7 37;
            Block (Suc 0) 0x154fa 38;
            CALL bdrv_pwrite_acode;
            Block (Suc 0) 0x154ff 39;
            IF !ZF THEN
              Block (Suc 0) 0x15502 40
            ELSE
              Block 8 0x1551e 41;
              IF jle THEN
                Block (Suc 0) 0x15524 42
              ELSE
                Block (Suc 0) 0x15524 43
              FI
            FI
          FI
        ELSE
          Block (Suc 0) 0x155e1 44
        FI
      OD;
      CASES [
        (P_0x15610_45,
          Block 7 0x1562c 45;
          Block (Suc 0) 0x1562f 46;
          CALL bdrv_pwrite_acode;
          Block (Suc 0) 0x15634 47;
          IF !ZF THEN
            Block 2 0x155e7 48
          ELSE
            Block 8 0x15654 49;
            Block (Suc 0) 0x15657 50;
            CALL bdrv_pwrite_acode;
            Block (Suc 0) 0x1565c 51;
            IF !ZF THEN
              Block 2 0x155e7 52
            ELSE
              Block 5 0x15672 53;
              Block (Suc 0) 0x15679 54;
              CALL update_refcount_acode;
              Block 6 0x15696 55
            FI
          FI
        ),
        (P_0x155e7_56,
          Block (Suc 0) 0x155e7 56
        )
      ]
    FI;
    Block 2 0x155f1 57;
    IF !ZF THEN
      Block (Suc 0) 0x155fa 58;
      Block (Suc 0) 0x156af 59;
      CALL stack_chk_fail_acode
    ELSE
      Block 9 0x1560e 60
    FI
  \<close>

schematic_goal "qcow_write_snapshots":
  assumes
    \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1541f \<longrightarrow> P_0x1541f_true_1_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1541f \<longrightarrow> P_0x1541f_false_2_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15448 \<longrightarrow> P_0x15448_3_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15458 \<longrightarrow> P_0x15458_4_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1545d \<longrightarrow> P_0x1545d_5_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15465 \<longrightarrow> P_0x15465_6_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1546a \<longrightarrow> P_0x1546a_7_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15475 \<longrightarrow> P_0x15475_true_8_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15475 \<longrightarrow> P_0x15475_false_9_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15477 \<longrightarrow> P_0x15477_10_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1547e \<longrightarrow> P_0x1547e_11_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15483 \<longrightarrow> P_0x15483_12_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15488 \<longrightarrow> P_0x15488_13_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15495 \<longrightarrow> P_0x15495_true_14_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1562f \<longrightarrow> P_0x1562f_15_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15634 \<longrightarrow> P_0x15634_16_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15637 \<longrightarrow> P_0x15637_true_17_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15637 \<longrightarrow> P_0x15637_false_18_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15657 \<longrightarrow> P_0x15657_19_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1565c \<longrightarrow> P_0x1565c_20_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1565f \<longrightarrow> P_0x1565f_true_21_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1565f \<longrightarrow> P_0x1565f_false_22_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15679 \<longrightarrow> P_0x15679_23_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1567e \<longrightarrow> P_0x1567e_24_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15495 \<longrightarrow> P_0x15495_false_25_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1552a \<longrightarrow> P_0x1552a_26_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1558b \<longrightarrow> P_0x1558b_27_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15590 \<longrightarrow> P_0x15590_28_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15597 \<longrightarrow> P_0x15597_29_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1559c \<longrightarrow> P_0x1559c_30_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155d5 \<longrightarrow> P_0x155d5_31_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155da \<longrightarrow> P_0x155da_32_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155e1 \<longrightarrow> P_0x155e1_true_33_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x154d5 \<longrightarrow> P_0x154d5_34_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x154da \<longrightarrow> P_0x154da_35_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x154dd \<longrightarrow> P_0x154dd_true_36_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x154dd \<longrightarrow> P_0x154dd_false_37_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x154fa \<longrightarrow> P_0x154fa_38_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x154ff \<longrightarrow> P_0x154ff_39_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15502 \<longrightarrow> P_0x15502_true_40_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15502 \<longrightarrow> P_0x15502_false_41_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15524 \<longrightarrow> P_0x15524_true_42_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15524 \<longrightarrow> P_0x15524_false_43_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155e1 \<longrightarrow> P_0x155e1_false_44_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15610 \<longrightarrow> P_0x15610_45_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1562f \<longrightarrow> P_0x1562f_46_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15634 \<longrightarrow> P_0x15634_47_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15637 \<longrightarrow> P_0x15637_true_48_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15637 \<longrightarrow> P_0x15637_false_49_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15657 \<longrightarrow> P_0x15657_50_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1565c \<longrightarrow> P_0x1565c_51_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1565f \<longrightarrow> P_0x1565f_true_52_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1565f \<longrightarrow> P_0x1565f_false_53_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x15679 \<longrightarrow> P_0x15679_54_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x1567e \<longrightarrow> P_0x1567e_55_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155e7 \<longrightarrow> P_0x155e7_56_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155ec \<longrightarrow> P_0x155ec_57_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155fa \<longrightarrow> P_0x155fa_true_58_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x156af \<longrightarrow> P_0x156af_59_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x155fa \<longrightarrow> P_0x155fa_false_60_regions \<sigma>\<close>
    and [blocks]: \<open>{{Q_strlen_addr_0x15458_4}} \<box>strlen_acode {{P_0x1545d_5;M_0x15458}}\<close>
    and [blocks]: \<open>{{Q_strlen_addr_0x15465_6}} \<box>strlen_acode {{P_0x1546a_7;M_0x15465}}\<close>
    and [blocks]: \<open>{{Q_alloc_clusters_addr_0x15483_12}} \<box>alloc_clusters_acode {{P_0x15488_13;M_0x15483}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x1562f_15}} \<box>bdrv_pwrite_acode {{P_0x15634_16;M_0x1562f}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x15657_19}} \<box>bdrv_pwrite_acode {{P_0x1565c_20;M_0x15657}}\<close>
    and [blocks]: \<open>{{Q_update_refcount_addr_0x15679_23}} \<box>update_refcount_acode {{P_0x1567e_24;M_0x15679}}\<close>
    and [blocks]: \<open>{{Q_strlen_addr_0x1558b_27}} \<box>strlen_acode {{P_0x15590_28;M_0x1558b}}\<close>
    and [blocks]: \<open>{{Q_strlen_addr_0x15597_29}} \<box>strlen_acode {{P_0x1559c_30;M_0x15597}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x155d5_31}} \<box>bdrv_pwrite_acode {{P_0x155da_32;M_0x155d5}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x154d5_34}} \<box>bdrv_pwrite_acode {{P_0x154da_35;M_0x154d5}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x154fa_38}} \<box>bdrv_pwrite_acode {{P_0x154ff_39;M_0x154fa}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x1562f_46}} \<box>bdrv_pwrite_acode {{P_0x15634_47;M_0x1562f}}\<close>
    and [blocks]: \<open>{{Q_bdrv_pwrite_addr_0x15657_50}} \<box>bdrv_pwrite_acode {{P_0x1565c_51;M_0x15657}}\<close>
    and [blocks]: \<open>{{Q_update_refcount_addr_0x15679_54}} \<box>update_refcount_acode {{P_0x1567e_55;M_0x15679}}\<close>
    and [blocks]: \<open>{{Q_stack_chk_fail_addr_0x156af_59}} \<box>stack_chk_fail_acode {{Q_fail;M_0x156af}}\<close>
  shows \<open>{{?P}} qcow_write_snapshots_acode {{?Q;?M}}\<close>
  apply (vcg acode: qcow_write_snapshots_acode_def assms: assms)
  apply (vcg_while \<open>P_0x15448_3 || P_0x1547e_11\<close> assms: assms)
  apply (vcg_step assms: assms)
  apply (vcg_while \<open>P_0x1552a_26 || P_0x15610_45 || P_0x155e7_56\<close> assms: assms)
  apply (vcg_step assms: assms)
  done

end

end
