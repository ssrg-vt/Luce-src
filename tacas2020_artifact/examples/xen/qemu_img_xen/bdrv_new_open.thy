(*
Copyright 2019

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*)
theory bdrv_new_open
  imports "../../../isabelle/VCG/HTriple"
    begin

locale "qemu_img_xen" = execution_context + exec_code +
  fixes bdrv_new_0x4551_retval\<^sub>v bdrv_find_format_0x456e_retval\<^sub>v bdrv_open2_0x458a_retval\<^sub>v bdrv_is_encrypted_0x459a_retval\<^sub>v printf_chk_0x45ee_retval\<^sub>v printf_chk_0x4601_retval\<^sub>v fflush_0x4612_retval\<^sub>v tcgetattr_0x461c_retval\<^sub>v tcsetattr_0x4696_retval\<^sub>v atexit_0x46a2_retval\<^sub>v read_0x46be_retval\<^sub>v errno_location_0x46f0_retval\<^sub>v tcsetattr_0x470c_retval\<^sub>v putchar_0x471b_retval\<^sub>v error_0x4729_retval\<^sub>v tcsetattr_0x473b_retval\<^sub>v putchar_0x474a_retval\<^sub>v bdrv_set_key_0x4755_retval\<^sub>v error_0x476b_retval\<^sub>v error_0x4788_retval\<^sub>v error_0x4796_retval\<^sub>v stack_chk_fail_0x479b_retval\<^sub>v error_0x47ac_retval\<^sub>v errno_location_addr printf_chk_addr stack_chk_fail_addr atexit_addr bdrv_find_format_addr bdrv_is_encrypted_addr bdrv_new_addr bdrv_open2_addr bdrv_set_key_addr error_addr fflush_addr putchar_addr read_addr tcgetattr_addr tcsetattr_addr :: \<open>64 word\<close>
    and errno_location_acode printf_chk_acode stack_chk_fail_acode atexit_acode bdrv_find_format_acode bdrv_is_encrypted_acode bdrv_new_acode bdrv_open2_acode bdrv_set_key_acode error_acode fflush_acode putchar_acode read_acode tcgetattr_acode tcsetattr_acode :: ACode
  assumes fetch:
    "fetch 0x4520 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r15))), 2)"
    "fetch 0x4522 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x4524 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x4526 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x4528 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour r12)) (Storage (Reg (General SixtyFour rdi))), 3)"
    "fetch 0x452b \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 116528)))), 7)"
    "fetch 0x4532 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x4533 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rsi))), 3)"
    "fetch 0x4536 \<equiv> (Unary (IS_8088 Push) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x4537 \<equiv> (Binary (IS_8088 Sub) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 360)), 7)"
    "fetch 0x453e \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x4547 \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 344)))) (Storage (Reg (General SixtyFour rax))), 8)"
    "fetch 0x454f \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x4551 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_new'')), 5)"
    "fetch 0x4556 \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x4559 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18317)), 6)"
    "fetch 0x455f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rbx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x4562 \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rbp)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x4565 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18288)), 6)"
    "fetch 0x456b \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x456e \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_find_format'')), 5)"
    "fetch 0x4573 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rcx)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x4576 \<equiv> (Binary (IS_8088 Test) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rax))), 3)"
    "fetch 0x4579 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18336)), 6)"
    "fetch 0x457f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 64)), 5)"
    "fetch 0x4584 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x4587 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x458a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_open2'')), 5)"
    "fetch 0x458f \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x4591 \<equiv> (Unary (IS_8088 Js) (Immediate SixtyFour (ImmVal 18300)), 6)"
    "fetch 0x4597 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x459a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_is_encrypted'')), 5)"
    "fetch 0x459f \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x45a1 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 17872)), 2)"
    "fetch 0x45a3 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 344))))), 8)"
    "fetch 0x45ab \<equiv> (Binary (IS_8088 Xor) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour fs)) (A_WordConstant 40))))), 9)"
    "fetch 0x45b4 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x45b7 \<equiv> (Unary (IS_8088 Jne) (Immediate SixtyFour (ImmVal 18331)), 6)"
    "fetch 0x45bd \<equiv> (Binary (IS_8088 Add) (Reg (General SixtyFour rsp)) (Immediate SixtyFour (ImmVal 360)), 7)"
    "fetch 0x45c4 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbx))), 1)"
    "fetch 0x45c5 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour rbp))), 1)"
    "fetch 0x45c6 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r12))), 2)"
    "fetch 0x45c8 \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r13))), 2)"
    "fetch 0x45ca \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r14))), 2)"
    "fetch 0x45cc \<equiv> (Unary (IS_8088 Pop) (Storage (Reg (General SixtyFour r15))), 2)"
    "fetch 0x45ce \<equiv> (Nullary (IS_8088 Ret), 1)"
    "fetch 0x45cf \<equiv> (Nullary (IS_8088 Nop), 1)"
    "fetch 0x45d0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x45d3 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 103630)))), 7)"
    "fetch 0x45da \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x45dc \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo r13)) (Storage (Reg (General ThirtyTwo r13))), 3)"
    "fetch 0x45df \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x45e4 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rbp)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))), 5)"
    "fetch 0x45e9 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r15)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 15)))), 5)"
    "fetch 0x45ee \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__printf_chk'')), 5)"
    "fetch 0x45f3 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rsi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 101033)))), 7)"
    "fetch 0x45fa \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x45ff \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x4601 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__printf_chk'')), 5)"
    "fetch 0x4606 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154835))))), 7)"
    "fetch 0x460d \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r14)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 80)))), 5)"
    "fetch 0x4612 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''fflush'')), 5)"
    "fetch 0x4617 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x461a \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rdi))), 2)"
    "fetch 0x461c \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''tcgetattr'')), 5)"
    "fetch 0x4621 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rax)) (Storage (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 64))))), 5)"
    "fetch 0x4626 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdx)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x4629 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rsi)) (Storage (Reg (General ThirtyTwo rsi))), 2)"
    "fetch 0x462b \<equiv> (Binary (IS_SSE2_SIMD Movdqa) (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0)) (Storage (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16))))), 6)"
    "fetch 0x4631 \<equiv> (Binary (IS_SSE2_SIMD Movdqa) (Reg (SIMD OneHundredTwentyEight ymm1w3 ymm1w2 ymm1w1 ymm1w0)) (Storage (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 32))))), 6)"
    "fetch 0x4637 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rdi))), 2)"
    "fetch 0x4639 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rbp)) (Storage (Reg (General ThirtyTwo rbp))), 2)"
    "fetch 0x463b \<equiv> (Binary (IS_8088 Mov) (Memory SixtyFour (A_SizeDirective 64 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154894)))) (Storage (Reg (General SixtyFour rax))), 7)"
    "fetch 0x4642 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 72))))), 4)"
    "fetch 0x4646 \<equiv> (Binary (IS_SSE2_SIMD Movdqa) (Reg (SIMD OneHundredTwentyEight ymm2w3 ymm2w2 ymm2w1 ymm2w0)) (Storage (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 48))))), 6)"
    "fetch 0x464c \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154829)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm0w3 ymm0w2 ymm0w1 ymm0w0))), 7)"
    "fetch 0x4653 \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154879)))) (Storage (Reg (General ThirtyTwo rax))), 6)"
    "fetch 0x4659 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24))))), 4)"
    "fetch 0x465d \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154828)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm1w3 ymm1w2 ymm1w1 ymm1w0))), 7)"
    "fetch 0x4664 \<equiv> (Binary (IS_8088 And) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294966991)), 5)"
    "fetch 0x4669 \<equiv> (Binary (IS_SSE_SIMD Movaps) (Memory OneHundredTwentyEight (A_SizeDirective 128 (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154832)))) (Storage (Reg (SIMD OneHundredTwentyEight ymm2w3 ymm2w2 ymm2w1 ymm2w0))), 7)"
    "fetch 0x4670 \<equiv> (Binary (IS_8088 Or) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 48)), 3)"
    "fetch 0x4673 \<equiv> (Binary (IS_8088 And) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 16)))) (Immediate SixtyFour (ImmVal 4294965780)), 8)"
    "fetch 0x467b \<equiv> (Binary (IS_8088 Mov) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 24)))) (Storage (Reg (General ThirtyTwo rax))), 4)"
    "fetch 0x467f \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 256)), 5)"
    "fetch 0x4684 \<equiv> (Binary (IS_8088 Or) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 20)))) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x4689 \<equiv> (Binary (IS_8088 And) (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 28)))) (Immediate SixtyFour (ImmVal 4294934453)), 8)"
    "fetch 0x4691 \<equiv> (Binary (IS_8088 Mov) (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 38)))) (Storage (Reg (General Sixteen rax))), 5)"
    "fetch 0x4696 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''tcsetattr'')), 5)"
    "fetch 0x469b \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant (-2354))))), 7)"
    "fetch 0x46a2 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''atexit'')), 5)"
    "fetch 0x46a7 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0)))))), 9)"
    "fetch 0x46b0 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdx)) (Immediate SixtyFour (ImmVal 1)), 5)"
    "fetch 0x46b5 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r15))), 3)"
    "fetch 0x46b8 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour r12)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour r14)) (A_Mult 1 (A_FromReg (General SixtyFour r13)))))), 4)"
    "fetch 0x46bc \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rdi))), 2)"
    "fetch 0x46be \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''read'')), 5)"
    "fetch 0x46c3 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4294967295)), 3)"
    "fetch 0x46c6 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18160)), 2)"
    "fetch 0x46c8 \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x46ca \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18177)), 2)"
    "fetch 0x46cc \<equiv> (Binary (IS_80386 Movzx) (Reg (General ThirtyTwo rax)) (Storage (Memory Eight (A_SizeDirective 8 (A_Plus (A_FromReg (General SixtyFour rsp)) (A_WordConstant 15))))), 5)"
    "fetch 0x46d1 \<equiv> (Binary (IS_8088 Cmp) (Reg (General Eight rax)) (Immediate SixtyFour (ImmVal 13)), 2)"
    "fetch 0x46d3 \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18224)), 2)"
    "fetch 0x46d5 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rbp)) (Immediate SixtyFour (ImmVal 254)), 6)"
    "fetch 0x46db \<equiv> (Unary (IS_8088 Jg) (Immediate SixtyFour (ImmVal 18096)), 2)"
    "fetch 0x46dd \<equiv> (Binary (IS_8088 Add) (Reg (General ThirtyTwo rbp)) (Immediate SixtyFour (ImmVal 1)), 3)"
    "fetch 0x46e0 \<equiv> (Binary (IS_8088 Mov) (Memory Eight (A_SizeDirective 8 (A_FromReg (General SixtyFour r12)))) (Storage (Reg (General Eight rax))), 4)"
    "fetch 0x46e4 \<equiv> (Binary (IS_X86_64 Movsxd) (Reg (General SixtyFour r13)) (Storage (Reg (General ThirtyTwo rbp))), 3)"
    "fetch 0x46e7 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 18096)), 2)"
    "fetch 0x46e9 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_Plus (A_FromReg (General SixtyFour rax)) (A_WordConstant 0))))), 7)"
    "fetch 0x46f0 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__errno_location'')), 5)"
    "fetch 0x46f5 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rax)) (Storage (Memory ThirtyTwo (A_SizeDirective 32 (A_FromReg (General SixtyFour rax))))), 2)"
    "fetch 0x46f7 \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 11)), 3)"
    "fetch 0x46fa \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18096)), 2)"
    "fetch 0x46fc \<equiv> (Binary (IS_8088 Cmp) (Reg (General ThirtyTwo rax)) (Immediate SixtyFour (ImmVal 4)), 3)"
    "fetch 0x46ff \<equiv> (Unary (IS_8088 Je) (Immediate SixtyFour (ImmVal 18096)), 2)"
    "fetch 0x4701 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154648)))), 7)"
    "fetch 0x4708 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rsi)) (Storage (Reg (General ThirtyTwo rsi))), 2)"
    "fetch 0x470a \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rdi))), 2)"
    "fetch 0x470c \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''tcsetattr'')), 5)"
    "fetch 0x4711 \<equiv> (Binary (IS_8088 Mov) (Memory Eight (A_SizeDirective 8 (A_FromReg (General SixtyFour r12)))) (Immediate SixtyFour (ImmVal 0)), 5)"
    "fetch 0x4716 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Immediate SixtyFour (ImmVal 10)), 5)"
    "fetch 0x471b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''putchar'')), 5)"
    "fetch 0x4720 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 100760)))), 7)"
    "fetch 0x4727 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x4729 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''error'')), 5)"
    "fetch 0x472e \<equiv> (Binary (IS_8088 Xchg) (Reg (General Sixteen rax)) (Storage (Reg (General Sixteen rax))), 2)"
    "fetch 0x4730 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rsi)) (Storage (Reg (General ThirtyTwo rsi))), 2)"
    "fetch 0x4732 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rdi)) (Storage (Reg (General ThirtyTwo rdi))), 2)"
    "fetch 0x4734 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154597)))), 7)"
    "fetch 0x473b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''tcsetattr'')), 5)"
    "fetch 0x4740 \<equiv> (Binary (IS_8088 Mov) (Memory Eight (A_SizeDirective 8 (A_FromReg (General SixtyFour r12)))) (Immediate SixtyFour (ImmVal 0)), 5)"
    "fetch 0x4745 \<equiv> (Binary (IS_8088 Mov) (Reg (General ThirtyTwo rdi)) (Immediate SixtyFour (ImmVal 10)), 5)"
    "fetch 0x474a \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''putchar'')), 5)"
    "fetch 0x474f \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r14))), 3)"
    "fetch 0x4752 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rdi)) (Storage (Reg (General SixtyFour rbx))), 3)"
    "fetch 0x4755 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''bdrv_set_key'')), 5)"
    "fetch 0x475a \<equiv> (Binary (IS_8088 Test) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x475c \<equiv> (Unary (IS_8088 Jns) (Immediate SixtyFour (ImmVal 17827)), 6)"
    "fetch 0x4762 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 100677)))), 7)"
    "fetch 0x4769 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x476b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''error'')), 5)"
    "fetch 0x4770 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rcx)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 154153)))), 7)"
    "fetch 0x4777 \<equiv> (Unary (IS_8088 Jmp) (Immediate SixtyFour (ImmVal 17791)), 5)"
    "fetch 0x477c \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour r12))), 3)"
    "fetch 0x477f \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 100575)))), 7)"
    "fetch 0x4786 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x4788 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''error'')), 5)"
    "fetch 0x478d \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 100518)))), 7)"
    "fetch 0x4794 \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x4796 \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''error'')), 5)"
    "fetch 0x479b \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''__stack_chk_fail'')), 5)"
    "fetch 0x47a0 \<equiv> (Binary (IS_8088 Mov) (Reg (General SixtyFour rsi)) (Storage (Reg (General SixtyFour rbp))), 3)"
    "fetch 0x47a3 \<equiv> (Binary (IS_8088 Lea) (Reg (General SixtyFour rdi)) (Storage (Memory SixtyFour (A_Plus (A_FromReg (General SixtyFour rip)) (A_WordConstant 100514)))), 7)"
    "fetch 0x47aa \<equiv> (Binary (IS_8088 Xor) (Reg (General ThirtyTwo rax)) (Storage (Reg (General ThirtyTwo rax))), 2)"
    "fetch 0x47ac \<equiv> (Unary (IS_8088 Call) (Immediate SixtyFour (ImmLabel ''error'')), 5)"
    "fetch 0x47b1 \<equiv> (Unary (IS_8088 Nop) (Storage (Memory Sixteen (A_SizeDirective 16 (A_Plus (A_FromReg (General SixtyFour cs)) (A_Plus (A_FromReg (General SixtyFour rax)) (A_Plus (A_Mult 1 (A_FromReg (General SixtyFour rax))) (A_WordConstant 0))))))), 11)"
    and \<alpha>_def: \<open>\<alpha> = \<lparr>text_sections = [], data_sections = [], labels_to_offsets = [], binary_offset = 0\<rparr>\<close>
    and errno_location\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__errno_location'') = errno_location_addr\<close>
    and printf_chk\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__printf_chk'') = printf_chk_addr\<close>
    and stack_chk_fail\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''__stack_chk_fail'') = stack_chk_fail_addr\<close>
    and atexit\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''atexit'') = atexit_addr\<close>
    and bdrv_find_format\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_find_format'') = bdrv_find_format_addr\<close>
    and bdrv_is_encrypted\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_is_encrypted'') = bdrv_is_encrypted_addr\<close>
    and bdrv_new\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_new'') = bdrv_new_addr\<close>
    and bdrv_open2\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_open2'') = bdrv_open2_addr\<close>
    and bdrv_set_key\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''bdrv_set_key'') = bdrv_set_key_addr\<close>
    and error\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''error'') = error_addr\<close>
    and fflush\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''fflush'') = fflush_addr\<close>
    and putchar\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''putchar'') = putchar_addr\<close>
    and read\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''read'') = read_addr\<close>
    and tcgetattr\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''tcgetattr'') = tcgetattr_addr\<close>
    and tcsetattr\<^sub>a\<^sub>d\<^sub>d\<^sub>r[simp]: \<open>the (label_to_address \<alpha> ''tcsetattr'') = tcsetattr_addr\<close>
begin

text \<open>Using definitions that don't get unfolded immediately prevents locale argument issues.\<close>
definition \<open>bdrv_new_0x4551_retval \<equiv> bdrv_new_0x4551_retval\<^sub>v\<close>
definition \<open>bdrv_find_format_0x456e_retval \<equiv> bdrv_find_format_0x456e_retval\<^sub>v\<close>
definition \<open>bdrv_open2_0x458a_retval \<equiv> bdrv_open2_0x458a_retval\<^sub>v\<close>
definition \<open>bdrv_is_encrypted_0x459a_retval \<equiv> bdrv_is_encrypted_0x459a_retval\<^sub>v\<close>
definition \<open>printf_chk_0x45ee_retval \<equiv> printf_chk_0x45ee_retval\<^sub>v\<close>
definition \<open>printf_chk_0x4601_retval \<equiv> printf_chk_0x4601_retval\<^sub>v\<close>
definition \<open>fflush_0x4612_retval \<equiv> fflush_0x4612_retval\<^sub>v\<close>
definition \<open>tcgetattr_0x461c_retval \<equiv> tcgetattr_0x461c_retval\<^sub>v\<close>
definition \<open>tcsetattr_0x4696_retval \<equiv> tcsetattr_0x4696_retval\<^sub>v\<close>
definition \<open>atexit_0x46a2_retval \<equiv> atexit_0x46a2_retval\<^sub>v\<close>
definition \<open>read_0x46be_retval \<equiv> read_0x46be_retval\<^sub>v\<close>
definition \<open>errno_location_0x46f0_retval \<equiv> errno_location_0x46f0_retval\<^sub>v\<close>
definition \<open>tcsetattr_0x470c_retval \<equiv> tcsetattr_0x470c_retval\<^sub>v\<close>
definition \<open>putchar_0x471b_retval \<equiv> putchar_0x471b_retval\<^sub>v\<close>
definition \<open>error_0x4729_retval \<equiv> error_0x4729_retval\<^sub>v\<close>
definition \<open>tcsetattr_0x473b_retval \<equiv> tcsetattr_0x473b_retval\<^sub>v\<close>
definition \<open>putchar_0x474a_retval \<equiv> putchar_0x474a_retval\<^sub>v\<close>
definition \<open>bdrv_set_key_0x4755_retval \<equiv> bdrv_set_key_0x4755_retval\<^sub>v\<close>
definition \<open>error_0x476b_retval \<equiv> error_0x476b_retval\<^sub>v\<close>
definition \<open>error_0x4788_retval \<equiv> error_0x4788_retval\<^sub>v\<close>
definition \<open>error_0x4796_retval \<equiv> error_0x4796_retval\<^sub>v\<close>
definition \<open>stack_chk_fail_0x479b_retval \<equiv> stack_chk_fail_0x479b_retval\<^sub>v\<close>
definition \<open>error_0x47ac_retval \<equiv> error_0x47ac_retval\<^sub>v\<close>

text \<open>
  Going with a binary offset of 0 for now to make things easier. (We do want to keep that field
  around, though, for future more generic usage.)
\<close>
lemma \<alpha>_boffset[simp]: \<open>binary_offset \<alpha> = 0\<close>
  unfolding \<alpha>_def
  by simp

named_theorems blocks and Ps and Qs

method step uses add del =
  subst exec_block.simps,
  rewrite_one_let',
  rewrite_one_let' add: fetch,
  rewrite_one_let',
  auto simp add: simp_rules Let'_def read_region'_def write_block'_def get'_def set'_def step_def exec_instr_def presimplify add numeral_2_eq_2[symmetric] simp del: del

method steps uses pre post regionset add del =
  auto simp: pred_logic pre regionset,
  (step add: add del: del)+,
  (auto simp add: eq_def)[1],
  auto simp: block_usage_def eq_def setcc_def cmovcc_def if'_then_else_def sub_sign_flag_def simp_rules numeral_2_eq_2[symmetric] Let'_def read_region'_def write_block'_def get'_def set'_def post regionset

(* ((simp add: assms pred_logic Ps Qs)+)? helps keep goals clean but causes issues when there are subcalls *)
method vcg_step uses assms =
  ((rule htriples)+, rule blocks)+,
  (simp add: assms pred_logic Ps Qs)?,
  (((auto simp: eq_def)[])+)?

text \<open>For @{const CASES}.\<close>
method vcg_step' uses assms =
  (rule htriples)+,
  simp,
  ((rule htriples)+, rule blocks)+,
  (simp add: assms pred_logic Ps Qs)?,
  (((auto simp: eq_def)[])+)?

text \<open>
  Sometimes needs to be moved down (close to the abstract code) to avoid TERM exceptions,
  haven't figured out the cause.
  Also haven't settled on a proper setup for the ending methods,
  there are troubles when nested loops and such are involved.
\<close>
method vcg_while for P :: state_pred uses assms =
  ((rule htriples)+)?,
  rule HTriple_weaken[where P=P],
  simp add: pred_logic Ps Qs assms,
  rule HTriple_while,
  (vcg_step assms: assms)+,
  (simp add: pred_logic Ps Qs)+,
  (
    (vcg_step' assms: assms | vcg_step assms: assms)+,
    ((simp add: assms)+)?
  )?

method vcg uses acode assms =
  subst acode,
  (vcg_step assms: assms)+

end

locale "bdrv_new_open" = "qemu_img_xen" +
  fixes RAX\<^sub>0\<^sub>v RBX\<^sub>0\<^sub>v RCX\<^sub>0\<^sub>v RDX\<^sub>0\<^sub>v RDI\<^sub>0\<^sub>v RSI\<^sub>0\<^sub>v RSP\<^sub>0\<^sub>v RBP\<^sub>0\<^sub>v R15\<^sub>0\<^sub>v R14\<^sub>0\<^sub>v R13\<^sub>0\<^sub>v R12\<^sub>0\<^sub>v FS\<^sub>0\<^sub>v ymm0w0\<^sub>0\<^sub>v ymm0w1\<^sub>0\<^sub>v ymm1w0\<^sub>0\<^sub>v ymm1w1\<^sub>0\<^sub>v ymm2w0\<^sub>0\<^sub>v ymm2w1\<^sub>0\<^sub>v ret_address\<^sub>v :: \<open>64 word\<close>
begin

text \<open>Using definitions that don't get unfolded immediately prevents locale argument issues.\<close>
definition \<open>RAX\<^sub>0 \<equiv> RAX\<^sub>0\<^sub>v\<close>
definition \<open>RBX\<^sub>0 \<equiv> RBX\<^sub>0\<^sub>v\<close>
definition \<open>RCX\<^sub>0 \<equiv> RCX\<^sub>0\<^sub>v\<close>
definition \<open>RDX\<^sub>0 \<equiv> RDX\<^sub>0\<^sub>v\<close>
definition \<open>RDI\<^sub>0 \<equiv> RDI\<^sub>0\<^sub>v\<close>
definition \<open>RSI\<^sub>0 \<equiv> RSI\<^sub>0\<^sub>v\<close>
definition \<open>RSP\<^sub>0 \<equiv> RSP\<^sub>0\<^sub>v\<close>
definition \<open>RBP\<^sub>0 \<equiv> RBP\<^sub>0\<^sub>v\<close>
definition \<open>R15\<^sub>0 \<equiv> R15\<^sub>0\<^sub>v\<close>
definition \<open>R14\<^sub>0 \<equiv> R14\<^sub>0\<^sub>v\<close>
definition \<open>R13\<^sub>0 \<equiv> R13\<^sub>0\<^sub>v\<close>
definition \<open>R12\<^sub>0 \<equiv> R12\<^sub>0\<^sub>v\<close>
definition \<open>FS\<^sub>0 \<equiv> FS\<^sub>0\<^sub>v\<close>
definition \<open>ymm0w0\<^sub>0 \<equiv> ymm0w0\<^sub>0\<^sub>v\<close>
definition \<open>ymm0w1\<^sub>0 \<equiv> ymm0w1\<^sub>0\<^sub>v\<close>
definition \<open>ymm1w0\<^sub>0 \<equiv> ymm1w0\<^sub>0\<^sub>v\<close>
definition \<open>ymm1w1\<^sub>0 \<equiv> ymm1w1\<^sub>0\<^sub>v\<close>
definition \<open>ymm2w0\<^sub>0 \<equiv> ymm2w0\<^sub>0\<^sub>v\<close>
definition \<open>ymm2w1\<^sub>0 \<equiv> ymm2w1\<^sub>0\<^sub>v\<close>
definition \<open>ret_address \<equiv> ret_address\<^sub>v\<close>

definition P_0x4520_0 :: state_pred where
  \<open>P_0x4520_0 \<sigma> \<equiv> RIP \<sigma> = 0x4520 \<and> RAX \<sigma> = RAX\<^sub>0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RDI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = RSP\<^sub>0 \<and> RBP \<sigma> = RBP\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = R12\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address\<close>
declare P_0x4520_0_def[Ps]

definition P_0x4520_0_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4520_0_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8)
  }\<close>

definition P_0x4520_0_regions :: state_pred where
  \<open>P_0x4520_0_regions \<sigma> \<equiv> \<exists>regions. P_0x4520_0_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4551_0 :: state_pred where
  \<open>Q_0x4551_0 \<sigma> \<equiv> RIP \<sigma> = 0x4551 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_0x4551_0_def[Qs]

schematic_goal bdrv_new_open_0_13_0x4520_0x454f_0[blocks]:
  assumes \<open>(P_0x4520_0 && P_0x4520_0_regions) \<sigma>\<close>
  shows \<open>exec_block 13 0x454f 0 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4551_0 ?\<sigma> \<and> block_usage P_0x4520_0_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4520_0_def P_0x4520_0_regions_def post: Q_0x4551_0_def regionset: P_0x4520_0_regions_set_def)

definition P_0x4551_1 :: state_pred where
  \<open>P_0x4551_1 \<sigma> \<equiv> RIP \<sigma> = 0x4551 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare P_0x4551_1_def[Ps]

definition P_0x4551_1_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4551_1_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4551_1_regions :: state_pred where
  \<open>P_0x4551_1_regions \<sigma> \<equiv> \<exists>regions. P_0x4551_1_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_new_addr_0x4551_1 :: state_pred where
  \<open>Q_bdrv_new_addr_0x4551_1 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_new_addr \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_bdrv_new_addr_0x4551_1_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4551_0x4551_1[blocks]:
  assumes \<open>(P_0x4551_1 && P_0x4551_1_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4551 (Suc 0) \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_new_addr_0x4551_1 ?\<sigma> \<and> block_usage P_0x4551_1_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4551_1_def P_0x4551_1_regions_def post: Q_bdrv_new_addr_0x4551_1_def regionset: P_0x4551_1_regions_set_def)

definition P_0x4556_2 :: state_pred where
  \<open>P_0x4556_2 \<sigma> \<equiv> RIP \<sigma> = 0x4556 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x4556_2_def[Ps]

definition P_0x4556_2_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4556_2_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4556_2_regions :: state_pred where
  \<open>P_0x4556_2_regions \<sigma> \<equiv> \<exists>regions. P_0x4556_2_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4559_2 :: state_pred where
  \<open>Q_0x4559_2 \<sigma> \<equiv> RIP \<sigma> = 0x4559 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_0x4559_2_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4556_0x4556_2[blocks]:
  assumes \<open>(P_0x4556_2 && P_0x4556_2_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4556 2 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4559_2 ?\<sigma> \<and> block_usage P_0x4556_2_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4556_2_def P_0x4556_2_regions_def post: Q_0x4559_2_def regionset: P_0x4556_2_regions_set_def)

definition P_0x4559_true_3 :: state_pred where
  \<open>P_0x4559_true_3 \<sigma> \<equiv> RIP \<sigma> = 0x4559 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x4559_true_3_def[Ps]

definition P_0x4559_true_3_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4559_true_3_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4559_true_3_regions :: state_pred where
  \<open>P_0x4559_true_3_regions \<sigma> \<equiv> \<exists>regions. P_0x4559_true_3_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4796_3 :: state_pred where
  \<open>Q_0x4796_3 \<sigma> \<equiv> RIP \<sigma> = 0x4796 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x1d03a \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_0x4796_3_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4559_0x4794_3[blocks]:
  assumes \<open>(P_0x4559_true_3 && P_0x4559_true_3_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x4794 3 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4796_3 ?\<sigma> \<and> block_usage P_0x4559_true_3_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4559_true_3_def P_0x4559_true_3_regions_def post: Q_0x4796_3_def regionset: P_0x4559_true_3_regions_set_def)

definition P_0x4796_4 :: state_pred where
  \<open>P_0x4796_4 \<sigma> \<equiv> RIP \<sigma> = 0x4796 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x1d03a \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x4796_4_def[Ps]

definition P_0x4796_4_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4796_4_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4796_4_regions :: state_pred where
  \<open>P_0x4796_4_regions \<sigma> \<equiv> \<exists>regions. P_0x4796_4_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x4796_4 :: state_pred where
  \<open>Q_error_addr_0x4796_4 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x4796_4_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4796_0x4796_4[blocks]:
  assumes \<open>(P_0x4796_4 && P_0x4796_4_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4796 4 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x4796_4 ?\<sigma> \<and> block_usage P_0x4796_4_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4796_4_def P_0x4796_4_regions_def post: Q_error_addr_0x4796_4_def regionset: P_0x4796_4_regions_set_def)

definition P_0x4559_false_5 :: state_pred where
  \<open>P_0x4559_false_5 \<sigma> \<equiv> RIP \<sigma> = 0x4559 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = RBX\<^sub>0 \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x4559_false_5_def[Ps]

definition P_0x4559_false_5_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4559_false_5_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4559_false_5_regions :: state_pred where
  \<open>P_0x4559_false_5_regions \<sigma> \<equiv> \<exists>regions. P_0x4559_false_5_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4565_5 :: state_pred where
  \<open>Q_0x4565_5 \<sigma> \<equiv> RIP \<sigma> = 0x4565 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_0x4565_5_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4559_0x4562_5[blocks]:
  assumes \<open>(P_0x4559_false_5 && P_0x4559_false_5_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x4562 5 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4565_5 ?\<sigma> \<and> block_usage P_0x4559_false_5_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4559_false_5_def P_0x4559_false_5_regions_def post: Q_0x4565_5_def regionset: P_0x4559_false_5_regions_set_def)

definition P_0x4565_true_6 :: state_pred where
  \<open>P_0x4565_true_6 \<sigma> \<equiv> RIP \<sigma> = 0x4565 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x4565_true_6_def[Ps]

definition P_0x4565_true_6_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4565_true_6_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4565_true_6_regions :: state_pred where
  \<open>P_0x4565_true_6_regions \<sigma> \<equiv> \<exists>regions. P_0x4565_true_6_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x457f_6 :: state_pred where
  \<open>Q_0x457f_6 \<sigma> \<equiv> RIP \<sigma> = 0x457f \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_0x457f_6_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4565_0x4777_6[blocks]:
  assumes \<open>(P_0x4565_true_6 && P_0x4565_true_6_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x4777 6 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x457f_6 ?\<sigma> \<and> block_usage P_0x4565_true_6_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4565_true_6_def P_0x4565_true_6_regions_def post: Q_0x457f_6_def regionset: P_0x4565_true_6_regions_set_def)

definition P_0x457f_7 :: state_pred where
  \<open>P_0x457f_7 \<sigma> \<equiv> RIP \<sigma> = 0x457f \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x457f_7_def[Ps]

definition P_0x457f_7_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x457f_7_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x457f_7_regions :: state_pred where
  \<open>P_0x457f_7_regions \<sigma> \<equiv> \<exists>regions. P_0x457f_7_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x458a_7 :: state_pred where
  \<open>Q_0x458a_7 \<sigma> \<equiv> RIP \<sigma> = 0x458a \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_0x458a_7_def[Qs]

schematic_goal bdrv_new_open_0_3_0x457f_0x4587_7[blocks]:
  assumes \<open>(P_0x457f_7 && P_0x457f_7_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x4587 7 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x458a_7 ?\<sigma> \<and> block_usage P_0x457f_7_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x457f_7_def P_0x457f_7_regions_def post: Q_0x458a_7_def regionset: P_0x457f_7_regions_set_def)

definition P_0x458a_8 :: state_pred where
  \<open>P_0x458a_8 \<sigma> \<equiv> RIP \<sigma> = 0x458a \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x458a_8_def[Ps]

definition P_0x458a_8_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x458a_8_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x458a_8_regions :: state_pred where
  \<open>P_0x458a_8_regions \<sigma> \<equiv> \<exists>regions. P_0x458a_8_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_open2_addr_0x458a_8 :: state_pred where
  \<open>Q_bdrv_open2_addr_0x458a_8 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_open2_addr \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_bdrv_open2_addr_0x458a_8_def[Qs]

schematic_goal bdrv_new_open_0_1_0x458a_0x458a_8[blocks]:
  assumes \<open>(P_0x458a_8 && P_0x458a_8_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x458a 8 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_open2_addr_0x458a_8 ?\<sigma> \<and> block_usage P_0x458a_8_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x458a_8_def P_0x458a_8_regions_def post: Q_bdrv_open2_addr_0x458a_8_def regionset: P_0x458a_8_regions_set_def)

definition P_0x458f_9 :: state_pred where
  \<open>P_0x458f_9 \<sigma> \<equiv> RIP \<sigma> = 0x458f \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x458f_9_def[Ps]

definition P_0x458f_9_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x458f_9_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x458f_9_regions :: state_pred where
  \<open>P_0x458f_9_regions \<sigma> \<equiv> \<exists>regions. P_0x458f_9_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4591_9 :: state_pred where
  \<open>Q_0x4591_9 \<sigma> \<equiv> RIP \<sigma> = 0x4591 \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_0x4591_9_def[Qs]

schematic_goal bdrv_new_open_0_1_0x458f_0x458f_9[blocks]:
  assumes \<open>(P_0x458f_9 && P_0x458f_9_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x458f 9 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4591_9 ?\<sigma> \<and> block_usage P_0x458f_9_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x458f_9_def P_0x458f_9_regions_def post: Q_0x4591_9_def regionset: P_0x458f_9_regions_set_def)

definition P_0x4591_true_10 :: state_pred where
  \<open>P_0x4591_true_10 \<sigma> \<equiv> RIP \<sigma> = 0x4591 \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x4591_true_10_def[Ps]

definition P_0x4591_true_10_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4591_true_10_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4591_true_10_regions :: state_pred where
  \<open>P_0x4591_true_10_regions \<sigma> \<equiv> \<exists>regions. P_0x4591_true_10_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4788_10 :: state_pred where
  \<open>Q_0x4788_10 \<sigma> \<equiv> RIP \<sigma> = 0x4788 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = 0x1d065 \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_0x4788_10_def[Qs]

schematic_goal bdrv_new_open_0_4_0x4591_0x4786_10[blocks]:
  assumes \<open>(P_0x4591_true_10 && P_0x4591_true_10_regions && SF) \<sigma>\<close>
  shows \<open>exec_block 4 0x4786 10 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4788_10 ?\<sigma> \<and> block_usage P_0x4591_true_10_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4591_true_10_def P_0x4591_true_10_regions_def post: Q_0x4788_10_def regionset: P_0x4591_true_10_regions_set_def)

definition P_0x4788_11 :: state_pred where
  \<open>P_0x4788_11 \<sigma> \<equiv> RIP \<sigma> = 0x4788 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = 0x1d065 \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x4788_11_def[Ps]

definition P_0x4788_11_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4788_11_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4788_11_regions :: state_pred where
  \<open>P_0x4788_11_regions \<sigma> \<equiv> \<exists>regions. P_0x4788_11_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x4788_11 :: state_pred where
  \<open>Q_error_addr_0x4788_11 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x4788_11_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4788_0x4788_11[blocks]:
  assumes \<open>(P_0x4788_11 && P_0x4788_11_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4788 11 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x4788_11 ?\<sigma> \<and> block_usage P_0x4788_11_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4788_11_def P_0x4788_11_regions_def post: Q_error_addr_0x4788_11_def regionset: P_0x4788_11_regions_set_def)

definition P_0x4591_false_12 :: state_pred where
  \<open>P_0x4591_false_12 \<sigma> \<equiv> RIP \<sigma> = 0x4591 \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x4591_false_12_def[Ps]

definition P_0x4591_false_12_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4591_false_12_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4591_false_12_regions :: state_pred where
  \<open>P_0x4591_false_12_regions \<sigma> \<equiv> \<exists>regions. P_0x4591_false_12_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x459a_12 :: state_pred where
  \<open>Q_0x459a_12 \<sigma> \<equiv> RIP \<sigma> = 0x459a \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_0x459a_12_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4591_0x4597_12[blocks]:
  assumes \<open>(P_0x4591_false_12 && P_0x4591_false_12_regions && ! SF) \<sigma>\<close>
  shows \<open>exec_block 2 0x4597 12 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x459a_12 ?\<sigma> \<and> block_usage P_0x4591_false_12_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4591_false_12_def P_0x4591_false_12_regions_def post: Q_0x459a_12_def regionset: P_0x4591_false_12_regions_set_def)

definition P_0x459a_13 :: state_pred where
  \<open>P_0x459a_13 \<sigma> \<equiv> RIP \<sigma> = 0x459a \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x459a_13_def[Ps]

definition P_0x459a_13_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x459a_13_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x459a_13_regions :: state_pred where
  \<open>P_0x459a_13_regions \<sigma> \<equiv> \<exists>regions. P_0x459a_13_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_is_encrypted_addr_0x459a_13 :: state_pred where
  \<open>Q_bdrv_is_encrypted_addr_0x459a_13 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_is_encrypted_addr \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_bdrv_is_encrypted_addr_0x459a_13_def[Qs]

schematic_goal bdrv_new_open_0_1_0x459a_0x459a_13[blocks]:
  assumes \<open>(P_0x459a_13 && P_0x459a_13_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x459a 13 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_is_encrypted_addr_0x459a_13 ?\<sigma> \<and> block_usage P_0x459a_13_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x459a_13_def P_0x459a_13_regions_def post: Q_bdrv_is_encrypted_addr_0x459a_13_def regionset: P_0x459a_13_regions_set_def)

definition P_0x459f_14 :: state_pred where
  \<open>P_0x459f_14 \<sigma> \<equiv> RIP \<sigma> = 0x459f \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x459f_14_def[Ps]

definition P_0x459f_14_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x459f_14_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x459f_14_regions :: state_pred where
  \<open>P_0x459f_14_regions \<sigma> \<equiv> \<exists>regions. P_0x459f_14_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45a1_14 :: state_pred where
  \<open>Q_0x45a1_14 \<sigma> \<equiv> RIP \<sigma> = 0x45a1 \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x45a1_14_def[Qs]

schematic_goal bdrv_new_open_0_1_0x459f_0x459f_14[blocks]:
  assumes \<open>(P_0x459f_14 && P_0x459f_14_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x459f 14 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45a1_14 ?\<sigma> \<and> block_usage P_0x459f_14_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x459f_14_def P_0x459f_14_regions_def post: Q_0x45a1_14_def regionset: P_0x459f_14_regions_set_def)

definition P_0x45a1_true_15 :: state_pred where
  \<open>P_0x45a1_true_15 \<sigma> \<equiv> RIP \<sigma> = 0x45a1 \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45a1_true_15_def[Ps]

definition P_0x45a1_true_15_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45a1_true_15_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45a1_true_15_regions :: state_pred where
  \<open>P_0x45a1_true_15_regions \<sigma> \<equiv> \<exists>regions. P_0x45a1_true_15_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45ee_15 :: state_pred where
  \<open>Q_0x45ee_15 \<sigma> \<equiv> RIP \<sigma> = 0x45ee \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x45ee_15_def[Qs]

schematic_goal bdrv_new_open_0_8_0x45a1_0x45e9_15[blocks]:
  assumes \<open>(P_0x45a1_true_15 && P_0x45a1_true_15_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 8 0x45e9 15 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45ee_15 ?\<sigma> \<and> block_usage P_0x45a1_true_15_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45a1_true_15_def P_0x45a1_true_15_regions_def post: Q_0x45ee_15_def regionset: P_0x45a1_true_15_regions_set_def)

definition P_0x45ee_16 :: state_pred where
  \<open>P_0x45ee_16 \<sigma> \<equiv> RIP \<sigma> = 0x45ee \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45ee_16_def[Ps]

definition P_0x45ee_16_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45ee_16_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45ee_16_regions :: state_pred where
  \<open>P_0x45ee_16_regions \<sigma> \<equiv> \<exists>regions. P_0x45ee_16_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_printf_chk_addr_0x45ee_16 :: state_pred where
  \<open>Q_printf_chk_addr_0x45ee_16 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = printf_chk_addr \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare Q_printf_chk_addr_0x45ee_16_def[Qs]

schematic_goal bdrv_new_open_0_1_0x45ee_0x45ee_16[blocks]:
  assumes \<open>(P_0x45ee_16 && P_0x45ee_16_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x45ee 16 \<sigma> \<triangleq> ?\<sigma> \<and> Q_printf_chk_addr_0x45ee_16 ?\<sigma> \<and> block_usage P_0x45ee_16_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45ee_16_def P_0x45ee_16_regions_def post: Q_printf_chk_addr_0x45ee_16_def regionset: P_0x45ee_16_regions_set_def)

definition P_0x45f3_17 :: state_pred where
  \<open>P_0x45f3_17 \<sigma> \<equiv> RIP \<sigma> = 0x45f3 \<and> RAX \<sigma> = printf_chk_0x45ee_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare P_0x45f3_17_def[Ps]

definition P_0x45f3_17_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45f3_17_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45f3_17_regions :: state_pred where
  \<open>P_0x45f3_17_regions \<sigma> \<equiv> \<exists>regions. P_0x45f3_17_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4601_17 :: state_pred where
  \<open>Q_0x4601_17 \<sigma> \<equiv> RIP \<sigma> = 0x4601 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare Q_0x4601_17_def[Qs]

schematic_goal bdrv_new_open_0_3_0x45f3_0x45ff_17[blocks]:
  assumes \<open>(P_0x45f3_17 && P_0x45f3_17_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x45ff 17 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4601_17 ?\<sigma> \<and> block_usage P_0x45f3_17_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45f3_17_def P_0x45f3_17_regions_def post: Q_0x4601_17_def regionset: P_0x45f3_17_regions_set_def)

definition P_0x4601_18 :: state_pred where
  \<open>P_0x4601_18 \<sigma> \<equiv> RIP \<sigma> = 0x4601 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare P_0x4601_18_def[Ps]

definition P_0x4601_18_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4601_18_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4601_18_regions :: state_pred where
  \<open>P_0x4601_18_regions \<sigma> \<equiv> \<exists>regions. P_0x4601_18_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_printf_chk_addr_0x4601_18 :: state_pred where
  \<open>Q_printf_chk_addr_0x4601_18 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = printf_chk_addr \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare Q_printf_chk_addr_0x4601_18_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4601_0x4601_18[blocks]:
  assumes \<open>(P_0x4601_18 && P_0x4601_18_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4601 18 \<sigma> \<triangleq> ?\<sigma> \<and> Q_printf_chk_addr_0x4601_18 ?\<sigma> \<and> block_usage P_0x4601_18_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4601_18_def P_0x4601_18_regions_def post: Q_printf_chk_addr_0x4601_18_def regionset: P_0x4601_18_regions_set_def)

definition P_0x4606_19 :: state_pred where
  \<open>P_0x4606_19 \<sigma> \<equiv> RIP \<sigma> = 0x4606 \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare P_0x4606_19_def[Ps]

definition P_0x4606_19_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4606_19_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4606_19_regions :: state_pred where
  \<open>P_0x4606_19_regions \<sigma> \<equiv> \<exists>regions. P_0x4606_19_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4612_19 :: state_pred where
  \<open>Q_0x4612_19 \<sigma> \<equiv> RIP \<sigma> = 0x4612 \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare Q_0x4612_19_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4606_0x460d_19[blocks]:
  assumes \<open>(P_0x4606_19 && P_0x4606_19_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x460d 19 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4612_19 ?\<sigma> \<and> block_usage P_0x4606_19_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4606_19_def P_0x4606_19_regions_def post: Q_0x4612_19_def regionset: P_0x4606_19_regions_set_def)

definition P_0x4612_20 :: state_pred where
  \<open>P_0x4612_20 \<sigma> \<equiv> RIP \<sigma> = 0x4612 \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare P_0x4612_20_def[Ps]

definition P_0x4612_20_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4612_20_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4612_20_regions :: state_pred where
  \<open>P_0x4612_20_regions \<sigma> \<equiv> \<exists>regions. P_0x4612_20_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_fflush_addr_0x4612_20 :: state_pred where
  \<open>Q_fflush_addr_0x4612_20 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = fflush_addr \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare Q_fflush_addr_0x4612_20_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4612_0x4612_20[blocks]:
  assumes \<open>(P_0x4612_20 && P_0x4612_20_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4612 20 \<sigma> \<triangleq> ?\<sigma> \<and> Q_fflush_addr_0x4612_20 ?\<sigma> \<and> block_usage P_0x4612_20_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4612_20_def P_0x4612_20_regions_def post: Q_fflush_addr_0x4612_20_def regionset: P_0x4612_20_regions_set_def)

definition P_0x4617_21 :: state_pred where
  \<open>P_0x4617_21 \<sigma> \<equiv> RIP \<sigma> = 0x4617 \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare P_0x4617_21_def[Ps]

definition P_0x4617_21_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4617_21_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4617_21_regions :: state_pred where
  \<open>P_0x4617_21_regions \<sigma> \<equiv> \<exists>regions. P_0x4617_21_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x461c_21 :: state_pred where
  \<open>Q_0x461c_21 \<sigma> \<equiv> RIP \<sigma> = 0x461c \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare Q_0x461c_21_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4617_0x461a_21[blocks]:
  assumes \<open>(P_0x4617_21 && P_0x4617_21_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x461a 21 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x461c_21 ?\<sigma> \<and> block_usage P_0x4617_21_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4617_21_def P_0x4617_21_regions_def post: Q_0x461c_21_def regionset: P_0x4617_21_regions_set_def)

definition P_0x461c_22 :: state_pred where
  \<open>P_0x461c_22 \<sigma> \<equiv> RIP \<sigma> = 0x461c \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare P_0x461c_22_def[Ps]

definition P_0x461c_22_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x461c_22_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x461c_22_regions :: state_pred where
  \<open>P_0x461c_22_regions \<sigma> \<equiv> \<exists>regions. P_0x461c_22_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcgetattr_addr_0x461c_22 :: state_pred where
  \<open>Q_tcgetattr_addr_0x461c_22 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcgetattr_addr \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare Q_tcgetattr_addr_0x461c_22_def[Qs]

schematic_goal bdrv_new_open_0_1_0x461c_0x461c_22[blocks]:
  assumes \<open>(P_0x461c_22 && P_0x461c_22_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x461c 22 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcgetattr_addr_0x461c_22 ?\<sigma> \<and> block_usage P_0x461c_22_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x461c_22_def P_0x461c_22_regions_def post: Q_tcgetattr_addr_0x461c_22_def regionset: P_0x461c_22_regions_set_def)

definition P_0x4621_23 :: state_pred where
  \<open>P_0x4621_23 \<sigma> \<equiv> RIP \<sigma> = 0x4621 \<and> RAX \<sigma> = tcgetattr_0x461c_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare P_0x4621_23_def[Ps]

definition P_0x4621_23_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4621_23_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a320, 8),
    (2, 0x2a328, 8),
    (3, 0x2a330, 8),
    (4, 0x2a338, 8),
    (5, 0x2a340, 8),
    (6, 0x2a348, 8),
    (7, 0x2a350, 8),
    (8, 0x2a358, 4),
    (9, RSP\<^sub>0, 8),
    (10, ((FS\<^sub>0::64 word) + 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (19, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (21, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x170), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x172), 2),
    (24, ((RSP\<^sub>0::64 word) - 0x178), 8),
    (25, ((RSP\<^sub>0::64 word) - 0x17c), 4),
    (26, ((RSP\<^sub>0::64 word) - 0x180), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x180), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x184), 4),
    (29, ((RSP\<^sub>0::64 word) - 0x188), 4),
    (30, ((RSP\<^sub>0::64 word) - 0x188), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4621_23_regions :: state_pred where
  \<open>P_0x4621_23_regions \<sigma> \<equiv> \<exists>regions. P_0x4621_23_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(23,24), (25,27), (26,27), (28,30), (29,30)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(23,24), (24,23), (25,27), (26,27), (27,25), (27,26), (28,30), (29,30), (30,28), (30,29)}))
\<close>

definition Q_0x4696_23 :: state_pred where
  \<open>Q_0x4696_23 \<sigma> \<equiv> RIP \<sigma> = 0x4696 \<and> RAX \<sigma> = 0x100 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare Q_0x4696_23_def[Qs]

schematic_goal bdrv_new_open_0_23_0x4621_0x4691_23[blocks]:
  assumes \<open>(P_0x4621_23 && P_0x4621_23_regions) \<sigma>\<close>
  shows \<open>exec_block 23 0x4691 23 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4696_23 ?\<sigma> \<and> block_usage P_0x4621_23_regions_set \<sigma> ?\<sigma>\<close>
  using assms  
  by (steps pre: P_0x4621_23_def P_0x4621_23_regions_def post: Q_0x4696_23_def regionset: P_0x4621_23_regions_set_def)

definition P_0x4696_24 :: state_pred where
  \<open>P_0x4696_24 \<sigma> \<equiv> RIP \<sigma> = 0x4696 \<and> RAX \<sigma> = 0x100 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare P_0x4696_24_def[Ps]

definition P_0x4696_24_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4696_24_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4696_24_regions :: state_pred where
  \<open>P_0x4696_24_regions \<sigma> \<equiv> \<exists>regions. P_0x4696_24_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcsetattr_addr_0x4696_24 :: state_pred where
  \<open>Q_tcsetattr_addr_0x4696_24 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcsetattr_addr \<and> RAX \<sigma> = 0x100 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare Q_tcsetattr_addr_0x4696_24_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4696_0x4696_24[blocks]:
  assumes \<open>(P_0x4696_24 && P_0x4696_24_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4696 24 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcsetattr_addr_0x4696_24 ?\<sigma> \<and> block_usage P_0x4696_24_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4696_24_def P_0x4696_24_regions_def post: Q_tcsetattr_addr_0x4696_24_def regionset: P_0x4696_24_regions_set_def)

definition P_0x469b_25 :: state_pred where
  \<open>P_0x469b_25 \<sigma> \<equiv> RIP \<sigma> = 0x469b \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare P_0x469b_25_def[Ps]

definition P_0x469b_25_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x469b_25_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x469b_25_regions :: state_pred where
  \<open>P_0x469b_25_regions \<sigma> \<equiv> \<exists>regions. P_0x469b_25_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46a2_25 :: state_pred where
  \<open>Q_0x46a2_25 \<sigma> \<equiv> RIP \<sigma> = 0x46a2 \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare Q_0x46a2_25_def[Qs]

schematic_goal bdrv_new_open_0_1_0x469b_0x469b_25[blocks]:
  assumes \<open>(P_0x469b_25 && P_0x469b_25_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x469b 25 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46a2_25 ?\<sigma> \<and> block_usage P_0x469b_25_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x469b_25_def P_0x469b_25_regions_def post: Q_0x46a2_25_def regionset: P_0x469b_25_regions_set_def)

definition P_0x46a2_26 :: state_pred where
  \<open>P_0x46a2_26 \<sigma> \<equiv> RIP \<sigma> = 0x46a2 \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare P_0x46a2_26_def[Ps]

definition P_0x46a2_26_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46a2_26_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46a2_26_regions :: state_pred where
  \<open>P_0x46a2_26_regions \<sigma> \<equiv> \<exists>regions. P_0x46a2_26_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_atexit_addr_0x46a2_26 :: state_pred where
  \<open>Q_atexit_addr_0x46a2_26 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = atexit_addr \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46a7\<close>
declare Q_atexit_addr_0x46a2_26_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46a2_0x46a2_26[blocks]:
  assumes \<open>(P_0x46a2_26 && P_0x46a2_26_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46a2 26 \<sigma> \<triangleq> ?\<sigma> \<and> Q_atexit_addr_0x46a2_26 ?\<sigma> \<and> block_usage P_0x46a2_26_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46a2_26_def P_0x46a2_26_regions_def post: Q_atexit_addr_0x46a2_26_def regionset: P_0x46a2_26_regions_set_def)

definition P_0x46a7_27 :: state_pred where
  \<open>P_0x46a7_27 \<sigma> \<equiv> RIP \<sigma> = 0x46a7 \<and> RAX \<sigma> = atexit_0x46a2_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46a7\<close>
declare P_0x46a7_27_def[Ps]

definition P_0x46a7_27_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46a7_27_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46a7_27_regions :: state_pred where
  \<open>P_0x46a7_27_regions \<sigma> \<equiv> \<exists>regions. P_0x46a7_27_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_27 :: state_pred where
  \<open>Q_0x46b0_27 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46b0_27_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46a7_0x46a7_27[blocks]:
  assumes \<open>(P_0x46a7_27 && P_0x46a7_27_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46a7 27 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_27 ?\<sigma> \<and> block_usage P_0x46a7_27_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46a7_27_def P_0x46a7_27_regions_def post: Q_0x46b0_27_def regionset: P_0x46a7_27_regions_set_def)

definition P_0x46b0_28 :: state_pred where
  \<open>P_0x46b0_28 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46b0_28_def[Ps]

definition P_0x46b0_28_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46b0_28_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x46b0_28_regions :: state_pred where
  \<open>P_0x46b0_28_regions \<sigma> \<equiv> \<exists>regions. P_0x46b0_28_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46be_28 :: state_pred where
  \<open>Q_0x46be_28 \<sigma> \<equiv> RIP \<sigma> = 0x46be \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46be_28_def[Qs]

schematic_goal bdrv_new_open_0_4_0x46b0_0x46bc_28[blocks]:
  assumes \<open>(P_0x46b0_28 && P_0x46b0_28_regions) \<sigma>\<close>
  shows \<open>exec_block 4 0x46bc 28 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46be_28 ?\<sigma> \<and> block_usage P_0x46b0_28_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46b0_28_def P_0x46b0_28_regions_def post: Q_0x46be_28_def regionset: P_0x46b0_28_regions_set_def)

definition P_0x46be_29 :: state_pred where
  \<open>P_0x46be_29 \<sigma> \<equiv> RIP \<sigma> = 0x46be \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46be_29_def[Ps]

definition P_0x46be_29_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46be_29_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46be_29_regions :: state_pred where
  \<open>P_0x46be_29_regions \<sigma> \<equiv> \<exists>regions. P_0x46be_29_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_read_addr_0x46be_29 :: state_pred where
  \<open>Q_read_addr_0x46be_29 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = read_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_read_addr_0x46be_29_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46be_0x46be_29[blocks]:
  assumes \<open>(P_0x46be_29 && P_0x46be_29_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46be 29 \<sigma> \<triangleq> ?\<sigma> \<and> Q_read_addr_0x46be_29 ?\<sigma> \<and> block_usage P_0x46be_29_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46be_29_def P_0x46be_29_regions_def post: Q_read_addr_0x46be_29_def regionset: P_0x46be_29_regions_set_def)

definition P_0x46c3_30 :: state_pred where
  \<open>P_0x46c3_30 \<sigma> \<equiv> RIP \<sigma> = 0x46c3 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46c3_30_def[Ps]

definition P_0x46c3_30_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46c3_30_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46c3_30_regions :: state_pred where
  \<open>P_0x46c3_30_regions \<sigma> \<equiv> \<exists>regions. P_0x46c3_30_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46c6_30 :: state_pred where
  \<open>Q_0x46c6_30 \<sigma> \<equiv> RIP \<sigma> = 0x46c6 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46c6_30_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46c3_0x46c3_30[blocks]:
  assumes \<open>(P_0x46c3_30 && P_0x46c3_30_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46c3 30 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46c6_30 ?\<sigma> \<and> block_usage P_0x46c3_30_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46c3_30_def P_0x46c3_30_regions_def post: Q_0x46c6_30_def regionset: P_0x46c3_30_regions_set_def)

definition P_0x46c6_true_31 :: state_pred where
  \<open>P_0x46c6_true_31 \<sigma> \<equiv> RIP \<sigma> = 0x46c6 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46c6_true_31_def[Ps]

definition P_0x46c6_true_31_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46c6_true_31_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46c6_true_31_regions :: state_pred where
  \<open>P_0x46c6_true_31_regions \<sigma> \<equiv> \<exists>regions. P_0x46c6_true_31_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46f0_31 :: state_pred where
  \<open>Q_0x46f0_31 \<sigma> \<equiv> RIP \<sigma> = 0x46f0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46f0_31_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46c6_0x46c6_31[blocks]:
  assumes \<open>(P_0x46c6_true_31 && P_0x46c6_true_31_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46c6 31 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46f0_31 ?\<sigma> \<and> block_usage P_0x46c6_true_31_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46c6_true_31_def P_0x46c6_true_31_regions_def post: Q_0x46f0_31_def regionset: P_0x46c6_true_31_regions_set_def)

definition P_0x46f0_32 :: state_pred where
  \<open>P_0x46f0_32 \<sigma> \<equiv> RIP \<sigma> = 0x46f0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46f0_32_def[Ps]

definition P_0x46f0_32_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46f0_32_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46f0_32_regions :: state_pred where
  \<open>P_0x46f0_32_regions \<sigma> \<equiv> \<exists>regions. P_0x46f0_32_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_errno_location_addr_0x46f0_32 :: state_pred where
  \<open>Q_errno_location_addr_0x46f0_32 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = errno_location_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_errno_location_addr_0x46f0_32_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46f0_0x46f0_32[blocks]:
  assumes \<open>(P_0x46f0_32 && P_0x46f0_32_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46f0 32 \<sigma> \<triangleq> ?\<sigma> \<and> Q_errno_location_addr_0x46f0_32 ?\<sigma> \<and> block_usage P_0x46f0_32_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46f0_32_def P_0x46f0_32_regions_def post: Q_errno_location_addr_0x46f0_32_def regionset: P_0x46f0_32_regions_set_def)

definition P_0x46f5_33 :: state_pred where
  \<open>P_0x46f5_33 \<sigma> \<equiv> RIP \<sigma> = 0x46f5 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46f5_33_def[Ps]

definition P_0x46f5_33_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46f5_33_regions_set \<sigma> \<equiv> {
    (0, RAX \<sigma>, 4),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46f5_33_regions :: state_pred where
  \<open>P_0x46f5_33_regions \<sigma> \<equiv> \<exists>regions. P_0x46f5_33_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46fa_33 :: state_pred where
  \<open>Q_0x46fa_33 \<sigma> \<equiv> RIP \<sigma> = 0x46fa \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_0x46fa_33_def[Qs]

schematic_goal bdrv_new_open_0_2_0x46f5_0x46f7_33[blocks]:
  assumes \<open>(P_0x46f5_33 && P_0x46f5_33_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x46f7 33 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46fa_33 ?\<sigma> \<and> block_usage P_0x46f5_33_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46f5_33_def P_0x46f5_33_regions_def post: Q_0x46fa_33_def regionset: P_0x46f5_33_regions_set_def)

definition P_0x46fa_true_34 :: state_pred where
  \<open>P_0x46fa_true_34 \<sigma> \<equiv> RIP \<sigma> = 0x46fa \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46fa_true_34_def[Ps]

definition P_0x46fa_true_34_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46fa_true_34_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46fa_true_34_regions :: state_pred where
  \<open>P_0x46fa_true_34_regions \<sigma> \<equiv> \<exists>regions. P_0x46fa_true_34_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_34 :: state_pred where
  \<open>Q_0x46b0_34 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_0x46b0_34_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46fa_0x46fa_34[blocks]:
  assumes \<open>(P_0x46fa_true_34 && P_0x46fa_true_34_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46fa 34 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_34 ?\<sigma> \<and> block_usage P_0x46fa_true_34_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46fa_true_34_def P_0x46fa_true_34_regions_def post: Q_0x46b0_34_def regionset: P_0x46fa_true_34_regions_set_def)

definition P_0x46fa_false_35 :: state_pred where
  \<open>P_0x46fa_false_35 \<sigma> \<equiv> RIP \<sigma> = 0x46fa \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46fa_false_35_def[Ps]

definition P_0x46fa_false_35_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46fa_false_35_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46fa_false_35_regions :: state_pred where
  \<open>P_0x46fa_false_35_regions \<sigma> \<equiv> \<exists>regions. P_0x46fa_false_35_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46fc_35 :: state_pred where
  \<open>Q_0x46fc_35 \<sigma> \<equiv> RIP \<sigma> = 0x46fc \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_0x46fc_35_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46fa_0x46fa_35[blocks]:
  assumes \<open>(P_0x46fa_false_35 && P_0x46fa_false_35_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46fa 35 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46fc_35 ?\<sigma> \<and> block_usage P_0x46fa_false_35_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46fa_false_35_def P_0x46fa_false_35_regions_def post: Q_0x46fc_35_def regionset: P_0x46fa_false_35_regions_set_def)

definition P_0x46fc_36 :: state_pred where
  \<open>P_0x46fc_36 \<sigma> \<equiv> RIP \<sigma> = 0x46fc \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46fc_36_def[Ps]

definition P_0x46fc_36_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46fc_36_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46fc_36_regions :: state_pred where
  \<open>P_0x46fc_36_regions \<sigma> \<equiv> \<exists>regions. P_0x46fc_36_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46ff_36 :: state_pred where
  \<open>Q_0x46ff_36 \<sigma> \<equiv> RIP \<sigma> = 0x46ff \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46ff_36_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46fc_0x46fc_36[blocks]:
  assumes \<open>(P_0x46fc_36 && P_0x46fc_36_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46fc 36 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46ff_36 ?\<sigma> \<and> block_usage P_0x46fc_36_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46fc_36_def P_0x46fc_36_regions_def post: Q_0x46ff_36_def regionset: P_0x46fc_36_regions_set_def)

definition P_0x46ff_true_37 :: state_pred where
  \<open>P_0x46ff_true_37 \<sigma> \<equiv> RIP \<sigma> = 0x46ff \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46ff_true_37_def[Ps]

definition P_0x46ff_true_37_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ff_true_37_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x46ff_true_37_regions :: state_pred where
  \<open>P_0x46ff_true_37_regions \<sigma> \<equiv> \<exists>regions. P_0x46ff_true_37_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_37 :: state_pred where
  \<open>Q_0x46b0_37 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46b0_37_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46ff_0x46ff_37[blocks]:
  assumes \<open>(P_0x46ff_true_37 && P_0x46ff_true_37_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46ff 37 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_37 ?\<sigma> \<and> block_usage P_0x46ff_true_37_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ff_true_37_def P_0x46ff_true_37_regions_def post: Q_0x46b0_37_def regionset: P_0x46ff_true_37_regions_set_def)

definition P_0x46ff_false_38 :: state_pred where
  \<open>P_0x46ff_false_38 \<sigma> \<equiv> RIP \<sigma> = 0x46ff \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46ff_false_38_def[Ps]

definition P_0x46ff_false_38_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ff_false_38_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x46ff_false_38_regions :: state_pred where
  \<open>P_0x46ff_false_38_regions \<sigma> \<equiv> \<exists>regions. P_0x46ff_false_38_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4701_38 :: state_pred where
  \<open>Q_0x4701_38 \<sigma> \<equiv> RIP \<sigma> = 0x4701 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x4701_38_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46ff_0x46ff_38[blocks]:
  assumes \<open>(P_0x46ff_false_38 && P_0x46ff_false_38_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46ff 38 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4701_38 ?\<sigma> \<and> block_usage P_0x46ff_false_38_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ff_false_38_def P_0x46ff_false_38_regions_def post: Q_0x4701_38_def regionset: P_0x46ff_false_38_regions_set_def)

definition P_0x46c6_false_39 :: state_pred where
  \<open>P_0x46c6_false_39 \<sigma> \<equiv> RIP \<sigma> = 0x46c6 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46c6_false_39_def[Ps]

definition P_0x46c6_false_39_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46c6_false_39_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46c6_false_39_regions :: state_pred where
  \<open>P_0x46c6_false_39_regions \<sigma> \<equiv> \<exists>regions. P_0x46c6_false_39_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46ca_39 :: state_pred where
  \<open>Q_0x46ca_39 \<sigma> \<equiv> RIP \<sigma> = 0x46ca \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46ca_39_def[Qs]

schematic_goal bdrv_new_open_0_2_0x46c6_0x46c8_39[blocks]:
  assumes \<open>(P_0x46c6_false_39 && P_0x46c6_false_39_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x46c8 39 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46ca_39 ?\<sigma> \<and> block_usage P_0x46c6_false_39_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46c6_false_39_def P_0x46c6_false_39_regions_def post: Q_0x46ca_39_def regionset: P_0x46c6_false_39_regions_set_def)

definition P_0x46ca_true_40 :: state_pred where
  \<open>P_0x46ca_true_40 \<sigma> \<equiv> RIP \<sigma> = 0x46ca \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46ca_true_40_def[Ps]

definition P_0x46ca_true_40_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ca_true_40_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46ca_true_40_regions :: state_pred where
  \<open>P_0x46ca_true_40_regions \<sigma> \<equiv> \<exists>regions. P_0x46ca_true_40_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4701_40 :: state_pred where
  \<open>Q_0x4701_40 \<sigma> \<equiv> RIP \<sigma> = 0x4701 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x4701_40_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46ca_0x46ca_40[blocks]:
  assumes \<open>(P_0x46ca_true_40 && P_0x46ca_true_40_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46ca 40 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4701_40 ?\<sigma> \<and> block_usage P_0x46ca_true_40_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ca_true_40_def P_0x46ca_true_40_regions_def post: Q_0x4701_40_def regionset: P_0x46ca_true_40_regions_set_def)

definition P_0x46ca_false_41 :: state_pred where
  \<open>P_0x46ca_false_41 \<sigma> \<equiv> RIP \<sigma> = 0x46ca \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46ca_false_41_def[Ps]

definition P_0x46ca_false_41_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ca_false_41_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46ca_false_41_regions :: state_pred where
  \<open>P_0x46ca_false_41_regions \<sigma> \<equiv> \<exists>regions. P_0x46ca_false_41_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46d3_41 :: state_pred where
  \<open>Q_0x46d3_41 \<sigma> \<equiv> RIP \<sigma> = 0x46d3 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46d3_41_def[Qs]

schematic_goal bdrv_new_open_0_3_0x46ca_0x46d1_41[blocks]:
  assumes \<open>(P_0x46ca_false_41 && P_0x46ca_false_41_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x46d1 41 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46d3_41 ?\<sigma> \<and> block_usage P_0x46ca_false_41_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ca_false_41_def P_0x46ca_false_41_regions_def post: Q_0x46d3_41_def regionset: P_0x46ca_false_41_regions_set_def)

definition P_0x46d3_true_42 :: state_pred where
  \<open>P_0x46d3_true_42 \<sigma> \<equiv> RIP \<sigma> = 0x46d3 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46d3_true_42_def[Ps]

definition P_0x46d3_true_42_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46d3_true_42_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46d3_true_42_regions :: state_pred where
  \<open>P_0x46d3_true_42_regions \<sigma> \<equiv> \<exists>regions. P_0x46d3_true_42_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4730_42 :: state_pred where
  \<open>Q_0x4730_42 \<sigma> \<equiv> RIP \<sigma> = 0x4730 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x4730_42_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46d3_0x46d3_42[blocks]:
  assumes \<open>(P_0x46d3_true_42 && P_0x46d3_true_42_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46d3 42 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4730_42 ?\<sigma> \<and> block_usage P_0x46d3_true_42_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46d3_true_42_def P_0x46d3_true_42_regions_def post: Q_0x4730_42_def regionset: P_0x46d3_true_42_regions_set_def)

definition P_0x46d3_false_43 :: state_pred where
  \<open>P_0x46d3_false_43 \<sigma> \<equiv> RIP \<sigma> = 0x46d3 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46d3_false_43_def[Ps]

definition P_0x46d3_false_43_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46d3_false_43_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46d3_false_43_regions :: state_pred where
  \<open>P_0x46d3_false_43_regions \<sigma> \<equiv> \<exists>regions. P_0x46d3_false_43_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46db_43 :: state_pred where
  \<open>Q_0x46db_43 \<sigma> \<equiv> RIP \<sigma> = 0x46db \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46db_43_def[Qs]

schematic_goal bdrv_new_open_0_2_0x46d3_0x46d5_43[blocks]:
  assumes \<open>(P_0x46d3_false_43 && P_0x46d3_false_43_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x46d5 43 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46db_43 ?\<sigma> \<and> block_usage P_0x46d3_false_43_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46d3_false_43_def P_0x46d3_false_43_regions_def post: Q_0x46db_43_def regionset: P_0x46d3_false_43_regions_set_def)

definition P_0x46db_true_44 :: state_pred where
  \<open>P_0x46db_true_44 \<sigma> \<equiv> RIP \<sigma> = 0x46db \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46db_true_44_def[Ps]

definition P_0x46db_true_44_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46db_true_44_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46db_true_44_regions :: state_pred where
  \<open>P_0x46db_true_44_regions \<sigma> \<equiv> \<exists>regions. P_0x46db_true_44_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_44 :: state_pred where
  \<open>Q_0x46b0_44 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46b0_44_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46db_0x46db_44[blocks]:
  assumes \<open>(P_0x46db_true_44 && P_0x46db_true_44_regions && jg) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46db 44 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_44 ?\<sigma> \<and> block_usage P_0x46db_true_44_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46db_true_44_def P_0x46db_true_44_regions_def post: Q_0x46b0_44_def regionset: P_0x46db_true_44_regions_set_def)

definition P_0x46db_false_45 :: state_pred where
  \<open>P_0x46db_false_45 \<sigma> \<equiv> RIP \<sigma> = 0x46db \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46db_false_45_def[Ps]

definition P_0x46db_false_45_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46db_false_45_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46db_false_45_regions :: state_pred where
  \<open>P_0x46db_false_45_regions \<sigma> \<equiv> \<exists>regions. P_0x46db_false_45_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46dd_45 :: state_pred where
  \<open>Q_0x46dd_45 \<sigma> \<equiv> RIP \<sigma> = 0x46dd \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46dd_45_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46db_0x46db_45[blocks]:
  assumes \<open>(P_0x46db_false_45 && P_0x46db_false_45_regions && ! jg) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46db 45 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46dd_45 ?\<sigma> \<and> block_usage P_0x46db_false_45_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46db_false_45_def P_0x46db_false_45_regions_def post: Q_0x46dd_45_def regionset: P_0x46db_false_45_regions_set_def)

definition P_0x46dd_46 :: state_pred where
  \<open>P_0x46dd_46 \<sigma> \<equiv> RIP \<sigma> = 0x46dd \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46dd_46_def[Ps]

definition P_0x46dd_46_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46dd_46_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8),
    (20, ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148), Suc 0)
  }\<close>

definition P_0x46dd_46_regions :: state_pred where
  \<open>P_0x46dd_46_regions \<sigma> \<equiv> \<exists>regions. P_0x46dd_46_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_46 :: state_pred where
  \<open>Q_0x46b0_46 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46b0_46_def[Qs]

schematic_goal bdrv_new_open_0_4_0x46dd_0x46e7_46[blocks]:
  assumes \<open>(P_0x46dd_46 && P_0x46dd_46_regions) \<sigma>\<close>
  shows \<open>exec_block 4 0x46e7 46 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_46 ?\<sigma> \<and> block_usage P_0x46dd_46_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46dd_46_def P_0x46dd_46_regions_def post: Q_0x46b0_46_def regionset: P_0x46dd_46_regions_set_def)

definition P_0x4730_47 :: state_pred where
  \<open>P_0x4730_47 \<sigma> \<equiv> RIP \<sigma> = 0x4730 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x4730_47_def[Ps]

definition P_0x4730_47_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4730_47_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x4730_47_regions :: state_pred where
  \<open>P_0x4730_47_regions \<sigma> \<equiv> \<exists>regions. P_0x4730_47_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x473b_47 :: state_pred where
  \<open>Q_0x473b_47 \<sigma> \<equiv> RIP \<sigma> = 0x473b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x473b_47_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4730_0x4734_47[blocks]:
  assumes \<open>(P_0x4730_47 && P_0x4730_47_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x4734 47 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x473b_47 ?\<sigma> \<and> block_usage P_0x4730_47_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4730_47_def P_0x4730_47_regions_def post: Q_0x473b_47_def regionset: P_0x4730_47_regions_set_def)

definition P_0x473b_48 :: state_pred where
  \<open>P_0x473b_48 \<sigma> \<equiv> RIP \<sigma> = 0x473b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x473b_48_def[Ps]

definition P_0x473b_48_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x473b_48_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x473b_48_regions :: state_pred where
  \<open>P_0x473b_48_regions \<sigma> \<equiv> \<exists>regions. P_0x473b_48_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcsetattr_addr_0x473b_48 :: state_pred where
  \<open>Q_tcsetattr_addr_0x473b_48 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcsetattr_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare Q_tcsetattr_addr_0x473b_48_def[Qs]

schematic_goal bdrv_new_open_0_1_0x473b_0x473b_48[blocks]:
  assumes \<open>(P_0x473b_48 && P_0x473b_48_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x473b 48 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcsetattr_addr_0x473b_48 ?\<sigma> \<and> block_usage P_0x473b_48_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x473b_48_def P_0x473b_48_regions_def post: Q_tcsetattr_addr_0x473b_48_def regionset: P_0x473b_48_regions_set_def)

definition P_0x4740_49 :: state_pred where
  \<open>P_0x4740_49 \<sigma> \<equiv> RIP \<sigma> = 0x4740 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare P_0x4740_49_def[Ps]

definition P_0x4740_49_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4740_49_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4740_49_regions :: state_pred where
  \<open>P_0x4740_49_regions \<sigma> \<equiv> \<exists>regions. P_0x4740_49_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x474a_49 :: state_pred where
  \<open>Q_0x474a_49 \<sigma> \<equiv> RIP \<sigma> = 0x474a \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare Q_0x474a_49_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4740_0x4745_49[blocks]:
  assumes \<open>(P_0x4740_49 && P_0x4740_49_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4745 49 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x474a_49 ?\<sigma> \<and> block_usage P_0x4740_49_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4740_49_def P_0x4740_49_regions_def post: Q_0x474a_49_def regionset: P_0x4740_49_regions_set_def)

definition P_0x474a_50 :: state_pred where
  \<open>P_0x474a_50 \<sigma> \<equiv> RIP \<sigma> = 0x474a \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare P_0x474a_50_def[Ps]

definition P_0x474a_50_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x474a_50_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x474a_50_regions :: state_pred where
  \<open>P_0x474a_50_regions \<sigma> \<equiv> \<exists>regions. P_0x474a_50_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_putchar_addr_0x474a_50 :: state_pred where
  \<open>Q_putchar_addr_0x474a_50 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = putchar_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare Q_putchar_addr_0x474a_50_def[Qs]

schematic_goal bdrv_new_open_0_1_0x474a_0x474a_50[blocks]:
  assumes \<open>(P_0x474a_50 && P_0x474a_50_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x474a 50 \<sigma> \<triangleq> ?\<sigma> \<and> Q_putchar_addr_0x474a_50 ?\<sigma> \<and> block_usage P_0x474a_50_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x474a_50_def P_0x474a_50_regions_def post: Q_putchar_addr_0x474a_50_def regionset: P_0x474a_50_regions_set_def)

definition P_0x474f_51 :: state_pred where
  \<open>P_0x474f_51 \<sigma> \<equiv> RIP \<sigma> = 0x474f \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare P_0x474f_51_def[Ps]

definition P_0x474f_51_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x474f_51_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x474f_51_regions :: state_pred where
  \<open>P_0x474f_51_regions \<sigma> \<equiv> \<exists>regions. P_0x474f_51_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4755_51 :: state_pred where
  \<open>Q_0x4755_51 \<sigma> \<equiv> RIP \<sigma> = 0x4755 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare Q_0x4755_51_def[Qs]

schematic_goal bdrv_new_open_0_2_0x474f_0x4752_51[blocks]:
  assumes \<open>(P_0x474f_51 && P_0x474f_51_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4752 51 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4755_51 ?\<sigma> \<and> block_usage P_0x474f_51_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x474f_51_def P_0x474f_51_regions_def post: Q_0x4755_51_def regionset: P_0x474f_51_regions_set_def)

definition P_0x4755_52 :: state_pred where
  \<open>P_0x4755_52 \<sigma> \<equiv> RIP \<sigma> = 0x4755 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare P_0x4755_52_def[Ps]

definition P_0x4755_52_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4755_52_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4755_52_regions :: state_pred where
  \<open>P_0x4755_52_regions \<sigma> \<equiv> \<exists>regions. P_0x4755_52_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_set_key_addr_0x4755_52 :: state_pred where
  \<open>Q_bdrv_set_key_addr_0x4755_52 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_set_key_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_bdrv_set_key_addr_0x4755_52_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4755_0x4755_52[blocks]:
  assumes \<open>(P_0x4755_52 && P_0x4755_52_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4755 52 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_set_key_addr_0x4755_52 ?\<sigma> \<and> block_usage P_0x4755_52_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4755_52_def P_0x4755_52_regions_def post: Q_bdrv_set_key_addr_0x4755_52_def regionset: P_0x4755_52_regions_set_def)

definition P_0x475a_53 :: state_pred where
  \<open>P_0x475a_53 \<sigma> \<equiv> RIP \<sigma> = 0x475a \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x475a_53_def[Ps]

definition P_0x475a_53_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x475a_53_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x475a_53_regions :: state_pred where
  \<open>P_0x475a_53_regions \<sigma> \<equiv> \<exists>regions. P_0x475a_53_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x475c_53 :: state_pred where
  \<open>Q_0x475c_53 \<sigma> \<equiv> RIP \<sigma> = 0x475c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x475c_53_def[Qs]

schematic_goal bdrv_new_open_0_1_0x475a_0x475a_53[blocks]:
  assumes \<open>(P_0x475a_53 && P_0x475a_53_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x475a 53 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x475c_53 ?\<sigma> \<and> block_usage P_0x475a_53_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x475a_53_def P_0x475a_53_regions_def post: Q_0x475c_53_def regionset: P_0x475a_53_regions_set_def)

definition P_0x475c_true_54 :: state_pred where
  \<open>P_0x475c_true_54 \<sigma> \<equiv> RIP \<sigma> = 0x475c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x475c_true_54_def[Ps]

definition P_0x475c_true_54_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x475c_true_54_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x475c_true_54_regions :: state_pred where
  \<open>P_0x475c_true_54_regions \<sigma> \<equiv> \<exists>regions. P_0x475c_true_54_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45b7_54 :: state_pred where
  \<open>Q_0x45b7_54 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x45b7_54_def[Qs]

schematic_goal bdrv_new_open_0_4_0x475c_0x45b4_54[blocks]:
  assumes \<open>(P_0x475c_true_54 && P_0x475c_true_54_regions && !SF) \<sigma>\<close>
  shows \<open>exec_block 4 0x45b4 54 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45b7_54 ?\<sigma> \<and> block_usage P_0x475c_true_54_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x475c_true_54_def P_0x475c_true_54_regions_def post: Q_0x45b7_54_def regionset: P_0x475c_true_54_regions_set_def)

definition P_0x45b7_true_55 :: state_pred where
  \<open>P_0x45b7_true_55 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x45b7_true_55_def[Ps]

definition P_0x45b7_true_55_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_true_55_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_true_55_regions :: state_pred where
  \<open>P_0x45b7_true_55_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_true_55_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x479b_55 :: state_pred where
  \<open>Q_0x479b_55 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x479b_55_def[Qs]

schematic_goal bdrv_new_open_0_1_0x45b7_0x45b7_55[blocks]:
  assumes \<open>(P_0x45b7_true_55 && P_0x45b7_true_55_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x45b7 55 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x479b_55 ?\<sigma> \<and> block_usage P_0x45b7_true_55_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_true_55_def P_0x45b7_true_55_regions_def post: Q_0x479b_55_def regionset: P_0x45b7_true_55_regions_set_def)

definition P_0x479b_56 :: state_pred where
  \<open>P_0x479b_56 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x479b_56_def[Ps]

definition P_0x479b_56_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x479b_56_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x479b_56_regions :: state_pred where
  \<open>P_0x479b_56_regions \<sigma> \<equiv> \<exists>regions. P_0x479b_56_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_stack_chk_fail_addr_0x479b_56 :: state_pred where
  \<open>Q_stack_chk_fail_addr_0x479b_56 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = stack_chk_fail_addr \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_stack_chk_fail_addr_0x479b_56_def[Qs]

schematic_goal bdrv_new_open_0_1_0x479b_0x479b_56[blocks]:
  assumes \<open>(P_0x479b_56 && P_0x479b_56_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x479b 56 \<sigma> \<triangleq> ?\<sigma> \<and> Q_stack_chk_fail_addr_0x479b_56 ?\<sigma> \<and> block_usage P_0x479b_56_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x479b_56_def P_0x479b_56_regions_def post: Q_stack_chk_fail_addr_0x479b_56_def regionset: P_0x479b_56_regions_set_def)

definition P_0x45b7_false_57 :: state_pred where
  \<open>P_0x45b7_false_57 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x45b7_false_57_def[Ps]

definition P_0x45b7_false_57_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_false_57_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_false_57_regions :: state_pred where
  \<open>P_0x45b7_false_57_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_false_57_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_ret_address_57 :: state_pred where
  \<open>Q_ret_address_57 \<sigma> \<equiv> RIP \<sigma> = ret_address \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_ret_address_57_def[Qs]

schematic_goal bdrv_new_open_0_9_0x45b7_0x45ce_57[blocks]:
  assumes \<open>(P_0x45b7_false_57 && P_0x45b7_false_57_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 9 0x45ce 57 \<sigma> \<triangleq> ?\<sigma> \<and> Q_ret_address_57 ?\<sigma> \<and> block_usage P_0x45b7_false_57_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_false_57_def P_0x45b7_false_57_regions_def post: Q_ret_address_57_def regionset: P_0x45b7_false_57_regions_set_def)

definition P_0x475c_false_58 :: state_pred where
  \<open>P_0x475c_false_58 \<sigma> \<equiv> RIP \<sigma> = 0x475c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x475c_false_58_def[Ps]

definition P_0x475c_false_58_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x475c_false_58_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x475c_false_58_regions :: state_pred where
  \<open>P_0x475c_false_58_regions \<sigma> \<equiv> \<exists>regions. P_0x475c_false_58_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x476b_58 :: state_pred where
  \<open>Q_0x476b_58 \<sigma> \<equiv> RIP \<sigma> = 0x476b \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0ae \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x476b_58_def[Qs]

schematic_goal bdrv_new_open_0_3_0x475c_0x4769_58[blocks]:
  assumes \<open>(P_0x475c_false_58 && P_0x475c_false_58_regions && ! !SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x4769 58 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x476b_58 ?\<sigma> \<and> block_usage P_0x475c_false_58_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x475c_false_58_def P_0x475c_false_58_regions_def post: Q_0x476b_58_def regionset: P_0x475c_false_58_regions_set_def)

definition P_0x476b_59 :: state_pred where
  \<open>P_0x476b_59 \<sigma> \<equiv> RIP \<sigma> = 0x476b \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0ae \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x476b_59_def[Ps]

definition P_0x476b_59_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x476b_59_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x476b_59_regions :: state_pred where
  \<open>P_0x476b_59_regions \<sigma> \<equiv> \<exists>regions. P_0x476b_59_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x476b_59 :: state_pred where
  \<open>Q_error_addr_0x476b_59 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x476b_59_def[Qs]

schematic_goal bdrv_new_open_0_1_0x476b_0x476b_59[blocks]:
  assumes \<open>(P_0x476b_59 && P_0x476b_59_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x476b 59 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x476b_59 ?\<sigma> \<and> block_usage P_0x476b_59_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x476b_59_def P_0x476b_59_regions_def post: Q_error_addr_0x476b_59_def regionset: P_0x476b_59_regions_set_def)

definition P_0x4701_60 :: state_pred where
  \<open>P_0x4701_60 \<sigma> \<equiv> RIP \<sigma> = 0x4701 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x4701_60_def[Ps]

definition P_0x4701_60_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4701_60_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x4701_60_regions :: state_pred where
  \<open>P_0x4701_60_regions \<sigma> \<equiv> \<exists>regions. P_0x4701_60_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x470c_60 :: state_pred where
  \<open>Q_0x470c_60 \<sigma> \<equiv> RIP \<sigma> = 0x470c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x470c_60_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4701_0x470a_60[blocks]:
  assumes \<open>(P_0x4701_60 && P_0x4701_60_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x470a 60 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x470c_60 ?\<sigma> \<and> block_usage P_0x4701_60_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4701_60_def P_0x4701_60_regions_def post: Q_0x470c_60_def regionset: P_0x4701_60_regions_set_def)

definition P_0x470c_61 :: state_pred where
  \<open>P_0x470c_61 \<sigma> \<equiv> RIP \<sigma> = 0x470c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x470c_61_def[Ps]

definition P_0x470c_61_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x470c_61_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x470c_61_regions :: state_pred where
  \<open>P_0x470c_61_regions \<sigma> \<equiv> \<exists>regions. P_0x470c_61_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcsetattr_addr_0x470c_61 :: state_pred where
  \<open>Q_tcsetattr_addr_0x470c_61 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcsetattr_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare Q_tcsetattr_addr_0x470c_61_def[Qs]

schematic_goal bdrv_new_open_0_1_0x470c_0x470c_61[blocks]:
  assumes \<open>(P_0x470c_61 && P_0x470c_61_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x470c 61 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcsetattr_addr_0x470c_61 ?\<sigma> \<and> block_usage P_0x470c_61_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x470c_61_def P_0x470c_61_regions_def post: Q_tcsetattr_addr_0x470c_61_def regionset: P_0x470c_61_regions_set_def)

definition P_0x4711_62 :: state_pred where
  \<open>P_0x4711_62 \<sigma> \<equiv> RIP \<sigma> = 0x4711 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare P_0x4711_62_def[Ps]

definition P_0x4711_62_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4711_62_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4711_62_regions :: state_pred where
  \<open>P_0x4711_62_regions \<sigma> \<equiv> \<exists>regions. P_0x4711_62_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x471b_62 :: state_pred where
  \<open>Q_0x471b_62 \<sigma> \<equiv> RIP \<sigma> = 0x471b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare Q_0x471b_62_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4711_0x4716_62[blocks]:
  assumes \<open>(P_0x4711_62 && P_0x4711_62_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4716 62 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x471b_62 ?\<sigma> \<and> block_usage P_0x4711_62_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4711_62_def P_0x4711_62_regions_def post: Q_0x471b_62_def regionset: P_0x4711_62_regions_set_def)

definition P_0x471b_63 :: state_pred where
  \<open>P_0x471b_63 \<sigma> \<equiv> RIP \<sigma> = 0x471b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare P_0x471b_63_def[Ps]

definition P_0x471b_63_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x471b_63_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x471b_63_regions :: state_pred where
  \<open>P_0x471b_63_regions \<sigma> \<equiv> \<exists>regions. P_0x471b_63_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_putchar_addr_0x471b_63 :: state_pred where
  \<open>Q_putchar_addr_0x471b_63 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = putchar_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare Q_putchar_addr_0x471b_63_def[Qs]

schematic_goal bdrv_new_open_0_1_0x471b_0x471b_63[blocks]:
  assumes \<open>(P_0x471b_63 && P_0x471b_63_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x471b 63 \<sigma> \<triangleq> ?\<sigma> \<and> Q_putchar_addr_0x471b_63 ?\<sigma> \<and> block_usage P_0x471b_63_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x471b_63_def P_0x471b_63_regions_def post: Q_putchar_addr_0x471b_63_def regionset: P_0x471b_63_regions_set_def)

definition P_0x4720_64 :: state_pred where
  \<open>P_0x4720_64 \<sigma> \<equiv> RIP \<sigma> = 0x4720 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare P_0x4720_64_def[Ps]

definition P_0x4720_64_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4720_64_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4720_64_regions :: state_pred where
  \<open>P_0x4720_64_regions \<sigma> \<equiv> \<exists>regions. P_0x4720_64_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4729_64 :: state_pred where
  \<open>Q_0x4729_64 \<sigma> \<equiv> RIP \<sigma> = 0x4729 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0bf \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare Q_0x4729_64_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4720_0x4727_64[blocks]:
  assumes \<open>(P_0x4720_64 && P_0x4720_64_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4727 64 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4729_64 ?\<sigma> \<and> block_usage P_0x4720_64_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4720_64_def P_0x4720_64_regions_def post: Q_0x4729_64_def regionset: P_0x4720_64_regions_set_def)

definition P_0x4729_65 :: state_pred where
  \<open>P_0x4729_65 \<sigma> \<equiv> RIP \<sigma> = 0x4729 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0bf \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare P_0x4729_65_def[Ps]

definition P_0x4729_65_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4729_65_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4729_65_regions :: state_pred where
  \<open>P_0x4729_65_regions \<sigma> \<equiv> \<exists>regions. P_0x4729_65_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x4729_65 :: state_pred where
  \<open>Q_error_addr_0x4729_65 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x4729_65_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4729_0x4729_65[blocks]:
  assumes \<open>(P_0x4729_65 && P_0x4729_65_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4729 65 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x4729_65 ?\<sigma> \<and> block_usage P_0x4729_65_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4729_65_def P_0x4729_65_regions_def post: Q_error_addr_0x4729_65_def regionset: P_0x4729_65_regions_set_def)

definition P_0x45a1_false_66 :: state_pred where
  \<open>P_0x45a1_false_66 \<sigma> \<equiv> RIP \<sigma> = 0x45a1 \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45a1_false_66_def[Ps]

definition P_0x45a1_false_66_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45a1_false_66_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45a1_false_66_regions :: state_pred where
  \<open>P_0x45a1_false_66_regions \<sigma> \<equiv> \<exists>regions. P_0x45a1_false_66_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45b7_66 :: state_pred where
  \<open>Q_0x45b7_66 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x45b7_66_def[Qs]

schematic_goal bdrv_new_open_0_4_0x45a1_0x45b4_66[blocks]:
  assumes \<open>(P_0x45a1_false_66 && P_0x45a1_false_66_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 4 0x45b4 66 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45b7_66 ?\<sigma> \<and> block_usage P_0x45a1_false_66_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45a1_false_66_def P_0x45a1_false_66_regions_def post: Q_0x45b7_66_def regionset: P_0x45a1_false_66_regions_set_def)

definition P_0x45b7_true_67 :: state_pred where
  \<open>P_0x45b7_true_67 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45b7_true_67_def[Ps]

definition P_0x45b7_true_67_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_true_67_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_true_67_regions :: state_pred where
  \<open>P_0x45b7_true_67_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_true_67_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x479b_67 :: state_pred where
  \<open>Q_0x479b_67 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x479b_67_def[Qs]

schematic_goal bdrv_new_open_0_1_0x45b7_0x45b7_67[blocks]:
  assumes \<open>(P_0x45b7_true_67 && P_0x45b7_true_67_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x45b7 67 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x479b_67 ?\<sigma> \<and> block_usage P_0x45b7_true_67_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_true_67_def P_0x45b7_true_67_regions_def post: Q_0x479b_67_def regionset: P_0x45b7_true_67_regions_set_def)

definition P_0x479b_68 :: state_pred where
  \<open>P_0x479b_68 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x479b_68_def[Ps]

definition P_0x479b_68_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x479b_68_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x479b_68_regions :: state_pred where
  \<open>P_0x479b_68_regions \<sigma> \<equiv> \<exists>regions. P_0x479b_68_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_stack_chk_fail_addr_0x479b_68 :: state_pred where
  \<open>Q_stack_chk_fail_addr_0x479b_68 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = stack_chk_fail_addr \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_stack_chk_fail_addr_0x479b_68_def[Qs]

schematic_goal bdrv_new_open_0_1_0x479b_0x479b_68[blocks]:
  assumes \<open>(P_0x479b_68 && P_0x479b_68_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x479b 68 \<sigma> \<triangleq> ?\<sigma> \<and> Q_stack_chk_fail_addr_0x479b_68 ?\<sigma> \<and> block_usage P_0x479b_68_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x479b_68_def P_0x479b_68_regions_def post: Q_stack_chk_fail_addr_0x479b_68_def regionset: P_0x479b_68_regions_set_def)

definition P_0x45b7_false_69 :: state_pred where
  \<open>P_0x45b7_false_69 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = 0x2a1a0 \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45b7_false_69_def[Ps]

definition P_0x45b7_false_69_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_false_69_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_false_69_regions :: state_pred where
  \<open>P_0x45b7_false_69_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_false_69_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_ret_address_69 :: state_pred where
  \<open>Q_ret_address_69 \<sigma> \<equiv> RIP \<sigma> = ret_address \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_ret_address_69_def[Qs]

schematic_goal bdrv_new_open_0_9_0x45b7_0x45ce_69[blocks]:
  assumes \<open>(P_0x45b7_false_69 && P_0x45b7_false_69_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 9 0x45ce 69 \<sigma> \<triangleq> ?\<sigma> \<and> Q_ret_address_69 ?\<sigma> \<and> block_usage P_0x45b7_false_69_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_false_69_def P_0x45b7_false_69_regions_def post: Q_ret_address_69_def regionset: P_0x45b7_false_69_regions_set_def)

definition P_0x4565_false_70 :: state_pred where
  \<open>P_0x4565_false_70 \<sigma> \<equiv> RIP \<sigma> = 0x4565 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x20c62 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x4565_false_70_def[Ps]

definition P_0x4565_false_70_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4565_false_70_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4565_false_70_regions :: state_pred where
  \<open>P_0x4565_false_70_regions \<sigma> \<equiv> \<exists>regions. P_0x4565_false_70_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x456e_70 :: state_pred where
  \<open>Q_0x456e_70 \<sigma> \<equiv> RIP \<sigma> = 0x456e \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare Q_0x456e_70_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4565_0x456b_70[blocks]:
  assumes \<open>(P_0x4565_false_70 && P_0x4565_false_70_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x456b 70 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x456e_70 ?\<sigma> \<and> block_usage P_0x4565_false_70_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4565_false_70_def P_0x4565_false_70_regions_def post: Q_0x456e_70_def regionset: P_0x4565_false_70_regions_set_def)

definition P_0x456e_71 :: state_pred where
  \<open>P_0x456e_71 \<sigma> \<equiv> RIP \<sigma> = 0x456e \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4556\<close>
declare P_0x456e_71_def[Ps]

definition P_0x456e_71_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x456e_71_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x456e_71_regions :: state_pred where
  \<open>P_0x456e_71_regions \<sigma> \<equiv> \<exists>regions. P_0x456e_71_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_find_format_addr_0x456e_71 :: state_pred where
  \<open>Q_bdrv_find_format_addr_0x456e_71 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_find_format_addr \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare Q_bdrv_find_format_addr_0x456e_71_def[Qs]

schematic_goal bdrv_new_open_0_1_0x456e_0x456e_71[blocks]:
  assumes \<open>(P_0x456e_71 && P_0x456e_71_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x456e 71 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_find_format_addr_0x456e_71 ?\<sigma> \<and> block_usage P_0x456e_71_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x456e_71_def P_0x456e_71_regions_def post: Q_bdrv_find_format_addr_0x456e_71_def regionset: P_0x456e_71_regions_set_def)

definition P_0x4573_72 :: state_pred where
  \<open>P_0x4573_72 \<sigma> \<equiv> RIP \<sigma> = 0x4573 \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = RCX\<^sub>0 \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare P_0x4573_72_def[Ps]

definition P_0x4573_72_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4573_72_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4573_72_regions :: state_pred where
  \<open>P_0x4573_72_regions \<sigma> \<equiv> \<exists>regions. P_0x4573_72_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4579_72 :: state_pred where
  \<open>Q_0x4579_72 \<sigma> \<equiv> RIP \<sigma> = 0x4579 \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare Q_0x4579_72_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4573_0x4576_72[blocks]:
  assumes \<open>(P_0x4573_72 && P_0x4573_72_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4576 72 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4579_72 ?\<sigma> \<and> block_usage P_0x4573_72_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4573_72_def P_0x4573_72_regions_def post: Q_0x4579_72_def regionset: P_0x4573_72_regions_set_def)

definition P_0x4579_true_73 :: state_pred where
  \<open>P_0x4579_true_73 \<sigma> \<equiv> RIP \<sigma> = 0x4579 \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare P_0x4579_true_73_def[Ps]

definition P_0x4579_true_73_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4579_true_73_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4579_true_73_regions :: state_pred where
  \<open>P_0x4579_true_73_regions \<sigma> \<equiv> \<exists>regions. P_0x4579_true_73_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x47ac_73 :: state_pred where
  \<open>Q_0x47ac_73 \<sigma> \<equiv> RIP \<sigma> = 0x47ac \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x1d04c \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare Q_0x47ac_73_def[Qs]

schematic_goal bdrv_new_open_0_4_0x4579_0x47aa_73[blocks]:
  assumes \<open>(P_0x4579_true_73 && P_0x4579_true_73_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block 4 0x47aa 73 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x47ac_73 ?\<sigma> \<and> block_usage P_0x4579_true_73_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4579_true_73_def P_0x4579_true_73_regions_def post: Q_0x47ac_73_def regionset: P_0x4579_true_73_regions_set_def)

definition P_0x47ac_74 :: state_pred where
  \<open>P_0x47ac_74 \<sigma> \<equiv> RIP \<sigma> = 0x47ac \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = 0x1d04c \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare P_0x47ac_74_def[Ps]

definition P_0x47ac_74_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x47ac_74_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x47ac_74_regions :: state_pred where
  \<open>P_0x47ac_74_regions \<sigma> \<equiv> \<exists>regions. P_0x47ac_74_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x47ac_74 :: state_pred where
  \<open>Q_error_addr_0x47ac_74 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x47ac_74_def[Qs]

schematic_goal bdrv_new_open_0_1_0x47ac_0x47ac_74[blocks]:
  assumes \<open>(P_0x47ac_74 && P_0x47ac_74_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x47ac 74 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x47ac_74 ?\<sigma> \<and> block_usage P_0x47ac_74_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x47ac_74_def P_0x47ac_74_regions_def post: Q_error_addr_0x47ac_74_def regionset: P_0x47ac_74_regions_set_def)

definition P_0x4579_false_75 :: state_pred where
  \<open>P_0x4579_false_75 \<sigma> \<equiv> RIP \<sigma> = 0x4579 \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDX\<^sub>0 \<and> RDI \<sigma> = RSI\<^sub>0 \<and> RSI \<sigma> = RSI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare P_0x4579_false_75_def[Ps]

definition P_0x4579_false_75_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4579_false_75_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4579_false_75_regions :: state_pred where
  \<open>P_0x4579_false_75_regions \<sigma> \<equiv> \<exists>regions. P_0x4579_false_75_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x458a_75 :: state_pred where
  \<open>Q_0x458a_75 \<sigma> \<equiv> RIP \<sigma> = 0x458a \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare Q_0x458a_75_def[Qs]

schematic_goal bdrv_new_open_0_4_0x4579_0x4587_75[blocks]:
  assumes \<open>(P_0x4579_false_75 && P_0x4579_false_75_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 4 0x4587 75 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x458a_75 ?\<sigma> \<and> block_usage P_0x4579_false_75_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4579_false_75_def P_0x4579_false_75_regions_def post: Q_0x458a_75_def regionset: P_0x4579_false_75_regions_set_def)

definition P_0x458a_76 :: state_pred where
  \<open>P_0x458a_76 \<sigma> \<equiv> RIP \<sigma> = 0x458a \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4573\<close>
declare P_0x458a_76_def[Ps]

definition P_0x458a_76_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x458a_76_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x458a_76_regions :: state_pred where
  \<open>P_0x458a_76_regions \<sigma> \<equiv> \<exists>regions. P_0x458a_76_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_open2_addr_0x458a_76 :: state_pred where
  \<open>Q_bdrv_open2_addr_0x458a_76 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_open2_addr \<and> RAX \<sigma> = bdrv_find_format_0x456e_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_bdrv_open2_addr_0x458a_76_def[Qs]

schematic_goal bdrv_new_open_0_1_0x458a_0x458a_76[blocks]:
  assumes \<open>(P_0x458a_76 && P_0x458a_76_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x458a 76 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_open2_addr_0x458a_76 ?\<sigma> \<and> block_usage P_0x458a_76_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x458a_76_def P_0x458a_76_regions_def post: Q_bdrv_open2_addr_0x458a_76_def regionset: P_0x458a_76_regions_set_def)

definition P_0x458f_77 :: state_pred where
  \<open>P_0x458f_77 \<sigma> \<equiv> RIP \<sigma> = 0x458f \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x458f_77_def[Ps]

definition P_0x458f_77_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x458f_77_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x458f_77_regions :: state_pred where
  \<open>P_0x458f_77_regions \<sigma> \<equiv> \<exists>regions. P_0x458f_77_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4591_77 :: state_pred where
  \<open>Q_0x4591_77 \<sigma> \<equiv> RIP \<sigma> = 0x4591 \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_0x4591_77_def[Qs]

schematic_goal bdrv_new_open_0_1_0x458f_0x458f_77[blocks]:
  assumes \<open>(P_0x458f_77 && P_0x458f_77_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x458f 77 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4591_77 ?\<sigma> \<and> block_usage P_0x458f_77_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x458f_77_def P_0x458f_77_regions_def post: Q_0x4591_77_def regionset: P_0x458f_77_regions_set_def)

definition P_0x4591_true_78 :: state_pred where
  \<open>P_0x4591_true_78 \<sigma> \<equiv> RIP \<sigma> = 0x4591 \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x4591_true_78_def[Ps]

definition P_0x4591_true_78_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4591_true_78_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4591_true_78_regions :: state_pred where
  \<open>P_0x4591_true_78_regions \<sigma> \<equiv> \<exists>regions. P_0x4591_true_78_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4788_78 :: state_pred where
  \<open>Q_0x4788_78 \<sigma> \<equiv> RIP \<sigma> = 0x4788 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = 0x1d065 \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_0x4788_78_def[Qs]

schematic_goal bdrv_new_open_0_4_0x4591_0x4786_78[blocks]:
  assumes \<open>(P_0x4591_true_78 && P_0x4591_true_78_regions && SF) \<sigma>\<close>
  shows \<open>exec_block 4 0x4786 78 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4788_78 ?\<sigma> \<and> block_usage P_0x4591_true_78_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4591_true_78_def P_0x4591_true_78_regions_def post: Q_0x4788_78_def regionset: P_0x4591_true_78_regions_set_def)

definition P_0x4788_79 :: state_pred where
  \<open>P_0x4788_79 \<sigma> \<equiv> RIP \<sigma> = 0x4788 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = 0x1d065 \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x4788_79_def[Ps]

definition P_0x4788_79_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4788_79_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4788_79_regions :: state_pred where
  \<open>P_0x4788_79_regions \<sigma> \<equiv> \<exists>regions. P_0x4788_79_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x4788_79 :: state_pred where
  \<open>Q_error_addr_0x4788_79 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x4788_79_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4788_0x4788_79[blocks]:
  assumes \<open>(P_0x4788_79 && P_0x4788_79_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4788 79 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x4788_79 ?\<sigma> \<and> block_usage P_0x4788_79_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4788_79_def P_0x4788_79_regions_def post: Q_error_addr_0x4788_79_def regionset: P_0x4788_79_regions_set_def)

definition P_0x4591_false_80 :: state_pred where
  \<open>P_0x4591_false_80 \<sigma> \<equiv> RIP \<sigma> = 0x4591 \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x4591_false_80_def[Ps]

definition P_0x4591_false_80_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4591_false_80_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4591_false_80_regions :: state_pred where
  \<open>P_0x4591_false_80_regions \<sigma> \<equiv> \<exists>regions. P_0x4591_false_80_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x459a_80 :: state_pred where
  \<open>Q_0x459a_80 \<sigma> \<equiv> RIP \<sigma> = 0x459a \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare Q_0x459a_80_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4591_0x4597_80[blocks]:
  assumes \<open>(P_0x4591_false_80 && P_0x4591_false_80_regions && ! SF) \<sigma>\<close>
  shows \<open>exec_block 2 0x4597 80 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x459a_80 ?\<sigma> \<and> block_usage P_0x4591_false_80_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4591_false_80_def P_0x4591_false_80_regions_def post: Q_0x459a_80_def regionset: P_0x4591_false_80_regions_set_def)

definition P_0x459a_81 :: state_pred where
  \<open>P_0x459a_81 \<sigma> \<equiv> RIP \<sigma> = 0x459a \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x458f\<close>
declare P_0x459a_81_def[Ps]

definition P_0x459a_81_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x459a_81_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x459a_81_regions :: state_pred where
  \<open>P_0x459a_81_regions \<sigma> \<equiv> \<exists>regions. P_0x459a_81_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_is_encrypted_addr_0x459a_81 :: state_pred where
  \<open>Q_bdrv_is_encrypted_addr_0x459a_81 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_is_encrypted_addr \<and> RAX \<sigma> = bdrv_open2_0x458a_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_bdrv_is_encrypted_addr_0x459a_81_def[Qs]

schematic_goal bdrv_new_open_0_1_0x459a_0x459a_81[blocks]:
  assumes \<open>(P_0x459a_81 && P_0x459a_81_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x459a 81 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_is_encrypted_addr_0x459a_81 ?\<sigma> \<and> block_usage P_0x459a_81_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x459a_81_def P_0x459a_81_regions_def post: Q_bdrv_is_encrypted_addr_0x459a_81_def regionset: P_0x459a_81_regions_set_def)

definition P_0x459f_82 :: state_pred where
  \<open>P_0x459f_82 \<sigma> \<equiv> RIP \<sigma> = 0x459f \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x459f_82_def[Ps]

definition P_0x459f_82_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x459f_82_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x459f_82_regions :: state_pred where
  \<open>P_0x459f_82_regions \<sigma> \<equiv> \<exists>regions. P_0x459f_82_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45a1_82 :: state_pred where
  \<open>Q_0x45a1_82 \<sigma> \<equiv> RIP \<sigma> = 0x45a1 \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x45a1_82_def[Qs]

schematic_goal bdrv_new_open_0_1_0x459f_0x459f_82[blocks]:
  assumes \<open>(P_0x459f_82 && P_0x459f_82_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x459f 82 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45a1_82 ?\<sigma> \<and> block_usage P_0x459f_82_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x459f_82_def P_0x459f_82_regions_def post: Q_0x45a1_82_def regionset: P_0x459f_82_regions_set_def)

definition P_0x45a1_true_83 :: state_pred where
  \<open>P_0x45a1_true_83 \<sigma> \<equiv> RIP \<sigma> = 0x45a1 \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45a1_true_83_def[Ps]

definition P_0x45a1_true_83_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45a1_true_83_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45a1_true_83_regions :: state_pred where
  \<open>P_0x45a1_true_83_regions \<sigma> \<equiv> \<exists>regions. P_0x45a1_true_83_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45ee_83 :: state_pred where
  \<open>Q_0x45ee_83 \<sigma> \<equiv> RIP \<sigma> = 0x45ee \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x45ee_83_def[Qs]

schematic_goal bdrv_new_open_0_8_0x45a1_0x45e9_83[blocks]:
  assumes \<open>(P_0x45a1_true_83 && P_0x45a1_true_83_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block 8 0x45e9 83 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45ee_83 ?\<sigma> \<and> block_usage P_0x45a1_true_83_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45a1_true_83_def P_0x45a1_true_83_regions_def post: Q_0x45ee_83_def regionset: P_0x45a1_true_83_regions_set_def)

definition P_0x45ee_84 :: state_pred where
  \<open>P_0x45ee_84 \<sigma> \<equiv> RIP \<sigma> = 0x45ee \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45ee_84_def[Ps]

definition P_0x45ee_84_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45ee_84_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45ee_84_regions :: state_pred where
  \<open>P_0x45ee_84_regions \<sigma> \<equiv> \<exists>regions. P_0x45ee_84_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_printf_chk_addr_0x45ee_84 :: state_pred where
  \<open>Q_printf_chk_addr_0x45ee_84 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = printf_chk_addr \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare Q_printf_chk_addr_0x45ee_84_def[Qs]

schematic_goal bdrv_new_open_0_1_0x45ee_0x45ee_84[blocks]:
  assumes \<open>(P_0x45ee_84 && P_0x45ee_84_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x45ee 84 \<sigma> \<triangleq> ?\<sigma> \<and> Q_printf_chk_addr_0x45ee_84 ?\<sigma> \<and> block_usage P_0x45ee_84_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45ee_84_def P_0x45ee_84_regions_def post: Q_printf_chk_addr_0x45ee_84_def regionset: P_0x45ee_84_regions_set_def)

definition P_0x45f3_85 :: state_pred where
  \<open>P_0x45f3_85 \<sigma> \<equiv> RIP \<sigma> = 0x45f3 \<and> RAX \<sigma> = printf_chk_0x45ee_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1daa8 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare P_0x45f3_85_def[Ps]

definition P_0x45f3_85_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45f3_85_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45f3_85_regions :: state_pred where
  \<open>P_0x45f3_85_regions \<sigma> \<equiv> \<exists>regions. P_0x45f3_85_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4601_85 :: state_pred where
  \<open>Q_0x4601_85 \<sigma> \<equiv> RIP \<sigma> = 0x4601 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare Q_0x4601_85_def[Qs]

schematic_goal bdrv_new_open_0_3_0x45f3_0x45ff_85[blocks]:
  assumes \<open>(P_0x45f3_85 && P_0x45f3_85_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x45ff 85 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4601_85 ?\<sigma> \<and> block_usage P_0x45f3_85_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45f3_85_def P_0x45f3_85_regions_def post: Q_0x4601_85_def regionset: P_0x45f3_85_regions_set_def)

definition P_0x4601_86 :: state_pred where
  \<open>P_0x4601_86 \<sigma> \<equiv> RIP \<sigma> = 0x4601 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x45f3\<close>
declare P_0x4601_86_def[Ps]

definition P_0x4601_86_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4601_86_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4601_86_regions :: state_pred where
  \<open>P_0x4601_86_regions \<sigma> \<equiv> \<exists>regions. P_0x4601_86_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_printf_chk_addr_0x4601_86 :: state_pred where
  \<open>Q_printf_chk_addr_0x4601_86 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = printf_chk_addr \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare Q_printf_chk_addr_0x4601_86_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4601_0x4601_86[blocks]:
  assumes \<open>(P_0x4601_86 && P_0x4601_86_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4601 86 \<sigma> \<triangleq> ?\<sigma> \<and> Q_printf_chk_addr_0x4601_86 ?\<sigma> \<and> block_usage P_0x4601_86_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4601_86_def P_0x4601_86_regions_def post: Q_printf_chk_addr_0x4601_86_def regionset: P_0x4601_86_regions_set_def)

definition P_0x4606_87 :: state_pred where
  \<open>P_0x4606_87 \<sigma> \<equiv> RIP \<sigma> = 0x4606 \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x1 \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare P_0x4606_87_def[Ps]

definition P_0x4606_87_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4606_87_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4606_87_regions :: state_pred where
  \<open>P_0x4606_87_regions \<sigma> \<equiv> \<exists>regions. P_0x4606_87_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4612_87 :: state_pred where
  \<open>Q_0x4612_87 \<sigma> \<equiv> RIP \<sigma> = 0x4612 \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare Q_0x4612_87_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4606_0x460d_87[blocks]:
  assumes \<open>(P_0x4606_87 && P_0x4606_87_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x460d 87 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4612_87 ?\<sigma> \<and> block_usage P_0x4606_87_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4606_87_def P_0x4606_87_regions_def post: Q_0x4612_87_def regionset: P_0x4606_87_regions_set_def)

definition P_0x4612_88 :: state_pred where
  \<open>P_0x4612_88 \<sigma> \<equiv> RIP \<sigma> = 0x4612 \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4606\<close>
declare P_0x4612_88_def[Ps]

definition P_0x4612_88_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4612_88_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4612_88_regions :: state_pred where
  \<open>P_0x4612_88_regions \<sigma> \<equiv> \<exists>regions. P_0x4612_88_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_fflush_addr_0x4612_88 :: state_pred where
  \<open>Q_fflush_addr_0x4612_88 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = fflush_addr \<and> RAX \<sigma> = printf_chk_0x4601_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare Q_fflush_addr_0x4612_88_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4612_0x4612_88[blocks]:
  assumes \<open>(P_0x4612_88 && P_0x4612_88_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4612 88 \<sigma> \<triangleq> ?\<sigma> \<and> Q_fflush_addr_0x4612_88 ?\<sigma> \<and> block_usage P_0x4612_88_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4612_88_def P_0x4612_88_regions_def post: Q_fflush_addr_0x4612_88_def regionset: P_0x4612_88_regions_set_def)

definition P_0x4617_89 :: state_pred where
  \<open>P_0x4617_89 \<sigma> \<equiv> RIP \<sigma> = 0x4617 \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> RSI \<sigma> = 0x1d0a3 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare P_0x4617_89_def[Ps]

definition P_0x4617_89_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4617_89_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4617_89_regions :: state_pred where
  \<open>P_0x4617_89_regions \<sigma> \<equiv> \<exists>regions. P_0x4617_89_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x461c_89 :: state_pred where
  \<open>Q_0x461c_89 \<sigma> \<equiv> RIP \<sigma> = 0x461c \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare Q_0x461c_89_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4617_0x461a_89[blocks]:
  assumes \<open>(P_0x4617_89 && P_0x4617_89_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x461a 89 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x461c_89 ?\<sigma> \<and> block_usage P_0x4617_89_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4617_89_def P_0x4617_89_regions_def post: Q_0x461c_89_def regionset: P_0x4617_89_regions_set_def)

definition P_0x461c_90 :: state_pred where
  \<open>P_0x461c_90 \<sigma> \<equiv> RIP \<sigma> = 0x461c \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4617\<close>
declare P_0x461c_90_def[Ps]

definition P_0x461c_90_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x461c_90_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, RSP\<^sub>0, 8),
    (2, ((FS\<^sub>0::64 word) + 0x28), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x461c_90_regions :: state_pred where
  \<open>P_0x461c_90_regions \<sigma> \<equiv> \<exists>regions. P_0x461c_90_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcgetattr_addr_0x461c_90 :: state_pred where
  \<open>Q_tcgetattr_addr_0x461c_90 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcgetattr_addr \<and> RAX \<sigma> = fflush_0x4612_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare Q_tcgetattr_addr_0x461c_90_def[Qs]

schematic_goal bdrv_new_open_0_1_0x461c_0x461c_90[blocks]:
  assumes \<open>(P_0x461c_90 && P_0x461c_90_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x461c 90 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcgetattr_addr_0x461c_90 ?\<sigma> \<and> block_usage P_0x461c_90_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x461c_90_def P_0x461c_90_regions_def post: Q_tcgetattr_addr_0x461c_90_def regionset: P_0x461c_90_regions_set_def)

definition P_0x4621_91 :: state_pred where
  \<open>P_0x4621_91 \<sigma> \<equiv> RIP \<sigma> = 0x4621 \<and> RAX \<sigma> = tcgetattr_0x461c_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = RDI\<^sub>0 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare P_0x4621_91_def[Ps]

definition P_0x4621_91_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4621_91_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a320, 8),
    (2, 0x2a328, 8),
    (3, 0x2a330, 8),
    (4, 0x2a338, 8),
    (5, 0x2a340, 8),
    (6, 0x2a348, 8),
    (7, 0x2a350, 8),
    (8, 0x2a358, 4),
    (9, RSP\<^sub>0, 8),
    (10, ((FS\<^sub>0::64 word) + 0x28), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (19, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (20, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (21, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (22, ((RSP\<^sub>0::64 word) - 0x170), 8),
    (23, ((RSP\<^sub>0::64 word) - 0x172), 2),
    (24, ((RSP\<^sub>0::64 word) - 0x178), 8),
    (25, ((RSP\<^sub>0::64 word) - 0x17c), 4),
    (26, ((RSP\<^sub>0::64 word) - 0x180), 4),
    (27, ((RSP\<^sub>0::64 word) - 0x180), 8),
    (28, ((RSP\<^sub>0::64 word) - 0x184), 4),
    (29, ((RSP\<^sub>0::64 word) - 0x188), 4),
    (30, ((RSP\<^sub>0::64 word) - 0x188), 8),
    (31, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4621_91_regions :: state_pred where
  \<open>P_0x4621_91_regions \<sigma> \<equiv> \<exists>regions. P_0x4621_91_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {(23,24), (25,27), (26,27), (28,30), (29,30)}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {(23,24), (24,23), (25,27), (26,27), (27,25), (27,26), (28,30), (29,30), (30,28), (30,29)}))
\<close>

definition Q_0x4696_91 :: state_pred where
  \<open>Q_0x4696_91 \<sigma> \<equiv> RIP \<sigma> = 0x4696 \<and> RAX \<sigma> = 0x100 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare Q_0x4696_91_def[Qs]

schematic_goal bdrv_new_open_0_23_0x4621_0x4691_91[blocks]:
  assumes \<open>(P_0x4621_91 && P_0x4621_91_regions) \<sigma>\<close>
  shows \<open>exec_block 23 0x4691 91 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4696_91 ?\<sigma> \<and> block_usage P_0x4621_91_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4621_91_def P_0x4621_91_regions_def post: Q_0x4696_91_def regionset: P_0x4621_91_regions_set_def)

definition P_0x4696_92 :: state_pred where
  \<open>P_0x4696_92 \<sigma> \<equiv> RIP \<sigma> = 0x4696 \<and> RAX \<sigma> = 0x100 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4621\<close>
declare P_0x4696_92_def[Ps]

definition P_0x4696_92_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4696_92_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4696_92_regions :: state_pred where
  \<open>P_0x4696_92_regions \<sigma> \<equiv> \<exists>regions. P_0x4696_92_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcsetattr_addr_0x4696_92 :: state_pred where
  \<open>Q_tcsetattr_addr_0x4696_92 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcsetattr_addr \<and> RAX \<sigma> = 0x100 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare Q_tcsetattr_addr_0x4696_92_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4696_0x4696_92[blocks]:
  assumes \<open>(P_0x4696_92 && P_0x4696_92_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4696 92 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcsetattr_addr_0x4696_92 ?\<sigma> \<and> block_usage P_0x4696_92_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4696_92_def P_0x4696_92_regions_def post: Q_tcsetattr_addr_0x4696_92_def regionset: P_0x4696_92_regions_set_def)

definition P_0x469b_93 :: state_pred where
  \<open>P_0x469b_93 \<sigma> \<equiv> RIP \<sigma> = 0x469b \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare P_0x469b_93_def[Ps]

definition P_0x469b_93_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x469b_93_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x469b_93_regions :: state_pred where
  \<open>P_0x469b_93_regions \<sigma> \<equiv> \<exists>regions. P_0x469b_93_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46a2_93 :: state_pred where
  \<open>Q_0x46a2_93 \<sigma> \<equiv> RIP \<sigma> = 0x46a2 \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare Q_0x46a2_93_def[Qs]

schematic_goal bdrv_new_open_0_1_0x469b_0x469b_93[blocks]:
  assumes \<open>(P_0x469b_93 && P_0x469b_93_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x469b 93 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46a2_93 ?\<sigma> \<and> block_usage P_0x469b_93_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x469b_93_def P_0x469b_93_regions_def post: Q_0x46a2_93_def regionset: P_0x469b_93_regions_set_def)

definition P_0x46a2_94 :: state_pred where
  \<open>P_0x46a2_94 \<sigma> \<equiv> RIP \<sigma> = 0x46a2 \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x469b\<close>
declare P_0x46a2_94_def[Ps]

definition P_0x46a2_94_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46a2_94_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46a2_94_regions :: state_pred where
  \<open>P_0x46a2_94_regions \<sigma> \<equiv> \<exists>regions. P_0x46a2_94_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_atexit_addr_0x46a2_94 :: state_pred where
  \<open>Q_atexit_addr_0x46a2_94 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = atexit_addr \<and> RAX \<sigma> = tcsetattr_0x4696_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46a7\<close>
declare Q_atexit_addr_0x46a2_94_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46a2_0x46a2_94[blocks]:
  assumes \<open>(P_0x46a2_94 && P_0x46a2_94_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46a2 94 \<sigma> \<triangleq> ?\<sigma> \<and> Q_atexit_addr_0x46a2_94 ?\<sigma> \<and> block_usage P_0x46a2_94_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46a2_94_def P_0x46a2_94_regions_def post: Q_atexit_addr_0x46a2_94_def regionset: P_0x46a2_94_regions_set_def)

definition P_0x46a7_95 :: state_pred where
  \<open>P_0x46a7_95 \<sigma> \<equiv> RIP \<sigma> = 0x46a7 \<and> RAX \<sigma> = atexit_0x46a2_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = ((RSP\<^sub>0::64 word) - 0x188) \<and> RDI \<sigma> = 0x3d70 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R13 \<sigma> = 0x0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46a7\<close>
declare P_0x46a7_95_def[Ps]

definition P_0x46a7_95_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46a7_95_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46a7_95_regions :: state_pred where
  \<open>P_0x46a7_95_regions \<sigma> \<equiv> \<exists>regions. P_0x46a7_95_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_95 :: state_pred where
  \<open>Q_0x46b0_95 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46b0_95_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46a7_0x46a7_95[blocks]:
  assumes \<open>(P_0x46a7_95 && P_0x46a7_95_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46a7 95 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_95 ?\<sigma> \<and> block_usage P_0x46a7_95_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46a7_95_def P_0x46a7_95_regions_def post: Q_0x46b0_95_def regionset: P_0x46a7_95_regions_set_def)

definition P_0x46b0_96 :: state_pred where
  \<open>P_0x46b0_96 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46b0_96_def[Ps]

definition P_0x46b0_96_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46b0_96_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x46b0_96_regions :: state_pred where
  \<open>P_0x46b0_96_regions \<sigma> \<equiv> \<exists>regions. P_0x46b0_96_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46be_96 :: state_pred where
  \<open>Q_0x46be_96 \<sigma> \<equiv> RIP \<sigma> = 0x46be \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46be_96_def[Qs]

schematic_goal bdrv_new_open_0_4_0x46b0_0x46bc_96[blocks]:
  assumes \<open>(P_0x46b0_96 && P_0x46b0_96_regions) \<sigma>\<close>
  shows \<open>exec_block 4 0x46bc 96 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46be_96 ?\<sigma> \<and> block_usage P_0x46b0_96_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46b0_96_def P_0x46b0_96_regions_def post: Q_0x46be_96_def regionset: P_0x46b0_96_regions_set_def)

definition P_0x46be_97 :: state_pred where
  \<open>P_0x46be_97 \<sigma> \<equiv> RIP \<sigma> = 0x46be \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46be_97_def[Ps]

definition P_0x46be_97_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46be_97_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46be_97_regions :: state_pred where
  \<open>P_0x46be_97_regions \<sigma> \<equiv> \<exists>regions. P_0x46be_97_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_read_addr_0x46be_97 :: state_pred where
  \<open>Q_read_addr_0x46be_97 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = read_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_read_addr_0x46be_97_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46be_0x46be_97[blocks]:
  assumes \<open>(P_0x46be_97 && P_0x46be_97_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46be 97 \<sigma> \<triangleq> ?\<sigma> \<and> Q_read_addr_0x46be_97 ?\<sigma> \<and> block_usage P_0x46be_97_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46be_97_def P_0x46be_97_regions_def post: Q_read_addr_0x46be_97_def regionset: P_0x46be_97_regions_set_def)

definition P_0x46c3_98 :: state_pred where
  \<open>P_0x46c3_98 \<sigma> \<equiv> RIP \<sigma> = 0x46c3 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46c3_98_def[Ps]

definition P_0x46c3_98_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46c3_98_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46c3_98_regions :: state_pred where
  \<open>P_0x46c3_98_regions \<sigma> \<equiv> \<exists>regions. P_0x46c3_98_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46c6_98 :: state_pred where
  \<open>Q_0x46c6_98 \<sigma> \<equiv> RIP \<sigma> = 0x46c6 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46c6_98_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46c3_0x46c3_98[blocks]:
  assumes \<open>(P_0x46c3_98 && P_0x46c3_98_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46c3 98 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46c6_98 ?\<sigma> \<and> block_usage P_0x46c3_98_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46c3_98_def P_0x46c3_98_regions_def post: Q_0x46c6_98_def regionset: P_0x46c3_98_regions_set_def)

definition P_0x46c6_true_99 :: state_pred where
  \<open>P_0x46c6_true_99 \<sigma> \<equiv> RIP \<sigma> = 0x46c6 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46c6_true_99_def[Ps]

definition P_0x46c6_true_99_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46c6_true_99_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46c6_true_99_regions :: state_pred where
  \<open>P_0x46c6_true_99_regions \<sigma> \<equiv> \<exists>regions. P_0x46c6_true_99_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46f0_99 :: state_pred where
  \<open>Q_0x46f0_99 \<sigma> \<equiv> RIP \<sigma> = 0x46f0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46f0_99_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46c6_0x46c6_99[blocks]:
  assumes \<open>(P_0x46c6_true_99 && P_0x46c6_true_99_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46c6 99 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46f0_99 ?\<sigma> \<and> block_usage P_0x46c6_true_99_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46c6_true_99_def P_0x46c6_true_99_regions_def post: Q_0x46f0_99_def regionset: P_0x46c6_true_99_regions_set_def)

definition P_0x46f0_100 :: state_pred where
  \<open>P_0x46f0_100 \<sigma> \<equiv> RIP \<sigma> = 0x46f0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46f0_100_def[Ps]

definition P_0x46f0_100_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46f0_100_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46f0_100_regions :: state_pred where
  \<open>P_0x46f0_100_regions \<sigma> \<equiv> \<exists>regions. P_0x46f0_100_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_errno_location_addr_0x46f0_100 :: state_pred where
  \<open>Q_errno_location_addr_0x46f0_100 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = errno_location_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_errno_location_addr_0x46f0_100_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46f0_0x46f0_100[blocks]:
  assumes \<open>(P_0x46f0_100 && P_0x46f0_100_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46f0 100 \<sigma> \<triangleq> ?\<sigma> \<and> Q_errno_location_addr_0x46f0_100 ?\<sigma> \<and> block_usage P_0x46f0_100_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46f0_100_def P_0x46f0_100_regions_def post: Q_errno_location_addr_0x46f0_100_def regionset: P_0x46f0_100_regions_set_def)

definition P_0x46f5_101 :: state_pred where
  \<open>P_0x46f5_101 \<sigma> \<equiv> RIP \<sigma> = 0x46f5 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46f5_101_def[Ps]

definition P_0x46f5_101_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46f5_101_regions_set \<sigma> \<equiv> {
    (0, RAX \<sigma>, 4),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46f5_101_regions :: state_pred where
  \<open>P_0x46f5_101_regions \<sigma> \<equiv> \<exists>regions. P_0x46f5_101_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46fa_101 :: state_pred where
  \<open>Q_0x46fa_101 \<sigma> \<equiv> RIP \<sigma> = 0x46fa \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_0x46fa_101_def[Qs]

schematic_goal bdrv_new_open_0_2_0x46f5_0x46f7_101[blocks]:
  assumes \<open>(P_0x46f5_101 && P_0x46f5_101_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x46f7 101 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46fa_101 ?\<sigma> \<and> block_usage P_0x46f5_101_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46f5_101_def P_0x46f5_101_regions_def post: Q_0x46fa_101_def regionset: P_0x46f5_101_regions_set_def)

definition P_0x46fa_true_102 :: state_pred where
  \<open>P_0x46fa_true_102 \<sigma> \<equiv> RIP \<sigma> = 0x46fa \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46fa_true_102_def[Ps]

definition P_0x46fa_true_102_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46fa_true_102_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46fa_true_102_regions :: state_pred where
  \<open>P_0x46fa_true_102_regions \<sigma> \<equiv> \<exists>regions. P_0x46fa_true_102_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_102 :: state_pred where
  \<open>Q_0x46b0_102 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_0x46b0_102_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46fa_0x46fa_102[blocks]:
  assumes \<open>(P_0x46fa_true_102 && P_0x46fa_true_102_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46fa 102 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_102 ?\<sigma> \<and> block_usage P_0x46fa_true_102_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46fa_true_102_def P_0x46fa_true_102_regions_def post: Q_0x46b0_102_def regionset: P_0x46fa_true_102_regions_set_def)

definition P_0x46fa_false_103 :: state_pred where
  \<open>P_0x46fa_false_103 \<sigma> \<equiv> RIP \<sigma> = 0x46fa \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46fa_false_103_def[Ps]

definition P_0x46fa_false_103_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46fa_false_103_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46fa_false_103_regions :: state_pred where
  \<open>P_0x46fa_false_103_regions \<sigma> \<equiv> \<exists>regions. P_0x46fa_false_103_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46fc_103 :: state_pred where
  \<open>Q_0x46fc_103 \<sigma> \<equiv> RIP \<sigma> = 0x46fc \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare Q_0x46fc_103_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46fa_0x46fa_103[blocks]:
  assumes \<open>(P_0x46fa_false_103 && P_0x46fa_false_103_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46fa 103 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46fc_103 ?\<sigma> \<and> block_usage P_0x46fa_false_103_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46fa_false_103_def P_0x46fa_false_103_regions_def post: Q_0x46fc_103_def regionset: P_0x46fa_false_103_regions_set_def)

definition P_0x46fc_104 :: state_pred where
  \<open>P_0x46fc_104 \<sigma> \<equiv> RIP \<sigma> = 0x46fc \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46f5\<close>
declare P_0x46fc_104_def[Ps]

definition P_0x46fc_104_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46fc_104_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46fc_104_regions :: state_pred where
  \<open>P_0x46fc_104_regions \<sigma> \<equiv> \<exists>regions. P_0x46fc_104_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46ff_104 :: state_pred where
  \<open>Q_0x46ff_104 \<sigma> \<equiv> RIP \<sigma> = 0x46ff \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46ff_104_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46fc_0x46fc_104[blocks]:
  assumes \<open>(P_0x46fc_104 && P_0x46fc_104_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46fc 104 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46ff_104 ?\<sigma> \<and> block_usage P_0x46fc_104_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46fc_104_def P_0x46fc_104_regions_def post: Q_0x46ff_104_def regionset: P_0x46fc_104_regions_set_def)

definition P_0x46ff_true_105 :: state_pred where
  \<open>P_0x46ff_true_105 \<sigma> \<equiv> RIP \<sigma> = 0x46ff \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46ff_true_105_def[Ps]

definition P_0x46ff_true_105_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ff_true_105_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x46ff_true_105_regions :: state_pred where
  \<open>P_0x46ff_true_105_regions \<sigma> \<equiv> \<exists>regions. P_0x46ff_true_105_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_105 :: state_pred where
  \<open>Q_0x46b0_105 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46b0_105_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46ff_0x46ff_105[blocks]:
  assumes \<open>(P_0x46ff_true_105 && P_0x46ff_true_105_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46ff 105 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_105 ?\<sigma> \<and> block_usage P_0x46ff_true_105_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ff_true_105_def P_0x46ff_true_105_regions_def post: Q_0x46b0_105_def regionset: P_0x46ff_true_105_regions_set_def)

definition P_0x46ff_false_106 :: state_pred where
  \<open>P_0x46ff_false_106 \<sigma> \<equiv> RIP \<sigma> = 0x46ff \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x46ff_false_106_def[Ps]

definition P_0x46ff_false_106_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ff_false_106_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x46ff_false_106_regions :: state_pred where
  \<open>P_0x46ff_false_106_regions \<sigma> \<equiv> \<exists>regions. P_0x46ff_false_106_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4701_106 :: state_pred where
  \<open>Q_0x4701_106 \<sigma> \<equiv> RIP \<sigma> = 0x4701 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x4701_106_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46ff_0x46ff_106[blocks]:
  assumes \<open>(P_0x46ff_false_106 && P_0x46ff_false_106_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46ff 106 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4701_106 ?\<sigma> \<and> block_usage P_0x46ff_false_106_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ff_false_106_def P_0x46ff_false_106_regions_def post: Q_0x4701_106_def regionset: P_0x46ff_false_106_regions_set_def)

definition P_0x46c6_false_107 :: state_pred where
  \<open>P_0x46c6_false_107 \<sigma> \<equiv> RIP \<sigma> = 0x46c6 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46c6_false_107_def[Ps]

definition P_0x46c6_false_107_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46c6_false_107_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46c6_false_107_regions :: state_pred where
  \<open>P_0x46c6_false_107_regions \<sigma> \<equiv> \<exists>regions. P_0x46c6_false_107_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46ca_107 :: state_pred where
  \<open>Q_0x46ca_107 \<sigma> \<equiv> RIP \<sigma> = 0x46ca \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46ca_107_def[Qs]

schematic_goal bdrv_new_open_0_2_0x46c6_0x46c8_107[blocks]:
  assumes \<open>(P_0x46c6_false_107 && P_0x46c6_false_107_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x46c8 107 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46ca_107 ?\<sigma> \<and> block_usage P_0x46c6_false_107_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46c6_false_107_def P_0x46c6_false_107_regions_def post: Q_0x46ca_107_def regionset: P_0x46c6_false_107_regions_set_def)

definition P_0x46ca_true_108 :: state_pred where
  \<open>P_0x46ca_true_108 \<sigma> \<equiv> RIP \<sigma> = 0x46ca \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46ca_true_108_def[Ps]

definition P_0x46ca_true_108_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ca_true_108_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46ca_true_108_regions :: state_pred where
  \<open>P_0x46ca_true_108_regions \<sigma> \<equiv> \<exists>regions. P_0x46ca_true_108_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4701_108 :: state_pred where
  \<open>Q_0x4701_108 \<sigma> \<equiv> RIP \<sigma> = 0x4701 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x4701_108_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46ca_0x46ca_108[blocks]:
  assumes \<open>(P_0x46ca_true_108 && P_0x46ca_true_108_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46ca 108 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4701_108 ?\<sigma> \<and> block_usage P_0x46ca_true_108_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ca_true_108_def P_0x46ca_true_108_regions_def post: Q_0x4701_108_def regionset: P_0x46ca_true_108_regions_set_def)

definition P_0x46ca_false_109 :: state_pred where
  \<open>P_0x46ca_false_109 \<sigma> \<equiv> RIP \<sigma> = 0x46ca \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46ca_false_109_def[Ps]

definition P_0x46ca_false_109_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46ca_false_109_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46ca_false_109_regions :: state_pred where
  \<open>P_0x46ca_false_109_regions \<sigma> \<equiv> \<exists>regions. P_0x46ca_false_109_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46d3_109 :: state_pred where
  \<open>Q_0x46d3_109 \<sigma> \<equiv> RIP \<sigma> = 0x46d3 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46d3_109_def[Qs]

schematic_goal bdrv_new_open_0_3_0x46ca_0x46d1_109[blocks]:
  assumes \<open>(P_0x46ca_false_109 && P_0x46ca_false_109_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 3 0x46d1 109 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46d3_109 ?\<sigma> \<and> block_usage P_0x46ca_false_109_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46ca_false_109_def P_0x46ca_false_109_regions_def post: Q_0x46d3_109_def regionset: P_0x46ca_false_109_regions_set_def)

definition P_0x46d3_true_110 :: state_pred where
  \<open>P_0x46d3_true_110 \<sigma> \<equiv> RIP \<sigma> = 0x46d3 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46d3_true_110_def[Ps]

definition P_0x46d3_true_110_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46d3_true_110_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46d3_true_110_regions :: state_pred where
  \<open>P_0x46d3_true_110_regions \<sigma> \<equiv> \<exists>regions. P_0x46d3_true_110_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4730_110 :: state_pred where
  \<open>Q_0x4730_110 \<sigma> \<equiv> RIP \<sigma> = 0x4730 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x4730_110_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46d3_0x46d3_110[blocks]:
  assumes \<open>(P_0x46d3_true_110 && P_0x46d3_true_110_regions && ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46d3 110 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4730_110 ?\<sigma> \<and> block_usage P_0x46d3_true_110_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46d3_true_110_def P_0x46d3_true_110_regions_def post: Q_0x4730_110_def regionset: P_0x46d3_true_110_regions_set_def)

definition P_0x46d3_false_111 :: state_pred where
  \<open>P_0x46d3_false_111 \<sigma> \<equiv> RIP \<sigma> = 0x46d3 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46d3_false_111_def[Ps]

definition P_0x46d3_false_111_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46d3_false_111_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46d3_false_111_regions :: state_pred where
  \<open>P_0x46d3_false_111_regions \<sigma> \<equiv> \<exists>regions. P_0x46d3_false_111_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46db_111 :: state_pred where
  \<open>Q_0x46db_111 \<sigma> \<equiv> RIP \<sigma> = 0x46db \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46db_111_def[Qs]

schematic_goal bdrv_new_open_0_2_0x46d3_0x46d5_111[blocks]:
  assumes \<open>(P_0x46d3_false_111 && P_0x46d3_false_111_regions && ! ZF) \<sigma>\<close>
  shows \<open>exec_block 2 0x46d5 111 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46db_111 ?\<sigma> \<and> block_usage P_0x46d3_false_111_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46d3_false_111_def P_0x46d3_false_111_regions_def post: Q_0x46db_111_def regionset: P_0x46d3_false_111_regions_set_def)

definition P_0x46db_true_112 :: state_pred where
  \<open>P_0x46db_true_112 \<sigma> \<equiv> RIP \<sigma> = 0x46db \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46db_true_112_def[Ps]

definition P_0x46db_true_112_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46db_true_112_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46db_true_112_regions :: state_pred where
  \<open>P_0x46db_true_112_regions \<sigma> \<equiv> \<exists>regions. P_0x46db_true_112_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_112 :: state_pred where
  \<open>Q_0x46b0_112 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46b0_112_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46db_0x46db_112[blocks]:
  assumes \<open>(P_0x46db_true_112 && P_0x46db_true_112_regions && jg) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46db 112 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_112 ?\<sigma> \<and> block_usage P_0x46db_true_112_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46db_true_112_def P_0x46db_true_112_regions_def post: Q_0x46b0_112_def regionset: P_0x46db_true_112_regions_set_def)

definition P_0x46db_false_113 :: state_pred where
  \<open>P_0x46db_false_113 \<sigma> \<equiv> RIP \<sigma> = 0x46db \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46db_false_113_def[Ps]

definition P_0x46db_false_113_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46db_false_113_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x46db_false_113_regions :: state_pred where
  \<open>P_0x46db_false_113_regions \<sigma> \<equiv> \<exists>regions. P_0x46db_false_113_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46dd_113 :: state_pred where
  \<open>Q_0x46dd_113 \<sigma> \<equiv> RIP \<sigma> = 0x46dd \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare Q_0x46dd_113_def[Qs]

schematic_goal bdrv_new_open_0_1_0x46db_0x46db_113[blocks]:
  assumes \<open>(P_0x46db_false_113 && P_0x46db_false_113_regions && ! jg) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x46db 113 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46dd_113 ?\<sigma> \<and> block_usage P_0x46db_false_113_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46db_false_113_def P_0x46db_false_113_regions_def post: Q_0x46dd_113_def regionset: P_0x46db_false_113_regions_set_def)

definition P_0x46dd_114 :: state_pred where
  \<open>P_0x46dd_114 \<sigma> \<equiv> RIP \<sigma> = 0x46dd \<and> RAX \<sigma> = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x1 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R12 \<sigma> = ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x189),1]::8 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x46c3\<close>
declare P_0x46dd_114_def[Ps]

definition P_0x46dd_114_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x46dd_114_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x189), Suc 0),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8),
    (20, ((((RSP\<^sub>0::64 word) + (\<langle>63,0\<rangle>((R13 \<sigma>::64 word) * 0x1)::64 word))::64 word) - 0x148), Suc 0)
  }\<close>

definition P_0x46dd_114_regions :: state_pred where
  \<open>P_0x46dd_114_regions \<sigma> \<equiv> \<exists>regions. P_0x46dd_114_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x46b0_114 :: state_pred where
  \<open>Q_0x46b0_114 \<sigma> \<equiv> RIP \<sigma> = 0x46b0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x46b0_114_def[Qs]

schematic_goal bdrv_new_open_0_4_0x46dd_0x46e7_114[blocks]:
  assumes \<open>(P_0x46dd_114 && P_0x46dd_114_regions) \<sigma>\<close>
  shows \<open>exec_block 4 0x46e7 114 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x46b0_114 ?\<sigma> \<and> block_usage P_0x46dd_114_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x46dd_114_def P_0x46dd_114_regions_def post: Q_0x46b0_114_def regionset: P_0x46dd_114_regions_set_def)

definition P_0x4730_115 :: state_pred where
  \<open>P_0x4730_115 \<sigma> \<equiv> RIP \<sigma> = 0x4730 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x4730_115_def[Ps]

definition P_0x4730_115_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4730_115_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x4730_115_regions :: state_pred where
  \<open>P_0x4730_115_regions \<sigma> \<equiv> \<exists>regions. P_0x4730_115_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x473b_115 :: state_pred where
  \<open>Q_0x473b_115 \<sigma> \<equiv> RIP \<sigma> = 0x473b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x473b_115_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4730_0x4734_115[blocks]:
  assumes \<open>(P_0x4730_115 && P_0x4730_115_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x4734 115 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x473b_115 ?\<sigma> \<and> block_usage P_0x4730_115_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4730_115_def P_0x4730_115_regions_def post: Q_0x473b_115_def regionset: P_0x4730_115_regions_set_def)

definition P_0x473b_116 :: state_pred where
  \<open>P_0x473b_116 \<sigma> \<equiv> RIP \<sigma> = 0x473b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x473b_116_def[Ps]

definition P_0x473b_116_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x473b_116_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x473b_116_regions :: state_pred where
  \<open>P_0x473b_116_regions \<sigma> \<equiv> \<exists>regions. P_0x473b_116_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcsetattr_addr_0x473b_116 :: state_pred where
  \<open>Q_tcsetattr_addr_0x473b_116 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcsetattr_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare Q_tcsetattr_addr_0x473b_116_def[Qs]

schematic_goal bdrv_new_open_0_1_0x473b_0x473b_116[blocks]:
  assumes \<open>(P_0x473b_116 && P_0x473b_116_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x473b 116 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcsetattr_addr_0x473b_116 ?\<sigma> \<and> block_usage P_0x473b_116_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x473b_116_def P_0x473b_116_regions_def post: Q_tcsetattr_addr_0x473b_116_def regionset: P_0x473b_116_regions_set_def)

definition P_0x4740_117 :: state_pred where
  \<open>P_0x4740_117 \<sigma> \<equiv> RIP \<sigma> = 0x4740 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare P_0x4740_117_def[Ps]

definition P_0x4740_117_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4740_117_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4740_117_regions :: state_pred where
  \<open>P_0x4740_117_regions \<sigma> \<equiv> \<exists>regions. P_0x4740_117_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x474a_117 :: state_pred where
  \<open>Q_0x474a_117 \<sigma> \<equiv> RIP \<sigma> = 0x474a \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare Q_0x474a_117_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4740_0x4745_117[blocks]:
  assumes \<open>(P_0x4740_117 && P_0x4740_117_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4745 117 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x474a_117 ?\<sigma> \<and> block_usage P_0x4740_117_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4740_117_def P_0x4740_117_regions_def post: Q_0x474a_117_def regionset: P_0x4740_117_regions_set_def)

definition P_0x474a_118 :: state_pred where
  \<open>P_0x474a_118 \<sigma> \<equiv> RIP \<sigma> = 0x474a \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4740\<close>
declare P_0x474a_118_def[Ps]

definition P_0x474a_118_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x474a_118_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x474a_118_regions :: state_pred where
  \<open>P_0x474a_118_regions \<sigma> \<equiv> \<exists>regions. P_0x474a_118_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_putchar_addr_0x474a_118 :: state_pred where
  \<open>Q_putchar_addr_0x474a_118 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = putchar_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare Q_putchar_addr_0x474a_118_def[Qs]

schematic_goal bdrv_new_open_0_1_0x474a_0x474a_118[blocks]:
  assumes \<open>(P_0x474a_118 && P_0x474a_118_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x474a 118 \<sigma> \<triangleq> ?\<sigma> \<and> Q_putchar_addr_0x474a_118 ?\<sigma> \<and> block_usage P_0x474a_118_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x474a_118_def P_0x474a_118_regions_def post: Q_putchar_addr_0x474a_118_def regionset: P_0x474a_118_regions_set_def)

definition P_0x474f_119 :: state_pred where
  \<open>P_0x474f_119 \<sigma> \<equiv> RIP \<sigma> = 0x474f \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare P_0x474f_119_def[Ps]

definition P_0x474f_119_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x474f_119_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x474f_119_regions :: state_pred where
  \<open>P_0x474f_119_regions \<sigma> \<equiv> \<exists>regions. P_0x474f_119_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4755_119 :: state_pred where
  \<open>Q_0x4755_119 \<sigma> \<equiv> RIP \<sigma> = 0x4755 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare Q_0x4755_119_def[Qs]

schematic_goal bdrv_new_open_0_2_0x474f_0x4752_119[blocks]:
  assumes \<open>(P_0x474f_119 && P_0x474f_119_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4752 119 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4755_119 ?\<sigma> \<and> block_usage P_0x474f_119_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x474f_119_def P_0x474f_119_regions_def post: Q_0x4755_119_def regionset: P_0x474f_119_regions_set_def)

definition P_0x4755_120 :: state_pred where
  \<open>P_0x4755_120 \<sigma> \<equiv> RIP \<sigma> = 0x4755 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x474f\<close>
declare P_0x4755_120_def[Ps]

definition P_0x4755_120_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4755_120_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4755_120_regions :: state_pred where
  \<open>P_0x4755_120_regions \<sigma> \<equiv> \<exists>regions. P_0x4755_120_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_bdrv_set_key_addr_0x4755_120 :: state_pred where
  \<open>Q_bdrv_set_key_addr_0x4755_120 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = bdrv_set_key_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_bdrv_set_key_addr_0x4755_120_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4755_0x4755_120[blocks]:
  assumes \<open>(P_0x4755_120 && P_0x4755_120_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4755 120 \<sigma> \<triangleq> ?\<sigma> \<and> Q_bdrv_set_key_addr_0x4755_120 ?\<sigma> \<and> block_usage P_0x4755_120_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4755_120_def P_0x4755_120_regions_def post: Q_bdrv_set_key_addr_0x4755_120_def regionset: P_0x4755_120_regions_set_def)

definition P_0x475a_121 :: state_pred where
  \<open>P_0x475a_121 \<sigma> \<equiv> RIP \<sigma> = 0x475a \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x475a_121_def[Ps]

definition P_0x475a_121_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x475a_121_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x475a_121_regions :: state_pred where
  \<open>P_0x475a_121_regions \<sigma> \<equiv> \<exists>regions. P_0x475a_121_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x475c_121 :: state_pred where
  \<open>Q_0x475c_121 \<sigma> \<equiv> RIP \<sigma> = 0x475c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x475c_121_def[Qs]

schematic_goal bdrv_new_open_0_1_0x475a_0x475a_121[blocks]:
  assumes \<open>(P_0x475a_121 && P_0x475a_121_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x475a 121 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x475c_121 ?\<sigma> \<and> block_usage P_0x475a_121_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x475a_121_def P_0x475a_121_regions_def post: Q_0x475c_121_def regionset: P_0x475a_121_regions_set_def)

definition P_0x475c_true_122 :: state_pred where
  \<open>P_0x475c_true_122 \<sigma> \<equiv> RIP \<sigma> = 0x475c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x475c_true_122_def[Ps]

definition P_0x475c_true_122_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x475c_true_122_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x475c_true_122_regions :: state_pred where
  \<open>P_0x475c_true_122_regions \<sigma> \<equiv> \<exists>regions. P_0x475c_true_122_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45b7_122 :: state_pred where
  \<open>Q_0x45b7_122 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x45b7_122_def[Qs]

schematic_goal bdrv_new_open_0_4_0x475c_0x45b4_122[blocks]:
  assumes \<open>(P_0x475c_true_122 && P_0x475c_true_122_regions && !SF) \<sigma>\<close>
  shows \<open>exec_block 4 0x45b4 122 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45b7_122 ?\<sigma> \<and> block_usage P_0x475c_true_122_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x475c_true_122_def P_0x475c_true_122_regions_def post: Q_0x45b7_122_def regionset: P_0x475c_true_122_regions_set_def)

definition P_0x45b7_true_123 :: state_pred where
  \<open>P_0x45b7_true_123 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x45b7_true_123_def[Ps]

definition P_0x45b7_true_123_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_true_123_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_true_123_regions :: state_pred where
  \<open>P_0x45b7_true_123_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_true_123_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x479b_123 :: state_pred where
  \<open>Q_0x479b_123 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x479b_123_def[Qs]

schematic_goal bdrv_new_open_0_1_0x45b7_0x45b7_123[blocks]:
  assumes \<open>(P_0x45b7_true_123 && P_0x45b7_true_123_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x45b7 123 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x479b_123 ?\<sigma> \<and> block_usage P_0x45b7_true_123_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_true_123_def P_0x45b7_true_123_regions_def post: Q_0x479b_123_def regionset: P_0x45b7_true_123_regions_set_def)

definition P_0x479b_124 :: state_pred where
  \<open>P_0x479b_124 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x479b_124_def[Ps]

definition P_0x479b_124_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x479b_124_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x479b_124_regions :: state_pred where
  \<open>P_0x479b_124_regions \<sigma> \<equiv> \<exists>regions. P_0x479b_124_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_stack_chk_fail_addr_0x479b_124 :: state_pred where
  \<open>Q_stack_chk_fail_addr_0x479b_124 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = stack_chk_fail_addr \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_stack_chk_fail_addr_0x479b_124_def[Qs]

schematic_goal bdrv_new_open_0_1_0x479b_0x479b_124[blocks]:
  assumes \<open>(P_0x479b_124 && P_0x479b_124_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x479b 124 \<sigma> \<triangleq> ?\<sigma> \<and> Q_stack_chk_fail_addr_0x479b_124 ?\<sigma> \<and> block_usage P_0x479b_124_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x479b_124_def P_0x479b_124_regions_def post: Q_stack_chk_fail_addr_0x479b_124_def regionset: P_0x479b_124_regions_set_def)

definition P_0x45b7_false_125 :: state_pred where
  \<open>P_0x45b7_false_125 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x45b7_false_125_def[Ps]

definition P_0x45b7_false_125_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_false_125_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_false_125_regions :: state_pred where
  \<open>P_0x45b7_false_125_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_false_125_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_ret_address_125 :: state_pred where
  \<open>Q_ret_address_125 \<sigma> \<equiv> RIP \<sigma> = ret_address \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_ret_address_125_def[Qs]

schematic_goal bdrv_new_open_0_9_0x45b7_0x45ce_125[blocks]:
  assumes \<open>(P_0x45b7_false_125 && P_0x45b7_false_125_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 9 0x45ce 125 \<sigma> \<triangleq> ?\<sigma> \<and> Q_ret_address_125 ?\<sigma> \<and> block_usage P_0x45b7_false_125_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_false_125_def P_0x45b7_false_125_regions_def post: Q_ret_address_125_def regionset: P_0x45b7_false_125_regions_set_def)

definition P_0x475c_false_126 :: state_pred where
  \<open>P_0x475c_false_126 \<sigma> \<equiv> RIP \<sigma> = 0x475c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x475c_false_126_def[Ps]

definition P_0x475c_false_126_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x475c_false_126_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x475c_false_126_regions :: state_pred where
  \<open>P_0x475c_false_126_regions \<sigma> \<equiv> \<exists>regions. P_0x475c_false_126_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x476b_126 :: state_pred where
  \<open>Q_0x476b_126 \<sigma> \<equiv> RIP \<sigma> = 0x476b \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0ae \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare Q_0x476b_126_def[Qs]

schematic_goal bdrv_new_open_0_3_0x475c_0x4769_126[blocks]:
  assumes \<open>(P_0x475c_false_126 && P_0x475c_false_126_regions && ! !SF) \<sigma>\<close>
  shows \<open>exec_block 3 0x4769 126 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x476b_126 ?\<sigma> \<and> block_usage P_0x475c_false_126_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x475c_false_126_def P_0x475c_false_126_regions_def post: Q_0x476b_126_def regionset: P_0x475c_false_126_regions_set_def)

definition P_0x476b_127 :: state_pred where
  \<open>P_0x476b_127 \<sigma> \<equiv> RIP \<sigma> = 0x476b \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0ae \<and> RSI \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x475a\<close>
declare P_0x476b_127_def[Ps]

definition P_0x476b_127_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x476b_127_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x476b_127_regions :: state_pred where
  \<open>P_0x476b_127_regions \<sigma> \<equiv> \<exists>regions. P_0x476b_127_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x476b_127 :: state_pred where
  \<open>Q_error_addr_0x476b_127 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x476b_127_def[Qs]

schematic_goal bdrv_new_open_0_1_0x476b_0x476b_127[blocks]:
  assumes \<open>(P_0x476b_127 && P_0x476b_127_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x476b 127 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x476b_127 ?\<sigma> \<and> block_usage P_0x476b_127_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x476b_127_def P_0x476b_127_regions_def post: Q_error_addr_0x476b_127_def regionset: P_0x476b_127_regions_set_def)

definition P_0x4701_128 :: state_pred where
  \<open>P_0x4701_128 \<sigma> \<equiv> RIP \<sigma> = 0x4701 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x4701_128_def[Ps]

definition P_0x4701_128_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4701_128_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8)
  }\<close>

definition P_0x4701_128_regions :: state_pred where
  \<open>P_0x4701_128_regions \<sigma> \<equiv> \<exists>regions. P_0x4701_128_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x470c_128 :: state_pred where
  \<open>Q_0x470c_128 \<sigma> \<equiv> RIP \<sigma> = 0x470c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare Q_0x470c_128_def[Qs]

schematic_goal bdrv_new_open_0_3_0x4701_0x470a_128[blocks]:
  assumes \<open>(P_0x4701_128 && P_0x4701_128_regions) \<sigma>\<close>
  shows \<open>exec_block 3 0x470a 128 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x470c_128 ?\<sigma> \<and> block_usage P_0x4701_128_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4701_128_def P_0x4701_128_regions_def post: Q_0x470c_128_def regionset: P_0x4701_128_regions_set_def)

definition P_0x470c_129 :: state_pred where
  \<open>P_0x470c_129 \<sigma> \<equiv> RIP \<sigma> = 0x470c \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word)\<close>
declare P_0x470c_129_def[Ps]

definition P_0x470c_129_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x470c_129_regions_set \<sigma> \<equiv> {
    (0, 0x2a2e0, 8),
    (1, 0x2a340, 8),
    (2, 0x2a348, 8),
    (3, 0x2a350, 8),
    (4, 0x2a358, 4),
    (5, RSP\<^sub>0, 8),
    (6, ((FS\<^sub>0::64 word) + 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (15, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (16, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x470c_129_regions :: state_pred where
  \<open>P_0x470c_129_regions \<sigma> \<equiv> \<exists>regions. P_0x470c_129_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_tcsetattr_addr_0x470c_129 :: state_pred where
  \<open>Q_tcsetattr_addr_0x470c_129 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = tcsetattr_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare Q_tcsetattr_addr_0x470c_129_def[Qs]

schematic_goal bdrv_new_open_0_1_0x470c_0x470c_129[blocks]:
  assumes \<open>(P_0x470c_129 && P_0x470c_129_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x470c 129 \<sigma> \<triangleq> ?\<sigma> \<and> Q_tcsetattr_addr_0x470c_129 ?\<sigma> \<and> block_usage P_0x470c_129_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x470c_129_def P_0x470c_129_regions_def post: Q_tcsetattr_addr_0x470c_129_def regionset: P_0x470c_129_regions_set_def)

definition P_0x4711_130 :: state_pred where
  \<open>P_0x4711_130 \<sigma> \<equiv> RIP \<sigma> = 0x4711 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x0 \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare P_0x4711_130_def[Ps]

definition P_0x4711_130_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4711_130_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4711_130_regions :: state_pred where
  \<open>P_0x4711_130_regions \<sigma> \<equiv> \<exists>regions. P_0x4711_130_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x471b_130 :: state_pred where
  \<open>Q_0x471b_130 \<sigma> \<equiv> RIP \<sigma> = 0x471b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare Q_0x471b_130_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4711_0x4716_130[blocks]:
  assumes \<open>(P_0x4711_130 && P_0x4711_130_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4716 130 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x471b_130 ?\<sigma> \<and> block_usage P_0x4711_130_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4711_130_def P_0x4711_130_regions_def post: Q_0x471b_130_def regionset: P_0x4711_130_regions_set_def)

definition P_0x471b_131 :: state_pred where
  \<open>P_0x471b_131 \<sigma> \<equiv> RIP \<sigma> = 0x471b \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4711\<close>
declare P_0x471b_131_def[Ps]

definition P_0x471b_131_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x471b_131_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x471b_131_regions :: state_pred where
  \<open>P_0x471b_131_regions \<sigma> \<equiv> \<exists>regions. P_0x471b_131_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_putchar_addr_0x471b_131 :: state_pred where
  \<open>Q_putchar_addr_0x471b_131 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = putchar_addr \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare Q_putchar_addr_0x471b_131_def[Qs]

schematic_goal bdrv_new_open_0_1_0x471b_0x471b_131[blocks]:
  assumes \<open>(P_0x471b_131 && P_0x471b_131_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x471b 131 \<sigma> \<triangleq> ?\<sigma> \<and> Q_putchar_addr_0x471b_131 ?\<sigma> \<and> block_usage P_0x471b_131_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x471b_131_def P_0x471b_131_regions_def post: Q_putchar_addr_0x471b_131_def regionset: P_0x471b_131_regions_set_def)

definition P_0x4720_132 :: state_pred where
  \<open>P_0x4720_132 \<sigma> \<equiv> RIP \<sigma> = 0x4720 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0xa \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare P_0x4720_132_def[Ps]

definition P_0x4720_132_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4720_132_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4720_132_regions :: state_pred where
  \<open>P_0x4720_132_regions \<sigma> \<equiv> \<exists>regions. P_0x4720_132_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x4729_132 :: state_pred where
  \<open>Q_0x4729_132 \<sigma> \<equiv> RIP \<sigma> = 0x4729 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0bf \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare Q_0x4729_132_def[Qs]

schematic_goal bdrv_new_open_0_2_0x4720_0x4727_132[blocks]:
  assumes \<open>(P_0x4720_132 && P_0x4720_132_regions) \<sigma>\<close>
  shows \<open>exec_block 2 0x4727 132 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x4729_132 ?\<sigma> \<and> block_usage P_0x4720_132_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4720_132_def P_0x4720_132_regions_def post: Q_0x4729_132_def regionset: P_0x4720_132_regions_set_def)

definition P_0x4729_133 :: state_pred where
  \<open>P_0x4729_133 \<sigma> \<equiv> RIP \<sigma> = 0x4729 \<and> RAX \<sigma> = 0x0 \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x2a320 \<and> RDI \<sigma> = 0x1d0bf \<and> RSI \<sigma> = 0x0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> R15 \<sigma> = ((RSP\<^sub>0::64 word) - 0x189) \<and> R14 \<sigma> = ((RSP\<^sub>0::64 word) - 0x148) \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm2w1 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> regs \<sigma> ymm2w0 = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[R12 \<sigma>,1]::8 word) = 0x0 \<and> (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) = (\<sigma> \<turnstile> *[0x2a2e0,8]::64 word) \<and> (\<sigma> \<turnstile> *[((0x2a340::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a340,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a350,8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[0x2a358,4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word) = ucast ((\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x150),4]::32 word)) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x158),8]::64 word) \<and> (\<sigma> \<turnstile> *[((((RSP\<^sub>0::64 word) - 0x168)::64 word) + 0x8),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x160),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) = (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x168),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x4720\<close>
declare P_0x4729_133_def[Ps]

definition P_0x4729_133_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x4729_133_regions_set \<sigma> \<equiv> {
    (0, R12 \<sigma>, Suc 0),
    (1, 0x2a2e0, 8),
    (2, 0x2a340, 8),
    (3, 0x2a348, 8),
    (4, 0x2a350, 8),
    (5, 0x2a358, 4),
    (6, RSP\<^sub>0, 8),
    (7, ((FS\<^sub>0::64 word) + 0x28), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (10, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (11, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (12, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (13, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (14, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (15, ((RSP\<^sub>0::64 word) - 0x150), 4),
    (16, ((RSP\<^sub>0::64 word) - 0x158), 8),
    (17, ((RSP\<^sub>0::64 word) - 0x160), 8),
    (18, ((RSP\<^sub>0::64 word) - 0x168), 8),
    (19, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x4729_133_regions :: state_pred where
  \<open>P_0x4729_133_regions \<sigma> \<equiv> \<exists>regions. P_0x4729_133_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_error_addr_0x4729_133 :: state_pred where
  \<open>Q_error_addr_0x4729_133 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = error_addr \<and> RAX \<sigma> = 0x0 \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_error_addr_0x4729_133_def[Qs]

schematic_goal bdrv_new_open_0_1_0x4729_0x4729_133[blocks]:
  assumes \<open>(P_0x4729_133 && P_0x4729_133_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x4729 133 \<sigma> \<triangleq> ?\<sigma> \<and> Q_error_addr_0x4729_133 ?\<sigma> \<and> block_usage P_0x4729_133_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x4729_133_def P_0x4729_133_regions_def post: Q_error_addr_0x4729_133_def regionset: P_0x4729_133_regions_set_def)

definition P_0x45a1_false_134 :: state_pred where
  \<open>P_0x45a1_false_134 \<sigma> \<equiv> RIP \<sigma> = 0x45a1 \<and> RAX \<sigma> = ucast (bdrv_is_encrypted_0x459a_retval) \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x40 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45a1_false_134_def[Ps]

definition P_0x45a1_false_134_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45a1_false_134_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45a1_false_134_regions :: state_pred where
  \<open>P_0x45a1_false_134_regions \<sigma> \<equiv> \<exists>regions. P_0x45a1_false_134_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x45b7_134 :: state_pred where
  \<open>Q_0x45b7_134 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x45b7_134_def[Qs]

schematic_goal bdrv_new_open_0_4_0x45a1_0x45b4_134[blocks]:
  assumes \<open>(P_0x45a1_false_134 && P_0x45a1_false_134_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 4 0x45b4 134 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x45b7_134 ?\<sigma> \<and> block_usage P_0x45a1_false_134_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45a1_false_134_def P_0x45a1_false_134_regions_def post: Q_0x45b7_134_def regionset: P_0x45a1_false_134_regions_set_def)

definition P_0x45b7_true_135 :: state_pred where
  \<open>P_0x45b7_true_135 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45b7_true_135_def[Ps]

definition P_0x45b7_true_135_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_true_135_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_true_135_regions :: state_pred where
  \<open>P_0x45b7_true_135_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_true_135_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_0x479b_135 :: state_pred where
  \<open>Q_0x479b_135 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare Q_0x479b_135_def[Qs]

schematic_goal bdrv_new_open_0_1_0x45b7_0x45b7_135[blocks]:
  assumes \<open>(P_0x45b7_true_135 && P_0x45b7_true_135_regions && !ZF) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x45b7 135 \<sigma> \<triangleq> ?\<sigma> \<and> Q_0x479b_135 ?\<sigma> \<and> block_usage P_0x45b7_true_135_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_true_135_def P_0x45b7_true_135_regions_def post: Q_0x479b_135_def regionset: P_0x45b7_true_135_regions_set_def)

definition P_0x479b_136 :: state_pred where
  \<open>P_0x479b_136 \<sigma> \<equiv> RIP \<sigma> = 0x479b \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x479b_136_def[Ps]

definition P_0x479b_136_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x479b_136_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x479b_136_regions :: state_pred where
  \<open>P_0x479b_136_regions \<sigma> \<equiv> \<exists>regions. P_0x479b_136_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_stack_chk_fail_addr_0x479b_136 :: state_pred where
  \<open>Q_stack_chk_fail_addr_0x479b_136 \<sigma> \<equiv> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x1a0) \<and> RIP \<sigma> = stack_chk_fail_addr \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_stack_chk_fail_addr_0x479b_136_def[Qs]

schematic_goal bdrv_new_open_0_1_0x479b_0x479b_136[blocks]:
  assumes \<open>(P_0x479b_136 && P_0x479b_136_regions) \<sigma>\<close>
  shows \<open>exec_block (Suc 0) 0x479b 136 \<sigma> \<triangleq> ?\<sigma> \<and> Q_stack_chk_fail_addr_0x479b_136 ?\<sigma> \<and> block_usage P_0x479b_136_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x479b_136_def P_0x479b_136_regions_def post: Q_stack_chk_fail_addr_0x479b_136_def regionset: P_0x479b_136_regions_set_def)

definition P_0x45b7_false_137 :: state_pred where
  \<open>P_0x45b7_false_137 \<sigma> \<equiv> RIP \<sigma> = 0x45b7 \<and> RAX \<sigma> = bdrv_new_0x4551_retval \<and> RBX \<sigma> = bdrv_new_0x4551_retval \<and> RCX \<sigma> = bdrv_find_format_0x456e_retval \<and> RDX \<sigma> = 0x0 \<and> RDI \<sigma> = bdrv_new_0x4551_retval \<and> RSI \<sigma> = RDI\<^sub>0 \<and> RSP \<sigma> = ((RSP\<^sub>0::64 word) - 0x198) \<and> RBP \<sigma> = RSI\<^sub>0 \<and> R15 \<sigma> = R15\<^sub>0 \<and> R14 \<sigma> = R14\<^sub>0 \<and> R13 \<sigma> = R13\<^sub>0 \<and> R12 \<sigma> = RDI\<^sub>0 \<and> FS \<sigma> = FS\<^sub>0 \<and> regs \<sigma> ymm0w1 = ymm0w1\<^sub>0 \<and> regs \<sigma> ymm0w0 = ymm0w0\<^sub>0 \<and> regs \<sigma> ymm1w1 = ymm1w1\<^sub>0 \<and> regs \<sigma> ymm1w0 = ymm1w0\<^sub>0 \<and> regs \<sigma> ymm2w1 = ymm2w1\<^sub>0 \<and> regs \<sigma> ymm2w0 = ymm2w0\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x1a0),8]::64 word) = 0x459f\<close>
declare P_0x45b7_false_137_def[Ps]

definition P_0x45b7_false_137_regions_set :: \<open>state \<Rightarrow> (nat \<times> 64 word \<times> nat) set\<close> where
  \<open>P_0x45b7_false_137_regions_set \<sigma> \<equiv> {
    (0, RSP\<^sub>0, 8),
    (1, ((FS\<^sub>0::64 word) + 0x28), 8),
    (2, ((RSP\<^sub>0::64 word) - 0x8), 8),
    (3, ((RSP\<^sub>0::64 word) - 0x10), 8),
    (4, ((RSP\<^sub>0::64 word) - 0x18), 8),
    (5, ((RSP\<^sub>0::64 word) - 0x20), 8),
    (6, ((RSP\<^sub>0::64 word) - 0x28), 8),
    (7, ((RSP\<^sub>0::64 word) - 0x30), 8),
    (8, ((RSP\<^sub>0::64 word) - 0x40), 8),
    (9, ((RSP\<^sub>0::64 word) - 0x1a0), 8)
  }\<close>

definition P_0x45b7_false_137_regions :: state_pred where
  \<open>P_0x45b7_false_137_regions \<sigma> \<equiv> \<exists>regions. P_0x45b7_false_137_regions_set \<sigma> \<subseteq> regions
  \<and> (\<forall>i r. (i, r) \<in> regions \<longrightarrow> no_block_overflow r)
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<sqsubseteq> r' = (i = i' \<or> (i, i') \<in> {}))
  \<and> (\<forall>i r i' r'. (i, r) \<in> regions \<longrightarrow> (i', r') \<in> regions \<longrightarrow> r \<bowtie> r' = (i \<noteq> i' \<and> (i, i') \<notin> {}))
\<close>

definition Q_ret_address_137 :: state_pred where
  \<open>Q_ret_address_137 \<sigma> \<equiv> RIP \<sigma> = ret_address \<and> FS \<sigma> = FS\<^sub>0 \<and> (\<sigma> \<turnstile> *[RSP\<^sub>0,8]::64 word) = ret_address \<and> (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word) \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x8),8]::64 word) = R15\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x10),8]::64 word) = R14\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x18),8]::64 word) = R13\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x20),8]::64 word) = R12\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x28),8]::64 word) = RBP\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x30),8]::64 word) = RBX\<^sub>0 \<and> (\<sigma> \<turnstile> *[((RSP\<^sub>0::64 word) - 0x40),8]::64 word) = (\<sigma> \<turnstile> *[((FS\<^sub>0::64 word) + 0x28),8]::64 word)\<close>
declare Q_ret_address_137_def[Qs]

schematic_goal bdrv_new_open_0_9_0x45b7_0x45ce_137[blocks]:
  assumes \<open>(P_0x45b7_false_137 && P_0x45b7_false_137_regions && ! !ZF) \<sigma>\<close>
  shows \<open>exec_block 9 0x45ce 137 \<sigma> \<triangleq> ?\<sigma> \<and> Q_ret_address_137 ?\<sigma> \<and> block_usage P_0x45b7_false_137_regions_set \<sigma> ?\<sigma>\<close>
  using assms
  by (steps pre: P_0x45b7_false_137_def P_0x45b7_false_137_regions_def post: Q_ret_address_137_def regionset: P_0x45b7_false_137_regions_set_def)

definition bdrv_new_open_acode :: ACode where
  \<open>bdrv_new_open_acode =
    Block 13 0x454f 0;
    Block (Suc 0) 0x4551 (Suc 0);
    CALL bdrv_new_acode;
    Block (Suc 0) 0x4556 2;
    IF ZF THEN
      Block 3 0x4794 3;
      Block (Suc 0) 0x4796 4;
      CALL error_acode
    ELSE
      Block 3 0x4562 5;
      IF ZF THEN
        Block 3 0x4777 6;
        Block 3 0x4587 7;
        Block (Suc 0) 0x458a 8;
        CALL bdrv_open2_acode;
        Block (Suc 0) 0x458f 9;
        IF SF THEN
          Block 4 0x4786 10;
          Block (Suc 0) 0x4788 11;
          CALL error_acode
        ELSE
          Block 2 0x4597 12;
          Block (Suc 0) 0x459a 13;
          CALL bdrv_is_encrypted_acode;
          Block (Suc 0) 0x459f 14;
          IF !ZF THEN
            Block 8 0x45e9 15;
            Block (Suc 0) 0x45ee 16;
            CALL printf_chk_acode;
            Block 3 0x45ff 17;
            Block (Suc 0) 0x4601 18;
            CALL printf_chk_acode;
            Block 2 0x460d 19;
            Block (Suc 0) 0x4612 20;
            CALL fflush_acode;
            Block 2 0x461a 21;
            Block (Suc 0) 0x461c 22;
            CALL tcgetattr_acode;
            Block 23 0x4691 23;
            Block (Suc 0) 0x4696 24;
            CALL tcsetattr_acode;
            Block (Suc 0) 0x469b 25;
            Block (Suc 0) 0x46a2 26;
            CALL atexit_acode;
            Block (Suc 0) 0x46a7 27;
            WHILE P_0x46b0_28 DO
              Block 4 0x46bc 28;
              Block (Suc 0) 0x46be 29;
              CALL read_acode;
              Block (Suc 0) 0x46c3 30;
              IF ZF THEN
                Block (Suc 0) 0x46c6 31;
                Block (Suc 0) 0x46f0 32;
                CALL errno_location_acode;
                Block 2 0x46f7 33;
                IF ZF THEN
                  Block (Suc 0) 0x46fa 34
                ELSE
                  Block (Suc 0) 0x46fa 35;
                  Block (Suc 0) 0x46fc 36;
                  IF ZF THEN
                    Block (Suc 0) 0x46ff 37
                  ELSE
                    Block (Suc 0) 0x46ff 38
                FI
                FI
              ELSE
                Block 2 0x46c8 39;
                IF ZF THEN
                  Block (Suc 0) 0x46ca 40
                ELSE
                  Block 3 0x46d1 41;
                  IF ZF THEN
                    Block (Suc 0) 0x46d3 42
                  ELSE
                    Block 2 0x46d5 43;
                    IF jg THEN
                      Block (Suc 0) 0x46db 44
                    ELSE
                      Block (Suc 0) 0x46db 45;
                      Block 4 0x46e7 46
                    FI
                  FI
                FI
              FI
            OD;
            CASES [
              (P_0x4730_47,
                Block 3 0x4734 47;
                Block (Suc 0) 0x473b 48;
                CALL tcsetattr_acode;
                Block 2 0x4745 49;
                Block (Suc 0) 0x474a 50;
                CALL putchar_acode;
                Block 2 0x4752 51;
                Block (Suc 0) 0x4755 52;
                CALL bdrv_set_key_acode;
                Block (Suc 0) 0x475a 53;
                IF !SF THEN
                  Block 4 0x45b4 54;
                  IF !ZF THEN
                    Block (Suc 0) 0x45b7 55;
                    Block (Suc 0) 0x479b 56;
                    CALL stack_chk_fail_acode
                  ELSE
                    Block 9 0x45ce 57
                  FI
                ELSE
                  Block 3 0x4769 58;
                  Block (Suc 0) 0x476b 59;
                  CALL error_acode
                FI
              ),
              (P_0x4701_60,
                Block 3 0x470a 60;
                Block (Suc 0) 0x470c 61;
                CALL tcsetattr_acode;
                Block 2 0x4716 62;
                Block (Suc 0) 0x471b 63;
                CALL putchar_acode;
                Block 2 0x4727 64;
                Block (Suc 0) 0x4729 65;
                CALL error_acode
              )
            ]
          ELSE
            Block 4 0x45b4 66;
            IF !ZF THEN
              Block (Suc 0) 0x45b7 67;
              Block (Suc 0) 0x479b 68;
              CALL stack_chk_fail_acode
            ELSE
              Block 9 0x45ce 69
            FI
          FI
        FI
      ELSE
        Block 2 0x456b 70;
        Block (Suc 0) 0x456e 71;
        CALL bdrv_find_format_acode;
        Block 2 0x4576 72;
        IF ZF THEN
          Block 4 0x47aa 73;
          Block (Suc 0) 0x47ac 74;
          CALL error_acode
        ELSE
          Block 4 0x4587 75;
          Block (Suc 0) 0x458a 76;
          CALL bdrv_open2_acode;
          Block (Suc 0) 0x458f 77;
          IF SF THEN
            Block 4 0x4786 78;
            Block (Suc 0) 0x4788 79;
            CALL error_acode
          ELSE
            Block 2 0x4597 80;
            Block (Suc 0) 0x459a 81;
            CALL bdrv_is_encrypted_acode;
            Block (Suc 0) 0x459f 82;
            IF !ZF THEN
              Block 8 0x45e9 83;
              Block (Suc 0) 0x45ee 84;
              CALL printf_chk_acode;
              Block 3 0x45ff 85;
              Block (Suc 0) 0x4601 86;
              CALL printf_chk_acode;
              Block 2 0x460d 87;
              Block (Suc 0) 0x4612 88;
              CALL fflush_acode;
              Block 2 0x461a 89;
              Block (Suc 0) 0x461c 90;
              CALL tcgetattr_acode;
              Block 23 0x4691 91;
              Block (Suc 0) 0x4696 92;
              CALL tcsetattr_acode;
              Block (Suc 0) 0x469b 93;
              Block (Suc 0) 0x46a2 94;
              CALL atexit_acode;
              Block (Suc 0) 0x46a7 95;
              WHILE P_0x46b0_96 DO
                Block 4 0x46bc 96;
                Block (Suc 0) 0x46be 97;
                CALL read_acode;
                Block (Suc 0) 0x46c3 98;
                IF ZF THEN
                  Block (Suc 0) 0x46c6 99;
                  Block (Suc 0) 0x46f0 100;
                  CALL errno_location_acode;
                  Block 2 0x46f7 101;
                  IF ZF THEN
                    Block (Suc 0) 0x46fa 102
                  ELSE
                    Block (Suc 0) 0x46fa 103;
                    Block (Suc 0) 0x46fc 104;
                    IF ZF THEN
                      Block (Suc 0) 0x46ff 105
                    ELSE
                      Block (Suc 0) 0x46ff 106
                    FI
                  FI
                ELSE
                  Block 2 0x46c8 107;
                  IF ZF THEN
                    Block (Suc 0) 0x46ca 108
                  ELSE
                    Block 3 0x46d1 109;
                    IF ZF THEN
                      Block (Suc 0) 0x46d3 110
                    ELSE
                      Block 2 0x46d5 111;
                      IF jg THEN
                        Block (Suc 0) 0x46db 112
                      ELSE
                        Block (Suc 0) 0x46db 113;
                        Block 4 0x46e7 114
                      FI
                    FI
                  FI
                FI
              OD;
              CASES [
                (P_0x4730_115,
                  Block 3 0x4734 115;
                  Block (Suc 0) 0x473b 116;
                  CALL tcsetattr_acode;
                  Block 2 0x4745 117;
                  Block (Suc 0) 0x474a 118;
                  CALL putchar_acode;
                  Block 2 0x4752 119;
                  Block (Suc 0) 0x4755 120;
                  CALL bdrv_set_key_acode;
                  Block (Suc 0) 0x475a 121;
                  IF !SF THEN
                    Block 4 0x45b4 122;
                    IF !ZF THEN
                      Block (Suc 0) 0x45b7 123;
                      Block (Suc 0) 0x479b 124;
                      CALL stack_chk_fail_acode
                    ELSE
                      Block 9 0x45ce 125
                    FI
                  ELSE
                    Block 3 0x4769 126;
                    Block (Suc 0) 0x476b 127;
                    CALL error_acode
                  FI
                ),
                (P_0x4701_128,
                  Block 3 0x470a 128;
                  Block (Suc 0) 0x470c 129;
                  CALL tcsetattr_acode;
                  Block 2 0x4716 130;
                  Block (Suc 0) 0x471b 131;
                  CALL putchar_acode;
                  Block 2 0x4727 132;
                  Block (Suc 0) 0x4729 133;
                  CALL error_acode
                )
              ]
            ELSE
              Block 4 0x45b4 134;
              IF !ZF THEN
                Block (Suc 0) 0x45b7 135;
                Block (Suc 0) 0x479b 136;
                CALL stack_chk_fail_acode
              ELSE
                Block 9 0x45ce 137
              FI
            FI
          FI
        FI
      FI
    FI
  \<close>


method vcg_while for P :: state_pred uses assms =
  ((rule htriples)+)?,
  rule HTriple_weaken[where P=P],
  simp add: pred_logic Ps Qs assms,
  rule HTriple_while,
  (vcg_step assms: assms)+,
  (
    (vcg_step' assms: assms | vcg_step assms: assms)+,
    ((simp add: assms)+)?
  )?

schematic_goal "bdrv_new_open":
  assumes
    \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4551 \<longrightarrow> P_0x4551_1_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4556 \<longrightarrow> P_0x4556_2_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4559 \<longrightarrow> P_0x4559_true_3_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4796 \<longrightarrow> P_0x4796_4_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4559 \<longrightarrow> P_0x4559_false_5_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4565 \<longrightarrow> P_0x4565_true_6_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x457f \<longrightarrow> P_0x457f_7_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x458a \<longrightarrow> P_0x458a_8_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x458f \<longrightarrow> P_0x458f_9_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4591 \<longrightarrow> P_0x4591_true_10_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4788 \<longrightarrow> P_0x4788_11_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4591 \<longrightarrow> P_0x4591_false_12_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x459a \<longrightarrow> P_0x459a_13_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x459f \<longrightarrow> P_0x459f_14_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45a1 \<longrightarrow> P_0x45a1_true_15_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45ee \<longrightarrow> P_0x45ee_16_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45f3 \<longrightarrow> P_0x45f3_17_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4601 \<longrightarrow> P_0x4601_18_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4606 \<longrightarrow> P_0x4606_19_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4612 \<longrightarrow> P_0x4612_20_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4617 \<longrightarrow> P_0x4617_21_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x461c \<longrightarrow> P_0x461c_22_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4621 \<longrightarrow> P_0x4621_23_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4696 \<longrightarrow> P_0x4696_24_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x469b \<longrightarrow> P_0x469b_25_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46a2 \<longrightarrow> P_0x46a2_26_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46a7 \<longrightarrow> P_0x46a7_27_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46b0 \<longrightarrow> P_0x46b0_28_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46be \<longrightarrow> P_0x46be_29_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46c3 \<longrightarrow> P_0x46c3_30_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46c6 \<longrightarrow> P_0x46c6_true_31_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46f0 \<longrightarrow> P_0x46f0_32_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46f5 \<longrightarrow> P_0x46f5_33_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46fa \<longrightarrow> P_0x46fa_true_34_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46fa \<longrightarrow> P_0x46fa_false_35_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46fc \<longrightarrow> P_0x46fc_36_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ff \<longrightarrow> P_0x46ff_true_37_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ff \<longrightarrow> P_0x46ff_false_38_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46c6 \<longrightarrow> P_0x46c6_false_39_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ca \<longrightarrow> P_0x46ca_true_40_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ca \<longrightarrow> P_0x46ca_false_41_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46d3 \<longrightarrow> P_0x46d3_true_42_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46d3 \<longrightarrow> P_0x46d3_false_43_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46db \<longrightarrow> P_0x46db_true_44_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46db \<longrightarrow> P_0x46db_false_45_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46dd \<longrightarrow> P_0x46dd_46_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4730 \<longrightarrow> P_0x4730_47_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x473b \<longrightarrow> P_0x473b_48_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4740 \<longrightarrow> P_0x4740_49_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x474a \<longrightarrow> P_0x474a_50_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x474f \<longrightarrow> P_0x474f_51_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4755 \<longrightarrow> P_0x4755_52_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x475a \<longrightarrow> P_0x475a_53_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x475c \<longrightarrow> P_0x475c_true_54_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_true_55_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x479b \<longrightarrow> P_0x479b_56_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_false_57_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x475c \<longrightarrow> P_0x475c_false_58_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x476b \<longrightarrow> P_0x476b_59_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4701 \<longrightarrow> P_0x4701_60_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x470c \<longrightarrow> P_0x470c_61_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4711 \<longrightarrow> P_0x4711_62_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x471b \<longrightarrow> P_0x471b_63_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4720 \<longrightarrow> P_0x4720_64_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4729 \<longrightarrow> P_0x4729_65_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45a1 \<longrightarrow> P_0x45a1_false_66_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_true_67_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x479b \<longrightarrow> P_0x479b_68_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_false_69_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4565 \<longrightarrow> P_0x4565_false_70_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x456e \<longrightarrow> P_0x456e_71_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4573 \<longrightarrow> P_0x4573_72_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4579 \<longrightarrow> P_0x4579_true_73_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x47ac \<longrightarrow> P_0x47ac_74_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4579 \<longrightarrow> P_0x4579_false_75_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x458a \<longrightarrow> P_0x458a_76_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x458f \<longrightarrow> P_0x458f_77_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4591 \<longrightarrow> P_0x4591_true_78_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4788 \<longrightarrow> P_0x4788_79_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4591 \<longrightarrow> P_0x4591_false_80_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x459a \<longrightarrow> P_0x459a_81_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x459f \<longrightarrow> P_0x459f_82_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45a1 \<longrightarrow> P_0x45a1_true_83_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45ee \<longrightarrow> P_0x45ee_84_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45f3 \<longrightarrow> P_0x45f3_85_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4601 \<longrightarrow> P_0x4601_86_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4606 \<longrightarrow> P_0x4606_87_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4612 \<longrightarrow> P_0x4612_88_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4617 \<longrightarrow> P_0x4617_89_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x461c \<longrightarrow> P_0x461c_90_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4621 \<longrightarrow> P_0x4621_91_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4696 \<longrightarrow> P_0x4696_92_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x469b \<longrightarrow> P_0x469b_93_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46a2 \<longrightarrow> P_0x46a2_94_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46a7 \<longrightarrow> P_0x46a7_95_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46b0 \<longrightarrow> P_0x46b0_96_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46be \<longrightarrow> P_0x46be_97_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46c3 \<longrightarrow> P_0x46c3_98_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46c6 \<longrightarrow> P_0x46c6_true_99_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46f0 \<longrightarrow> P_0x46f0_100_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46f5 \<longrightarrow> P_0x46f5_101_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46fa \<longrightarrow> P_0x46fa_true_102_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46fa \<longrightarrow> P_0x46fa_false_103_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46fc \<longrightarrow> P_0x46fc_104_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ff \<longrightarrow> P_0x46ff_true_105_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ff \<longrightarrow> P_0x46ff_false_106_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46c6 \<longrightarrow> P_0x46c6_false_107_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ca \<longrightarrow> P_0x46ca_true_108_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46ca \<longrightarrow> P_0x46ca_false_109_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46d3 \<longrightarrow> P_0x46d3_true_110_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46d3 \<longrightarrow> P_0x46d3_false_111_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46db \<longrightarrow> P_0x46db_true_112_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46db \<longrightarrow> P_0x46db_false_113_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x46dd \<longrightarrow> P_0x46dd_114_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4730 \<longrightarrow> P_0x4730_115_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x473b \<longrightarrow> P_0x473b_116_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4740 \<longrightarrow> P_0x4740_117_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x474a \<longrightarrow> P_0x474a_118_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x474f \<longrightarrow> P_0x474f_119_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4755 \<longrightarrow> P_0x4755_120_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x475a \<longrightarrow> P_0x475a_121_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x475c \<longrightarrow> P_0x475c_true_122_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_true_123_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x479b \<longrightarrow> P_0x479b_124_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_false_125_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x475c \<longrightarrow> P_0x475c_false_126_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x476b \<longrightarrow> P_0x476b_127_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4701 \<longrightarrow> P_0x4701_128_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x470c \<longrightarrow> P_0x470c_129_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4711 \<longrightarrow> P_0x4711_130_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x471b \<longrightarrow> P_0x471b_131_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4720 \<longrightarrow> P_0x4720_132_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x4729 \<longrightarrow> P_0x4729_133_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45a1 \<longrightarrow> P_0x45a1_false_134_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_true_135_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x479b \<longrightarrow> P_0x479b_136_regions \<sigma>\<close>
    and \<open>\<forall>\<sigma>. RIP \<sigma> = 0x45b7 \<longrightarrow> P_0x45b7_false_137_regions \<sigma>\<close>
    and [blocks]: \<open>{{Q_bdrv_new_addr_0x4551_1}} \<box>bdrv_new_acode {{P_0x4556_2;M_0x4551}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x4796_4}} \<box>error_acode {{Q_fail;M_0x4796}}\<close>
    and [blocks]: \<open>{{Q_bdrv_open2_addr_0x458a_8}} \<box>bdrv_open2_acode {{P_0x458f_9;M_0x458a}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x4788_11}} \<box>error_acode {{Q_fail;M_0x4788}}\<close>
    and [blocks]: \<open>{{Q_bdrv_is_encrypted_addr_0x459a_13}} \<box>bdrv_is_encrypted_acode {{P_0x459f_14;M_0x459a}}\<close>
    and [blocks]: \<open>{{Q_printf_chk_addr_0x45ee_16}} \<box>printf_chk_acode {{P_0x45f3_17;M_0x45ee}}\<close>
    and [blocks]: \<open>{{Q_printf_chk_addr_0x4601_18}} \<box>printf_chk_acode {{P_0x4606_19;M_0x4601}}\<close>
    and [blocks]: \<open>{{Q_fflush_addr_0x4612_20}} \<box>fflush_acode {{P_0x4617_21;M_0x4612}}\<close>
    and [blocks]: \<open>{{Q_tcgetattr_addr_0x461c_22}} \<box>tcgetattr_acode {{P_0x4621_23;M_0x461c}}\<close>
    and [blocks]: \<open>{{Q_tcsetattr_addr_0x4696_24}} \<box>tcsetattr_acode {{P_0x469b_25;M_0x4696}}\<close>
    and [blocks]: \<open>{{Q_atexit_addr_0x46a2_26}} \<box>atexit_acode {{P_0x46a7_27;M_0x46a2}}\<close>
    and [blocks]: \<open>{{Q_read_addr_0x46be_29}} \<box>read_acode {{P_0x46c3_30;M_0x46be}}\<close>
    and [blocks]: \<open>{{Q_errno_location_addr_0x46f0_32}} \<box>errno_location_acode {{P_0x46f5_33;M_0x46f0}}\<close>
    and [blocks]: \<open>{{Q_tcsetattr_addr_0x473b_48}} \<box>tcsetattr_acode {{P_0x4740_49;M_0x473b}}\<close>
    and [blocks]: \<open>{{Q_putchar_addr_0x474a_50}} \<box>putchar_acode {{P_0x474f_51;M_0x474a}}\<close>
    and [blocks]: \<open>{{Q_bdrv_set_key_addr_0x4755_52}} \<box>bdrv_set_key_acode {{P_0x475a_53;M_0x4755}}\<close>
    and [blocks]: \<open>{{Q_stack_chk_fail_addr_0x479b_56}} \<box>stack_chk_fail_acode {{Q_fail;M_0x479b}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x476b_59}} \<box>error_acode {{Q_fail;M_0x476b}}\<close>
    and [blocks]: \<open>{{Q_tcsetattr_addr_0x470c_61}} \<box>tcsetattr_acode {{P_0x4711_62;M_0x470c}}\<close>
    and [blocks]: \<open>{{Q_putchar_addr_0x471b_63}} \<box>putchar_acode {{P_0x4720_64;M_0x471b}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x4729_65}} \<box>error_acode {{Q_fail;M_0x4729}}\<close>
    and [blocks]: \<open>{{Q_stack_chk_fail_addr_0x479b_68}} \<box>stack_chk_fail_acode {{Q_fail;M_0x479b}}\<close>
    and [blocks]: \<open>{{Q_bdrv_find_format_addr_0x456e_71}} \<box>bdrv_find_format_acode {{P_0x4573_72;M_0x456e}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x47ac_74}} \<box>error_acode {{Q_fail;M_0x47ac}}\<close>
    and [blocks]: \<open>{{Q_bdrv_open2_addr_0x458a_76}} \<box>bdrv_open2_acode {{P_0x458f_77;M_0x458a}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x4788_79}} \<box>error_acode {{Q_fail;M_0x4788}}\<close>
    and [blocks]: \<open>{{Q_bdrv_is_encrypted_addr_0x459a_81}} \<box>bdrv_is_encrypted_acode {{P_0x459f_82;M_0x459a}}\<close>
    and [blocks]: \<open>{{Q_printf_chk_addr_0x45ee_84}} \<box>printf_chk_acode {{P_0x45f3_85;M_0x45ee}}\<close>
    and [blocks]: \<open>{{Q_printf_chk_addr_0x4601_86}} \<box>printf_chk_acode {{P_0x4606_87;M_0x4601}}\<close>
    and [blocks]: \<open>{{Q_fflush_addr_0x4612_88}} \<box>fflush_acode {{P_0x4617_89;M_0x4612}}\<close>
    and [blocks]: \<open>{{Q_tcgetattr_addr_0x461c_90}} \<box>tcgetattr_acode {{P_0x4621_91;M_0x461c}}\<close>
    and [blocks]: \<open>{{Q_tcsetattr_addr_0x4696_92}} \<box>tcsetattr_acode {{P_0x469b_93;M_0x4696}}\<close>
    and [blocks]: \<open>{{Q_atexit_addr_0x46a2_94}} \<box>atexit_acode {{P_0x46a7_95;M_0x46a2}}\<close>
    and [blocks]: \<open>{{Q_read_addr_0x46be_97}} \<box>read_acode {{P_0x46c3_98;M_0x46be}}\<close>
    and [blocks]: \<open>{{Q_errno_location_addr_0x46f0_100}} \<box>errno_location_acode {{P_0x46f5_101;M_0x46f0}}\<close>
    and [blocks]: \<open>{{Q_tcsetattr_addr_0x473b_116}} \<box>tcsetattr_acode {{P_0x4740_117;M_0x473b}}\<close>
    and [blocks]: \<open>{{Q_putchar_addr_0x474a_118}} \<box>putchar_acode {{P_0x474f_119;M_0x474a}}\<close>
    and [blocks]: \<open>{{Q_bdrv_set_key_addr_0x4755_120}} \<box>bdrv_set_key_acode {{P_0x475a_121;M_0x4755}}\<close>
    and [blocks]: \<open>{{Q_stack_chk_fail_addr_0x479b_124}} \<box>stack_chk_fail_acode {{Q_fail;M_0x479b}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x476b_127}} \<box>error_acode {{Q_fail;M_0x476b}}\<close>
    and [blocks]: \<open>{{Q_tcsetattr_addr_0x470c_129}} \<box>tcsetattr_acode {{P_0x4711_130;M_0x470c}}\<close>
    and [blocks]: \<open>{{Q_putchar_addr_0x471b_131}} \<box>putchar_acode {{P_0x4720_132;M_0x471b}}\<close>
    and [blocks]: \<open>{{Q_error_addr_0x4729_133}} \<box>error_acode {{Q_fail;M_0x4729}}\<close>
    and [blocks]: \<open>{{Q_stack_chk_fail_addr_0x479b_136}} \<box>stack_chk_fail_acode {{Q_fail;M_0x479b}}\<close>
  shows \<open>{{?P}} bdrv_new_open_acode {{?Q;?M}}\<close>
  apply (vcg acode: bdrv_new_open_acode_def assms: assms)
  apply (vcg_while "P_0x46b0_28 || P_0x4730_47 || P_0x4701_60")
  apply (simp add: Ps Qs assms)
  apply simp
  apply (vcg_step assms: assms)+
  apply (auto simp add: Ps Qs assms pred_logic)[1]
  apply (rule htriples)+
  apply simp
  apply (vcg_step assms: assms)+
  apply (vcg_while "P_0x46b0_96 || P_0x4730_115 || P_0x4701_128")
  apply (simp add: Ps Qs assms)
  apply simp
  apply (vcg_step assms: assms)+
  apply (auto simp add: Ps Qs assms pred_logic)[1]
  apply (rule htriples)+
  apply simp
  apply (vcg_step assms: assms)+
  done


end
