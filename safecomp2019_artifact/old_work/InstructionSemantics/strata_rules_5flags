(adc r32, r32) -> (OP1 = 0x0_32 o ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] ; CF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !(((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff ((CF ? 0x0_1 o OP2[31:0] + 0x1_33 : 0x0_1 o OP2[31:0]) + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add r32, r32) -> (OP1 = 0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add m64, imm32) -> (OP1 = (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] ; ZF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1))
(add m32, imm8) -> (OP1 = 0x0_32 o (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] ; CF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[32:32] == 0x1_1 ; PF := !((0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(OP2[31:31] == 0x1_1 bool_iff (0x0_1 o OP2[31:0] + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(add r64, imm32) -> (OP1 = (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] ; CF := (0x0_1 o OP2 + 0x0_1 o OP1)[64:64] == 0x1_1 ; PF := !((0x0_1 o OP2 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o OP2 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(OP2[63:63] == 0x1_1 bool_iff (0x0_1 o OP2 + 0x0_1 o OP1)[63:63] == 0x1_1))
(and r32, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] & OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and m32, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] & OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(and r64, r64) -> (OP1 = OP1 & OP2 ; CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1 & OP2) == 0x0_64 ; SF := (OP1[63:63] & OP2[63:63]) == 0x1_1 ; OF := false)
(divsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o div_double(OP1[63:0], OP2[63:0])) ; )
(mov r64, r64) -> (OP1 = OP2)
(mov r64, m64) -> (OP1 = OP2)
(mov m32, imm32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov m64, r64) -> (OP1 = OP2)
(mov r32, m32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov m32, r32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov r32, r32) -> (OP1 = 0x0_32 o OP2[31:0])
(mov r32, imm32) -> (OP1 = 0x0_32 o OP2[31:0])
(movapd xmm, xmm) -> (OP1 = OP1[255:128] o OP2[127:0] ; )
(movq r64, xmm) -> (OP1 = OP2[63:0])
(movsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o OP2[63:0]) ; )
(movsx r32, r8) -> (OP1 = 0x0_32 o sign-extend-64(OP2[7:0])[31:0])
(movsxd r64, r32) -> (OP1 = sign-extend-64(OP2[31:0]))
(movsxd r64, m32) -> (OP1 = sign-extend-64(OP2[31:0]))
(movzx r32, m8) -> (OP1 = 0x0_56 o OP2[7:0])
(mulsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o mul_double(OP1[63:0], OP2[63:0])) ; )
(neg r32) -> (OP1 = 0x0_32 o ~OP1[31:0] ; CF := !(OP1[31:0] == 0x0_32) ; PF := !((~OP1[31:0])[0:0] == 0x1_1 bool_xor (~OP1[31:0])[1:1] == 0x1_1 bool_xor (~OP1[31:0])[2:2] == 0x1_1 bool_xor (~OP1[31:0])[3:3] == 0x1_1 bool_xor (~OP1[31:0])[4:4] == 0x1_1 bool_xor (~OP1[31:0])[5:5] == 0x1_1 bool_xor (~OP1[31:0])[6:6] == 0x1_1 bool_xor (~OP1[31:0])[7:7] == 0x1_1) ; ZF := ~OP1[31:0] == 0x0_32 ; SF := (~OP1[31:0])[31:31] == 0x1_1 ; OF := OP1[31:31] == 0x1_1 bool_and (~OP1[31:0])[31:31] == 0x1_1)
(neg r64) -> (OP1 = ~OP1 ; CF := !(OP1 == 0x0_64) ; PF := !((~OP1)[0:0] == 0x1_1 bool_xor (~OP1)[1:1] == 0x1_1 bool_xor (~OP1)[2:2] == 0x1_1 bool_xor (~OP1)[3:3] == 0x1_1 bool_xor (~OP1)[4:4] == 0x1_1 bool_xor (~OP1)[5:5] == 0x1_1 bool_xor (~OP1)[6:6] == 0x1_1 bool_xor (~OP1)[7:7] == 0x1_1) ; ZF := ~OP1 == 0x0_64 ; SF := (~OP1)[63:63] == 0x1_1 ; OF := OP1[63:63] == 0x1_1 bool_and (~OP1)[63:63] == 0x1_1)
(or r64, m64) -> (OP1 = OP1 | OP2 ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1 | OP2) == 0x0_64 ; SF := (OP1[63:63] | OP2[63:63]) == 0x1_1 ; OF := false)
(or r32, m32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or r32, r32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(or r32, imm32) -> (OP1 = 0x0_32 o (OP1[31:0] | OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] | OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] | OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] | OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] | OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] | OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] | OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] | OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] | OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] | OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] | OP2[31:31]) == 0x1_1 ; OF := false)
(sub m32, imm32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r32, imm32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r32, r32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(sub r64, imm32) -> (OP1 = (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] ; CF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[64:64] == 0x1_1) ; PF := !((0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:0] == 0x0_64 ; SF := (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1 ; OF := (!OP2[63:63] == 0x1_1 bool_iff OP1[63:63] == 0x1_1) bool_and !(!OP2[63:63] == 0x1_1 bool_iff (0x0_1 o !OP2 + 0x1_65 + 0x0_1 o OP1)[63:63] == 0x1_1))
(sub r32, m32) -> (OP1 = 0x0_32 o (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] ; CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(test r32, r32) -> (CF := false ; PF := !((OP1[0:0] & OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] & OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] & OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] & OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] & OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] & OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] & OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] & OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] & OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] & OP2[31:31]) == 0x1_1 ; OF := false)
(xor r32, r32) -> (OP1 = 0x0_32 o (OP1[31:0] ^ OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(xor r64, m64) -> (OP1 = OP1 ^ OP2 ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1 ^ OP2) == 0x0_64 ; SF := (OP1[63:63] ^ OP2[63:63]) == 0x1_1 ; OF := false)
(xor m32, r32) -> (OP1 = 0x0_32 o (OP1[31:0] ^ OP2[31:0]) ; CF := false ; PF := !((OP1[0:0] ^ OP2[0:0]) == 0x1_1 bool_xor (OP1[1:1] ^ OP2[1:1]) == 0x1_1 bool_xor (OP1[2:2] ^ OP2[2:2]) == 0x1_1 bool_xor (OP1[3:3] ^ OP2[3:3]) == 0x1_1 bool_xor (OP1[4:4] ^ OP2[4:4]) == 0x1_1 bool_xor (OP1[5:5] ^ OP2[5:5]) == 0x1_1 bool_xor (OP1[6:6] ^ OP2[6:6]) == 0x1_1 bool_xor (OP1[7:7] ^ OP2[7:7]) == 0x1_1) ; ZF := (OP1[31:0] ^ OP2[31:0]) == 0x0_32 ; SF := (OP1[31:31] ^ OP2[31:31]) == 0x1_1 ; OF := false)
(sete r8) -> (OP1 = OP1[63:8] o (ZF ? 0x1_8 : 0x0_8))
(setne r8) -> (OP1 = OP1[63:8] o (ZF ? 0x0_8 : 0x1_8))
(setb r8) -> (OP1 = OP1[63:8] o (CF ? 0x1_8 : 0x0_8))
(pxor xmm, m128) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]) ; )
(pxor xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] ^ OP2[127:0]) ; )
(andpd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:0] & OP2[127:0]) ; )
(subsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o sub_double(OP1[63:0], OP2[63:0])) ; )
(addsd xmm, xmm) -> (OP1 = OP1[255:128] o (OP1[127:64] o add_double(OP1[63:0], OP2[63:0])) ; )
(cmp r32, m32) -> (CF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[32:32] == 0x1_1) ; PF := !((0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:0] == 0x0_32 ; SF := (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1 ; OF := (!OP2[31:31] == 0x1_1 bool_iff OP1[31:31] == 0x1_1) bool_and !(!OP2[31:31] == 0x1_1 bool_iff (0x0_1 o !OP2[31:0] + 0x1_33 + 0x0_1 o OP1[31:0])[31:31] == 0x1_1))
(cmp m8, imm8) -> (CF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[8:8] == 0x1_1) ; PF := !((0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[0:0] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[1:1] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[2:2] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[3:3] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[4:4] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[5:5] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[6:6] == 0x1_1 bool_xor (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1) ; ZF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:0] == 0x0_8 ; SF := (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1 ; OF := (!OP2[7:7] == 0x1_1 bool_iff OP1[7:7] == 0x1_1) bool_and !(!OP2[7:7] == 0x1_1 bool_iff (0x0_1 o !OP2[7:0] + 0x1_9 + 0x0_1 o OP1[7:0])[7:7] == 0x1_1))
(cdqe) -> (RAX = sign-extend-64(RAX[31:0]))
(cmovae r32, r32) -> (OP1 = 0x0_32 o ((CF ? 0x100_16 : 0x0_16) == 0x0_16 ? OP2[31:0] : OP1[31:0]))
(nop) -> (None)
(nop m32) -> (None)
